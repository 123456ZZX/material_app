"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _field = _interopRequireDefault(require("../field"));
var _button = _interopRequireDefault(require("../button"));
var _cell = _interopRequireDefault(require("../cell"));
var _cellGroup = _interopRequireDefault(require("../cell-group"));
var _utils = require("../utils");
/*
 * @Author: gao_m3
 * @Date: 2021-12-21 10:22:55
 * @LastEditors: xie_sm
 * @LastEditTime: 2022-03-30 17:05:02
 * @Descripttion: 
 */

var _createNamespace = (0, _utils.createNamespace)('flow-auth'),
  createComponent = _createNamespace[0],
  bem = _createNamespace[1],
  t = _createNamespace[2];
var _default = createComponent({
  props: {
    value: {
      type: String,
      default: ""
    },
    data: Object
  },
  render: function render() {
    var _this = this;
    var h = arguments[0];
    return h("div", [h(_cellGroup.default, [h(_cell.default, {
      "attrs": {
        "title": t('currentNode'),
        "value": this.data.taskName
      }
    }), h(_cell.default, {
      "attrs": {
        "title": t('old'),
        "value": this.data.taskAsigneeName
      }
    }), h(_cell.default, {
      "attrs": {
        "title": t('new')
      }
    })]), h("div", {
      "class": "auth-reason"
    }, [h("span", {
      "class": "label-before"
    }), t('reason')]), h("div", {
      "class": "text_area"
    }, [h(_field.default, {
      "class": "auth-textarea",
      "attrs": {
        "type": "textarea",
        "maxlength": "100",
        "placeholder": t('reasonPh'),
        "show-word-limit": true
      },
      "model": {
        value: _this.data.authReason,
        callback: function callback($$v) {
          _this.$set(_this.data, "authReason", $$v);
        }
      }
    })]), h("div", {
      "class": "confirm_button"
    }, [h(_button.default, {
      "attrs": {
        "type": "primary",
        "block": true
      },
      "on": {
        "click": function click() {
          _this.$emit('onSubmit', _this.data);
        }
      }
    }, [t('confirm')])])]);
  }
});
exports.default = _default;