{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\EventComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\EventComponent.vue","mtime":1708928163383},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EventComponent.vue"],"names":[],"mappings":";AAmfile":"EventComponent.vue","sourceRoot":"src/views/MaintenanceStatistics/components","sourcesContent":["<template>\r\n  <div class=\"commonComponents\">\r\n    <ChangeBizDate :dateType=\"dateType\" @dateChange=\"dateChange\" />\r\n    <div class=\"topCard\">\r\n      <div v-for=\"card in cardDataConfig\" :key=\"card.text\" class=\"cardItemContainer\">\r\n        <div class=\"cardItemTop\">\r\n          <span class=\"cardItemContentNum\">{{ card.counts }}</span>\r\n          <span class=\"cardItemContentUnit\">{{ card.unit }}</span>\r\n        </div>\r\n        <span class=\"cardItemText\">{{ card.text }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/docImg.png\" alt=\"\" />\r\n          <span>工单总数</span>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n      <div id=\"event_chartId_1\" class=\"chartStyle\"></div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/ordImg.png\" alt=\"\" />\r\n          <span>工单分析</span>\r\n        </div>\r\n      </div>\r\n      <div id=\"event_chartId_2\" class=\"chartStyle\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport * as Api from '../api.js'\r\nimport ChangeBizDate from './ChangeBizDate.vue' // 日期选择组件\r\n// 图表\r\nimport * as echarts from 'echarts'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\nimport { chartOption } from './chartOption.js'\r\nexport default {\r\n  name: 'EventComponent',\r\n  components: {\r\n    ChangeBizDate,\r\n  },\r\n  data() {\r\n    return {\r\n      dateType: '月',\r\n      netWorkDate: '',\r\n      cardDataConfig: [\r\n        {\r\n          text: '总数',\r\n          counts: '',\r\n          unit: '',\r\n          field: 'createTicket',\r\n        },\r\n        {\r\n          text: '已办结',\r\n          counts: '',\r\n          unit: '',\r\n          field: 'finishTicket',\r\n        },\r\n        {\r\n          text: '办结率',\r\n          counts: '',\r\n          unit: '%',\r\n          field: 'finishTicketRate',\r\n        },\r\n        {\r\n          text: '退回次数',\r\n          counts: '',\r\n          unit: '',\r\n          field: 'return',\r\n        },\r\n        {\r\n          text: '延期次数',\r\n          counts: '',\r\n          unit: '',\r\n          field: 'delay',\r\n        },\r\n        {\r\n          text: '异常次数',\r\n          counts: '',\r\n          unit: '',\r\n          field: 'operations',\r\n        },\r\n      ],\r\n      myChart_1: null,\r\n      myChart_2: null,\r\n      accessToken: this.$storage.get('access_token'),\r\n      formToken: '',\r\n      header: {},\r\n    }\r\n  },\r\n  computed: {\r\n    dataParams() {\r\n      return {\r\n        dateType: 'day',\r\n        dateRangeType: 'dayRange',\r\n        dateUnit: 'dayRange',\r\n        startTime: this.$dayjs(this.netWorkDate).startOf('month').format('YYYY-MM-DD'), // 月初\r\n        endTime: this.$dayjs(this.netWorkDate).endOf('month').format('YYYY-MM-DD'), // 月末\r\n        typeList: ['defect', 'abnormal_inform', 'gwyxzysq', 'dispatch_repair', 'jlgd'],\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.netWorkDate = this.$dayjs().format('YYYY-MM')\r\n    this.getWpgToken() // 获取威派格工单token\r\n  },\r\n  methods: {\r\n    // 获取威派格工单token\r\n    getWpgToken() {\r\n      // 获取header，查询工单用\r\n      axios({\r\n        url: process.env.VUE_APP_THIRD_REQUEST_URL + '/main/userCenterApi/sso/tokenByToken',\r\n        method: 'post',\r\n        params: {\r\n          token: this.accessToken,\r\n        },\r\n        headers: {\r\n          Authorization: 'Basic b3V0d29yazp3cGcyMDIw',\r\n        },\r\n      }).then((res) => {\r\n        if (res.status == 200) {\r\n          this.formToken = res.data.resultData.token\r\n          this.header = {\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + this.formToken,\r\n          }\r\n          console.log('获取威派格工单header', this.header)\r\n          this.getAllCardData() // 获取所有数据\r\n        }\r\n      })\r\n    },\r\n    // 时间组件日期切换事件，用于控制本组件网络请求日期 netWorkDate 字段\r\n    dateChange(changeType) {\r\n      // console.log(changeType) // subtract or addition\r\n      if (changeType === 'subtract') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).subtract(1, 'month').format('YYYY-MM')\r\n      } else if (changeType === 'addition') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).add(1, 'month').format('YYYY-MM')\r\n      }\r\n      console.log('网络请求用的日期', this.netWorkDate)\r\n      this.getAllCardData() // 获取所有数据\r\n    },\r\n    // 获取所有数据\r\n    getAllCardData() {\r\n      console.log('获取所有数据参数', this.dataParams)\r\n      // 1. 获取工单统计数据\r\n      axios({\r\n        url:\r\n          process.env.VUE_APP_THIRD_REQUEST_URL +\r\n          '/main/outworkapi/ticketBaseAnalysis/baseAnalysis',\r\n        method: 'post',\r\n        data: this.dataParams,\r\n        headers: this.header,\r\n      }).then((res) => {\r\n        console.log('获取工单统计数据', res)\r\n        if (res?.data?.resultData.length > 0) {\r\n          let resCardData = res.data.resultData\r\n          this.cardDataConfig.forEach((item) => {\r\n            resCardData.forEach((cardItem) => {\r\n              // 如果字段相同\r\n              if (item.field === cardItem.countsType) {\r\n                item.counts = cardItem.counts\r\n              }\r\n            })\r\n          })\r\n        } else {\r\n          // 如果没有数据，清空卡片数据\r\n          this.cardDataConfig.forEach((item) => {\r\n            item.counts = '---'\r\n          })\r\n        }\r\n        // console.log('工单卡片数据赋值', _cloneDeep(this.cardDataConfig))\r\n      })\r\n\r\n      // 2. 获取工单总数图表数据\r\n      let typeList = [\r\n        'defect:缺陷工单',\r\n        'dispatch_repair:维修工单',\r\n        'jlgd:检漏工单',\r\n        'abnormal_inform:问题上报',\r\n        'gwyxzysq:有限空间作业',\r\n      ]\r\n      Promise.all(\r\n        typeList.map((item) => {\r\n          return axios({\r\n            url:\r\n              process.env.VUE_APP_THIRD_REQUEST_URL +\r\n              '/main/outworkapi/ticketInfo/selectTicketInfoPage',\r\n            method: 'post',\r\n            data: {\r\n              createTimeStart: this.dataParams.startTime + ' 00:00:00',\r\n              createTimeEnd: this.dataParams.endTime + ' 23:59:59',\r\n              typeList: [item.split(':')[0]], // 工单类型\r\n              page: {\r\n                current: 1,\r\n                size: 1,\r\n              },\r\n              // ticketNo: null,\r\n              // title: null,\r\n              // address: null,\r\n              // keyword: '',\r\n              // agingStatus: '',\r\n              // ticketStatus: '',\r\n              // stepStatus: '',\r\n              // priority: '',\r\n              // sysCode: 'outwork',\r\n              // sysCodeList: [],\r\n              // coorganized: '',\r\n              // userIdList: [],\r\n              // createByList: [],\r\n            },\r\n            headers: this.header,\r\n          })\r\n        })\r\n      ).then((resArr) => {\r\n        console.log('获取工单总数图表数据', resArr) // resArr是一个数组，数组里面是每个接口的返回值\r\n        let cloneChartOption_1 = _cloneDeep(chartOption)\r\n        cloneChartOption_1.legend.data = []\r\n        cloneChartOption_1.xAxis.data = typeList.map((item) => {\r\n          return item.split(':')[1]\r\n        })\r\n        cloneChartOption_1.yAxis[0].name = '(个)'\r\n        delete cloneChartOption_1.yAxis[1] // 删除第二个y轴\r\n        cloneChartOption_1.series[0].name = ''\r\n        delete cloneChartOption_1.series[1] // 删除第二个series\r\n        if (resArr.length > 0) {\r\n          resArr.forEach((item1, index1) => {\r\n            typeList.forEach((item2, index2) => {\r\n              if (index1 === index2 && item1?.data?.resultData) {\r\n                cloneChartOption_1.series[0].data.push(item1?.data?.resultData?.total || 0)\r\n              } else if (index1 === index2 && !item1?.data?.resultData) {\r\n                cloneChartOption_1.series[0].data.push(0)\r\n              }\r\n            })\r\n          })\r\n        }\r\n        this.initChartData(this.myChart_1, cloneChartOption_1, 'event_chartId_1')\r\n      })\r\n\r\n      // 3. 获取工单分析图表数据\r\n      axios({\r\n        url:\r\n          process.env.VUE_APP_THIRD_REQUEST_URL +\r\n          '/main/outworkapi/ticketBaseAnalysis/newTicketLineChart',\r\n        method: 'post',\r\n        data: this.dataParams,\r\n        headers: this.header,\r\n      }).then((res) => {\r\n        console.log('获取工单分析图表数据', res)\r\n        let cloneChartOption_2 = _cloneDeep(chartOption)\r\n        if (res?.data?.success && res?.data?.resultData?.handleData.length > 0) {\r\n          let resChartData = res.data.resultData\r\n          cloneChartOption_2.legend.data = resChartData.handleData.map((item) => {\r\n            return item.dataTag === 'newTikcet'\r\n              ? '新增工单'\r\n              : item.dataTag === 'finishTikcetRate'\r\n              ? '办结率'\r\n              : ''\r\n          })\r\n          cloneChartOption_2.xAxis.data = resChartData.xAxis\r\n          cloneChartOption_2.yAxis[0].name = '(个)'\r\n          cloneChartOption_2.yAxis[1].name = '办结率(%)'\r\n          cloneChartOption_2.series[0].name = cloneChartOption_2.legend.data[0]\r\n          cloneChartOption_2.series[0].barWidth = 5 // 柱状图宽度\r\n          cloneChartOption_2.series[1].name = cloneChartOption_2.legend.data[1]\r\n          // series赋值\r\n          cloneChartOption_2.series[0].data = resChartData.handleData[0].yAxis\r\n          cloneChartOption_2.series[1].data = resChartData.handleData[1].yAxis\r\n          this.initChartData(this.myChart_2, cloneChartOption_2, 'event_chartId_2')\r\n        }\r\n      })\r\n    },\r\n    // 初始化图表\r\n    initChartData(myChart, chartOption, ChartId) {\r\n      if (myChart) myChart.dispose()\r\n      let chartDom = document.getElementById(ChartId)\r\n      myChart = echarts.init(chartDom)\r\n      let option = _cloneDeep(chartOption)\r\n      option && myChart.setOption(option, true)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.commonComponents {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px 30px 100px;\r\n  overflow-y: scroll;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 200%;\r\n  background-color: #F4F6F8;\r\n  transition: all 0.5s;\r\n\r\n  .topCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 10px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .cardItemContainer {\r\n      width: calc(33% - 10px);\r\n      height: calc(50% - 10px);\r\n      margin: 5px;\r\n      border-radius: 16px;\r\n      background: #ffffff;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 20px;\r\n      box-sizing: border-box;\r\n\r\n      .cardItemTop {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: baseline;\r\n        font-size: 38px;\r\n        font-family: Helvetica-Bold, Helvetica;\r\n        font-weight: bold;\r\n        color: #1b67d8;\r\n\r\n        .cardItemContentUnit {\r\n          margin-left: 2px;\r\n          font-size: 28px;\r\n          font-weight: 400;\r\n        }\r\n      }\r\n\r\n      .cardItemText {\r\n        font-size: 28px;\r\n        font-family: PingFangSC-Regular, PingFang SC;\r\n        font-weight: 400;\r\n        color: #555555;\r\n      }\r\n    }\r\n  }\r\n\r\n  .centerAndBottomCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 470px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .topTitle {\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      margin-top: 40px;\r\n      padding: 0 30px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 34px;\r\n      font-family: PingFangSC-Semibold, PingFang SC;\r\n      font-weight: 600;\r\n      color: #191919;\r\n\r\n      .leftTitle {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        img {\r\n          width: 48px;\r\n          height: 48px;\r\n          margin-right: 16px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chartStyle {\r\n      width: 98%;\r\n      height: calc(100% - 100px);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}