{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\DispatchCenter\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\DispatchCenter\\index.vue","mtime":1708928163372},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgew0KICBOYXZCYXIsDQogIFNlYXJjaCwNCiAgVG9hc3QsDQogIENlbGwsDQogIENlbGxHcm91cCwNCiAgUHVsbFJlZnJlc2gsDQogIExpc3QsDQogIFNpZGViYXIsDQogIFNpZGViYXJJdGVtLA0KICBTd2lwZUNlbGwsDQogIEJ1dHRvbiwNCiAgTm90aWNlQmFyLA0KICBJY29uLA0KICBEaWFsb2csDQogIEFjdGlvblNoZWV0LA0KICBVcGxvYWRlciwNCiAgTG9hZGluZywNCiAgTm90aWZ5LA0KfSBmcm9tICdmYXdrZXMtbW9iaWxlLWxpYicNCmltcG9ydCAqIGFzIGFwaSBmcm9tICcuL2FwaScNCmltcG9ydCBCdXMgZnJvbSAnQC91dGlscy9idXMnDQppbXBvcnQgeyBhZGRJY29uVG9NYXAgfSBmcm9tICdAL3V0aWxzL21hcFV0aWxzJw0KaW1wb3J0IHsgYmJveCwgY2VudGVyIGFzIGdldENlbnRlciB9IGZyb20gJ0B0dXJmL3R1cmYnDQppbXBvcnQgX2Nsb25lRGVlcCBmcm9tICdsb2Rhc2gvY2xvbmVEZWVwJw0KLy8g5Y6L5Yqb55uR5rWL54K55Ye75by556qXDQppbXBvcnQgUHJlc3N1cmVNb25pdG9yRGV0YWlsIGZyb20gJ0Avdmlld3MvT25lTWFwL2NvbXBvbmVudHMvUHJlc3N1cmVNb25pdG9yRGV0YWlsLnZ1ZScNCi8vIOiHquWumuS5ieWbvuS+iw0KaW1wb3J0IHsgbGVnZW5kTGlzdFNlbGYgfSBmcm9tICcuL2xlZ2VuZExpc3QuanMnDQppbXBvcnQgeyBFTlVNIH0gZnJvbSAnQC9zdG9yZS9TdGF0ZS9zdGF0ZVR5cGVzJw0KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJw0KLy8g5Zyw5Zu+DQppbXBvcnQgVnVlIGZyb20gJ3Z1ZScNCmltcG9ydCBtYXBib3hnbCBmcm9tICdtYXBib3gtZ2wnDQppbXBvcnQgaW5mb1BvcHVwIGZyb20gJ0Avdmlld3MvRGlzcGF0Y2hDZW50ZXIvY29tcG9uZW50cy9wb3B1cC52dWUnIC8vIOS6i+S7tuW8ueeqlw0KaW1wb3J0IFBvcHVwSG92ZXIgZnJvbSAnQC92aWV3cy9EaXNwYXRjaENlbnRlci9jb21wb25lbnRzL1BvcHVwSG92ZXIudnVlJyAvLyDnm5HmtYvngrnlvLnnqpcNCmltcG9ydCBNYXBMZWdlbmQgZnJvbSAnQC92aWV3cy9PbmVNYXAvY29tcG9uZW50cy9tYXBMZWdlbmQudnVlJw0KaW1wb3J0IG9uRHV0eSBmcm9tICcuL2NvbXBvbmVudHMvb25EdXR5LnZ1ZScNCi8vIOawtOWOguaVsOaNrg0KaW1wb3J0IHsgbW9kaWZ5V2F0ZXJXb3JrLCBuZXdXYXRlcldvcmsgfSBmcm9tICdAL3ZpZXdzL0Rpc3BhdGNoQ2VudGVyL3N1cHBseVdhdGVyV29yay5qcycNCmltcG9ydCBQcmVWaWV3IGZyb20gJ0AvY29tcG9uZW50cy9QcmVWaWV3L2luZGV4LnZ1ZScNCi8vIOiwg+W6puS4reW/g+mhtemdou+8iOamguWMluWbvu+8ie+8jOivpemhtemdouWkquWkp++8jOWGmeWcqOWklumDqA0KaW1wb3J0IERpc3BhdGNoQ2VudGVyUGFnZSBmcm9tICdAL3ZpZXdzL0Rpc3BhdGNoQ2VudGVyL2NvbXBvbmVudHMvRGlzcGF0Y2hDZW50ZXJQYWdlL2luZGV4LnZ1ZScNCg0KY29uc3QgTWFwT2JqID0gew0KICBtYXA6IG51bGwsDQogIHZpZXdlcjogbnVsbCwNCiAgcG9wdXBJdGVtOiAnJywgLy8gbWFwYm945rCU5rOh5qGGDQogIG1hcmtlcjogJycsDQogIG1vbml0b3JQb3B1cHM6IFtdLA0KICBtb25pdG9yUG9wdXBDb250ZW50OiBbXSwNCiAgLy8g5LqL5Lu254K5cG9wdXDpm4blkIgNCiAgZXZlbnRQb3B1cEFycmF5OiBbXSwNCn0NCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ0Rpc3BhdGNoQ2VudGVyJywNCiAgY29tcG9uZW50czogew0KICAgIFtOYXZCYXIubmFtZV06IE5hdkJhciwNCiAgICBbU2VhcmNoLm5hbWVdOiBTZWFyY2gsDQogICAgW1RvYXN0Lm5hbWVdOiBUb2FzdCwNCiAgICBbQ2VsbC5uYW1lXTogQ2VsbCwNCiAgICBbQ2VsbEdyb3VwLm5hbWVdOiBDZWxsR3JvdXAsDQogICAgW1B1bGxSZWZyZXNoLm5hbWVdOiBQdWxsUmVmcmVzaCwNCiAgICBbTGlzdC5uYW1lXTogTGlzdCwNCiAgICBbU2lkZWJhci5uYW1lXTogU2lkZWJhciwNCiAgICBbU2lkZWJhckl0ZW0ubmFtZV06IFNpZGViYXJJdGVtLA0KICAgIFtTd2lwZUNlbGwubmFtZV06IFN3aXBlQ2VsbCwNCiAgICBbQnV0dG9uLm5hbWVdOiBCdXR0b24sDQogICAgW05vdGljZUJhci5uYW1lXTogTm90aWNlQmFyLA0KICAgIFtJY29uLm5hbWVdOiBJY29uLA0KICAgIFtEaWFsb2cubmFtZV06IERpYWxvZywNCiAgICBbQWN0aW9uU2hlZXQubmFtZV06IEFjdGlvblNoZWV0LA0KICAgIFtVcGxvYWRlci5uYW1lXTogVXBsb2FkZXIsDQogICAgW0xvYWRpbmcubmFtZV06IExvYWRpbmcsDQogICAgW05vdGlmeS5Db21wb25lbnQubmFtZV06IE5vdGlmeS5Db21wb25lbnQsDQoNCiAgICBQcmVzc3VyZU1vbml0b3JEZXRhaWwsDQogICAgTWFwTGVnZW5kLA0KICAgIFByZVZpZXcsDQogICAgRGlzcGF0Y2hDZW50ZXJQYWdlLA0KICAgIG9uRHV0eSwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgc2hvd0R1dHk6IGZhbHNlLA0KICAgICAgc2VsZWN0ZWRUYWI6ICfosIPluqbkuK3lv4MnLA0KICAgICAgc2hvd01vbml0b3JUeXBlOiBmYWxzZSwNCiAgICAgIHNob3dQb3BvdmVyOiBmYWxzZSwNCiAgICAgIC8vIOmAmui/hyBhY3Rpb25zIOWxnuaAp+adpeWumuS5ieiPnOWNlemAiemhuQ0KICAgICAgYWN0aW9uczogW3sgdGV4dDogJ+mAiemhueS4gCcgfSwgeyB0ZXh0OiAn6YCJ6aG55LqMJyB9LCB7IHRleHQ6ICfpgInpobnkuIknIH1dLA0KICAgICAgaW1wdXRWYWx1ZTogJycsDQogICAgICAvLyDmt7vliqDoh7PlnLDlm77nmoTlm77niYcNCiAgICAgIGljb25zOiBbDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5Y6L5Yqb55uR5rWLKOS+mykqJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAv5Y6L5Yqb55uR5rWLLnBuZycpLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbmFtZTogJ+WOi+WKm+ebkea1i+emu+e6v+S+mycsDQogICAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWcvbWFwL+WOi+WKm+emu+e6v+S+m+WcsOWbvi5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICfljovlipvnm5HmtYvmiqXorabkvpsnLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC/ljovlipvmiqXorabkvpvlnLDlm74ucG5nJyksDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5rO156uZJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAvcHVtcC5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICflho3nlJ/msLTljoInLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC/lho3nlJ/msLTljoLlnLDlm74ucG5nJyksDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5L6b5rC05Y6CJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAv5L6b5rC05Y6C5Zyw5Zu+LnBuZycpLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbmFtZTogJ+e7meawtOWKoOWOi+azteermScsDQogICAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWcvbWFwL+e7meawtOWKoOWOi+azteermeWcsOWbvi5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICfljovlipvnm5HmtYso5YaN55SfKSonLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC/lho3nlJ/msLTljovlipvnm5HmtYsucG5nJyksDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5Y6L5Yqb55uR5rWL56a757q/5YaN55SfJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAv5Y6L5Yqb56a757q/5YaN55Sf5Zyw5Zu+LnBuZycpLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbmFtZTogJ+WOi+WKm+ebkea1i+aKpeitpuWGjeeUnycsDQogICAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWcvbWFwL+WOi+WKm+aKpeitpuWGjeeUn+WcsOWbvi5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICfmtYHph4/orqEo5L6bKSonLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC/mtYHph4/orqHlnLDlm74ucG5nJyksDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5rWB6YeP56a757q/5L6bJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAv5rWB6YeP56a757q/5L6b5Zyw5Zu+LnBuZycpLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbmFtZTogJ+a1gemHj+aKpeitpuS+mycsDQogICAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWcvbWFwL+a1gemHj+aKpeitpuS+m+WcsOWbvi5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICfmtYHph4/orqEo5YaN55SfKSonLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC/mtYHph4/orqHlho3nlJ/lnLDlm74ucG5nJyksDQogICAgICAgIH0sDQogICAgICAgIHsNCiAgICAgICAgICBuYW1lOiAn5rWB6YeP56a757q/5YaN55SfJywNCiAgICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltZy9tYXAv5rWB6YeP56a757q/5YaN55Sf5Zyw5Zu+LnBuZycpLA0KICAgICAgICB9LA0KICAgICAgICB7DQogICAgICAgICAgbmFtZTogJ+a1gemHj+aKpeitpuWGjeeUnycsDQogICAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWcvbWFwL+a1gemHj+aKpeitpuWGjeeUn+WcsOWbvi5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgew0KICAgICAgICAgIG5hbWU6ICfkuovku7bngrknLA0KICAgICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1nL21hcC9kdy5wbmcnKSwNCiAgICAgICAgfSwNCiAgICAgICAgLy8gew0KICAgICAgICAvLyBuYW1lOiAi5o+Q5qCH5pS56YCg57uZ5rC05Y6CIiwNCiAgICAgICAgLy8gdXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvbWFwL+aPkOagh+aUuemAoOe7meawtOWOgi5wbmciKSwNCiAgICAgICAgLy8gfSwNCiAgICAgICAgLy8gew0KICAgICAgICAvLyBuYW1lOiAi6KeE5YiS5paw5bu657uZ5rC05Y6CIiwNCiAgICAgICAgLy8gdXJsOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvbWFwL+inhOWIkuaWsOW7uue7meawtOWOgi5wbmciKSwNCiAgICAgICAgLy8gfSwNCiAgICAgIF0sDQogICAgICAvLyDmiYDmnInnm5HmtYvngrnmlbDmja4NCiAgICAgIGFsbFBvaW50QXJyYXk6IFtdLA0KICAgICAgLy8g5ZGK6K2m55uR5rWL54K5DQogICAgICBkYW5nZXJQb2ludERhdGE6IFtdLA0KICAgICAgcHJlc3N1cmVNb25pdG9yU2hvdzogZmFsc2UsIC8vIOWOi+WKm+ebkea1i+ivpuaDhemdouadv+aYvumakA0KICAgICAgcGlwZWxpbmVTaG93OiBmYWxzZSwgLy8g566h57q/6K+m5oOF6Z2i5p2/5pi+6ZqQDQogICAgICBwcmVzc3VyZURhdGFEZXRhaWw6IHt9LCAvLyDljovlipvnm5HmtYvor6bmg4XpnaLmnb/ln7rnoYDkv6Hmga8NCiAgICAgIHBpcGVsaW5lQmFzZUluZm86IHt9LCAvLyDnrqHnur/or6bmg4XpnaLmnb/ln7rnoYDkv6Hmga8NCiAgICAgIC8vIOS6i+S7tg0KICAgICAgYWNjZXNzVG9rZW46IHRoaXMuJHN0b3JhZ2UuZ2V0KCdhY2Nlc3NfdG9rZW4nKSwNCiAgICAgIGZvcm1Ub2tlbjogJycsDQogICAgICBoZWFkZXI6IHt9LA0KICAgICAgdGFibGVEYXRhOiBbXSwNCg0KICAgICAgLy8g5Zu+5L6L5piv5ZCm5pi+56S6DQogICAgICBwb3B1cFNob3c6IGZhbHNlLA0KICAgICAgbGVnZW5kTGlzdDogbGVnZW5kTGlzdFNlbGYsDQogICAgICBmaWxlTGlzdDogW10sIC8vIOS6i+S7tueCueWMuemFjeeahOmihOahiOmZhOS7tg0KICAgICAgLy8g5p+Q5LiA5LqL5Lu254K55Yy56YWN5LiK55qE5omA5pyJ6aKE5qGIDQogICAgICB0ZW1wRmlsZVNjaGVtZTogW10sDQogICAgICBwcmVQbGFuU2hvdzogZmFsc2UsDQogICAgICBmaWxlTGlzdEFycjogWw0KICAgICAgICAvLyB7IHVybDogJy9zdGF0aWMvaW1nL2xlYWYuanBnJyB9LA0KICAgICAgICAvLyBVcGxvYWRlciDmoLnmja7mlofku7blkI7nvIDmnaXliKTmlq3mmK/lkKbkuLrlm77niYfmlofku7YNCiAgICAgICAgLy8g5aaC5p6c5Zu+54mHIFVSTCDkuK3kuI3ljIXlkKvnsbvlnovkv6Hmga/vvIzlj6/ku6Xmt7vliqAgaXNJbWFnZSDmoIforrDmnaXlo7DmmI4NCiAgICAgICAgeyB1cmw6ICdodHRwczovL2Nsb3VkLWltYWdlJywgaXNJbWFnZTogdHJ1ZSB9LA0KICAgICAgXSwNCiAgICAgIC8vIOafpeeci+mihOahiGxvYWRpbmfnirbmgIHmmK/lkKblsZXnpLoNCiAgICAgIGxvYWRpbmdJc1Nob3c6IGZhbHNlLA0KICAgICAgLy8g5a2Y5Zyo5Zyo5Zyw5Zu+5LiK55qE5omA5pyJ55uR5rWL54K55pWw5o2u6ZuG5ZCIDQogICAgICBtb25pdG9yRGF0YUluTWFwOiBbXSwNCiAgICAgIC8vIOaWh+S7tmZpbGVUb2tlbuWAvO+8jOeCueWHu+S4jeWQjOaWh+S7tuWwsemaj+S5i+aUueWPmA0KICAgICAgZmlsZVRva2VuVmFsdWU6ICcnLA0KICAgICAgLy8g5paH5Lu26aKE6KeI5by556qXDQogICAgICBwbGFuRmlsZURpYWxvZ1Nob3c6IGZhbHNlLA0KICAgICAgLy8g5bel5Y2V5YiX6KGoLeexuyAvLyDml6flkIzpl67popjkuIrmiqUgYWJub3JtYWxfaW5mb3JtDQogICAgICBzbWFsbFR5cGU6ICdkaXNwYXRjaF9wcm9ibGVtJywNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7fSwNCiAgbW91bnRlZCgpIHsNCiAgICAvLyBwb3B1cOW8ueahhuafpeeci+mihOahiOeCueWHu+Wbnuiwgw0KICAgIEJ1cy4kb24oJ2dvVG9WaWV3RGV0YWlsJywgKG9iamVjdFR5cGUsIGV2ZW50VHlwZSwgZmVhdHVyZSkgPT4gew0KICAgICAgY29uc29sZS5sb2coJ+eCueWHu+afkOS4gOS6i+S7tueCueWQjuWtmOWCqOeahOWPguaVsCcsIG9iamVjdFR5cGUsIGV2ZW50VHlwZSwgZmVhdHVyZSkNCiAgICAgIC8vIOaJk+W8gOafpeeci+mihOahiOmdouadvw0KICAgICAgdGhpcy5wcmVQbGFuU2hvdyA9IHRydWUNCiAgICAgIC8vIOafpeeci+mihOahiGxvYWRpbmfnirbmgIHlsZXnpLoNCiAgICAgIHRoaXMubG9hZGluZ0lzU2hvdyA9IHRydWUNCiAgICAgIC8vIOWMuemFjemihOahiA0KICAgICAgdGhpcy50b0ZpbmQob2JqZWN0VHlwZSwgZXZlbnRUeXBlLCBmZWF0dXJlKQ0KICAgIH0pDQogIH0sDQogIGJlZm9yZURlc3Ryb3koKSB7DQogICAgQnVzLiRvZmYoJ2dvVG9WaWV3RGV0YWlsJykNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIOaWsOWinuaMh+S7pA0KICAgIGFkZEluc3RydWN0aW9ucygpIHsNCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsNCiAgICAgICAgbmFtZTogJ2FkZERpc3BhdGNoT3JkZXInLA0KICAgICAgICBxdWVyeTogeyBtb2RlOiAnYWRkJyB9DQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g54K55Ye76aKE5qGI5p+Q5LiA5paH5Lu2DQogICAgZ29Ub1ZpZXdGaWxlKGZpbGVUb2tlbikgew0KICAgICAgLy8g6ZmE5Lu26aKE6KeI5by556qX5omT5byADQogICAgICB0aGlzLnBsYW5GaWxlRGlhbG9nU2hvdyA9IHRydWUNCiAgICAgIC8vIOmZhOS7tnRva2Vu6LWL5YC8DQogICAgICB0aGlzLmZpbGVUb2tlblZhbHVlID0gZmlsZVRva2VuDQogICAgfSwNCiAgICAvLyB0YWLliIfmjaLlm57osIMNCiAgICBjaGFuZ2VUeXBlKG5hbWUpIHsNCiAgICAgIHRoaXMuc2VsZWN0ZWRUYWIgPSBuYW1lDQoNCiAgICAgIC8vIOmhtumDqOiwg+W6puS4reW/g+S4juiwg+W6puWcsOWbvuWIh+aNouaXtu+8jOWwhm1hcExlZ2VuZC52dWXnu4Tku7bkuK3kuovku7Zwb3B1cOOAgeebkea1i+eCuXBvcHVw5byA5ZCv54q25oCB5Y+Y5oiQ5YWz6ZetDQogICAgICAvLyDkuovku7blvLnnqpflvIDlhbMNCiAgICAgIHRoaXMuJHJlZnMubWFwTGVnZW5kUmVmLmV2ZW50UG9wdXBDaGVja2VkID0gZmFsc2UNCiAgICAgIC8vIOebkea1i+eCueW8ueeqlw0KICAgICAgdGhpcy4kcmVmcy5tYXBMZWdlbmRSZWYubW9uaXRvclBvcHVwQ2hlY2tlZCA9IGZhbHNlDQogICAgfSwNCiAgICAvLyDosIPluqbkuK3lv4Plj7PkuIrop5LliqDlj7fpgInkuK3lm57osIMNCiAgICBvblNlbGVjdChhY3Rpb24pIHsNCiAgICAgIFRvYXN0KGFjdGlvbi50ZXh0KQ0KICAgIH0sDQogICAgLy8g54K55Ye7c2Nyb2xsQmFy5Zue6LCDDQogICAgZ29Ub0RldGFpbCh2YWwpIHsNCiAgICAgIHN3aXRjaCAodmFsKSB7DQogICAgICAgIGNhc2UgJ+S6i+S7tic6DQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICAgICAgbmFtZTogJ1NjaGVkdWxpbmdFdmVudHMnLA0KICAgICAgICAgICAgcXVlcnk6IHt9LA0KICAgICAgICAgICAgcGFyYW1zOiB7fSwNCiAgICAgICAgICB9KQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIGNhc2UgJ+aXpeW/lyc6DQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICAgICAgbmFtZTogJ1NjaGVkdWxpbmdMb2cnLA0KICAgICAgICAgICAgcXVlcnk6IHt9LA0KICAgICAgICAgICAgcGFyYW1zOiB7fSwNCiAgICAgICAgICB9KQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIGNhc2UgJ+aMh+S7pCc6DQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICAgICAgcGF0aDogJy9EaXNwYXRjaENlbnRlci9EaXNwYXRjaE9yZGVyJywNCiAgICAgICAgICB9KQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIGNhc2UgJ+WOi+WKmyc6DQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goew0KICAgICAgICAgICAgcGF0aDogJy9EaXNwYXRjaENlbnRlci9QcmVzc3VyZUFuYWx5c2lzJywNCiAgICAgICAgICB9KQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIGNhc2UgJ+aOkuePrSc6DQogICAgICAgICAgdGhpcy5zaG93RHV0eSA9ICF0aGlzLnNob3dEdXR5DQogICAgICAgICAgYnJlYWsNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOWbvuS+i+mDqOWIhuW8gOWniy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICAgIC8vIOaJk+W8gOWbvuS+iw0KICAgIHNob3dNYXBMZWdlbmQoKSB7DQogICAgICB0aGlzLnBvcHVwU2hvdyA9IHRydWUNCiAgICB9LA0KICAgIC8vIOWFs+mXreWbvuS+iw0KICAgIGNsb3NlUG9wKHZhbCkgew0KICAgICAgdGhpcy5wb3B1cFNob3cgPSB2YWwNCiAgICB9LA0KICAgIC8vIOWNleS4quWbvuS+i+eCueWHuw0KICAgIGxlZ2VuZENsaWNrKGUsIGl0ZW0sIGlkKSB7DQogICAgICBjb25zb2xlLmxvZygn5Zu+5L6L54K55Ye7JywgaXRlbSwgaWQpDQogICAgICBpZiAodHlwZW9mIGl0ZW0uaWQgPT0gJ251bWJlcicpIHsNCiAgICAgICAgdGhpcy4kbm90aWZ5KHsNCiAgICAgICAgICB0eXBlOiAnd2FybmluZycsDQogICAgICAgICAgbWVzc2FnZTogJ+W9k+WJjeWbvuWxguaaguaXoOaVsOaNru+8gScsDQogICAgICAgIH0pDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgaXRlbS5jbGlja0ZsYWcgPSAhaXRlbS5jbGlja0ZsYWcNCiAgICAgIHRoaXMubGVnZW5kQ29udHJvbExheWVyKGl0ZW0pDQogICAgfSwNCiAgICAvLyDljZXkuKrlm77kvovngrnlh7sNCiAgICBsZWdlbmRDb250cm9sTGF5ZXIoaXRlbSkgew0KICAgICAgbGV0IG1hcCA9IHdpbmRvdy54YU1hcA0KICAgICAgaWYgKG1hcC5nZXRMYXllcihpdGVtLmlkKSkgew0KICAgICAgICBpZiAoaXRlbS5jbGlja0ZsYWcpIHsNCiAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoaXRlbS5pZCwgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgaWYgKGl0ZW0uaWQgPT0gJ3JkX21hcF9kcmFpbnBpcGVfeXNfYmlnJykgew0KICAgICAgICAgICAgbGV0IGZpbHRlciA9IG1hcC5nZXRGaWx0ZXIoJ3JkX21hcF9tYW5ob2xlJykNCiAgICAgICAgICAgIGlmICgNCiAgICAgICAgICAgICAgZmlsdGVyLnRvU3RyaW5nKCkgPT0gWydhbGwnXS50b1N0cmluZygpIHx8DQogICAgICAgICAgICAgIGZpbHRlci50b1N0cmluZygpID09IFsnaW4nLCAnbWFuaG9sZV90eXBlJywgJ+mbqOawtCddLnRvU3RyaW5nKCkNCiAgICAgICAgICAgICkgew0KICAgICAgICAgICAgICBpZiAobWFwLmdldExheW91dFByb3BlcnR5KCdyZF9tYXBfZHJhaW5waXBlX3dzX2JpZycsICd2aXNpYmlsaXR5JykgPT0gJ25vbmUnKSB7DQogICAgICAgICAgICAgICAgZmlsdGVyID0gWydpbicsICdtYW5ob2xlX3R5cGUnLCAnJ10NCiAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBmaWx0ZXIgPSBbJ2luJywgJ21hbmhvbGVfdHlwZScsICfmsaHmsLQnXQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICAvLyDpm6jmsLTnrqHnur/lm77lsYLmjqfliLbpm6jmsLTkupXjgIHpm6jmsLTnrq3lpLTjgIHpm6jmsLTovoPlsI/lsYLnuqflm77lsYLmmL7npLoNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2NvbWInLCAndmlzaWJpbGl0eScsICdub25lJykNCg0KICAgICAgICAgICAgbWFwLnNldEZpbHRlcigncmRfbWFwX21hbmhvbGUnLCBmaWx0ZXIpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfeXNfYmlnX2RpcmVjdGlvbicsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KCdyZF9tYXBfZHJhaW5waXBlX3lzX3NtYWxsJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfeXNfc21hbGxfZGlyZWN0aW9uJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmlkID09ICdtYXBfc3VwcGx5X3BpcGVfY2lyY3VsYXRpbmcnKSB7DQogICAgICAgICAgICAvLyDlvqrnjq/msLTvvIjlm57msLTvvInnrqHnur/mjqfliLblvqrnjq/msLTvvIjlm57msLTvvInoioLngrnmmL7npLoNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbWFwX3N1cHBseV9ub2RlX2NpcmN1bGF0aW5nJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmlkID09ICdtYXBfc3VwcGx5X3BpcGVfZGlzdHJpYnV0ZScpIHsNCiAgICAgICAgICAgIC8vIOmFjeawtOeuoee6v+aOp+WItumFjeawtOiKgueCueaYvuekug0KICAgICAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KCdtYXBfc3VwcGx5X25vZGVfZGlzdHJpYnV0ZScsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAnbWFwX3N1cHBseV9waXBlX2RlbGl2ZXJ5Jykgew0KICAgICAgICAgICAgLy8g6L6T5rC0566h57q/5o6n5Yi26L6T5rC06IqC54K55pi+56S6DQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfbm9kZV9kZWxpdmVyeScsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAnbWFwX3JlY3ljbGVfcGlwZScpIHsNCiAgICAgICAgICAgIC8vIOWGjeeUn+awtOeuoee6v+aOp+WItuWGjeeUn+awtOiKgueCueaYvuekug0KICAgICAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KCdtYXBfcmVjeWNsZV9ub2RlJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmlkID09ICdyZF9tYXBfZHJhaW5waXBlX3dzX2JpZycpIHsNCiAgICAgICAgICAgIC8vIOaxoeawtOeuoee6v+WbvuWxguaOp+WItuaxoeawtOS6leOAgeaxoeawtOeureWktOOAgeaxoeawtOi+g+Wwj+Wxgue6p+WbvuWxguaYvuekug0KICAgICAgICAgICAgbGV0IGZpbHRlciA9IG1hcC5nZXRGaWx0ZXIoJ3JkX21hcF9tYW5ob2xlJykNCiAgICAgICAgICAgIGlmICgNCiAgICAgICAgICAgICAgZmlsdGVyLnRvU3RyaW5nKCkgPT0gWydhbGwnXS50b1N0cmluZygpIHx8DQogICAgICAgICAgICAgIGZpbHRlci50b1N0cmluZygpID09IFsnaW4nLCAnbWFuaG9sZV90eXBlJywgJ+axoeawtCddLnRvU3RyaW5nKCkNCiAgICAgICAgICAgICkgew0KICAgICAgICAgICAgICBpZiAobWFwLmdldExheW91dFByb3BlcnR5KCdyZF9tYXBfZHJhaW5waXBlX3lzX2JpZycsICd2aXNpYmlsaXR5JykgPT0gJ25vbmUnKSB7DQogICAgICAgICAgICAgICAgZmlsdGVyID0gWydpbicsICdtYW5ob2xlX3R5cGUnLCAnJ10NCiAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICBmaWx0ZXIgPSBbJ2luJywgJ21hbmhvbGVfdHlwZScsICfpm6jmsLQnXQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBtYXAuc2V0RmlsdGVyKCdyZF9tYXBfbWFuaG9sZScsIGZpbHRlcikNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19iaWdfZGlyZWN0aW9uJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfd3Nfc21hbGwnLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19zbWFsbF9kaXJlY3Rpb24nLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgICAgICB9IGVsc2UgaWYgKGl0ZW0uaWQgPT0gJ+WOi+WKm+ebkea1iycpIHsNCiAgICAgICAgICAgIC8vIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgNCiAgICAgICAgICAgIC8vICLljovlipvnm5HmtYst5oql6K2mIiwNCiAgICAgICAgICAgIC8vICJ2aXNpYmlsaXR5IiwNCiAgICAgICAgICAgIC8vICJub25lIg0KICAgICAgICAgICAgLy8gKTsNCiAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KGl0ZW0uaWQsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgIGlmIChpdGVtLmlkID09ICdyZF9tYXBfZHJhaW5waXBlX3lzX2JpZycpIHsNCiAgICAgICAgICAgIGxldCBmaWx0ZXIgPSBtYXAuZ2V0RmlsdGVyKCdyZF9tYXBfbWFuaG9sZScpDQogICAgICAgICAgICBpZiAoDQogICAgICAgICAgICAgIGZpbHRlci50b1N0cmluZygpID09IFsnaW4nLCAnbWFuaG9sZV90eXBlJywgJyddLnRvU3RyaW5nKCkgfHwNCiAgICAgICAgICAgICAgZmlsdGVyLnRvU3RyaW5nKCkgPT0gWydpbicsICdtYW5ob2xlX3R5cGUnLCAn5rGh5rC0J10udG9TdHJpbmcoKQ0KICAgICAgICAgICAgKSB7DQogICAgICAgICAgICAgIGlmIChtYXAuZ2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfd3NfYmlnJywgJ3Zpc2liaWxpdHknKSAhPSAnbm9uZScpIHsNCiAgICAgICAgICAgICAgICBmaWx0ZXIgPSBbJ2FsbCddDQogICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgZmlsdGVyID0gWydpbicsICdtYW5ob2xlX3R5cGUnLCAn6Zuo5rC0J10NCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgbWFwLnNldEZpbHRlcigncmRfbWFwX21hbmhvbGUnLCBmaWx0ZXIpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9jb21iJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfeXNfYmlnX2RpcmVjdGlvbicsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgICAgbWFwLnNldExheW91dFByb3BlcnR5KCdyZF9tYXBfZHJhaW5waXBlX3lzX3NtYWxsJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfeXNfc21hbGxfZGlyZWN0aW9uJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmlkID09ICdtYXBfc3VwcGx5X3BpcGVfY2lyY3VsYXRpbmcnKSB7DQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfbm9kZV9jaXJjdWxhdGluZycsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAnbWFwX3N1cHBseV9waXBlX2Rpc3RyaWJ1dGUnKSB7DQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfbm9kZV9kaXN0cmlidXRlJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAgICAgfSBlbHNlIGlmIChpdGVtLmlkID09ICdtYXBfc3VwcGx5X3BpcGVfZGVsaXZlcnknKSB7DQogICAgICAgICAgICBtYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfbm9kZV9kZWxpdmVyeScsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAnbWFwX3JlY3ljbGVfcGlwZScpIHsNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbWFwX3JlY3ljbGVfbm9kZScsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAncmRfbWFwX2RyYWlucGlwZV93c19iaWcnKSB7DQogICAgICAgICAgICBsZXQgZmlsdGVyID0gbWFwLmdldEZpbHRlcigncmRfbWFwX21hbmhvbGUnKQ0KICAgICAgICAgICAgaWYgKA0KICAgICAgICAgICAgICBmaWx0ZXIudG9TdHJpbmcoKSA9PSBbJ2luJywgJ21hbmhvbGVfdHlwZScsICcnXS50b1N0cmluZygpIHx8DQogICAgICAgICAgICAgIGZpbHRlci50b1N0cmluZygpID09IFsnaW4nLCAnbWFuaG9sZV90eXBlJywgJ+mbqOawtCddLnRvU3RyaW5nKCkNCiAgICAgICAgICAgICkgew0KICAgICAgICAgICAgICBpZiAobWFwLmdldExheW91dFByb3BlcnR5KCdyZF9tYXBfZHJhaW5waXBlX3lzX2JpZycsICd2aXNpYmlsaXR5JykgIT0gJ25vbmUnKSB7DQogICAgICAgICAgICAgICAgZmlsdGVyID0gWydhbGwnXQ0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGZpbHRlciA9IFsnaW4nLCAnbWFuaG9sZV90eXBlJywgJ+axoeawtCddDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19iaWdfZGlyZWN0aW9uJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAgICAgICBtYXAuc2V0RmlsdGVyKCdyZF9tYXBfbWFuaG9sZScsIGZpbHRlcikNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX21hbmhvbGUnLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19zbWFsbF9kaXJlY3Rpb24nLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICAgICAgICAgIG1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19zbWFsbCcsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgICAgIH0gZWxzZSBpZiAoaXRlbS5pZCA9PSAn5Y6L5Yqb55uR5rWLJykgew0KICAgICAgICAgICAgLy8gbWFwLnNldExheW91dFByb3BlcnR5KA0KICAgICAgICAgICAgLy8gIuWOi+WKm+ebkea1iy3miqXoraYiLA0KICAgICAgICAgICAgLy8gInZpc2liaWxpdHkiLA0KICAgICAgICAgICAgLy8gInZpc2libGUiDQogICAgICAgICAgICAvLyApOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g5Zu+5L6L5qCH6aKY54K55Ye777yM5o6n5Yi26K+l5qCH6aKY5LiL5omA5pyJ5Zu+5bGC5pi+6ZqQDQogICAgbGVnZW5kVGl0bGVOYW1lQ2xpY2sobGVnZW5kVGl0bGVOYW1lKSB7DQogICAgICBjb25zb2xlLmxvZygn5Zu+5L6L5qCH6aKYJywgbGVnZW5kVGl0bGVOYW1lKQ0KICAgICAgdGhpcy5sZWdlbmRMaXN0LmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgaWYgKGl0ZW0ubGFiZWwgPT09IGxlZ2VuZFRpdGxlTmFtZSkgew0KICAgICAgICAgIGl0ZW0udGl0bGVTdGF0dXMgPSAhaXRlbS50aXRsZVN0YXR1cw0KICAgICAgICAgIC8vDQogICAgICAgICAgaXRlbS5vcHRpb25zLmZvckVhY2goKHNtYWxsSXRlbSkgPT4gew0KICAgICAgICAgICAgLy8g5b2T6K+l5qCH6aKY5LiL5Zu+5bGC5YaF5a655Li65pi+56S654q25oCB5pe25omN6L+b5YWl5Yik5patDQogICAgICAgICAgICBpZiAoaXRlbS50aXRsZVN0YXR1cyA9PT0gdHJ1ZSAmJiB0eXBlb2Ygc21hbGxJdGVtLmlkID09ICdudW1iZXInKSB7DQogICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycsDQogICAgICAgICAgICAgICAgICBtZXNzYWdlOiBzbWFsbEl0ZW0ubGFiZWwgKyAn5Zu+5bGC5pqC5peg5pWw5o2u77yBJywNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICB9LCAwKQ0KICAgICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGlmIChpdGVtLnRpdGxlU3RhdHVzID09PSB0cnVlKSB7DQogICAgICAgICAgICAgIC8vIOagh+mimOeKtuaAgeeCueS6ruaXtg0KICAgICAgICAgICAgICBzbWFsbEl0ZW0uY2xpY2tGbGFnID0gZmFsc2UgLy8g5Zu+5bGC5Z2H5pi+56S6DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICBzbWFsbEl0ZW0uY2xpY2tGbGFnID0gdHJ1ZSAvLyDlm77lsYLlnYfpmpDol48NCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMubGVnZW5kQ29udHJvbExheWVyKHNtYWxsSXRlbSkNCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g5LqL5Lu25by556qX5byA5YWzDQogICAgZXZlbnRQb3B1cENsaWNrKGlzU2hvdykgew0KICAgICAgY29uc29sZS5sb2coJ+S6i+S7ticsIGlzU2hvdykNCiAgICAgIGlmIChpc1Nob3cpIHsNCiAgICAgICAgLy8g5LqL5Lu254K5cG9wdXDpm4blkIgNCiAgICAgICAgTWFwT2JqLmV2ZW50UG9wdXBBcnJheSA9IFtdDQogICAgICAgIC8vIOWmguaenOW9k+WJjeS6i+S7tueCuei/mOacquWKoOi9veWujOavleWwsemAgOWHug0KICAgICAgICBpZiAodGhpcy50YWJsZURhdGEubGVuZ3RoID09IDApIHJldHVybg0KICAgICAgICB0aGlzLnBvcHVwMSAmJiB0aGlzLnBvcHVwMS5yZW1vdmUoKSAvLyDku47lnLDlm77kuIrnp7vpmaTkuovku7Zwb3B1cA0KICAgICAgICAvLyDkuovku7blvLnnqpflhajlvIANCiAgICAgICAgdGhpcy50YWJsZURhdGEuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsNCiAgICAgICAgICAvLyBjb25zb2xlLmxvZyhpdGVtKQ0KICAgICAgICAgIGxldCBwb3B1cCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAgICAgICBjbG9zZU9uQ2xpY2s6IGZhbHNlLA0KICAgICAgICAgICAgY2xvc2VCdXR0b246IGZhbHNlLA0KICAgICAgICAgICAgYW5jaG9yOiAnYm90dG9tJywNCiAgICAgICAgICAgIG9mZnNldDogeyBib3R0b206IFswLCAtMTVdIH0sDQogICAgICAgICAgfSkNCiAgICAgICAgICBwb3B1cA0KICAgICAgICAgICAgLnNldExuZ0xhdCh7DQogICAgICAgICAgICAgIGxuZzogaXRlbS5hcHBlYWxMbmcsDQogICAgICAgICAgICAgIGxhdDogaXRlbS5hcHBlYWxMYXQsDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLnNldEhUTUwoJzxkaXYgaWQ9cG9wdXAnICsgaXRlbS5pZCArICc+PC9kaXY+JykNCiAgICAgICAgICAgIC5hZGRUbyhNYXBPYmoubWFwKQ0KDQogICAgICAgICAgbGV0IGRlZmVjdEZyb21EaWMgPSB0aGlzLiRzdG9yZS5zdGF0ZVtFTlVNXS5kZWZlY3RGcm9tDQogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgLy8g5LqL5Lu25oKs5rWu5by556qXDQogICAgICAgICAgICBuZXcgaW5mb1BvcHVwKHsNCiAgICAgICAgICAgICAgcHJvcHNEYXRhOiB7DQogICAgICAgICAgICAgICAgLy8g5a+56LGh57G75Z6LDQogICAgICAgICAgICAgICAgLy8gaXRlbeaXoOmcgEpTT04ucGFyc2UNCiAgICAgICAgICAgICAgICBkZXZpY2VUeXBlOiBpdGVtLmZvcm1WYWx1ZS5kZXZpY2VUeXBlWzFdLA0KICAgICAgICAgICAgICAgIC8vIOS6i+S7tuexu+Weiw0KICAgICAgICAgICAgICAgIGZhdWx0VHlwZXM6IGl0ZW0uZm9ybVZhbHVlLmZhdWx0VHlwZXMsDQogICAgICAgICAgICAgICAgLy8g5b2T5YmN5LqL5Lu254K555qEcHJvcGVydGllcw0KICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IGl0ZW0sDQogICAgICAgICAgICAgICAgZm9ybVRva2VuOiB0aGlzLmZvcm1Ub2tlbiwNCiAgICAgICAgICAgICAgICBpZDogaXRlbS5pZCwNCiAgICAgICAgICAgICAgICB0aWNrZXRObzogaXRlbS50aWNrZXRObywNCiAgICAgICAgICAgICAgICBuYW1lOiAnICcgKyBpdGVtLnRpdGxlICsgJyAnLA0KICAgICAgICAgICAgICAgIHN0YXR1czogaXRlbS50aWNrZXRTdGF0dXNOYW1lLA0KICAgICAgICAgICAgICAgIGluZm86IHsNCiAgICAgICAgICAgICAgICAgIOS6i+S7tuadpea6kDogZGVmZWN0RnJvbURpYy5maW5kKChpdCkgPT4gaXQuY29kZSA9PSBpdGVtLmRlZmVjdEZyb20pWyd6aC1DTiddLA0KICAgICAgICAgICAgICAgICAg5LqL5Lu25L2N572uOiBpdGVtLmFkZHJlc3MsDQogICAgICAgICAgICAgICAgICDkuIrmiqXkuro6IGl0ZW0uY3JlYXRlQnlOYW1lLA0KICAgICAgICAgICAgICAgICAg5pm66IO96LCD5bqm5o6o6I2QOiAn6aKE5qGI6ZmE5Lu2JywNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGZpbGVMaXN0OiB0aGlzLmZpbGVMaXN0LA0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgfSkuJG1vdW50KCcjcG9wdXAnICsgaXRlbS5pZCkNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC8vIOS6i+S7tueCuXBvcHVw6ZuG5ZCIDQogICAgICAgICAgTWFwT2JqLmV2ZW50UG9wdXBBcnJheS5wdXNoKHBvcHVwKQ0KICAgICAgICB9KQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgLy8g5LqL5Lu254K5cG9wdXDpmpDol48NCiAgICAgICAgTWFwT2JqLmV2ZW50UG9wdXBBcnJheS5mb3JFYWNoKChwb3B1cCkgPT4gew0KICAgICAgICAgIHBvcHVwLnJlbW92ZSgpDQogICAgICAgIH0pDQogICAgICAgIC8vIOS6i+S7tueCuXBvcHVw6ZuG5ZCIDQogICAgICAgIE1hcE9iai5ldmVudFBvcHVwQXJyYXkgPSBbXQ0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g55uR5rWL54K55by556qX5byA5YWzDQogICAgbW9uaXRvclBvcHVwQ2xpY2soaXNTaG93KSB7DQogICAgICBjb25zb2xlLmxvZygn55uR5rWL54K5JywgaXNTaG93KQ0KICAgICAgaWYgKGlzU2hvdykgew0KICAgICAgICAvLyDlpoLmnpzlnLDlm77kuIrov5jmnKrlrZjlnKjnm5HmtYvngrnlm77lsYLlsLHpgIDlh7oNCiAgICAgICAgaWYgKHRoaXMubW9uaXRvckRhdGFJbk1hcC5sZW5ndGggPT0gMCkgcmV0dXJuDQogICAgICAgIC8vIOebkea1i+eCuXBvcHVw6ZuG5ZCIDQogICAgICAgIE1hcE9iai5tb25pdG9yUG9wdXBzID0gW10NCiAgICAgICAgLy8g5a2Y5Zyo5Zyo5Zyw5Zu+5LiK55qE5omA5pyJ55uR5rWL54K55pWw5o2u6ZuG5ZCIDQogICAgICAgIHRoaXMubW9uaXRvckRhdGFJbk1hcC5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgICAgbGV0IHBvcCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAgICAgICBjbG9zZU9uQ2xpY2s6IGZhbHNlLA0KICAgICAgICAgICAgY2xvc2VCdXR0b246IGZhbHNlLA0KICAgICAgICAgICAgYW5jaG9yOiAnYm90dG9tJywNCiAgICAgICAgICAgIG9mZnNldDogeyBib3R0b206IFswLCAtMjJdIH0sDQogICAgICAgICAgfSkNCiAgICAgICAgICBwb3ANCiAgICAgICAgICAgIC5zZXRMbmdMYXQoew0KICAgICAgICAgICAgICBsbmc6IGl0ZW0ubG9uLA0KICAgICAgICAgICAgICBsYXQ6IGl0ZW0ubGF0LA0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC5zZXRIVE1MKCc8ZGl2IGlkPXBvcHVwJyArIGl0ZW0uZGV2aWNlSWQgKyAnPjwvZGl2PicpDQogICAgICAgICAgICAuYWRkVG8od2luZG93LnhhTWFwKQ0KICAgICAgICAgIC8vIOS8oOmAkue7mVBvcHVwSG92ZXLnu4Tku7bvvIzpgY3ljoblsZXnpLrmlbDmja4NCiAgICAgICAgICBsZXQgaG92ZXJBbmRDbGljayA9IFtdDQogICAgICAgICAgLy8gMS7nrZvpgInlh7rpnIDopoHlsZXnpLrnmoTlsZ7mgKcNCiAgICAgICAgICBob3ZlckFuZENsaWNrID0gaXRlbS5yZWFsdGltZURhdGEuZmlsdGVyKChpdGVtKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gaXRlbS5pc1Nob3cgPT0gMA0KICAgICAgICAgIH0pDQogICAgICAgICAgLy8gMS4y5bCGcHJvcGVydGllc+S4reiuvuWkh+WRiuitpueKtuaAgea3u+WKoOWIsOWFt+S9k+eahOWxnuaAp+WAvOS4re+8jOeUqOS6juaYr+WQpueUqOe6ouiJsuWtl+S9k+aYvuekuu+8jOavlOWmguWOi+WKm+WAvA0KICAgICAgICAgIGhvdmVyQW5kQ2xpY2suZm9yRWFjaCgoaXRlbTEpID0+IHsNCiAgICAgICAgICAgIGlmIChpdGVtPy5pc1dhcm4gJiYgaXRlbT8uaXNXYXJuID09ICcxJykgew0KICAgICAgICAgICAgICBpdGVtMS5pc1dhcm4gPSAxDQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICBpdGVtMS5pc1dhcm4gPSAtMQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0pDQogICAgICAgICAgLy8gMi7kuI3lkIzorr7lpIfmt7vliqDkuI3lkIzlsZXnpLrmlbDmja4NCiAgICAgICAgICBob3ZlckFuZENsaWNrLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgICAgIC8vIOWvuemcgOimgeaYvuekuueahOWAvOi/m+ihjOWkhOeQhuW5tua3u+WKoOWNleS9jQ0KICAgICAgICAgICAgaXRlbS5teVZhbCA9IGl0ZW0udmFsICsgJyAnICsgaXRlbS5kZXNjDQogICAgICAgICAgfSkNCiAgICAgICAgICAvLyAzLuaXtumXtOWNleeLrOa3u+WKoOWcqOacgOWQjg0KICAgICAgICAgIGhvdmVyQW5kQ2xpY2sucHVzaCh7DQogICAgICAgICAgICBuYW1lOiAn5pe26Ze0JywNCiAgICAgICAgICAgIG15VmFsOiBob3ZlckFuZENsaWNrLmxlbmd0aCA+IDAgPyBob3ZlckFuZENsaWNrWzBdLnRpbWUuc2xpY2UoNiwgMjApIDogJycsDQogICAgICAgICAgICBpc1dhcm46IC0xLA0KICAgICAgICAgIH0pDQogICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgLy8g5Y6L5Yqb55uR5rWL5oKs5rWu5by556qXDQogICAgICAgICAgICBuZXcgUG9wdXBIb3Zlcih7DQogICAgICAgICAgICAgIHByb3BzRGF0YTogew0KICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubW9uaXRvck5hbWUsDQogICAgICAgICAgICAgICAgYmVsb25nU3lzdGVtOiBpdGVtLmJlbG9uZ1N5c3RlbSwNCiAgICAgICAgICAgICAgICByZWFsdGltZURhdGE6IGl0ZW0ucmVhbHRpbWVEYXRhLA0KICAgICAgICAgICAgICAgIGhvdmVyQW5kQ2xpY2s6IGhvdmVyQW5kQ2xpY2ssDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICB9KS4kbW91bnQoJyNwb3B1cCcgKyBpdGVtLmRldmljZUlkKQ0KICAgICAgICAgIH0pDQogICAgICAgICAgTWFwT2JqLm1vbml0b3JQb3B1cHMucHVzaChwb3ApDQogICAgICAgIH0pDQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyDnm5HmtYvngrlwb3B1cOmakOiXjw0KICAgICAgICBNYXBPYmoubW9uaXRvclBvcHVwcy5mb3JFYWNoKChwb3B1cCkgPT4gew0KICAgICAgICAgIHBvcHVwLnJlbW92ZSgpDQogICAgICAgIH0pDQogICAgICAgIC8vIOebkea1i+eCuXBvcHVw6ZuG5ZCIDQogICAgICAgIE1hcE9iai5tb25pdG9yUG9wdXBzID0gW10NCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOWbvuS+i+mDqOWIhue7k+adny0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICAgIC8vIC8q5Yid5aeL5YyW5Zyw5Zu+5LqL5Lu2Ki8NCiAgICBhc3luYyBpbml0U2NlbmUoKSB7DQogICAgICBNYXBPYmoubWFwID0gd2luZG93LnhhTWFwDQogICAgICBhd2FpdCBhZGRJY29uVG9NYXAoTWFwT2JqLm1hcCwgdGhpcy5pY29ucykNCiAgICAgIE1hcE9iai5tYXAucmVzaXplKCkNCiAgICAgIC8vIOa3u+WKoOawtOWOgg0KICAgICAgdGhpcy5hZGRXYXRlckZhY3RvcnkoKQ0KICAgICAgLy8g5re75Yqg5Y6L5Yqb55uR5rWL6K6+5aSH54K5DQogICAgICB0aGlzLmdldFByZXNzdXJlUG9pbnQoKQ0KICAgICAgLy8g5re75Yqg5LqL5Lu25Zu+5bGCID0+IGdldFRhYmxlRGF0YSgpICsgdGhpcy5nZXRHZW9Kc29uKCkgPT4gcmVuZGVyQ2x1c3RlcigpIOa4suafk+WbvuWxguWSjOW8ueeqlw0KICAgICAgdGhpcy5hZGRFdmVudHNMYXllcigpDQoNCiAgICAgIC8v5L+u5pS55L6b5rC05Y6C5Zu+5qCHDQogICAgICBNYXBPYmoubWFwLnNldExheW91dFByb3BlcnR5KCdtYXBfd2F0ZXJ3b3JrJywgJ2ljb24taW1hZ2UnLCAn5L6b5rC05Y6CJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF93YXRlcndvcmsnLCAnaWNvbi1zaXplJywgMC42KQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbWFwX3N1cHBseV9wdW1wJywgJ2ljb24taW1hZ2UnLCAn57uZ5rC05Yqg5Y6L5rO156uZJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfcHVtcCcsICdpY29uLXNpemUnLCAwLjYpDQoNCiAgICAgIC8vIOmakOiXj+WFreawtOWQiOS4gOm7mOiupOWbvuWxgg0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2NvbWInLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9tYW5ob2xlJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQogICAgICAvLyDmsaHmsLTnm7jlhbMNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfd3NfYmlnJywgJ3Zpc2liaWxpdHknLCAnbm9uZScpDQoNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfd3NfYmlnX2RpcmVjdGlvbicsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19zbWFsbCcsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV93c19zbWFsbF9kaXJlY3Rpb24nLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgIC8vIOmbqOawtOebuOWFsw0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV95c19iaWcnLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ3JkX21hcF9kcmFpbnBpcGVfeXNfYmlnX2RpcmVjdGlvbicsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV95c19zbWFsbCcsICd2aXNpYmlsaXR5JywgJ25vbmUnKQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgncmRfbWFwX2RyYWlucGlwZV95c19zbWFsbF9kaXJlY3Rpb24nLCAndmlzaWJpbGl0eScsICdub25lJykNCiAgICAgIC8vIOaYvuekuuS+m+awtOeuoee6v+WbvuWxgg0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbWFwX3N1cHBseV9waXBlX2Rpc3RyaWJ1dGUnLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfcGlwZV9jaXJjdWxhdGluZycsICd2aXNpYmlsaXR5JywgJ3Zpc2libGUnKQ0KICAgICAgTWFwT2JqLm1hcC5zZXRMYXlvdXRQcm9wZXJ0eSgnbWFwX3N1cHBseV9waXBlX2RlbGl2ZXJ5JywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICAvLyBNYXBPYmoubWFwLnNldExheW91dFByb3BlcnR5KCAiMTExMTExMTExMTExMTExMTExMTExMTExMSIsICJ2aXNpYmlsaXR5IiwgInZpc2libGUiICk7DQogICAgICBNYXBPYmoubWFwLnNldExheW91dFByb3BlcnR5KCdtYXBfd2F0ZXJ3b3JrJywgJ3Zpc2liaWxpdHknLCAndmlzaWJsZScpDQogICAgICBNYXBPYmoubWFwLnNldExheW91dFByb3BlcnR5KCdtYXBfc3VwcGx5X3B1bXAnLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICAgIC8vIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoICIxMTExMTExMTExMTExMTExMTExMTExMTExIiwgInZpc2liaWxpdHkiLCAidmlzaWJsZSIgKTsNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfdmFsdmUnLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICAgIE1hcE9iai5tYXAuc2V0TGF5b3V0UHJvcGVydHkoJ21hcF9zdXBwbHlfZmlyZWh5ZHJhbnQnLCAndmlzaWJpbGl0eScsICd2aXNpYmxlJykNCiAgICB9LA0KICAgIC8vIOa3u+WKoOawtOWOgg0KICAgIGFzeW5jIGFkZFdhdGVyRmFjdG9yeSgpIHsNCiAgICAgIGxldCBtYXAgPSB3aW5kb3cueGFNYXANCiAgICAgIC8vIGxldCBtb2RpZnlXYXRlcldvcmtTb3VyY2VEYXRhID0gew0KICAgICAgLy8gICB0eXBlOiAiRmVhdHVyZUNvbGxlY3Rpb24iLA0KICAgICAgLy8gICBmZWF0dXJlczogbW9kaWZ5V2F0ZXJXb3JrLm1hcCgoaSkgPT4gew0KICAgICAgLy8gICAgIHJldHVybiB7DQogICAgICAvLyAgICAgICB0eXBlOiAiRmVhdHVyZSIsDQogICAgICAvLyAgICAgICBnZW9tZXRyeTogew0KICAgICAgLy8gICAgICAgICB0eXBlOiAiUG9pbnQiLA0KICAgICAgLy8gICAgICAgICBjb29yZGluYXRlczogW2kubG9uLCBpLmxhdF0sDQogICAgICAvLyAgICAgICB9LA0KICAgICAgLy8gICAgICAgcHJvcGVydGllczogaSwNCiAgICAgIC8vICAgICB9Ow0KICAgICAgLy8gICB9KSwNCiAgICAgIC8vIH07DQogICAgICAvLyBsZXQgbmV3V2F0ZXJXb3JrU291cmNlRGF0YSA9IHsNCiAgICAgIC8vICAgdHlwZTogIkZlYXR1cmVDb2xsZWN0aW9uIiwNCiAgICAgIC8vICAgZmVhdHVyZXM6IG5ld1dhdGVyV29yay5tYXAoKGkpID0+IHsNCiAgICAgIC8vICAgICByZXR1cm4gew0KICAgICAgLy8gICAgICAgdHlwZTogIkZlYXR1cmUiLA0KICAgICAgLy8gICAgICAgZ2VvbWV0cnk6IHsNCiAgICAgIC8vICAgICAgICAgdHlwZTogIlBvaW50IiwNCiAgICAgIC8vICAgICAgICAgY29vcmRpbmF0ZXM6IFtpLmxvbiwgaS5sYXRdLA0KICAgICAgLy8gICAgICAgfSwNCiAgICAgIC8vICAgICAgIHByb3BlcnRpZXM6IGksDQogICAgICAvLyAgICAgfTsNCiAgICAgIC8vICAgfSksDQogICAgICAvLyB9Ow0KICAgICAgLy8gYXdhaXQgbWFwLmFkZExheWVyKHsNCiAgICAgIC8vICAgaWQ6ICLmj5DmoIfmlLnpgKDnu5nmsLTljoIiLA0KICAgICAgLy8gICB0eXBlOiAic3ltYm9sIiwNCiAgICAgIC8vICAgc291cmNlOiB7DQogICAgICAvLyAgICAgdHlwZTogImdlb2pzb24iLA0KICAgICAgLy8gICAgIGRhdGE6IG1vZGlmeVdhdGVyV29ya1NvdXJjZURhdGEsDQogICAgICAvLyAgIH0sDQogICAgICAvLyAgIGxheW91dDogew0KICAgICAgLy8gICAgICJpY29uLWltYWdlIjogIuaPkOagh+aUuemAoOe7meawtOWOgiIsDQogICAgICAvLyAgICAgImljb24tc2l6ZSI6IDEsDQogICAgICAvLyAgICAgLy8g5Zu+5qCH5by65Yi25YWo6YOo5pi+56S6DQogICAgICAvLyAgICAgImljb24taWdub3JlLXBsYWNlbWVudCI6IHRydWUsDQogICAgICAvLyAgIH0sDQogICAgICAvLyB9KTsNCiAgICAgIC8vIGF3YWl0IG1hcC5hZGRMYXllcih7DQogICAgICAvLyAgIGlkOiAi6KeE5YiS5paw5bu657uZ5rC05Y6CIiwNCiAgICAgIC8vICAgdHlwZTogInN5bWJvbCIsDQogICAgICAvLyAgIHNvdXJjZTogew0KICAgICAgLy8gICAgIHR5cGU6ICJnZW9qc29uIiwNCiAgICAgIC8vICAgICBkYXRhOiBuZXdXYXRlcldvcmtTb3VyY2VEYXRhLA0KICAgICAgLy8gICB9LA0KICAgICAgLy8gICBsYXlvdXQ6IHsNCiAgICAgIC8vICAgICAiaWNvbi1pbWFnZSI6ICLop4TliJLmlrDlu7rnu5nmsLTljoIiLA0KICAgICAgLy8gICAgICJpY29uLXNpemUiOiAxLA0KICAgICAgLy8gICAgIC8vIOWbvuagh+W8uuWItuWFqOmDqOaYvuekug0KICAgICAgLy8gICAgICJpY29uLWlnbm9yZS1wbGFjZW1lbnQiOiB0cnVlLA0KICAgICAgLy8gICB9LA0KICAgICAgLy8gfSk7DQogICAgICBhd2FpdCBtYXAuYWRkTGF5ZXIoew0KICAgICAgICBpZDogJ3JlY3ljbGVGYWN0b3J5JywNCiAgICAgICAgc291cmNlOiB7DQogICAgICAgICAgdHlwZTogJ2dlb2pzb24nLA0KICAgICAgICAgIGRhdGE6IHsNCiAgICAgICAgICAgIHR5cGU6ICdGZWF0dXJlQ29sbGVjdGlvbicsDQogICAgICAgICAgICBmZWF0dXJlczogWw0KICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdHlwZTogJ0ZlYXR1cmUnLA0KICAgICAgICAgICAgICAgIGdlb21ldHJ5OiB7DQogICAgICAgICAgICAgICAgICB0eXBlOiAnUG9pbnQnLA0KICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFsxMTUuOTQ4NjE0MTY1MzgzLCAzOS4wNzI2NTc5MzkwNTUyXSwNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgXSwNCiAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICB0eXBlOiAnc3ltYm9sJywNCiAgICAgICAgbGF5b3V0OiB7DQogICAgICAgICAgJ2ljb24taW1hZ2UnOiAn5YaN55Sf5rC05Y6CJywNCiAgICAgICAgICB2aXNpYmlsaXR5OiAnbm9uZScsDQogICAgICAgICAgJ2ljb24tc2l6ZSc6IDAuNiwNCiAgICAgICAgfSwNCiAgICAgIH0pDQoNCiAgICAgIC8vIOaPkOagh+aUuemAoOe7meawtOWOgg0KICAgICAgbW9kaWZ5V2F0ZXJXb3JrLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgbGV0IHBvcCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAgICAgY2xvc2VPbkNsaWNrOiBmYWxzZSwNCiAgICAgICAgICBjbG9zZUJ1dHRvbjogZmFsc2UsDQogICAgICAgICAgYW5jaG9yOiAnYm90dG9tJywNCiAgICAgICAgICBvZmZzZXQ6IHsgYm90dG9tOiBbMCwgLTE1XSB9LA0KICAgICAgICB9KQ0KICAgICAgICBwb3ANCiAgICAgICAgICAuc2V0TG5nTGF0KHsNCiAgICAgICAgICAgIGxuZzogaXRlbS5sb24sDQogICAgICAgICAgICBsYXQ6IGl0ZW0ubGF0LA0KICAgICAgICAgIH0pDQogICAgICAgICAgLnNldFRleHQoaXRlbS5uYW1lKQ0KICAgICAgICAgIC5hZGRUbyhtYXApDQogICAgICB9KQ0KDQogICAgICAvLyDop4TliJLmlrDlu7rnu5nmsLTljoINCiAgICAgIG5ld1dhdGVyV29yay5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgIGxldCBwb3AgPSBuZXcgbWFwYm94Z2wuUG9wdXAoew0KICAgICAgICAgIGNsb3NlT25DbGljazogZmFsc2UsDQogICAgICAgICAgY2xvc2VCdXR0b246IGZhbHNlLA0KICAgICAgICAgIGFuY2hvcjogJ2JvdHRvbScsDQogICAgICAgICAgb2Zmc2V0OiB7IGJvdHRvbTogWzAsIC0xNV0gfSwNCiAgICAgICAgfSkNCiAgICAgICAgcG9wDQogICAgICAgICAgLnNldExuZ0xhdCh7DQogICAgICAgICAgICBsbmc6IGl0ZW0ubG9uLA0KICAgICAgICAgICAgbGF0OiBpdGVtLmxhdCwNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5zZXRUZXh0KGl0ZW0ubmFtZSkNCiAgICAgICAgICAuYWRkVG8obWFwKQ0KICAgICAgfSkNCiAgICAgIC8vIG1hcC5vbigibW91c2VlbnRlciIsICLmj5DmoIfmlLnpgKDnu5nmsLTljoIiLCAoZSkgPT4gew0KICAgICAgLy8gICBsZXQgZmVhdHVyZSA9IGUuZmVhdHVyZXNbMF07DQogICAgICAvLyAgIGlmICghdGhpcy5wb3ApIHsNCiAgICAgIC8vICAgICB0aGlzLnBvcCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAvLyAgICAgICBjbG9zZU9uQ2xpY2s6IHRydWUsDQogICAgICAvLyAgICAgICBjbG9zZUJ1dHRvbjogZmFsc2UsDQogICAgICAvLyAgICAgICBhbmNob3I6ICJib3R0b20iLA0KICAgICAgLy8gICAgICAgb2Zmc2V0OiB7IGJvdHRvbTogWzAsIC0xNV0gfSwNCiAgICAgIC8vICAgICB9KTsNCiAgICAgIC8vICAgfQ0KICAgICAgLy8gICB0aGlzLnBvcA0KICAgICAgLy8gICAgIC5zZXRMbmdMYXQoew0KICAgICAgLy8gICAgICAgbG5nOiBmZWF0dXJlLnByb3BlcnRpZXMubG9uLA0KICAgICAgLy8gICAgICAgbGF0OiBmZWF0dXJlLnByb3BlcnRpZXMubGF0LA0KICAgICAgLy8gICAgIH0pDQogICAgICAvLyAgICAgLnNldFRleHQoZmVhdHVyZS5wcm9wZXJ0aWVzLm5hbWUpDQogICAgICAvLyAgICAgLmFkZFRvKG1hcCk7DQogICAgICAvLyB9KTsNCiAgICAgIC8vIG1hcC5vbigibW91c2VlbnRlciIsICLop4TliJLmlrDlu7rnu5nmsLTljoIiLCAoZSkgPT4gew0KICAgICAgLy8gICBsZXQgZmVhdHVyZSA9IGUuZmVhdHVyZXNbMF07DQogICAgICAvLyAgIGlmICghdGhpcy5wb3ApIHsNCiAgICAgIC8vICAgICB0aGlzLnBvcCA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAvLyAgICAgICBjbG9zZU9uQ2xpY2s6IHRydWUsDQogICAgICAvLyAgICAgICBjbG9zZUJ1dHRvbjogZmFsc2UsDQogICAgICAvLyAgICAgICBhbmNob3I6ICJib3R0b20iLA0KICAgICAgLy8gICAgICAgb2Zmc2V0OiB7IGJvdHRvbTogWzAsIC0xNV0gfSwNCiAgICAgIC8vICAgICB9KTsNCiAgICAgIC8vICAgfQ0KICAgICAgLy8gICB0aGlzLnBvcA0KICAgICAgLy8gICAgIC5zZXRMbmdMYXQoew0KICAgICAgLy8gICAgICAgbG5nOiBmZWF0dXJlLnByb3BlcnRpZXMubG9uLA0KICAgICAgLy8gICAgICAgbGF0OiBmZWF0dXJlLnByb3BlcnRpZXMubGF0LA0KICAgICAgLy8gICAgIH0pDQogICAgICAvLyAgICAgLnNldFRleHQoZmVhdHVyZS5wcm9wZXJ0aWVzLm5hbWUpDQogICAgICAvLyAgICAgLmFkZFRvKG1hcCk7DQogICAgICAvLyB9KTsNCiAgICB9LA0KICAgIC8vIOa3u+WKoOWOi+WKm+ebkea1i+iuvuWkhw0KICAgIGFzeW5jIGdldFByZXNzdXJlUG9pbnQoKSB7DQogICAgICBsZXQgcGFyYW1zID0gew0KICAgICAgICBkZXZpY2VUeXBlOiAnJywNCiAgICAgIH0NCiAgICAgIGxldCBhcnIgPSBbXQ0KICAgICAgbGV0IGZsb3dBcnIgPSBbXSAvLyDmtYHph4/orqENCiAgICAgIGxldCBzdXBwbHlGbG93QXJyID0gW10gLy8g5L6b5rC05rWB6YeP6K6hDQogICAgICBsZXQgcmVjeWNsZUZsb3dBcnIgPSBbXSAvLyDlho3nlJ/msLTmtYHph4/orqENCiAgICAgIGxldCBwcmVzc3VyZUFyciA9IFtdIC8vIOWOi+WKm+iuoQ0KICAgICAgbGV0IHN1cHBseVByZXNzdXJlQXJyID0gW10gLy8g5L6b5rC05Y6L5Yqb6K6hDQogICAgICBsZXQgcmVjeWNsZVByZXNzdXJlQXJyID0gW10gLy8g5YaN55Sf5rC05Y6L5YqbDQoNCiAgICAgIC8vIOiOt+WPluaJgOacieebkea1i+iuvuWkh+WfuuehgOS/oeaBrw0KICAgICAgYXdhaXQgYXBpLmdldEFsbEVxdWlwbWVudEluZm9ybWF0aW9uKHBhcmFtcykudGhlbigocmVzKSA9PiB7DQogICAgICAgIGlmIChyZXMuZGF0YSAmJiByZXMuZGF0YS5sZW5ndGggPiAwKSB7DQogICAgICAgICAgLy8g5omA5pyJ55uR5rWL54K55pWw5o2u6LWL5YC8DQogICAgICAgICAgdGhpcy5hbGxQb2ludEFycmF5ID0gcmVzLmRhdGENCiAgICAgICAgICBjb25zb2xlLmxvZygn5omA5pyJ55uR5rWL54K55pWw5o2uJywgcmVzLmRhdGEpDQogICAgICAgICAgbGV0IGFyciA9IHJlcy5kYXRhDQogICAgICAgICAgZmxvd0FyciA9IGFyci5maWx0ZXIoKGl0ZW0pID0+IHsNCiAgICAgICAgICAgIHJldHVybiBpdGVtLmRldmljZVR5cGUgPT0gJ0Zsb3dtZXRlcicNCiAgICAgICAgICB9KQ0KICAgICAgICAgIHN1cHBseUZsb3dBcnIgPSBmbG93QXJyLmZpbHRlcigoaXRlbSkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIGl0ZW0uYmVsb25nU3lzdGVtID09ICfkvpvmsLQnDQogICAgICAgICAgfSkNCiAgICAgICAgICByZWN5Y2xlRmxvd0FyciA9IGZsb3dBcnIuZmlsdGVyKChpdGVtKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gaXRlbS5iZWxvbmdTeXN0ZW0gPT0gJ+WGjeeUn+awtCcNCiAgICAgICAgICB9KQ0KICAgICAgICAgIHByZXNzdXJlQXJyID0gYXJyLmZpbHRlcigoaXRlbSkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZGV2aWNlVHlwZSA9PSAnSVZUTScNCiAgICAgICAgICB9KQ0KICAgICAgICAgIHN1cHBseVByZXNzdXJlQXJyID0gcHJlc3N1cmVBcnIuZmlsdGVyKChpdGVtKSA9PiB7DQogICAgICAgICAgICByZXR1cm4gaXRlbS5iZWxvbmdTeXN0ZW0gPT0gJ+S+m+awtCcNCiAgICAgICAgICB9KQ0KICAgICAgICAgIHJlY3ljbGVQcmVzc3VyZUFyciA9IHByZXNzdXJlQXJyLmZpbHRlcigoaXRlbSkgPT4gew0KICAgICAgICAgICAgcmV0dXJuIGl0ZW0uYmVsb25nU3lzdGVtID09ICflho3nlJ/msLQnDQogICAgICAgICAgfSkNCiAgICAgICAgICBjb25zb2xlLmxvZygNCiAgICAgICAgICAgICfljovlipvmtYHph4/lm5vkuKrnsbvlnosnLA0KICAgICAgICAgICAgc3VwcGx5Rmxvd0FyciwNCiAgICAgICAgICAgIHJlY3ljbGVGbG93QXJyLA0KICAgICAgICAgICAgc3VwcGx5UHJlc3N1cmVBcnIsDQogICAgICAgICAgICByZWN5Y2xlUHJlc3N1cmVBcnINCiAgICAgICAgICApDQogICAgICAgICAgLy8g5a2Y5Zyo5Zyo5Zyw5Zu+5LiK55qE5omA5pyJ55uR5rWL54K55pWw5o2u6ZuG5ZCIDQogICAgICAgICAgdGhpcy5tb25pdG9yRGF0YUluTWFwID0gWy4uLnN1cHBseUZsb3dBcnIsIC4uLnJlY3ljbGVGbG93QXJyLCAuLi5zdXBwbHlQcmVzc3VyZUFyciwgLi4ucmVjeWNsZVByZXNzdXJlQXJyXQ0KICAgICAgICAgIC8vIOS+m+awtOWOi+WKm+ebkea1i+eCueWRiuitpuS4quaVsA0KICAgICAgICAgIHN1cHBseVByZXNzdXJlQXJyLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGl0ZW0uaW90T25saW5lICsgJy0tLScgKyBpdGVtLmlzV2FybikNCiAgICAgICAgICB9KQ0KICAgICAgICAgIHRoaXMuYWRkWW91ckxheWVyKHN1cHBseUZsb3dBcnIsICfmtYHph4/orqEo5L6bKSonLCAn5rWB6YeP56a757q/5L6bJywgJ+a1gemHj+aKpeitpuS+mycpDQogICAgICAgICAgdGhpcy5hZGRZb3VyTGF5ZXIocmVjeWNsZUZsb3dBcnIsICLmtYHph4/orqEo5YaN55SfKSoiLCAi5rWB6YeP56a757q/5YaN55SfIiwgIua1gemHj+aKpeitpuWGjeeUnyIpOw0KICAgICAgICAgIHRoaXMuYWRkWW91ckxheWVyKHN1cHBseVByZXNzdXJlQXJyLCAn5Y6L5Yqb55uR5rWLKOS+mykqJywgJ+WOi+WKm+ebkea1i+emu+e6v+S+mycsICfljovlipvnm5HmtYvmiqXorabkvpsnKQ0KICAgICAgICAgIHRoaXMuYWRkWW91ckxheWVyKHJlY3ljbGVQcmVzc3VyZUFyciwgIuWOi+WKm+ebkea1iyjlho3nlJ8pKiIsICLljovlipvnm5HmtYvnprvnur/lho3nlJ8iLCAi5Y6L5Yqb55uR5rWL5oql6K2m5YaN55SfIik7DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDlnKjlnLDlm77kuIrmt7vliqDlm77moIflm77lsYINCiAgICBhZGRZb3VyTGF5ZXIocG9pbnRMaXN0LCBpZCwgb2ZmbGluZUltYWdlSWQsIHdhcm5JbWFnZUlkKSB7DQogICAgICBsZXQgdmlzaWJpbGl0eSA9ICd2aXNpYmxlJw0KICAgICAgLy8gaWYgKGlkID09ICfljovlipvnm5HmtYso5L6bKSonKSB7DQogICAgICAvLyAgIHZpc2liaWxpdHkgPSAndmlzaWJsZScNCiAgICAgIC8vIH0gZWxzZSB7DQogICAgICAvLyAgIHZpc2liaWxpdHkgPSAnbm9uZScNCiAgICAgIC8vIH0NCiAgICAgIGNvbnN0IHNvdXJjZURhdGEgPSB7DQogICAgICAgIHR5cGU6ICdGZWF0dXJlQ29sbGVjdGlvbicsDQogICAgICAgIGZlYXR1cmVzOiBwb2ludExpc3QubWFwKChpKSA9PiB7DQogICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHR5cGU6ICdGZWF0dXJlJywNCiAgICAgICAgICAgIGdlb21ldHJ5OiB7DQogICAgICAgICAgICAgIHR5cGU6ICdQb2ludCcsDQogICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbaS5sb24sIGkubGF0XSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBwcm9wZXJ0aWVzOiBpLA0KICAgICAgICAgIH0NCiAgICAgICAgfSksDQogICAgICB9DQogICAgICBpZiAod2luZG93LnhhTWFwLmdldFNvdXJjZShpZCkpIHsNCiAgICAgICAgd2luZG93LnhhTWFwLmdldFNvdXJjZShpZCkuc2V0RGF0YShzb3VyY2VEYXRhKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIHdpbmRvdy54YU1hcC5hZGRMYXllcigNCiAgICAgICAgew0KICAgICAgICAgIGlkOiBpZCwNCiAgICAgICAgICB0eXBlOiAnc3ltYm9sJywNCiAgICAgICAgICBzb3VyY2U6IHsNCiAgICAgICAgICAgIHR5cGU6ICdnZW9qc29uJywNCiAgICAgICAgICAgIGRhdGE6IHNvdXJjZURhdGEsDQogICAgICAgICAgfSwNCiAgICAgICAgICBsYXlvdXQ6IHsNCiAgICAgICAgICAgICdpY29uLWltYWdlJzogWw0KICAgICAgICAgICAgICAnY2FzZScsDQogICAgICAgICAgICAgIFsnYWxsJywgWyc9PScsIFsnZ2V0JywgJ2lvdE9ubGluZSddLCAnMCddLCBbJyE9JywgWydnZXQnLCAnaXNXYXJuJ10sICcxJ11dLA0KICAgICAgICAgICAgICBpZCwNCiAgICAgICAgICAgICAgWyc9PScsIFsnZ2V0JywgJ2lvdE9ubGluZSddLCAnMSddLA0KICAgICAgICAgICAgICBvZmZsaW5lSW1hZ2VJZCwNCiAgICAgICAgICAgICAgWydhbGwnLCBbJz09JywgWydnZXQnLCAnaW90T25saW5lJ10sICcwJ10sIFsnPT0nLCBbJ2dldCcsICdpc1dhcm4nXSwgJzEnXV0sDQogICAgICAgICAgICAgIHdhcm5JbWFnZUlkLA0KICAgICAgICAgICAgICBpZCwNCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICAnaWNvbi1zaXplJzogMC43LA0KICAgICAgICAgICAgLy8g5Zu+5qCH5by65Yi25YWo6YOo5pi+56S6DQogICAgICAgICAgICAnaWNvbi1pZ25vcmUtcGxhY2VtZW50JzogdHJ1ZSwNCiAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2liaWxpdHksDQogICAgICAgICAgfSwNCiAgICAgICAgICBtaW56b29tOiAxMywNCiAgICAgICAgfSwNCiAgICAgICAgJycNCiAgICAgICkNCiAgICAgIGxldCBvYmogPSB7fQ0KICAgICAgb2JqW2lkXSA9IHBvaW50TGlzdA0KICAgICAgTWFwT2JqLm1vbml0b3JQb3B1cENvbnRlbnQucHVzaChvYmopDQogICAgICAvLyDpvKDmoIfngrnlh7sNCiAgICAgIHdpbmRvdy54YU1hcC5vbignY2xpY2snLCBpZCwgdGhpcy5oYW5kbGVNb3VzZUNsaWNrKQ0KICAgIH0sDQogICAgLy8g6byg5qCH54K55Ye7DQogICAgaGFuZGxlTW91c2VDbGljayhlKSB7DQogICAgICBjb25zdCBmZWF0dXJlID0gZS5mZWF0dXJlc1swXQ0KICAgICAgLy8gd2luZG93LnhhTWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJw0KICAgICAgLy8g566h57q/6K+m5oOF6Z2i5p2/5YWz6ZetDQogICAgICB0aGlzLnBpcGVsaW5lU2hvdyA9IGZhbHNlDQogICAgICAvLyDotYvlgLzkvKDpgJLnu5nor6bmg4XpnaLmnb9QcmVzc3VyZU1vbml0b3IudnVlDQogICAgICB0aGlzLnByZXNzdXJlRGF0YURldGFpbCA9IF9jbG9uZURlZXAoZmVhdHVyZS5wcm9wZXJ0aWVzKQ0KICAgICAgdGhpcy5wcmVzc3VyZURhdGFEZXRhaWwucmVhbHRpbWVEYXRhID0gSlNPTi5wYXJzZShmZWF0dXJlLnByb3BlcnRpZXMucmVhbHRpbWVEYXRhKQ0KICAgICAgLy8g5Y6L5Yqb55uR5rWL6K+m5oOF6Z2i5p2/DQogICAgICB0aGlzLnByZXNzdXJlTW9uaXRvclNob3cgPSB0cnVlDQogICAgfSwNCiAgICAvLyDljovlipvnm5HmtYvor6bmg4XpnaLmnb9QcmVzc3VyZU1vbml0b3IudnVl5YWz6Zet5oyJ6ZKu5Zue6LCDDQogICAgY2xvc2VQb3B1cF9wcmVzc3VyZSgpIHsNCiAgICAgIC8vIOWOi+WKm+ebkea1i+ivpuaDhemdouadvw0KICAgICAgdGhpcy5wcmVzc3VyZU1vbml0b3JTaG93ID0gZmFsc2UNCiAgICB9LA0KDQogICAgLy8g5LqL5Lu25Zyw5Zu+6YOo5YiGLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KICAgIC8vIOa3u+WKoOS6i+S7tuWbvuWxgu+8jOWFiOiOt+WPlmhlYWRlcu+8jOWGjemAmui/h2hlYWRlcuiOt+WPluS6i+S7tu+8jOWGjeWwhuS6i+S7tuWIl+ihqOa3u+WKoOiHs+WcsOWbvg0KICAgIGFzeW5jIGFkZEV2ZW50c0xheWVyKCkgew0KICAgICAgLy8g5Lia5Yqh57G75Z6L5Zu65a6a5Li64oCc5L6b5rC04oCdDQogICAgICAvLyBsZXQgZXh0UGFyYW0gPSAie1wic3lzU291cmNlXCI6XCJvdXR3b3JrXCIsXCJjcmVhdGVUeXBlXCI6XCJQQ1wiIiArICIsXCJkZXZpY2VfdHlwZVwiOiIgKyAiWyIgKyAiXCIiICsgInN1cHBseSIgKyAiXCIiICsgIl0iICsgIn0iOw0KICAgICAgbGV0IGV4dFBhcmFtID0gJycNCiAgICAgIGxldCBleHRQYXJhbUpzb24gPSB7DQogICAgICAgIC8vICJzeXNTb3VyY2UiOiAib3V0d29yayIsDQogICAgICAgIGNyZWF0ZVR5cGU6ICdQQycsDQogICAgICAgIC8vICJkZXZpY2VfdHlwZSI6IFsic3VwcGx5Il0gLy8g6KaB5o2i5oiQIHN1cHBseeOAgXNld2FnZQ0KICAgICAgfQ0KICAgICAgZXh0UGFyYW0gPSBKU09OLnN0cmluZ2lmeShleHRQYXJhbUpzb24pDQogICAgICBsZXQgcGFyYW1zID0gew0KICAgICAgICBzeXNDb2RlOiAnb3V0d29yaycsDQogICAgICAgIHNtYWxsVHlwZTogdGhpcy5zbWFsbFR5cGUsDQogICAgICAgIGV4dFBhcmFtOiBleHRQYXJhbSwNCiAgICAgICAgZXh0TGlzdFBhcmFtOiBbDQogICAgICAgICAgeyBrZXlMaXN0OiBbJ2RldmljZVR5cGUnXSwgdmFsdWVMaXN0OiBbJ3JlY3ljbGUnLCAnc3VwcGx5JywgJ+S+m+awtCcsICflho3nlJ/msLQnXSB9LA0KICAgICAgICBdLCAvLyDlkIzml7bmn6Xlho3nlJ/msLTlkozkvpvmsLQNCiAgICAgICAgcGFnZTogew0KICAgICAgICAgIGN1cnJlbnQ6IDEsDQogICAgICAgICAgc2l6ZTogLTEsDQogICAgICAgIH0sDQogICAgICB9DQogICAgICAvLyDojrflj5ZoZWFkZXLvvIzmn6Xor6Llt6XljZXnlKgNCiAgICAgIGF4aW9zKHsNCiAgICAgICAgLy8gdXJsOiAnaHR0cDovLzE3Mi4yMC43OS43MC9tYWluL3VzZXJDZW50ZXJBcGkvc3NvL3Rva2VuQnlUb2tlbicsDQogICAgICAgIHVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9XUEdfVVJMICsgJy9tYWluL3VzZXJDZW50ZXJBcGkvc3NvL3Rva2VuQnlUb2tlbicsDQogICAgICAgIG1ldGhvZDogJ3Bvc3QnLA0KICAgICAgICBwYXJhbXM6IHsNCiAgICAgICAgICB0b2tlbjogdGhpcy5hY2Nlc3NUb2tlbiwNCiAgICAgICAgfSwNCiAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCYXNpYyBiM1YwZDI5eWF6cDNjR2N5TURJdycsDQogICAgICAgIH0sDQogICAgICB9KS50aGVuKGFzeW5jIChyZXMpID0+IHsNCiAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT0gMjAwKSB7DQogICAgICAgICAgdGhpcy5mb3JtVG9rZW4gPSByZXMuZGF0YS5yZXN1bHREYXRhLnRva2VuDQogICAgICAgICAgdGhpcy5oZWFkZXIgPSB7DQogICAgICAgICAgICAvLyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLCAvLyDoi6XmnIkg5YiZ5paH5Lu25LiK5LygIOWHuumUmQ0KICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogJ0JlYXJlciAnICsgdGhpcy5mb3JtVG9rZW4sDQogICAgICAgICAgfQ0KICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLmhlYWRlcuafpeivouW3peWNleeUqDonLCB0aGlzLmhlYWRlcikNCiAgICAgICAgICBhd2FpdCB0aGlzLmdldFRhYmxlRGF0YShwYXJhbXMpIC8vIOiOt+WPluS6i+S7tuWIl+ihqA0KICAgICAgICAgIHRoaXMuZ2V0R2VvSnNvbigpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDojrflj5bkuovku7bliJfooagNCiAgICBhc3luYyBnZXRUYWJsZURhdGEocGFyYW1zKSB7DQogICAgICB0aGlzLnRhYmxlRGF0YSA9IFtdDQogICAgICBjb25zb2xlLmxvZygn6I635Y+W5LqL5Lu25YiX6KGo5Y+C5pWwJywgcGFyYW1zKQ0KICAgICAgYXdhaXQgYXhpb3Moew0KICAgICAgICB1cmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfVEhJUkRfUkVRVUVTVF9VUkwgKyAnL21haW4vb3V0d29ya2FwaS90aWNrZXRTdGF0aXN0aWNDbGllbnQvZ2V0VGlja2V0TGlzdCcsDQogICAgICAgIG1ldGhvZDogJ3Bvc3QnLA0KICAgICAgICBkYXRhOiBwYXJhbXMsDQogICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyLA0KICAgICAgfSkudGhlbigocmVzKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKCfojrflj5bkuovku7bliJfooajnu5PmnpwnLCByZXMpDQogICAgICAgIGlmIChyZXMuc3RhdHVzID09IDIwMCAmJiByZXMuZGF0YSAhPSBudWxsKSB7DQogICAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YT8ucmVzdWx0RGF0YT8ucmVjb3JkcyB8fCBbXQ0KICAgICAgICAgIGNvbnNvbGUubG9nKCfkuovku7bliJfooahyZWNvcmRzJywgdGhpcy50YWJsZURhdGEpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDlsIbkuovku7bliJfooajmt7vliqDoh7PlnLDlm74NCiAgICBnZXRHZW9Kc29uKCkgew0KICAgICAgbGV0IGZlYXR1cmVzID0gW10NCiAgICAgIGxldCB3aXRob3V0UG9zaXRpb25Db3VudCA9IDANCiAgICAgIGNvbnNvbGUubG9nKCfogZrlkIjnmoR0YWJsZURhdGEnLCB0aGlzLnRhYmxlRGF0YSkNCiAgICAgIGlmICh0aGlzLnRhYmxlRGF0YS5sZW5ndGggPT0gMCkgcmV0dXJuDQoNCiAgICAgIHRoaXMudGFibGVEYXRhLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgbGV0IGZlYXR1cmUgPSB7fQ0KICAgICAgICBsZXQgcHJvcGVydGllcyA9IHt9DQogICAgICAgIGxldCBnZW9tZXRyeSA9IHt9DQoNCiAgICAgICAgcHJvcGVydGllcyA9IGl0ZW0NCiAgICAgICAgcHJvcGVydGllcy5kZWZlY3RGcm9tID0gaXRlbS5mb3JtVmFsdWUuZGVmZWN0RnJvbQ0KICAgICAgICBmZWF0dXJlLnByb3BlcnRpZXMgPSBwcm9wZXJ0aWVzDQogICAgICAgIGZlYXR1cmUudHlwZSA9ICdGZWF0dXJlJw0KICAgICAgICBnZW9tZXRyeS50eXBlID0gJ1BvaW50Jw0KICAgICAgICBpZiAoaXRlbS5hcHBlYWxMYXQgJiYgaXRlbS5hcHBlYWxMbmcpIHsNCiAgICAgICAgICAvLyBnZW9tZXRyeS5jb29yZGluYXRlcyA9IFtpdGVtLmFwcGVhbExhdCwgaXRlbS5hcHBlYWxMb25dDQogICAgICAgICAgZ2VvbWV0cnkuY29vcmRpbmF0ZXMgPSBbaXRlbS5hcHBlYWxMbmcsIGl0ZW0uYXBwZWFsTGF0XSAvLyB3Z3M4NA0KICAgICAgICAgIGZlYXR1cmUuZ2VvbWV0cnkgPSBnZW9tZXRyeQ0KICAgICAgICAgIGZlYXR1cmVzLnB1c2goZmVhdHVyZSkNCiAgICAgICAgfSBlbHNlIGlmICgNCiAgICAgICAgICBpdGVtLmZvcm1WYWx1ZS5kZXZpY2VEZXRhaWw/LmxhdGl0dWRlICYmDQogICAgICAgICAgaXRlbS5mb3JtVmFsdWUuZGV2aWNlRGV0YWlsPy5sb25naXR1ZGUNCiAgICAgICAgKSB7DQogICAgICAgICAgZ2VvbWV0cnkuY29vcmRpbmF0ZXMgPSBbDQogICAgICAgICAgICBpdGVtLmZvcm1WYWx1ZS5kZXZpY2VEZXRhaWwubG9uZ2l0dWRlLA0KICAgICAgICAgICAgaXRlbS5mb3JtVmFsdWUuZGV2aWNlRGV0YWlsLmxhdGl0dWRlLA0KICAgICAgICAgIF0NCiAgICAgICAgICBmZWF0dXJlLmdlb21ldHJ5ID0gZ2VvbWV0cnkNCiAgICAgICAgICBmZWF0dXJlcy5wdXNoKGZlYXR1cmUpDQogICAgICAgIH0gZWxzZSBpZiAoDQogICAgICAgICAgaXRlbS5mb3JtVmFsdWUudGlja2V0QWRkcmVzcz8ubG9uZ2l0dWRlICYmDQogICAgICAgICAgaXRlbS5mb3JtVmFsdWUudGlja2V0QWRkcmVzcz8ubGF0aXR1ZGUNCiAgICAgICAgKSB7DQogICAgICAgICAgZ2VvbWV0cnkuY29vcmRpbmF0ZXMgPSBbDQogICAgICAgICAgICBpdGVtLmZvcm1WYWx1ZS50aWNrZXRBZGRyZXNzLmxvbmdpdHVkZSwNCiAgICAgICAgICAgIGl0ZW0uZm9ybVZhbHVlLnRpY2tldEFkZHJlc3MubGF0aXR1ZGUsDQogICAgICAgICAgXQ0KICAgICAgICAgIGZlYXR1cmUuZ2VvbWV0cnkgPSBnZW9tZXRyeQ0KICAgICAgICAgIGZlYXR1cmVzLnB1c2goZmVhdHVyZSkNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAvLyBnZW9tZXRyeS5jb29yZGluYXRlcyA9IFszOS4wNjY4MzA2NDQzNTI0NSwgMTE1Ljk0NTM5NDcwOTcwNjNdDQogICAgICAgICAgd2l0aG91dFBvc2l0aW9uQ291bnQgKz0gMQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgY29uc29sZS5sb2coJ+aXoOWdkOagh+S4quaVsCcsIHdpdGhvdXRQb3NpdGlvbkNvdW50KQ0KICAgICAgLy8g6IGa5ZCI5pWw5o2uIOaehOmAoOWktOmDqA0KICAgICAgbGV0IGdlb0pzb24gPSB7DQogICAgICAgIHR5cGU6ICdGZWF0dXJlQ29sbGVjdGlvbicsDQogICAgICAgIGNyczogeyB0eXBlOiAnbmFtZScsIHByb3BlcnRpZXM6IHsgbmFtZTogJ3VybjpvZ2M6ZGVmOmNyczpPR0M6MS4zOkNSUzg0JyB9IH0sDQogICAgICAgIGZlYXR1cmVzOiBbXSwNCiAgICAgIH0NCiAgICAgIGdlb0pzb24uZmVhdHVyZXMgPSBmZWF0dXJlcw0KICAgICAgY29uc29sZS5sb2coJ+iBmuWQiOeahGdlb0pzb24nLCBnZW9Kc29uKQ0KICAgICAgdGhpcy5yZW5kZXJDbHVzdGVyKGdlb0pzb24pDQogICAgfSwNCiAgICAvLyDmuLLmn5MNCiAgICByZW5kZXJDbHVzdGVyKGdlb0pzb25Tb3VyY2UpIHsNCiAgICAgIDtbJ2NsdXN0ZXJzJywgJ2NsdXN0ZXItY291bnQnLCAndW5jbHVzdGVyZWQtcG9pbnQnXS5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgIGlmIChNYXBPYmoubWFwLmdldExheWVyKGl0ZW0pKSB7DQogICAgICAgICAgTWFwT2JqLm1hcC5yZW1vdmVMYXllcihpdGVtKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgaWYgKE1hcE9iai5tYXAuZ2V0U291cmNlKCdlYXJ0aHF1YWtlcycpKSB7DQogICAgICAgIE1hcE9iai5tYXAucmVtb3ZlU291cmNlKCdlYXJ0aHF1YWtlcycpDQogICAgICB9DQogICAgICBNYXBPYmoubWFwLmFkZFNvdXJjZSgnZWFydGhxdWFrZXMnLCB7DQogICAgICAgIHR5cGU6ICdnZW9qc29uJywNCiAgICAgICAgLy8gUG9pbnQgdG8gR2VvSlNPTiBkYXRhLiBUaGlzIGV4YW1wbGUgdmlzdWFsaXplcyBhbGwgTTEuMCsgZWFydGhxdWFrZXMNCiAgICAgICAgLy8gZnJvbSAxMi8yMi8xNSB0byAxLzIxLzE2IGFzIGxvZ2dlZCBieSBVU0dTJyBFYXJ0aHF1YWtlIGhhemFyZHMgcHJvZ3JhbS4NCiAgICAgICAgLy8gZGF0YTogImh0dHBzOi8vZG9jcy5tYXBib3guY29tL21hcGJveC1nbC1qcy9hc3NldHMvZWFydGhxdWFrZXMuZ2VvanNvbiIsDQogICAgICAgIGRhdGE6IGdlb0pzb25Tb3VyY2UsDQogICAgICAgIGNsdXN0ZXI6IHRydWUsDQogICAgICAgIGNsdXN0ZXJNYXhab29tOiAxNCwgLy8gTWF4IHpvb20gdG8gY2x1c3RlciBwb2ludHMgb24NCiAgICAgICAgY2x1c3RlclJhZGl1czogNTAsIC8vIFJhZGl1cyBvZiBlYWNoIGNsdXN0ZXIgd2hlbiBjbHVzdGVyaW5nIHBvaW50cyAoZGVmYXVsdHMgdG8gNTApDQogICAgICB9KQ0KDQogICAgICBNYXBPYmoubWFwLmFkZExheWVyKHsNCiAgICAgICAgaWQ6ICdjbHVzdGVycycsDQogICAgICAgIHR5cGU6ICdjaXJjbGUnLA0KICAgICAgICBzb3VyY2U6ICdlYXJ0aHF1YWtlcycsDQogICAgICAgIGZpbHRlcjogWydoYXMnLCAncG9pbnRfY291bnQnXSwNCiAgICAgICAgcGFpbnQ6IHsNCiAgICAgICAgICAvLyBVc2Ugc3RlcCBleHByZXNzaW9ucyAoaHR0cHM6Ly9kb2NzLm1hcGJveC5jb20vbWFwYm94LWdsLWpzL3N0eWxlLXNwZWMvI2V4cHJlc3Npb25zLXN0ZXApDQogICAgICAgICAgLy8gd2l0aCB0aHJlZSBzdGVwcyB0byBpbXBsZW1lbnQgdGhyZWUgdHlwZXMgb2YgY2lyY2xlczoNCiAgICAgICAgICAvLyAqIEJsdWUsIDIwcHggY2lyY2xlcyB3aGVuIHBvaW50IGNvdW50IGlzIGxlc3MgdGhhbiAxMDANCiAgICAgICAgICAvLyAqIFllbGxvdywgMzBweCBjaXJjbGVzIHdoZW4gcG9pbnQgY291bnQgaXMgYmV0d2VlbiAxMDAgYW5kIDc1MA0KICAgICAgICAgIC8vICogUGluaywgNDBweCBjaXJjbGVzIHdoZW4gcG9pbnQgY291bnQgaXMgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDc1MA0KICAgICAgICAgICdjaXJjbGUtY29sb3InOiBbJ3N0ZXAnLCBbJ2dldCcsICdwb2ludF9jb3VudCddLCAnIzUxYmJkNicsIDEwLCAnI2YxZjA3NScsIDc1LCAnI2YyOGNiMSddLA0KICAgICAgICAgICdjaXJjbGUtcmFkaXVzJzogWydzdGVwJywgWydnZXQnLCAncG9pbnRfY291bnQnXSwgMjAsIDEwLCAzMCwgNzUsIDQwXSwNCiAgICAgICAgfSwNCiAgICAgIH0pDQoNCiAgICAgIE1hcE9iai5tYXAuYWRkTGF5ZXIoew0KICAgICAgICBpZDogJ2NsdXN0ZXItY291bnQnLA0KICAgICAgICB0eXBlOiAnc3ltYm9sJywNCiAgICAgICAgc291cmNlOiAnZWFydGhxdWFrZXMnLA0KICAgICAgICBmaWx0ZXI6IFsnaGFzJywgJ3BvaW50X2NvdW50J10sDQogICAgICAgIGxheW91dDogew0KICAgICAgICAgICd0ZXh0LWZpZWxkJzogJ3twb2ludF9jb3VudF9hYmJyZXZpYXRlZH0nLA0KICAgICAgICAgICd0ZXh0LWZvbnQnOiBbJ0RJTiBPZmZjIFBybyBNZWRpdW0nLCAnQXJpYWwgVW5pY29kZSBNUyBCb2xkJ10sDQogICAgICAgICAgJ3RleHQtc2l6ZSc6IDEyLA0KICAgICAgICB9LA0KICAgICAgfSkNCg0KICAgICAgTWFwT2JqLm1hcC5hZGRMYXllcih7DQogICAgICAgIGlkOiAndW5jbHVzdGVyZWQtcG9pbnQnLA0KICAgICAgICBzb3VyY2U6ICdlYXJ0aHF1YWtlcycsDQogICAgICAgIGZpbHRlcjogWychJywgWydoYXMnLCAncG9pbnRfY291bnQnXV0sDQogICAgICAgIHR5cGU6ICdzeW1ib2wnLA0KICAgICAgICBsYXlvdXQ6IHsNCiAgICAgICAgICAnaWNvbi1pbWFnZSc6ICfkuovku7bngrknLCAvLyDngrnnmoTlm77moIcNCiAgICAgICAgICB2aXNpYmlsaXR5OiAndmlzaWJsZScsDQogICAgICAgICAgJ2ljb24tc2l6ZSc6IDAuNywNCiAgICAgICAgfSwNCiAgICAgIH0pDQoNCiAgICAgIGxldCBkZWZlY3RGcm9tRGljID0gdGhpcy4kc3RvcmUuc3RhdGVbRU5VTV0uZGVmZWN0RnJvbQ0KICAgICAgbGV0IHRoYXQgPSB0aGlzDQogICAgICBNYXBPYmoubWFwLm9uKCdjbGljaycsICd1bmNsdXN0ZXJlZC1wb2ludCcsIChlKSA9PiB7DQogICAgICAgIC8vIOWmguaenOW9k+WJjeS6i+S7tueCueaJgOaciXBvcHVw5Li65omT5byA54q25oCB77yM5Y2z5LqL5Lu254K5cG9wdXDmlbDnu4Tplb/luqbkuI3kuLow77yM6YCA5Ye66K+l5qyh54K55Ye75LqL5Lu2DQogICAgICAgIGlmIChNYXBPYmouZXZlbnRQb3B1cEFycmF5Lmxlbmd0aCA+IDApIHJldHVybg0KICAgICAgICAvLyDmr4/mrKHngrnlh7vmlrDnmoTkuovku7bngrnlsLHmuIXpmaTpooTmoYjmlbDmja4NCiAgICAgICAgdGhpcy5maWxlTGlzdCA9IFtdDQogICAgICAgIGNvbnNvbGUubG9nKCdlLmZlYXR1cmVzOiAnLCBlLmZlYXR1cmVzKQ0KICAgICAgICAvLyBjb25zb2xlLmxvZygnZm9ybVZhbHVlOiAnLCBKU09OLnBhcnNlKGUuZmVhdHVyZXNbMF0ucHJvcGVydGllcy5mb3JtVmFsdWUpKQ0KICAgICAgICBNYXBPYmoubWFwLmdldENhbnZhcygpLnN0eWxlLmN1cnNvciA9ICdwb2ludGVyJw0KDQogICAgICAgIGxldCBmb3JtVmFsdWUgPSBKU09OLnBhcnNlKGUuZmVhdHVyZXNbMF0ucHJvcGVydGllcy5mb3JtVmFsdWUpDQogICAgICAgIGNvbnNvbGUubG9nKCdmb3JtVmFsdWU6ICcsIGZvcm1WYWx1ZSkNCg0KICAgICAgICAvLyDlr7nosaHnsbvlnosNCiAgICAgICAgbGV0IG9iamVjdFR5cGUgPSBmb3JtVmFsdWUuZGV2aWNlVHlwZVsxXQ0KICAgICAgICAvLyDkuovku7bnsbvlnosNCiAgICAgICAgbGV0IGV2ZW50VHlwZSA9IGZvcm1WYWx1ZS5mYXVsdFR5cGVzDQoNCiAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gZS5mZWF0dXJlc1swXS5nZW9tZXRyeS5jb29yZGluYXRlcy5zbGljZSgpDQogICAgICAgIC8vIGNvbnNvbGUubG9nKCfnu4/nuqzluqYnLCBjb29yZGluYXRlcykNCiAgICAgICAgLy8gRW5zdXJlIHRoYXQgaWYgdGhlIG1hcCBpcyB6b29tZWQgb3V0IHN1Y2ggdGhhdCBtdWx0aXBsZQ0KICAgICAgICAvLyBjb3BpZXMgb2YgdGhlIGZlYXR1cmUgYXJlIHZpc2libGUsIHRoZSBwb3B1cCBhcHBlYXJzDQogICAgICAgIC8vIG92ZXIgdGhlIGNvcHkgYmVpbmcgcG9pbnRlZCB0by4NCiAgICAgICAgd2hpbGUgKE1hdGguYWJzKGUubG5nTGF0LmxuZyAtIGNvb3JkaW5hdGVzWzBdKSA+IDE4MCkgew0KICAgICAgICAgIGNvb3JkaW5hdGVzWzBdICs9IGUubG5nTGF0LmxuZyA+IGNvb3JkaW5hdGVzWzBdID8gMzYwIDogLTM2MA0KICAgICAgICB9DQogICAgICAgIC8vIENyZWF0ZSBhIHBvcHVwLCBidXQgZG9uJ3QgYWRkIGl0IHRvIHRoZSBtYXAgeWV0Lg0KICAgICAgICB0aGlzLnBvcHVwMSA9IG5ldyBtYXBib3hnbC5Qb3B1cCh7DQogICAgICAgICAgY2xvc2VPbkNsaWNrOiB0cnVlLA0KICAgICAgICAgIGNsb3NlQnV0dG9uOiBmYWxzZSwNCiAgICAgICAgICBhbmNob3I6ICdib3R0b20nLA0KICAgICAgICAgIG9mZnNldDogeyBib3R0b206IFswLCAtMTVdIH0sDQogICAgICAgIH0pDQoNCiAgICAgICAgdGhpcy5wb3B1cDENCiAgICAgICAgICAuc2V0TG5nTGF0KGNvb3JkaW5hdGVzKQ0KICAgICAgICAgIC5zZXRIVE1MKCc8ZGl2IGlkPSJ2dWUtcG9wdXAtcHJlc3N1cmUiPjwvZGl2PicpDQogICAgICAgICAgLmFkZFRvKE1hcE9iai5tYXApDQogICAgICAgIC8vIC5hZGRUbyh3aW5kb3cueGFNYXApOw0KICAgICAgICBsZXQgZm9ybVRva2VuID0gdGhhdC5mb3JtVG9rZW4NCiAgICAgICAgLy8g5LqL5Lu25oKs5rWu5by556qXDQogICAgICAgIG5ldyBpbmZvUG9wdXAoew0KICAgICAgICAgIHByb3BzRGF0YTogew0KICAgICAgICAgICAgLy8g5a+56LGh57G75Z6LDQogICAgICAgICAgICBkZXZpY2VUeXBlOiBmb3JtVmFsdWUuZGV2aWNlVHlwZVsxXSwNCiAgICAgICAgICAgIC8vIOS6i+S7tuexu+Weiw0KICAgICAgICAgICAgZmF1bHRUeXBlczogZm9ybVZhbHVlLmZhdWx0VHlwZXMsDQogICAgICAgICAgICAvLyDlvZPliY3kuovku7bngrnnmoRwcm9wZXJ0aWVzDQogICAgICAgICAgICBwcm9wZXJ0aWVzOiBlLmZlYXR1cmVzWzBdLnByb3BlcnRpZXMsDQogICAgICAgICAgICBmb3JtVG9rZW46IGZvcm1Ub2tlbiwNCiAgICAgICAgICAgIGlkOiBlLmZlYXR1cmVzWzBdLnByb3BlcnRpZXMuaWQsDQogICAgICAgICAgICB0aWNrZXRObzogZS5mZWF0dXJlc1swXS5wcm9wZXJ0aWVzLnRpY2tldE5vLA0KICAgICAgICAgICAgbmFtZTogJyAnICsgZS5mZWF0dXJlc1swXS5wcm9wZXJ0aWVzLnRpdGxlICsgJyAnLA0KICAgICAgICAgICAgc3RhdHVzOiBlLmZlYXR1cmVzWzBdLnByb3BlcnRpZXMudGlja2V0U3RhdHVzTmFtZSwNCiAgICAgICAgICAgIGluZm86IHsNCiAgICAgICAgICAgICAg5LqL5Lu25p2l5rqQOiBkZWZlY3RGcm9tRGljLmZpbmQoKGl0KSA9PiBpdC5jb2RlID09IGUuZmVhdHVyZXNbMF0ucHJvcGVydGllcy5kZWZlY3RGcm9tKVsNCiAgICAgICAgICAgICAgICAnemgtQ04nDQogICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgIOS6i+S7tuS9jee9rjogZS5mZWF0dXJlc1swXS5wcm9wZXJ0aWVzLmFkZHJlc3MsDQogICAgICAgICAgICAgIOS4iuaKpeS6ujogZS5mZWF0dXJlc1swXS5wcm9wZXJ0aWVzLmNyZWF0ZUJ5TmFtZSwNCiAgICAgICAgICAgICAg5pm66IO96LCD5bqm5o6o6I2QOiAn6aKE5qGI6ZmE5Lu2JywNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBmaWxlTGlzdDogdGhpcy5maWxlTGlzdCwNCiAgICAgICAgICB9LA0KICAgICAgICB9KS4kbW91bnQoJyN2dWUtcG9wdXAtcHJlc3N1cmUnKQ0KICAgICAgfSkNCg0KICAgICAgLy8gaW5zcGVjdCBhIGNsdXN0ZXIgb24gY2xpY2sNCiAgICAgIE1hcE9iai5tYXAub24oJ2NsaWNrJywgJ2NsdXN0ZXJzJywgZnVuY3Rpb24gKGUpIHsNCiAgICAgICAgdmFyIGZlYXR1cmVzID0gTWFwT2JqLm1hcC5xdWVyeVJlbmRlcmVkRmVhdHVyZXMoZS5wb2ludCwgeyBsYXllcnM6IFsnY2x1c3RlcnMnXSB9KQ0KICAgICAgICB2YXIgY2x1c3RlcklkID0gZmVhdHVyZXNbMF0ucHJvcGVydGllcy5jbHVzdGVyX2lkDQogICAgICAgIE1hcE9iai5tYXANCiAgICAgICAgICAuZ2V0U291cmNlKCdlYXJ0aHF1YWtlcycpDQogICAgICAgICAgLmdldENsdXN0ZXJFeHBhbnNpb25ab29tKGNsdXN0ZXJJZCwgZnVuY3Rpb24gKGVyciwgem9vbSkgew0KICAgICAgICAgICAgaWYgKGVycikgcmV0dXJuDQogICAgICAgICAgICBNYXBPYmoubWFwLmVhc2VUbyh7DQogICAgICAgICAgICAgIGNlbnRlcjogZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXMsDQogICAgICAgICAgICAgIHpvb206IHpvb20sDQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0pDQogICAgICB9KQ0KICAgICAgTWFwT2JqLm1hcC5zZXRNaW5ab29tKDApDQogICAgICBNYXBPYmoubWFwLnNldE1heFpvb20oMzApDQogICAgICAvLyBjb25zb2xlLmxvZygnbm93IE1hcE9iai5tYXAgbGF5ZXJzOiAnLCBNYXBPYmoubWFwLmdldFN0eWxlKCkubGF5ZXJzKQ0KICAgIH0sDQogICAgLy8g5Yy56YWN6aKE5qGIDQogICAgYXN5bmMgdG9GaW5kKG9iamVjdFR5cGUsIGV2ZW50VHlwZSwgZmVhdHVyZSkgew0KICAgICAgbGV0IHBhcmFtcyA9IHsNCiAgICAgICAgcGFnZTogMSwNCiAgICAgICAgc2l6ZTogOTksDQogICAgICAgIG9iamVjdFR5cGU6IG9iamVjdFR5cGUsDQogICAgICAgIGV2ZW50VHlwZTogZXZlbnRUeXBlLA0KICAgICAgfQ0KICAgICAgY29uc29sZS5sb2coJ+WMuemFjemihOahiOWPguaVsCcsIHBhcmFtcykNCiAgICAgIC8vIOafkOS4gOS6i+S7tueCueWMuemFjeS4iueahOaJgOaciemihOahiA0KICAgICAgdGhpcy50ZW1wRmlsZVNjaGVtZSA9IFtdDQogICAgICAvLyDljLnphY3osIPluqbpooTmoYgNCiAgICAgIGF3YWl0IGFwaS5nZXRTY2hlbWEocGFyYW1zKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgY29uc29sZS5sb2coJ+WMuemFjemihOahiOe7k+aenCcsIHJlcykNCiAgICAgICAgaWYgKHJlcy5zdGF0dXMgJiYgcmVzLmRhdGEgIT0gbnVsbCkgew0KICAgICAgICAgIHRoaXMudGVtcEZpbGVTY2hlbWUgPSByZXMuZGF0YS5yZWNvcmRzDQogICAgICAgIH0NCiAgICAgICAgY29uc29sZS5sb2coJ+WMuemFjeS4iueahOmihOahiOaVsOe7hCcsIHJlcy5kYXRhLnJlY29yZHMpDQogICAgICAgIGlmICh0aGlzLnRlbXBGaWxlU2NoZW1lLmxlbmd0aCA9PSAwKSB7DQogICAgICAgICAgY29uc29sZS5sb2coJ+acquWMuemFjeWIsOmihOahiCcpDQogICAgICAgICAgdGhpcy5maWxlTGlzdCA9IFtdDQogICAgICAgICAgdGhpcy5sb2FkaW5nSXNTaG93ID0gZmFsc2UNCiAgICAgICAgICBOb3RpZnkoeyB0eXBlOiAnd2FybmluZycsIG1lc3NhZ2U6ICfmmoLml6DljLnphY3pooTmoYgnLCBkdXJhdGlvbjogMTAwMCB9KQ0KICAgICAgICAgIHJldHVybg0KICAgICAgICB9DQogICAgICAgIC8vIOagueaNruWMuemFjeS4iueahOmihOahiOiOt+WPlumihOahiOaWh+S7tu+8nw0KICAgICAgICB0aGlzLmdldEZpbGVJbmZvQnlUb2tlbih0aGlzLnRlbXBGaWxlU2NoZW1lLCBmZWF0dXJlKQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIOagueaNruWMuemFjeS4iueahOmihOahiOiOt+WPlumihOahiOaWh+S7tu+8nw0KICAgIGFzeW5jIGdldEZpbGVJbmZvQnlUb2tlbih0ZW1wRmlsZVNjaGVtZSwgZmVhdHVyZSkgew0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZW1wRmlsZVNjaGVtZS5sZW5ndGg7IGkrKykgew0KICAgICAgICBjb25zb2xlLmxvZygn5q+P5Liq6aKE5qGILS0tJyArIGksIHRlbXBGaWxlU2NoZW1lW2ldKQ0KICAgICAgICBpZiAoJ2ZpbGVMaXN0JyBpbiB0ZW1wRmlsZVNjaGVtZVtpXSAmJiB0ZW1wRmlsZVNjaGVtZVtpXS5maWxlTGlzdD8ubGVuZ3RoID4gMCkgew0KICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGVtcEZpbGVTY2hlbWVbaV0uZmlsZUxpc3QubGVuZ3RoOyBqKyspIHsNCiAgICAgICAgICAgIGxldCBwYXJtYXMgPSB7DQogICAgICAgICAgICAgIGY4czogW3RlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLmZpbGVUb2tlbl0sDQogICAgICAgICAgICB9DQogICAgICAgICAgICBhd2FpdCBhcGkuZ2V0RmlsZUJ5VG9rZW4ocGFybWFzKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+agueaNruaWh+S7tnRva2Vu6I635Y+W5paH5Lu2JywgcmVzKQ0KDQogICAgICAgICAgICAgIHRlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLnVybCA9IHJlcy5kYXRhWzBdLmxpbmsNCiAgICAgICAgICAgICAgLy8gdGVtcEZpbGVTY2hlbWVbaV0uZmlsZUxpc3Rbal0udXJsID0NCiAgICAgICAgICAgICAgLy8gICAnaHR0cHM6Ly9jbi5iaW5nLmNvbS9pbWFnZXMvc2VhcmNoP3E9JUU1JTlCJUJFJUU3JTg5JTg3JkZPUk09SVFGUkJBJmlkPTQ5RTAzMUFBQzc3MTVDMjVEOEUwMzIxNTM2N0E3QjRBNTBFMTQzNTQnDQogICAgICAgICAgICAgIHRlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLnVpZCA9IHRlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLmlkDQogICAgICAgICAgICAgIHRlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLmZpbGVUb2tlbiA9IHRlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdLmZpbGVUb2tlbg0KICAgICAgICAgICAgICB0ZW1wRmlsZVNjaGVtZVtpXS5maWxlTGlzdFtqXS5uYW1lID0gdGVtcEZpbGVTY2hlbWVbaV0uZmlsZUxpc3Rbal0uZmlsZU5hbWUNCiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3RlbXBGaWxlU2NoZW1lW2ldLmZpbGVMaXN0W2pdOiAnLCB0ZW1wRmlsZVNjaGVtZVtpXS5maWxlTGlzdFtqXSkNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICB9DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZygn5aSE55CG5ZCO55qE5paH5Lu25pWw5o2uJywgdGVtcEZpbGVTY2hlbWUpDQogICAgICAvLyB0aGlzLmZpbGVMaXN0ID0gdGVtcEZpbGVTY2hlbWVbMF0/LmZpbGVMaXN0ID8gdGVtcEZpbGVTY2hlbWVbMF0uZmlsZUxpc3QgOiBbXQ0KICAgICAgdGhpcy5maWxlTGlzdCA9IHRlbXBGaWxlU2NoZW1lDQogICAgICAvLyDmn6XnnIvpooTmoYhsb2FkaW5n54q25oCB5raI5aSxDQogICAgICB0aGlzLmxvYWRpbmdJc1Nob3cgPSBmYWxzZQ0KDQogICAgICBsZXQgZGVmZWN0RnJvbURpYyA9IHRoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdEZyb20NCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/DispatchCenter","sourcesContent":["<template>\r\n  <div class=\"DispatchCenter\">\r\n    <!-- <fm-nav-bar title=\"调度中心\" left-arrow @click-left=\"$router.go(-1)\"></fm-nav-bar> -->\r\n    <fm-nav-bar left-arrow @click-left=\"$router.go(-1)\">\r\n      <template #title>\r\n        <div class=\"top\">\r\n          <div class=\"top-title\">\r\n            <span :class=\"selectedTab == '调度中心' ? 'active' : ''\" @click=\"changeType('调度中心')\"\r\n              >调度中心</span\r\n            >\r\n            <span :class=\"selectedTab == '调度地图' ? 'active' : ''\" @click=\"changeType('调度地图')\"\r\n              >调度地图</span\r\n            >\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template #right>\r\n        <template v-if=\"selectedTab == '调度中心'\">\r\n          <i class=\"fm-icon fm-icon-plus\" @click=\"addInstructions\"></i>\r\n        </template>\r\n        <img\r\n          v-if=\"selectedTab == '调度地图'\"\r\n          @click=\"showMapLegend\"\r\n          style=\"height: 24px; position: absolute; right: 20px\"\r\n          :src=\"require('@/assets/img/map/right.png')\"\r\n        />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <fm-search v-model=\"imputValue\" placeholder=\"搜索\" />\r\n    <!-- scrollBar -->\r\n    <div class=\"scroll\">\r\n      <div class=\"scrollBar\">\r\n        <div class=\"itemCard\" @click=\"goToDetail('指令')\">\r\n          <img src=\"@assets/img/dispatchCenter/指令.png\" alt=\"\" />\r\n          <span class=\"littleText\">指令</span>\r\n          <!-- <div class=\"redPoint\"></div> -->\r\n        </div>\r\n        <!-- <div class=\"itemCard\" @click=\"goToDetail('报警')\">\r\n          <img src=\"@assets/img/dispatchCenter/报警.png\" alt=\"\" />\r\n          <span class=\"littleText\">报警</span>\r\n          <div class=\"redPoint\"></div>\r\n        </div> -->\r\n        <div class=\"itemCard\" @click=\"goToDetail('事件')\">\r\n          <img src=\"@assets/img/dispatchCenter/事件.png\" alt=\"\" />\r\n          <span class=\"littleText\">事件</span>\r\n          <!-- <div class=\"redPoint\"></div> -->\r\n        </div>\r\n        <div class=\"itemCard\" @click=\"goToDetail('排班')\">\r\n          <img src=\"@assets/img/dispatchCenter/排班.png\" alt=\"\" />\r\n          <span class=\"littleText\">排班</span>\r\n          <!-- <div class=\"redPoint\"></div> -->\r\n        </div>\r\n        <div class=\"itemCard\" @click=\"goToDetail('日志')\">\r\n          <img src=\"@assets/img/dispatchCenter/日志.png\" alt=\"\" />\r\n          <span class=\"littleText\">日志</span>\r\n          <!-- <div class=\"redPoint\"></div> -->\r\n        </div>\r\n        <div class=\"itemCard\" @click=\"goToDetail('压力')\">\r\n          <img src=\"@assets/img/dispatchCenter/压力.png\" alt=\"\" />\r\n          <span class=\"littleText\">压力</span>\r\n          <!-- <div class=\"redPoint\"></div> -->\r\n        </div>\r\n      </div>\r\n      <on-duty v-if=\"showDuty\" />\r\n    </div>\r\n    <!-- 调度中心页面 -->\r\n    <DispatchCenterPage v-show=\"selectedTab == '调度中心'\"></DispatchCenterPage>\r\n    <!-- 地图 -->\r\n    <div class=\"mapContainer\" v-if=\"selectedTab == '调度地图'\">\r\n      <xa-map :create=\"initScene\"></xa-map>\r\n    </div>\r\n    <MapLegend\r\n      ref=\"mapLegendRef\"\r\n      :popupShow=\"popupShow\"\r\n      shape=\"rectangle\"\r\n      :data-source=\"legendList\"\r\n      :click-func=\"legendClick\"\r\n      @closePop=\"closePop\"\r\n      @legendTitleNameClick=\"legendTitleNameClick\"\r\n      @eventPopupClick=\"eventPopupClick\"\r\n      @monitorPopupClick=\"monitorPopupClick\"\r\n    ></MapLegend>\r\n    <PressureMonitorDetail\r\n      v-if=\"pressureMonitorShow && selectedTab == '调度地图'\"\r\n      :pressureDataDetail=\"pressureDataDetail\"\r\n      @closePopup_pressure=\"closePopup_pressure\"\r\n    >\r\n    </PressureMonitorDetail>\r\n\r\n    <!-- 查看预案 -->\r\n    <fm-action-sheet :visible.sync=\"prePlanShow\" title=\"查看预案\" :round=\"false\">\r\n      <fm-loading size=\"48px\" v-if=\"loadingIsShow == true\"> </fm-loading>\r\n      <div v-show=\"loadingIsShow == false\" class=\"planContent\">\r\n        <div class=\"littlePlan\" v-for=\"(item, index) in fileList\" :key=\"index\">\r\n          <div class=\"topSide\">\r\n            <img class=\"imgPosition\" src=\"@/assets/img/dispatchCenter/矩形.png\" alt=\"\" />\r\n            <!-- 方案标题 -->\r\n            <span>{{ item.projectTitle }}</span>\r\n          </div>\r\n          <div class=\"centerSide\">\r\n            <!-- 方案内容 -->\r\n            <span>{{ item.planContent }}</span>\r\n          </div>\r\n          <div class=\"bottomSide\">\r\n            <div class=\"innerDiv\">\r\n              <div\r\n                class=\"fileCard\"\r\n                v-for=\"(item7, index) in item.fileList\"\r\n                :key=\"index * 1000\"\r\n                @click=\"goToViewFile(item7.fileToken)\"\r\n              >\r\n                <img src=\"@/assets/img/dispatchCenter/文件链接.png\" alt=\"\" />\r\n                <span>点击预览</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </fm-action-sheet>\r\n    <fm-dialog\r\n      :visible.sync=\"planFileDialogShow\"\r\n      title=\"附件预览\"\r\n      :showConfirmButton=\"false\"\r\n      show-cancel-button\r\n    >\r\n      <div style=\"height: 500px; overflow: hidden\">\r\n        <PreView :fileToken=\"fileTokenValue\" key=\"\"></PreView>\r\n      </div>\r\n    </fm-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  NavBar,\r\n  Search,\r\n  Toast,\r\n  Cell,\r\n  CellGroup,\r\n  PullRefresh,\r\n  List,\r\n  Sidebar,\r\n  SidebarItem,\r\n  SwipeCell,\r\n  Button,\r\n  NoticeBar,\r\n  Icon,\r\n  Dialog,\r\n  ActionSheet,\r\n  Uploader,\r\n  Loading,\r\n  Notify,\r\n} from 'fawkes-mobile-lib'\r\nimport * as api from './api'\r\nimport Bus from '@/utils/bus'\r\nimport { addIconToMap } from '@/utils/mapUtils'\r\nimport { bbox, center as getCenter } from '@turf/turf'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\n// 压力监测点击弹窗\r\nimport PressureMonitorDetail from '@/views/OneMap/components/PressureMonitorDetail.vue'\r\n// 自定义图例\r\nimport { legendListSelf } from './legendList.js'\r\nimport { ENUM } from '@/store/State/stateTypes'\r\nimport axios from 'axios'\r\n// 地图\r\nimport Vue from 'vue'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport infoPopup from '@/views/DispatchCenter/components/popup.vue' // 事件弹窗\r\nimport PopupHover from '@/views/DispatchCenter/components/PopupHover.vue' // 监测点弹窗\r\nimport MapLegend from '@/views/OneMap/components/mapLegend.vue'\r\nimport onDuty from './components/onDuty.vue'\r\n// 水厂数据\r\nimport { modifyWaterWork, newWaterWork } from '@/views/DispatchCenter/supplyWaterWork.js'\r\nimport PreView from '@/components/PreView/index.vue'\r\n// 调度中心页面（概化图），该页面太大，写在外部\r\nimport DispatchCenterPage from '@/views/DispatchCenter/components/DispatchCenterPage/index.vue'\r\n\r\nconst MapObj = {\r\n  map: null,\r\n  viewer: null,\r\n  popupItem: '', // mapbox气泡框\r\n  marker: '',\r\n  monitorPopups: [],\r\n  monitorPopupContent: [],\r\n  // 事件点popup集合\r\n  eventPopupArray: [],\r\n}\r\nexport default {\r\n  name: 'DispatchCenter',\r\n  components: {\r\n    [NavBar.name]: NavBar,\r\n    [Search.name]: Search,\r\n    [Toast.name]: Toast,\r\n    [Cell.name]: Cell,\r\n    [CellGroup.name]: CellGroup,\r\n    [PullRefresh.name]: PullRefresh,\r\n    [List.name]: List,\r\n    [Sidebar.name]: Sidebar,\r\n    [SidebarItem.name]: SidebarItem,\r\n    [SwipeCell.name]: SwipeCell,\r\n    [Button.name]: Button,\r\n    [NoticeBar.name]: NoticeBar,\r\n    [Icon.name]: Icon,\r\n    [Dialog.name]: Dialog,\r\n    [ActionSheet.name]: ActionSheet,\r\n    [Uploader.name]: Uploader,\r\n    [Loading.name]: Loading,\r\n    [Notify.Component.name]: Notify.Component,\r\n\r\n    PressureMonitorDetail,\r\n    MapLegend,\r\n    PreView,\r\n    DispatchCenterPage,\r\n    onDuty,\r\n  },\r\n  data() {\r\n    return {\r\n      showDuty: false,\r\n      selectedTab: '调度中心',\r\n      showMonitorType: false,\r\n      showPopover: false,\r\n      // 通过 actions 属性来定义菜单选项\r\n      actions: [{ text: '选项一' }, { text: '选项二' }, { text: '选项三' }],\r\n      imputValue: '',\r\n      // 添加至地图的图片\r\n      icons: [\r\n        {\r\n          name: '压力监测(供)*',\r\n          url: require('@/assets/img/map/压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线供',\r\n          url: require('@/assets/img/map/压力离线供地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警供',\r\n          url: require('@/assets/img/map/压力报警供地图.png'),\r\n        },\r\n        {\r\n          name: '泵站',\r\n          url: require('@/assets/img/map/pump.png'),\r\n        },\r\n        {\r\n          name: '再生水厂',\r\n          url: require('@/assets/img/map/再生水厂地图.png'),\r\n        },\r\n        {\r\n          name: '供水厂',\r\n          url: require('@/assets/img/map/供水厂地图.png'),\r\n        },\r\n        {\r\n          name: '给水加压泵站',\r\n          url: require('@/assets/img/map/给水加压泵站地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测(再生)*',\r\n          url: require('@/assets/img/map/再生水压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线再生',\r\n          url: require('@/assets/img/map/压力离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警再生',\r\n          url: require('@/assets/img/map/压力报警再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(供)*',\r\n          url: require('@/assets/img/map/流量计地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线供',\r\n          url: require('@/assets/img/map/流量离线供地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警供',\r\n          url: require('@/assets/img/map/流量报警供地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(再生)*',\r\n          url: require('@/assets/img/map/流量计再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线再生',\r\n          url: require('@/assets/img/map/流量离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警再生',\r\n          url: require('@/assets/img/map/流量报警再生地图.png'),\r\n        },\r\n        {\r\n          name: '事件点',\r\n          url: require('@/assets/img/map/dw.png'),\r\n        },\r\n        // {\r\n        // name: \"提标改造给水厂\",\r\n        // url: require(\"@/assets/img/map/提标改造给水厂.png\"),\r\n        // },\r\n        // {\r\n        // name: \"规划新建给水厂\",\r\n        // url: require(\"@/assets/img/map/规划新建给水厂.png\"),\r\n        // },\r\n      ],\r\n      // 所有监测点数据\r\n      allPointArray: [],\r\n      // 告警监测点\r\n      dangerPointData: [],\r\n      pressureMonitorShow: false, // 压力监测详情面板显隐\r\n      pipelineShow: false, // 管线详情面板显隐\r\n      pressureDataDetail: {}, // 压力监测详情面板基础信息\r\n      pipelineBaseInfo: {}, // 管线详情面板基础信息\r\n      // 事件\r\n      accessToken: this.$storage.get('access_token'),\r\n      formToken: '',\r\n      header: {},\r\n      tableData: [],\r\n\r\n      // 图例是否显示\r\n      popupShow: false,\r\n      legendList: legendListSelf,\r\n      fileList: [], // 事件点匹配的预案附件\r\n      // 某一事件点匹配上的所有预案\r\n      tempFileScheme: [],\r\n      prePlanShow: false,\r\n      fileListArr: [\r\n        // { url: '/static/img/leaf.jpg' },\r\n        // Uploader 根据文件后缀来判断是否为图片文件\r\n        // 如果图片 URL 中不包含类型信息，可以添加 isImage 标记来声明\r\n        { url: 'https://cloud-image', isImage: true },\r\n      ],\r\n      // 查看预案loading状态是否展示\r\n      loadingIsShow: false,\r\n      // 存在在地图上的所有监测点数据集合\r\n      monitorDataInMap: [],\r\n      // 文件fileToken值，点击不同文件就随之改变\r\n      fileTokenValue: '',\r\n      // 文件预览弹窗\r\n      planFileDialogShow: false,\r\n      // 工单列表-类 // 旧同问题上报 abnormal_inform\r\n      smallType: 'dispatch_problem',\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    // popup弹框查看预案点击回调\r\n    Bus.$on('goToViewDetail', (objectType, eventType, feature) => {\r\n      console.log('点击某一事件点后存储的参数', objectType, eventType, feature)\r\n      // 打开查看预案面板\r\n      this.prePlanShow = true\r\n      // 查看预案loading状态展示\r\n      this.loadingIsShow = true\r\n      // 匹配预案\r\n      this.toFind(objectType, eventType, feature)\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    Bus.$off('goToViewDetail')\r\n  },\r\n  methods: {\r\n    // 新增指令\r\n    addInstructions() {\r\n      this.$router.push({\r\n        name: 'addDispatchOrder',\r\n        query: { mode: 'add' }\r\n      })\r\n    },\r\n    // 点击预案某一文件\r\n    goToViewFile(fileToken) {\r\n      // 附件预览弹窗打开\r\n      this.planFileDialogShow = true\r\n      // 附件token赋值\r\n      this.fileTokenValue = fileToken\r\n    },\r\n    // tab切换回调\r\n    changeType(name) {\r\n      this.selectedTab = name\r\n\r\n      // 顶部调度中心与调度地图切换时，将mapLegend.vue组件中事件popup、监测点popup开启状态变成关闭\r\n      // 事件弹窗开关\r\n      this.$refs.mapLegendRef.eventPopupChecked = false\r\n      // 监测点弹窗\r\n      this.$refs.mapLegendRef.monitorPopupChecked = false\r\n    },\r\n    // 调度中心右上角加号选中回调\r\n    onSelect(action) {\r\n      Toast(action.text)\r\n    },\r\n    // 点击scrollBar回调\r\n    goToDetail(val) {\r\n      switch (val) {\r\n        case '事件':\r\n          this.$router.push({\r\n            name: 'SchedulingEvents',\r\n            query: {},\r\n            params: {},\r\n          })\r\n          break\r\n        case '日志':\r\n          this.$router.push({\r\n            name: 'SchedulingLog',\r\n            query: {},\r\n            params: {},\r\n          })\r\n          break\r\n        case '指令':\r\n          this.$router.push({\r\n            path: '/DispatchCenter/DispatchOrder',\r\n          })\r\n          break\r\n        case '压力':\r\n          this.$router.push({\r\n            path: '/DispatchCenter/PressureAnalysis',\r\n          })\r\n          break\r\n        case '排班':\r\n          this.showDuty = !this.showDuty\r\n          break\r\n      }\r\n    },\r\n    // 图例部分开始------------------------------------------\r\n    // 打开图例\r\n    showMapLegend() {\r\n      this.popupShow = true\r\n    },\r\n    // 关闭图例\r\n    closePop(val) {\r\n      this.popupShow = val\r\n    },\r\n    // 单个图例点击\r\n    legendClick(e, item, id) {\r\n      console.log('图例点击', item, id)\r\n      if (typeof item.id == 'number') {\r\n        this.$notify({\r\n          type: 'warning',\r\n          message: '当前图层暂无数据！',\r\n        })\r\n        return\r\n      }\r\n      item.clickFlag = !item.clickFlag\r\n      this.legendControlLayer(item)\r\n    },\r\n    // 单个图例点击\r\n    legendControlLayer(item) {\r\n      let map = window.xaMap\r\n      if (map.getLayer(item.id)) {\r\n        if (item.clickFlag) {\r\n          map.setLayoutProperty(item.id, 'visibility', 'none')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (map.getLayoutProperty('rd_map_drainpipe_ws_big', 'visibility') == 'none') {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            // 雨水管线图层控制雨水井、雨水箭头、雨水较小层级图层显示\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'none')\r\n\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_big_direction', 'visibility', 'none')\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_small', 'visibility', 'none')\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_small_direction', 'visibility', 'none')\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            // 循环水（回水）管线控制循环水（回水）节点显示\r\n            map.setLayoutProperty('map_supply_node_circulating', 'visibility', 'none')\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            // 配水管线控制配水节点显示\r\n            map.setLayoutProperty('map_supply_node_distribute', 'visibility', 'none')\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            // 输水管线控制输水节点显示\r\n            map.setLayoutProperty('map_supply_node_delivery', 'visibility', 'none')\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            // 再生水管线控制再生水节点显示\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'none')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            // 污水管线图层控制污水井、污水箭头、污水较小层级图层显示\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (map.getLayoutProperty('rd_map_drainpipe_ys_big', 'visibility') == 'none') {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_big_direction', 'visibility', 'none')\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_small', 'visibility', 'none')\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_small_direction', 'visibility', 'none')\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            // \"压力监测-报警\",\r\n            // \"visibility\",\r\n            // \"none\"\r\n            // );\r\n          }\r\n        } else {\r\n          map.setLayoutProperty(item.id, 'visibility', 'visible')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (map.getLayoutProperty('rd_map_drainpipe_ws_big', 'visibility') != 'none') {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'visible')\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_big_direction', 'visibility', 'visible')\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_small', 'visibility', 'visible')\r\n            map.setLayoutProperty('rd_map_drainpipe_ys_small_direction', 'visibility', 'visible')\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            map.setLayoutProperty('map_supply_node_circulating', 'visibility', 'visible')\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            map.setLayoutProperty('map_supply_node_distribute', 'visibility', 'visible')\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            map.setLayoutProperty('map_supply_node_delivery', 'visibility', 'visible')\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'visible')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (map.getLayoutProperty('rd_map_drainpipe_ys_big', 'visibility') != 'none') {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_big_direction', 'visibility', 'visible')\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_manhole', 'visibility', 'visible')\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_small_direction', 'visibility', 'visible')\r\n            map.setLayoutProperty('rd_map_drainpipe_ws_small', 'visibility', 'visible')\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            // \"压力监测-报警\",\r\n            // \"visibility\",\r\n            // \"visible\"\r\n            // );\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 图例标题点击，控制该标题下所有图层显隐\r\n    legendTitleNameClick(legendTitleName) {\r\n      console.log('图例标题', legendTitleName)\r\n      this.legendList.forEach((item) => {\r\n        if (item.label === legendTitleName) {\r\n          item.titleStatus = !item.titleStatus\r\n          //\r\n          item.options.forEach((smallItem) => {\r\n            // 当该标题下图层内容为显示状态时才进入判断\r\n            if (item.titleStatus === true && typeof smallItem.id == 'number') {\r\n              setTimeout(() => {\r\n                this.$notify({\r\n                  type: 'warning',\r\n                  message: smallItem.label + '图层暂无数据！',\r\n                })\r\n              }, 0)\r\n              return\r\n            }\r\n            if (item.titleStatus === true) {\r\n              // 标题状态点亮时\r\n              smallItem.clickFlag = false // 图层均显示\r\n            } else {\r\n              smallItem.clickFlag = true // 图层均隐藏\r\n            }\r\n            this.legendControlLayer(smallItem)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 事件弹窗开关\r\n    eventPopupClick(isShow) {\r\n      console.log('事件', isShow)\r\n      if (isShow) {\r\n        // 事件点popup集合\r\n        MapObj.eventPopupArray = []\r\n        // 如果当前事件点还未加载完毕就退出\r\n        if (this.tableData.length == 0) return\r\n        this.popup1 && this.popup1.remove() // 从地图上移除事件popup\r\n        // 事件弹窗全开\r\n        this.tableData.forEach((item, index) => {\r\n          // console.log(item)\r\n          let popup = new mapboxgl.Popup({\r\n            closeOnClick: false,\r\n            closeButton: false,\r\n            anchor: 'bottom',\r\n            offset: { bottom: [0, -15] },\r\n          })\r\n          popup\r\n            .setLngLat({\r\n              lng: item.appealLng,\r\n              lat: item.appealLat,\r\n            })\r\n            .setHTML('<div id=popup' + item.id + '></div>')\r\n            .addTo(MapObj.map)\r\n\r\n          let defectFromDic = this.$store.state[ENUM].defectFrom\r\n          this.$nextTick(() => {\r\n            // 事件悬浮弹窗\r\n            new infoPopup({\r\n              propsData: {\r\n                // 对象类型\r\n                // item无需JSON.parse\r\n                deviceType: item.formValue.deviceType[1],\r\n                // 事件类型\r\n                faultTypes: item.formValue.faultTypes,\r\n                // 当前事件点的properties\r\n                properties: item,\r\n                formToken: this.formToken,\r\n                id: item.id,\r\n                ticketNo: item.ticketNo,\r\n                name: ' ' + item.title + ' ',\r\n                status: item.ticketStatusName,\r\n                info: {\r\n                  事件来源: defectFromDic.find((it) => it.code == item.defectFrom)['zh-CN'],\r\n                  事件位置: item.address,\r\n                  上报人: item.createByName,\r\n                  智能调度推荐: '预案附件',\r\n                },\r\n                fileList: this.fileList,\r\n              },\r\n            }).$mount('#popup' + item.id)\r\n          })\r\n          // 事件点popup集合\r\n          MapObj.eventPopupArray.push(popup)\r\n        })\r\n      } else {\r\n        // 事件点popup隐藏\r\n        MapObj.eventPopupArray.forEach((popup) => {\r\n          popup.remove()\r\n        })\r\n        // 事件点popup集合\r\n        MapObj.eventPopupArray = []\r\n      }\r\n    },\r\n    // 监测点弹窗开关\r\n    monitorPopupClick(isShow) {\r\n      console.log('监测点', isShow)\r\n      if (isShow) {\r\n        // 如果地图上还未存在监测点图层就退出\r\n        if (this.monitorDataInMap.length == 0) return\r\n        // 监测点popup集合\r\n        MapObj.monitorPopups = []\r\n        // 存在在地图上的所有监测点数据集合\r\n        this.monitorDataInMap.forEach((item) => {\r\n          let pop = new mapboxgl.Popup({\r\n            closeOnClick: false,\r\n            closeButton: false,\r\n            anchor: 'bottom',\r\n            offset: { bottom: [0, -22] },\r\n          })\r\n          pop\r\n            .setLngLat({\r\n              lng: item.lon,\r\n              lat: item.lat,\r\n            })\r\n            .setHTML('<div id=popup' + item.deviceId + '></div>')\r\n            .addTo(window.xaMap)\r\n          // 传递给PopupHover组件，遍历展示数据\r\n          let hoverAndClick = []\r\n          // 1.筛选出需要展示的属性\r\n          hoverAndClick = item.realtimeData.filter((item) => {\r\n            return item.isShow == 0\r\n          })\r\n          // 1.2将properties中设备告警状态添加到具体的属性值中，用于是否用红色字体显示，比如压力值\r\n          hoverAndClick.forEach((item1) => {\r\n            if (item?.isWarn && item?.isWarn == '1') {\r\n              item1.isWarn = 1\r\n            } else {\r\n              item1.isWarn = -1\r\n            }\r\n          })\r\n          // 2.不同设备添加不同展示数据\r\n          hoverAndClick.forEach((item) => {\r\n            // 对需要显示的值进行处理并添加单位\r\n            item.myVal = item.val + ' ' + item.desc\r\n          })\r\n          // 3.时间单独添加在最后\r\n          hoverAndClick.push({\r\n            name: '时间',\r\n            myVal: hoverAndClick.length > 0 ? hoverAndClick[0].time.slice(6, 20) : '',\r\n            isWarn: -1,\r\n          })\r\n          this.$nextTick(() => {\r\n            // 压力监测悬浮弹窗\r\n            new PopupHover({\r\n              propsData: {\r\n                name: item.monitorName,\r\n                belongSystem: item.belongSystem,\r\n                realtimeData: item.realtimeData,\r\n                hoverAndClick: hoverAndClick,\r\n              },\r\n            }).$mount('#popup' + item.deviceId)\r\n          })\r\n          MapObj.monitorPopups.push(pop)\r\n        })\r\n      } else {\r\n        // 监测点popup隐藏\r\n        MapObj.monitorPopups.forEach((popup) => {\r\n          popup.remove()\r\n        })\r\n        // 监测点popup集合\r\n        MapObj.monitorPopups = []\r\n      }\r\n    },\r\n    // 图例部分结束------------------------------------------\r\n    // /*初始化地图事件*/\r\n    async initScene() {\r\n      MapObj.map = window.xaMap\r\n      await addIconToMap(MapObj.map, this.icons)\r\n      MapObj.map.resize()\r\n      // 添加水厂\r\n      this.addWaterFactory()\r\n      // 添加压力监测设备点\r\n      this.getPressurePoint()\r\n      // 添加事件图层 => getTableData() + this.getGeoJson() => renderCluster() 渲染图层和弹窗\r\n      this.addEventsLayer()\r\n\r\n      //修改供水厂图标\r\n      MapObj.map.setLayoutProperty('map_waterwork', 'icon-image', '供水厂')\r\n      MapObj.map.setLayoutProperty('map_waterwork', 'icon-size', 0.6)\r\n      MapObj.map.setLayoutProperty('map_supply_pump', 'icon-image', '给水加压泵站')\r\n      MapObj.map.setLayoutProperty('map_supply_pump', 'icon-size', 0.6)\r\n\r\n      // 隐藏六水合一默认图层\r\n      MapObj.map.setLayoutProperty('rd_map_comb', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_manhole', 'visibility', 'none')\r\n      // 污水相关\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ws_big', 'visibility', 'none')\r\n\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ws_big_direction', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ws_small', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ws_small_direction', 'visibility', 'none')\r\n      // 雨水相关\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ys_big', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ys_big_direction', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ys_small', 'visibility', 'none')\r\n      MapObj.map.setLayoutProperty('rd_map_drainpipe_ys_small_direction', 'visibility', 'none')\r\n      // 显示供水管线图层\r\n      MapObj.map.setLayoutProperty('map_supply_pipe_distribute', 'visibility', 'visible')\r\n      MapObj.map.setLayoutProperty('map_supply_pipe_circulating', 'visibility', 'visible')\r\n      MapObj.map.setLayoutProperty('map_supply_pipe_delivery', 'visibility', 'visible')\r\n      // MapObj.map.setLayoutProperty( \"1111111111111111111111111\", \"visibility\", \"visible\" );\r\n      MapObj.map.setLayoutProperty('map_waterwork', 'visibility', 'visible')\r\n      MapObj.map.setLayoutProperty('map_supply_pump', 'visibility', 'visible')\r\n      // MapObj.map.setLayoutProperty( \"1111111111111111111111111\", \"visibility\", \"visible\" );\r\n      MapObj.map.setLayoutProperty('map_supply_valve', 'visibility', 'visible')\r\n      MapObj.map.setLayoutProperty('map_supply_firehydrant', 'visibility', 'visible')\r\n    },\r\n    // 添加水厂\r\n    async addWaterFactory() {\r\n      let map = window.xaMap\r\n      // let modifyWaterWorkSourceData = {\r\n      //   type: \"FeatureCollection\",\r\n      //   features: modifyWaterWork.map((i) => {\r\n      //     return {\r\n      //       type: \"Feature\",\r\n      //       geometry: {\r\n      //         type: \"Point\",\r\n      //         coordinates: [i.lon, i.lat],\r\n      //       },\r\n      //       properties: i,\r\n      //     };\r\n      //   }),\r\n      // };\r\n      // let newWaterWorkSourceData = {\r\n      //   type: \"FeatureCollection\",\r\n      //   features: newWaterWork.map((i) => {\r\n      //     return {\r\n      //       type: \"Feature\",\r\n      //       geometry: {\r\n      //         type: \"Point\",\r\n      //         coordinates: [i.lon, i.lat],\r\n      //       },\r\n      //       properties: i,\r\n      //     };\r\n      //   }),\r\n      // };\r\n      // await map.addLayer({\r\n      //   id: \"提标改造给水厂\",\r\n      //   type: \"symbol\",\r\n      //   source: {\r\n      //     type: \"geojson\",\r\n      //     data: modifyWaterWorkSourceData,\r\n      //   },\r\n      //   layout: {\r\n      //     \"icon-image\": \"提标改造给水厂\",\r\n      //     \"icon-size\": 1,\r\n      //     // 图标强制全部显示\r\n      //     \"icon-ignore-placement\": true,\r\n      //   },\r\n      // });\r\n      // await map.addLayer({\r\n      //   id: \"规划新建给水厂\",\r\n      //   type: \"symbol\",\r\n      //   source: {\r\n      //     type: \"geojson\",\r\n      //     data: newWaterWorkSourceData,\r\n      //   },\r\n      //   layout: {\r\n      //     \"icon-image\": \"规划新建给水厂\",\r\n      //     \"icon-size\": 1,\r\n      //     // 图标强制全部显示\r\n      //     \"icon-ignore-placement\": true,\r\n      //   },\r\n      // });\r\n      await map.addLayer({\r\n        id: 'recycleFactory',\r\n        source: {\r\n          type: 'geojson',\r\n          data: {\r\n            type: 'FeatureCollection',\r\n            features: [\r\n              {\r\n                type: 'Feature',\r\n                geometry: {\r\n                  type: 'Point',\r\n                  coordinates: [115.948614165383, 39.0726579390552],\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        },\r\n        type: 'symbol',\r\n        layout: {\r\n          'icon-image': '再生水厂',\r\n          visibility: 'none',\r\n          'icon-size': 0.6,\r\n        },\r\n      })\r\n\r\n      // 提标改造给水厂\r\n      modifyWaterWork.forEach((item) => {\r\n        let pop = new mapboxgl.Popup({\r\n          closeOnClick: false,\r\n          closeButton: false,\r\n          anchor: 'bottom',\r\n          offset: { bottom: [0, -15] },\r\n        })\r\n        pop\r\n          .setLngLat({\r\n            lng: item.lon,\r\n            lat: item.lat,\r\n          })\r\n          .setText(item.name)\r\n          .addTo(map)\r\n      })\r\n\r\n      // 规划新建给水厂\r\n      newWaterWork.forEach((item) => {\r\n        let pop = new mapboxgl.Popup({\r\n          closeOnClick: false,\r\n          closeButton: false,\r\n          anchor: 'bottom',\r\n          offset: { bottom: [0, -15] },\r\n        })\r\n        pop\r\n          .setLngLat({\r\n            lng: item.lon,\r\n            lat: item.lat,\r\n          })\r\n          .setText(item.name)\r\n          .addTo(map)\r\n      })\r\n      // map.on(\"mouseenter\", \"提标改造给水厂\", (e) => {\r\n      //   let feature = e.features[0];\r\n      //   if (!this.pop) {\r\n      //     this.pop = new mapboxgl.Popup({\r\n      //       closeOnClick: true,\r\n      //       closeButton: false,\r\n      //       anchor: \"bottom\",\r\n      //       offset: { bottom: [0, -15] },\r\n      //     });\r\n      //   }\r\n      //   this.pop\r\n      //     .setLngLat({\r\n      //       lng: feature.properties.lon,\r\n      //       lat: feature.properties.lat,\r\n      //     })\r\n      //     .setText(feature.properties.name)\r\n      //     .addTo(map);\r\n      // });\r\n      // map.on(\"mouseenter\", \"规划新建给水厂\", (e) => {\r\n      //   let feature = e.features[0];\r\n      //   if (!this.pop) {\r\n      //     this.pop = new mapboxgl.Popup({\r\n      //       closeOnClick: true,\r\n      //       closeButton: false,\r\n      //       anchor: \"bottom\",\r\n      //       offset: { bottom: [0, -15] },\r\n      //     });\r\n      //   }\r\n      //   this.pop\r\n      //     .setLngLat({\r\n      //       lng: feature.properties.lon,\r\n      //       lat: feature.properties.lat,\r\n      //     })\r\n      //     .setText(feature.properties.name)\r\n      //     .addTo(map);\r\n      // });\r\n    },\r\n    // 添加压力监测设备\r\n    async getPressurePoint() {\r\n      let params = {\r\n        deviceType: '',\r\n      }\r\n      let arr = []\r\n      let flowArr = [] // 流量计\r\n      let supplyFlowArr = [] // 供水流量计\r\n      let recycleFlowArr = [] // 再生水流量计\r\n      let pressureArr = [] // 压力计\r\n      let supplyPressureArr = [] // 供水压力计\r\n      let recyclePressureArr = [] // 再生水压力\r\n\r\n      // 获取所有监测设备基础信息\r\n      await api.getAllEquipmentInformation(params).then((res) => {\r\n        if (res.data && res.data.length > 0) {\r\n          // 所有监测点数据赋值\r\n          this.allPointArray = res.data\r\n          console.log('所有监测点数据', res.data)\r\n          let arr = res.data\r\n          flowArr = arr.filter((item) => {\r\n            return item.deviceType == 'Flowmeter'\r\n          })\r\n          supplyFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recycleFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          pressureArr = arr.filter((item) => {\r\n            return item.deviceType == 'IVTM'\r\n          })\r\n          supplyPressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recyclePressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          console.log(\r\n            '压力流量四个类型',\r\n            supplyFlowArr,\r\n            recycleFlowArr,\r\n            supplyPressureArr,\r\n            recyclePressureArr\r\n          )\r\n          // 存在在地图上的所有监测点数据集合\r\n          this.monitorDataInMap = [...supplyFlowArr, ...recycleFlowArr, ...supplyPressureArr, ...recyclePressureArr]\r\n          // 供水压力监测点告警个数\r\n          supplyPressureArr.forEach((item) => {\r\n            console.log(item.iotOnline + '---' + item.isWarn)\r\n          })\r\n          this.addYourLayer(supplyFlowArr, '流量计(供)*', '流量离线供', '流量报警供')\r\n          this.addYourLayer(recycleFlowArr, \"流量计(再生)*\", \"流量离线再生\", \"流量报警再生\");\r\n          this.addYourLayer(supplyPressureArr, '压力监测(供)*', '压力监测离线供', '压力监测报警供')\r\n          this.addYourLayer(recyclePressureArr, \"压力监测(再生)*\", \"压力监测离线再生\", \"压力监测报警再生\");\r\n        }\r\n      })\r\n    },\r\n    // 在地图上添加图标图层\r\n    addYourLayer(pointList, id, offlineImageId, warnImageId) {\r\n      let visibility = 'visible'\r\n      // if (id == '压力监测(供)*') {\r\n      //   visibility = 'visible'\r\n      // } else {\r\n      //   visibility = 'none'\r\n      // }\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: pointList.map((i) => {\r\n          return {\r\n            type: 'Feature',\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: [i.lon, i.lat],\r\n            },\r\n            properties: i,\r\n          }\r\n        }),\r\n      }\r\n      if (window.xaMap.getSource(id)) {\r\n        window.xaMap.getSource(id).setData(sourceData)\r\n        return\r\n      }\r\n      window.xaMap.addLayer(\r\n        {\r\n          id: id,\r\n          type: 'symbol',\r\n          source: {\r\n            type: 'geojson',\r\n            data: sourceData,\r\n          },\r\n          layout: {\r\n            'icon-image': [\r\n              'case',\r\n              ['all', ['==', ['get', 'iotOnline'], '0'], ['!=', ['get', 'isWarn'], '1']],\r\n              id,\r\n              ['==', ['get', 'iotOnline'], '1'],\r\n              offlineImageId,\r\n              ['all', ['==', ['get', 'iotOnline'], '0'], ['==', ['get', 'isWarn'], '1']],\r\n              warnImageId,\r\n              id,\r\n            ],\r\n            'icon-size': 0.7,\r\n            // 图标强制全部显示\r\n            'icon-ignore-placement': true,\r\n            visibility: visibility,\r\n          },\r\n          minzoom: 13,\r\n        },\r\n        ''\r\n      )\r\n      let obj = {}\r\n      obj[id] = pointList\r\n      MapObj.monitorPopupContent.push(obj)\r\n      // 鼠标点击\r\n      window.xaMap.on('click', id, this.handleMouseClick)\r\n    },\r\n    // 鼠标点击\r\n    handleMouseClick(e) {\r\n      const feature = e.features[0]\r\n      // window.xaMap.getCanvas().style.cursor = 'pointer'\r\n      // 管线详情面板关闭\r\n      this.pipelineShow = false\r\n      // 赋值传递给详情面板PressureMonitor.vue\r\n      this.pressureDataDetail = _cloneDeep(feature.properties)\r\n      this.pressureDataDetail.realtimeData = JSON.parse(feature.properties.realtimeData)\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = true\r\n    },\r\n    // 压力监测详情面板PressureMonitor.vue关闭按钮回调\r\n    closePopup_pressure() {\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = false\r\n    },\r\n\r\n    // 事件地图部分----------------------------------------\r\n    // 添加事件图层，先获取header，再通过header获取事件，再将事件列表添加至地图\r\n    async addEventsLayer() {\r\n      // 业务类型固定为“供水”\r\n      // let extParam = \"{\\\"sysSource\\\":\\\"outwork\\\",\\\"createType\\\":\\\"PC\\\"\" + \",\\\"device_type\\\":\" + \"[\" + \"\\\"\" + \"supply\" + \"\\\"\" + \"]\" + \"}\";\r\n      let extParam = ''\r\n      let extParamJson = {\r\n        // \"sysSource\": \"outwork\",\r\n        createType: 'PC',\r\n        // \"device_type\": [\"supply\"] // 要换成 supply、sewage\r\n      }\r\n      extParam = JSON.stringify(extParamJson)\r\n      let params = {\r\n        sysCode: 'outwork',\r\n        smallType: this.smallType,\r\n        extParam: extParam,\r\n        extListParam: [\r\n          { keyList: ['deviceType'], valueList: ['recycle', 'supply', '供水', '再生水'] },\r\n        ], // 同时查再生水和供水\r\n        page: {\r\n          current: 1,\r\n          size: -1,\r\n        },\r\n      }\r\n      // 获取header，查询工单用\r\n      axios({\r\n        // url: 'http://172.20.79.70/main/userCenterApi/sso/tokenByToken',\r\n        url: process.env.VUE_APP_WPG_URL + '/main/userCenterApi/sso/tokenByToken',\r\n        method: 'post',\r\n        params: {\r\n          token: this.accessToken,\r\n        },\r\n        headers: {\r\n          Authorization: 'Basic b3V0d29yazp3cGcyMDIw',\r\n        },\r\n      }).then(async (res) => {\r\n        if (res.status == 200) {\r\n          this.formToken = res.data.resultData.token\r\n          this.header = {\r\n            // 'Content-Type': 'application/json', // 若有 则文件上传 出错\r\n            Authorization: 'Bearer ' + this.formToken,\r\n          }\r\n          console.log('this.header查询工单用:', this.header)\r\n          await this.getTableData(params) // 获取事件列表\r\n          this.getGeoJson()\r\n        }\r\n      })\r\n    },\r\n    // 获取事件列表\r\n    async getTableData(params) {\r\n      this.tableData = []\r\n      console.log('获取事件列表参数', params)\r\n      await axios({\r\n        url: process.env.VUE_APP_THIRD_REQUEST_URL + '/main/outworkapi/ticketStatisticClient/getTicketList',\r\n        method: 'post',\r\n        data: params,\r\n        headers: this.header,\r\n      }).then((res) => {\r\n        console.log('获取事件列表结果', res)\r\n        if (res.status == 200 && res.data != null) {\r\n          this.tableData = res.data?.resultData?.records || []\r\n          console.log('事件列表records', this.tableData)\r\n        }\r\n      })\r\n    },\r\n    // 将事件列表添加至地图\r\n    getGeoJson() {\r\n      let features = []\r\n      let withoutPositionCount = 0\r\n      console.log('聚合的tableData', this.tableData)\r\n      if (this.tableData.length == 0) return\r\n\r\n      this.tableData.forEach((item) => {\r\n        let feature = {}\r\n        let properties = {}\r\n        let geometry = {}\r\n\r\n        properties = item\r\n        properties.defectFrom = item.formValue.defectFrom\r\n        feature.properties = properties\r\n        feature.type = 'Feature'\r\n        geometry.type = 'Point'\r\n        if (item.appealLat && item.appealLng) {\r\n          // geometry.coordinates = [item.appealLat, item.appealLon]\r\n          geometry.coordinates = [item.appealLng, item.appealLat] // wgs84\r\n          feature.geometry = geometry\r\n          features.push(feature)\r\n        } else if (\r\n          item.formValue.deviceDetail?.latitude &&\r\n          item.formValue.deviceDetail?.longitude\r\n        ) {\r\n          geometry.coordinates = [\r\n            item.formValue.deviceDetail.longitude,\r\n            item.formValue.deviceDetail.latitude,\r\n          ]\r\n          feature.geometry = geometry\r\n          features.push(feature)\r\n        } else if (\r\n          item.formValue.ticketAddress?.longitude &&\r\n          item.formValue.ticketAddress?.latitude\r\n        ) {\r\n          geometry.coordinates = [\r\n            item.formValue.ticketAddress.longitude,\r\n            item.formValue.ticketAddress.latitude,\r\n          ]\r\n          feature.geometry = geometry\r\n          features.push(feature)\r\n        } else {\r\n          // geometry.coordinates = [39.06683064435245, 115.9453947097063]\r\n          withoutPositionCount += 1\r\n        }\r\n      })\r\n      console.log('无坐标个数', withoutPositionCount)\r\n      // 聚合数据 构造头部\r\n      let geoJson = {\r\n        type: 'FeatureCollection',\r\n        crs: { type: 'name', properties: { name: 'urn:ogc:def:crs:OGC:1.3:CRS84' } },\r\n        features: [],\r\n      }\r\n      geoJson.features = features\r\n      console.log('聚合的geoJson', geoJson)\r\n      this.renderCluster(geoJson)\r\n    },\r\n    // 渲染\r\n    renderCluster(geoJsonSource) {\r\n      ;['clusters', 'cluster-count', 'unclustered-point'].forEach((item) => {\r\n        if (MapObj.map.getLayer(item)) {\r\n          MapObj.map.removeLayer(item)\r\n        }\r\n      })\r\n      if (MapObj.map.getSource('earthquakes')) {\r\n        MapObj.map.removeSource('earthquakes')\r\n      }\r\n      MapObj.map.addSource('earthquakes', {\r\n        type: 'geojson',\r\n        // Point to GeoJSON data. This example visualizes all M1.0+ earthquakes\r\n        // from 12/22/15 to 1/21/16 as logged by USGS' Earthquake hazards program.\r\n        // data: \"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\",\r\n        data: geoJsonSource,\r\n        cluster: true,\r\n        clusterMaxZoom: 14, // Max zoom to cluster points on\r\n        clusterRadius: 50, // Radius of each cluster when clustering points (defaults to 50)\r\n      })\r\n\r\n      MapObj.map.addLayer({\r\n        id: 'clusters',\r\n        type: 'circle',\r\n        source: 'earthquakes',\r\n        filter: ['has', 'point_count'],\r\n        paint: {\r\n          // Use step expressions (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\r\n          // with three steps to implement three types of circles:\r\n          // * Blue, 20px circles when point count is less than 100\r\n          // * Yellow, 30px circles when point count is between 100 and 750\r\n          // * Pink, 40px circles when point count is greater than or equal to 750\r\n          'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 10, '#f1f075', 75, '#f28cb1'],\r\n          'circle-radius': ['step', ['get', 'point_count'], 20, 10, 30, 75, 40],\r\n        },\r\n      })\r\n\r\n      MapObj.map.addLayer({\r\n        id: 'cluster-count',\r\n        type: 'symbol',\r\n        source: 'earthquakes',\r\n        filter: ['has', 'point_count'],\r\n        layout: {\r\n          'text-field': '{point_count_abbreviated}',\r\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\r\n          'text-size': 12,\r\n        },\r\n      })\r\n\r\n      MapObj.map.addLayer({\r\n        id: 'unclustered-point',\r\n        source: 'earthquakes',\r\n        filter: ['!', ['has', 'point_count']],\r\n        type: 'symbol',\r\n        layout: {\r\n          'icon-image': '事件点', // 点的图标\r\n          visibility: 'visible',\r\n          'icon-size': 0.7,\r\n        },\r\n      })\r\n\r\n      let defectFromDic = this.$store.state[ENUM].defectFrom\r\n      let that = this\r\n      MapObj.map.on('click', 'unclustered-point', (e) => {\r\n        // 如果当前事件点所有popup为打开状态，即事件点popup数组长度不为0，退出该次点击事件\r\n        if (MapObj.eventPopupArray.length > 0) return\r\n        // 每次点击新的事件点就清除预案数据\r\n        this.fileList = []\r\n        console.log('e.features: ', e.features)\r\n        // console.log('formValue: ', JSON.parse(e.features[0].properties.formValue))\r\n        MapObj.map.getCanvas().style.cursor = 'pointer'\r\n\r\n        let formValue = JSON.parse(e.features[0].properties.formValue)\r\n        console.log('formValue: ', formValue)\r\n\r\n        // 对象类型\r\n        let objectType = formValue.deviceType[1]\r\n        // 事件类型\r\n        let eventType = formValue.faultTypes\r\n\r\n        var coordinates = e.features[0].geometry.coordinates.slice()\r\n        // console.log('经纬度', coordinates)\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears\r\n        // over the copy being pointed to.\r\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360\r\n        }\r\n        // Create a popup, but don't add it to the map yet.\r\n        this.popup1 = new mapboxgl.Popup({\r\n          closeOnClick: true,\r\n          closeButton: false,\r\n          anchor: 'bottom',\r\n          offset: { bottom: [0, -15] },\r\n        })\r\n\r\n        this.popup1\r\n          .setLngLat(coordinates)\r\n          .setHTML('<div id=\"vue-popup-pressure\"></div>')\r\n          .addTo(MapObj.map)\r\n        // .addTo(window.xaMap);\r\n        let formToken = that.formToken\r\n        // 事件悬浮弹窗\r\n        new infoPopup({\r\n          propsData: {\r\n            // 对象类型\r\n            deviceType: formValue.deviceType[1],\r\n            // 事件类型\r\n            faultTypes: formValue.faultTypes,\r\n            // 当前事件点的properties\r\n            properties: e.features[0].properties,\r\n            formToken: formToken,\r\n            id: e.features[0].properties.id,\r\n            ticketNo: e.features[0].properties.ticketNo,\r\n            name: ' ' + e.features[0].properties.title + ' ',\r\n            status: e.features[0].properties.ticketStatusName,\r\n            info: {\r\n              事件来源: defectFromDic.find((it) => it.code == e.features[0].properties.defectFrom)[\r\n                'zh-CN'\r\n              ],\r\n              事件位置: e.features[0].properties.address,\r\n              上报人: e.features[0].properties.createByName,\r\n              智能调度推荐: '预案附件',\r\n            },\r\n            fileList: this.fileList,\r\n          },\r\n        }).$mount('#vue-popup-pressure')\r\n      })\r\n\r\n      // inspect a cluster on click\r\n      MapObj.map.on('click', 'clusters', function (e) {\r\n        var features = MapObj.map.queryRenderedFeatures(e.point, { layers: ['clusters'] })\r\n        var clusterId = features[0].properties.cluster_id\r\n        MapObj.map\r\n          .getSource('earthquakes')\r\n          .getClusterExpansionZoom(clusterId, function (err, zoom) {\r\n            if (err) return\r\n            MapObj.map.easeTo({\r\n              center: features[0].geometry.coordinates,\r\n              zoom: zoom,\r\n            })\r\n          })\r\n      })\r\n      MapObj.map.setMinZoom(0)\r\n      MapObj.map.setMaxZoom(30)\r\n      // console.log('now MapObj.map layers: ', MapObj.map.getStyle().layers)\r\n    },\r\n    // 匹配预案\r\n    async toFind(objectType, eventType, feature) {\r\n      let params = {\r\n        page: 1,\r\n        size: 99,\r\n        objectType: objectType,\r\n        eventType: eventType,\r\n      }\r\n      console.log('匹配预案参数', params)\r\n      // 某一事件点匹配上的所有预案\r\n      this.tempFileScheme = []\r\n      // 匹配调度预案\r\n      await api.getSchema(params).then((res) => {\r\n        console.log('匹配预案结果', res)\r\n        if (res.status && res.data != null) {\r\n          this.tempFileScheme = res.data.records\r\n        }\r\n        console.log('匹配上的预案数组', res.data.records)\r\n        if (this.tempFileScheme.length == 0) {\r\n          console.log('未匹配到预案')\r\n          this.fileList = []\r\n          this.loadingIsShow = false\r\n          Notify({ type: 'warning', message: '暂无匹配预案', duration: 1000 })\r\n          return\r\n        }\r\n        // 根据匹配上的预案获取预案文件？\r\n        this.getFileInfoByToken(this.tempFileScheme, feature)\r\n      })\r\n    },\r\n    // 根据匹配上的预案获取预案文件？\r\n    async getFileInfoByToken(tempFileScheme, feature) {\r\n      for (let i = 0; i < tempFileScheme.length; i++) {\r\n        console.log('每个预案---' + i, tempFileScheme[i])\r\n        if ('fileList' in tempFileScheme[i] && tempFileScheme[i].fileList?.length > 0) {\r\n          for (let j = 0; j < tempFileScheme[i].fileList.length; j++) {\r\n            let parmas = {\r\n              f8s: [tempFileScheme[i].fileList[j].fileToken],\r\n            }\r\n            await api.getFileByToken(parmas).then((res) => {\r\n              console.log('根据文件token获取文件', res)\r\n\r\n              tempFileScheme[i].fileList[j].url = res.data[0].link\r\n              // tempFileScheme[i].fileList[j].url =\r\n              //   'https://cn.bing.com/images/search?q=%E5%9B%BE%E7%89%87&FORM=IQFRBA&id=49E031AAC7715C25D8E03215367A7B4A50E14354'\r\n              tempFileScheme[i].fileList[j].uid = tempFileScheme[i].fileList[j].id\r\n              tempFileScheme[i].fileList[j].fileToken = tempFileScheme[i].fileList[j].fileToken\r\n              tempFileScheme[i].fileList[j].name = tempFileScheme[i].fileList[j].fileName\r\n              // console.log('tempFileScheme[i].fileList[j]: ', tempFileScheme[i].fileList[j])\r\n            })\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n      console.log('处理后的文件数据', tempFileScheme)\r\n      // this.fileList = tempFileScheme[0]?.fileList ? tempFileScheme[0].fileList : []\r\n      this.fileList = tempFileScheme\r\n      // 查看预案loading状态消失\r\n      this.loadingIsShow = false\r\n\r\n      let defectFromDic = this.$store.state[ENUM].defectFrom\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n::-webkit-scrollbar {\r\n  display: none;\r\n  /* Chrome Safari */\r\n}\r\n\r\n// loading加载状态\r\n/deep/.fm-loading {\r\n  margin-top: 150px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/deep/.mapboxgl-popup-content {\r\n  display: flex;\r\n  justify-content: center;\r\n  box-shadow: 0 0 transparent;\r\n  background: transparent;\r\n  padding: 0;\r\n\r\n  height: 186px;\r\n}\r\n\r\n// 去除mapbox弹窗下的三角形\r\n/deep/.mapboxgl-popup-tip {\r\n  display: none;\r\n}\r\n\r\n// 查看预案开始----------------------\r\n/deep/.fm-popup--bottom {\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 40%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n/deep/.fm-action-sheet__close {\r\n  display: none;\r\n}\r\n\r\n.planContent {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 97%;\r\n  overflow-y: scroll;\r\n  padding: 16px 16px 0; // 适应卡片margin-bottom布局\r\n  background-color: #f5f7f9;\r\n\r\n  .littlePlan {\r\n    width: 690px;\r\n    height: 304px;\r\n    min-height: 340px;\r\n    background: #ffffff;\r\n    border-radius: 16px;\r\n    margin-bottom: 16px;\r\n\r\n    .topSide {\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      // padding-left: 30px;\r\n      width: 100%;\r\n      height: 20%;\r\n      font-size: 36px;\r\n      font-family: PingFangSC-Semibold, PingFang SC;\r\n      font-weight: 600;\r\n      color: #191919;\r\n      // background-color: rgb(83, 255, 103);\r\n\r\n      .imgPosition {\r\n        position: absolute;\r\n        width: 6px;\r\n        top: 14px;\r\n        left: 0;\r\n      }\r\n\r\n      span {\r\n        padding-left: 30px;\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n    }\r\n\r\n    .centerSide {\r\n      display: flex;\r\n      align-items: center;\r\n      // padding-left: 30px;\r\n      width: 100%;\r\n      height: 25%;\r\n      font-size: 32px;\r\n      font-family: PingFangSC-Regular, PingFang SC;\r\n      font-weight: 400;\r\n      color: #333333;\r\n      // background-color: rgb(255, 83, 186);\r\n\r\n      span {\r\n        padding-left: 30px;\r\n        width: 100%;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n    }\r\n\r\n    .bottomSide {\r\n      display: flex;\r\n      align-items: center;\r\n      // padding-left: 30px;\r\n      width: 100%;\r\n      height: 55%;\r\n      // background-color: rgb(48, 230, 208);\r\n\r\n      .innerDiv {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 0 30px;\r\n        width: calc(100% - 60px);\r\n        height: 100%;\r\n        white-space: nowrap;\r\n        overflow-x: overlay;\r\n\r\n        // background-color: rgb(238, 97, 97);\r\n        .fileCard {\r\n          width: 120px;\r\n          height: 180px;\r\n          // background-color: rgb(53, 165, 43);\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-around;\r\n          align-items: center;\r\n          font-size: 26px;\r\n          font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n          color: #333333;\r\n          border-radius: 12px;\r\n\r\n          img {\r\n            width: 120px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 查看预案结束----------------------\r\n.DispatchCenter {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  /deep/ .fm-hairline--bottom::after {\r\n    display: none;\r\n  }\r\n\r\n  // background-color: rgb(255, 150, 150);\r\n  .top {\r\n    width: 100%;\r\n    height: 70px;\r\n    padding: 12px 0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .top-title {\r\n      width: 400px;\r\n      height: 64px;\r\n      background: #f5f5f5;\r\n      border-radius: 36px;\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 4px;\r\n\r\n      span {\r\n        width: 50%;\r\n        height: 100%;\r\n        font-size: 28px;\r\n        font-family: PingFangSC-Regular, PingFang SC;\r\n        font-weight: 400;\r\n        color: #555555;\r\n        line-height: 40px;\r\n        border-radius: 36px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      .active {\r\n        background: #1b67d8;\r\n        box-shadow: 0px 8px 16px 0px rgba(104, 115, 127, 0.06);\r\n        font-weight: 500;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 88px;\r\n    overflow-x: visible;\r\n\r\n    .scrollBar {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      width: 100%;\r\n      height: 88px;\r\n      overflow-x: overlay;\r\n      box-shadow: 0px 2px 20px 0px rgba(104, 115, 127, 0.07);\r\n      background-color: rgb(255, 255, 255);\r\n      display: flex;\r\n      flex-direction: row;\r\n\r\n      .itemCard {\r\n        position: relative;\r\n        width: 150px;\r\n        min-width: 150px;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        // background-color: rgb(136, 236, 141);\r\n        img {\r\n          width: 32px;\r\n        }\r\n\r\n        .littleText {\r\n          padding-left: 8px;\r\n          font-size: 28px;\r\n          font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n          color: #555555;\r\n        }\r\n\r\n        .redPoint {\r\n          position: absolute;\r\n          top: 6px;\r\n          right: 6px;\r\n          width: 12px;\r\n          height: 12px;\r\n          background: #ff4b4b;\r\n          border-radius: 16px;\r\n          border: 1px solid #f7f7f7;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .mapContainer {\r\n    height: calc(100% - 295px);\r\n    width: 100%;\r\n    // background-color: rgb(97, 40, 255);\r\n  }\r\n\r\n  /deep/.fm-search {\r\n    width: 100%;\r\n    padding: 20px 36px;\r\n    background-color: #ffffff;\r\n  }\r\n\r\n  /deep/.fm-search__content {\r\n    background-color: #f7f6f9;\r\n    box-shadow: 0 0.10667rem 0.26667rem 0 rgb(104 115 127 / 20%);\r\n    border-radius: 0.21333rem;\r\n    height: 72px;\r\n  }\r\n}\r\n</style>\r\n"]}]}