{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\OneMap\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\OneMap\\index.vue","mtime":1705912915806},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/OneMap","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <fm-nav-bar>\r\n      <template #title>\r\n        <div class=\"top\">\r\n          <fm-tabs\r\n            v-model=\"selectedTab\"\r\n            @tab-click=\"changeType\"\r\n            type=\"card\"\r\n            color=\"#1B67D8\"\r\n          >\r\n            <fm-tab name=\"地图\" label=\"地图\"></fm-tab>\r\n            <fm-tab name=\"监测列表\" label=\"监测列表\"></fm-tab>\r\n          </fm-tabs>\r\n        </div>\r\n      </template>\r\n      <template #right>\r\n        <img\r\n          v-if=\"selectedTab == '地图'\"\r\n          style=\"height: 24px; position: absolute; right: 20px\"\r\n          :src=\"require('@/assets/img/map/right.png')\"\r\n          @click=\"showMapLegend\"\r\n        />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <xa-map\r\n      v-show=\"selectedTab == '地图'\"\r\n      :create=\"initScene\"\r\n      :legendConfig=\"legendConfig\"\r\n      @getDefaultBaseLayers=\"getDefaultBaseLayers\"\r\n      @getBaseLayerObject=\"getBaseLayerObject\"\r\n      @handleLayerClick=\"handleLayerClick\"\r\n    ></xa-map>\r\n    <mapTools ref=\"mapTools\" v-show=\"selectedTab == '地图'\"></mapTools>\r\n    <monitorList\r\n      ref=\"monitorList\"\r\n      v-if=\"selectedTab == '监测列表'\"\r\n    ></monitorList>\r\n    <PressureMonitorDetail\r\n      v-if=\"pressureMonitorShow && selectedTab == '地图'\"\r\n      :pressureDataDetail=\"pressureDataDetail\"\r\n      @closePopup_pressure=\"closePopup_pressure\"\r\n    >\r\n    </PressureMonitorDetail>\r\n    <LineDetail\r\n      v-if=\"pipelineShow && selectedTab == '地图'\"\r\n      :pipelineBaseInfo=\"pipelineBaseInfo\"\r\n      @closePopup_line=\"closePopup_line\"\r\n    >\r\n    </LineDetail>\r\n    <map-legend\r\n      :popupShow=\"popupShow\"\r\n      shape=\"rectangle\"\r\n      :data-source=\"legendList\"\r\n      :click-func=\"legendClick\"\r\n      @closePop=\"closePop\"\r\n      @legendTitleNameClick=\"legendTitleNameClick\"\r\n    ></map-legend>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapTools from './mapTools'\r\nimport monitorList from './monitorList'\r\nimport { addIconToMap } from '@/utils/mapUtils'\r\nimport { getAllEquipmentInformation } from './api'\r\nimport { bbox, center as getCenter } from '@turf/turf'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\n// 图例\r\nimport { defaltLegendList } from './defaltLegendList.js'\r\n// 压力监测点击弹窗\r\nimport PressureMonitorDetail from './components/PressureMonitorDetail.vue'\r\nimport LineDetail from './components/LineDetail.vue'\r\nimport MapLegend from './components/mapLegend.vue'\r\nimport { legendListImport } from './legendList'\r\n\r\nconst MapObj = {\r\n  map: null,\r\n  viewer: null,\r\n  popupItem: '', //mapbox气泡框\r\n  marker: '',\r\n  monitorPopups: [],\r\n  monitorPopupContent: [],\r\n}\r\nexport default {\r\n  name: 'OneMap',\r\n  components: {\r\n    mapTools,\r\n    monitorList,\r\n    PressureMonitorDetail,\r\n    LineDetail,\r\n    MapLegend,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedTab: '地图',\r\n      popupShow: false,\r\n      legendList: legendListImport,\r\n      pressureMonitorShow: false, // 压力监测详情面板显隐\r\n      pipelineShow: false, // 管线详情面板显隐\r\n      pressureDataDetail: {}, // 压力监测详情面板基础信息\r\n      pipelineBaseInfo: {}, // 管线详情面板基础信息\r\n      layerID: '',\r\n      legendConfig: [],\r\n      icons: [\r\n        {\r\n          name: '压力监测(供)*',\r\n          url: require('@/assets/img/map/压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线供',\r\n          url: require('@/assets/img/map/压力离线供地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警供',\r\n          url: require('@/assets/img/map/压力报警供地图.png'),\r\n        },\r\n        {\r\n          name: '泵站',\r\n          url: require('@/assets/img/map/pump.png'),\r\n        },\r\n        {\r\n          name: '再生水厂',\r\n          url: require('@/assets/img/map/再生水厂地图.png'),\r\n        },\r\n        {\r\n          name: '供水厂',\r\n          url: require('@/assets/img/map/供水厂地图.png'),\r\n        },\r\n        {\r\n          name: '给水加压泵站',\r\n          url: require('@/assets/img/map/给水加压泵站地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测(再生)*',\r\n          url: require('@/assets/img/map/再生水压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线再生',\r\n          url: require('@/assets/img/map/压力离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警再生',\r\n          url: require('@/assets/img/map/压力报警再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(供)*',\r\n          url: require('@/assets/img/map/流量计地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线供',\r\n          url: require('@/assets/img/map/流量离线供地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警供',\r\n          url: require('@/assets/img/map/流量报警供地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(再生)*',\r\n          url: require('@/assets/img/map/流量计再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线再生',\r\n          url: require('@/assets/img/map/流量离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警再生',\r\n          url: require('@/assets/img/map/流量报警再生地图.png'),\r\n        },\r\n        // {\r\n        //   name: \"提标改造给水厂\",\r\n        //   url: require(\"@/assets/img/map/提标改造给水厂.png\"),\r\n        // },\r\n        // {\r\n        //   name: \"规划新建给水厂\",\r\n        //   url: require(\"@/assets/img/map/规划新建给水厂.png\"),\r\n        // },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    legendClick(e, item, id) {\r\n      if (typeof item.id == 'number') {\r\n        this.$notify({\r\n          type: 'warning',\r\n          message: '当前图层暂无数据！',\r\n        })\r\n        return\r\n      }\r\n      item.clickFlag = !item.clickFlag\r\n      this.legendControlLayer(item)\r\n    },\r\n    legendControlLayer(item) {\r\n      let map = window.xaMap\r\n      if (map.getLayer(item.id)) {\r\n        if (item.clickFlag) {\r\n          map.setLayoutProperty(item.id, 'visibility', 'none')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ws_big',\r\n                  'visibility'\r\n                ) == 'none'\r\n              ) {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            //雨水管线图层控制雨水井、雨水箭头、雨水较小层级图层显示\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'none')\r\n\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_big_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            //循环水（回水）管线控制循环水（回水）节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_circulating',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            //配水管线控制配水节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_distribute',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            //输水管线控制输水节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_delivery',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            //再生水管线控制再生水节点显示\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'none')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            //污水管线图层控制污水井、污水箭头、污水较小层级图层显示\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ys_big',\r\n                  'visibility'\r\n                ) == 'none'\r\n              ) {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_big_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            //   \"压力监测-报警\",\r\n            //   \"visibility\",\r\n            //   \"none\"\r\n            // );\r\n          }\r\n        } else {\r\n          map.setLayoutProperty(item.id, 'visibility', 'visible')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ws_big',\r\n                  'visibility'\r\n                ) != 'none'\r\n              ) {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'visible')\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_big_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_circulating',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_distribute',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_delivery',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'visible')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ys_big',\r\n                  'visibility'\r\n                ) != 'none'\r\n              ) {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_big_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_manhole', 'visibility', 'visible')\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            //   \"压力监测-报警\",\r\n            //   \"visibility\",\r\n            //   \"visible\"\r\n            // );\r\n          }\r\n        }\r\n      }\r\n    },\r\n    legendTitleNameClick(legendTitleName) {\r\n      this.legendList.forEach((item) => {\r\n        if (item.label === legendTitleName) {\r\n          item.titleStatus = !item.titleStatus\r\n          //\r\n          item.options.forEach((smallItem) => {\r\n            // 当该标题下图层内容为显示状态时才进入判断\r\n            if (item.titleStatus === true && typeof smallItem.id == 'number') {\r\n              setTimeout(() => {\r\n                this.$notify({\r\n                  type: 'warning',\r\n                  message: smallItem.label + '图层暂无数据！',\r\n                })\r\n              }, 0)\r\n              return\r\n            }\r\n            if (item.titleStatus === true) {\r\n              // 标题状态点亮时\r\n              smallItem.clickFlag = false // 图层均显示\r\n            } else {\r\n              smallItem.clickFlag = true // 图层均隐藏\r\n            }\r\n            this.legendControlLayer(smallItem)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    closePop(val) {\r\n      this.popupShow = val\r\n    },\r\n    showMapLegend() {\r\n      this.popupShow = true\r\n    },\r\n    // tab切换回调\r\n    changeType(name, title) {\r\n      // Toast.loading({\r\n      //   message: '加载中...',\r\n      //   forbidClick: true,\r\n      //   duration: 0\r\n      // })\r\n      this.selectedTab = name\r\n    },\r\n    getDefaultBaseLayers(layers) {\r\n      this.$refs.mapTools.getDefaultBaseLayers(layers)\r\n    },\r\n    getBaseLayerObject(layers) {\r\n      this.$refs.mapTools.getBaseLayerObject(layers)\r\n    },\r\n    /**初始化地图事件 */\r\n    async initScene() {\r\n      this.legendConfig = defaltLegendList\r\n      // this.rebuildLegendList = legendList\r\n      MapObj.map = window.xaMap\r\n      await addIconToMap(MapObj.map, this.icons)\r\n      // 添加压力监测设备点\r\n      this.getPressurePoint()\r\n    },\r\n    // 压力监测设备添加图标\r\n    async getPressurePoint() {\r\n      let params = {\r\n        deviceType: '',\r\n      }\r\n      let arr = []\r\n      let flowArr = [] //流量计\r\n      let supplyFlowArr = [] //供水流量计\r\n      let recycleFlowArr = [] //再生水流量计\r\n      let pressureArr = []\r\n      let supplyPressureArr = [] //供水压力计\r\n      let recyclePressureArr = [] //再生水压力\r\n      // 获取所有监测设备基础信息\r\n      await getAllEquipmentInformation(params).then((res) => {\r\n        if (res.data && res.data.length > 0) {\r\n          arr = res.data\r\n          flowArr = arr.filter((item) => {\r\n            return item.deviceType == 'Flowmeter'\r\n          })\r\n          supplyFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recycleFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          pressureArr = arr.filter((item) => {\r\n            return item.deviceType == 'IVTM'\r\n          })\r\n          supplyPressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recyclePressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          this.addYourLayer(\r\n            supplyFlowArr,\r\n            '流量计(供)*',\r\n            '流量离线供',\r\n            '流量报警供'\r\n          )\r\n          this.addYourLayer(\r\n            recycleFlowArr,\r\n            '流量计(再生)*',\r\n            '流量离线再生',\r\n            '流量报警再生'\r\n          )\r\n          this.addYourLayer(\r\n            supplyPressureArr,\r\n            '压力监测(供)*',\r\n            '压力监测离线供',\r\n            '压力监测报警供'\r\n          )\r\n          this.addYourLayer(\r\n            recyclePressureArr,\r\n            '压力监测(再生)*',\r\n            '压力监测离线再生',\r\n            '压力监测报警再生'\r\n          )\r\n        }\r\n      })\r\n      // let params1 = {\r\n      //   deviceType: \"ZJIVTM\",\r\n      // }\r\n      // await getAllEquipmentInformation(params1).then((res) => {\r\n      //   if (res.data && res.data.length > 0) {\r\n      //     arr = arr.concat(res.data)\r\n      //   }\r\n      // });\r\n      // this.addYourLayer(arr, \"压力监测\");\r\n    },\r\n    // 在地图上添加图标图层\r\n    addYourLayer(pointList, id, offlineImageId, warnImageId) {\r\n      let visibility = 'visible'\r\n      if (id == '压力监测(供)*') {\r\n        visibility = 'visible'\r\n      } else {\r\n        visibility = 'none'\r\n      }\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: pointList.map((i) => {\r\n          return {\r\n            type: 'Feature',\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: [i.lon, i.lat],\r\n            },\r\n            properties: i,\r\n          }\r\n        }),\r\n      }\r\n      if (window.xaMap.getSource(id)) {\r\n        window.xaMap.getSource(id).setData(sourceData)\r\n        return\r\n      }\r\n      window.xaMap.addLayer(\r\n        {\r\n          id: id,\r\n          type: 'symbol',\r\n          source: {\r\n            type: 'geojson',\r\n            data: sourceData,\r\n          },\r\n          layout: {\r\n            'icon-image': [\r\n              'case',\r\n              [\r\n                'all',\r\n                ['==', ['get', 'iotOnline'], '0'],\r\n                ['!=', ['get', 'isWarn'], '1'],\r\n              ],\r\n              id,\r\n              ['==', ['get', 'iotOnline'], '1'],\r\n              offlineImageId,\r\n              [\r\n                'all',\r\n                ['==', ['get', 'iotOnline'], '0'],\r\n                ['==', ['get', 'isWarn'], '1'],\r\n              ],\r\n              warnImageId,\r\n              id,\r\n            ],\r\n            'icon-size': 0.7,\r\n            // 图标强制全部显示\r\n            'icon-ignore-placement': true,\r\n            visibility: visibility,\r\n          },\r\n          minzoom: 13,\r\n        },\r\n        ''\r\n      )\r\n      let obj = {}\r\n      obj[id] = pointList\r\n      MapObj.monitorPopupContent.push(obj)\r\n      // window.xaMap.on(\"mouseenter\", id, this.handleMouseEnter);\r\n      // window.xaMap.on(\"mouseout\", id, this.handleMouseOut);\r\n      window.xaMap.on('click', id, this.handleMouseClick)\r\n      // window.xaMap.on(\"load\", () => {\r\n      //   window.xaMap.moveLayer(\"压力监测\", \"\");\r\n      // });\r\n    },\r\n    // 鼠标点击\r\n    handleMouseClick(e) {\r\n      const feature = e.features[0]\r\n      window.xaMap.getCanvas().style.cursor = 'pointer'\r\n      // 管线详情面板关闭\r\n      this.pipelineShow = false\r\n      // 赋值传递给详情面板PressureMonitor.vue\r\n      this.pressureDataDetail = _cloneDeep(feature.properties)\r\n      this.pressureDataDetail.realtimeData = JSON.parse(\r\n        feature.properties.realtimeData\r\n      )\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = true\r\n    },\r\n    // 管线...点击\r\n    handleLayerClick(e) {\r\n      window.xaMap.getCanvas().style.cursor = 'pointer'\r\n      const feature = window.xaMap.queryRenderedFeatures(e.point)[0]\r\n      this.layerID = feature.layer.id\r\n      // this.rebuildDetailInfo(feature);\r\n\r\n      const type = feature.geometry.type\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: [feature],\r\n      }\r\n      let center = getCenter(sourceData).geometry.coordinates\r\n      this.highlightOnMap(type, [feature], this.layerID, center)\r\n      if (\r\n        this.layerID === 'rd_map_drainpipe_ys_big' ||\r\n        this.layerID == 'rd_map_drainpipe_ys_small' ||\r\n        this.layerID === 'rd_map_drainpipe_ws_big' ||\r\n        this.layerID == 'rd_map_drainpipe_ws_small' ||\r\n        this.layerID == 'map_supply_pipe_distribute' ||\r\n        this.layerID == 'map_supply_pipe_circulating' ||\r\n        this.layerID == 'map_supply_pipe_delivery' ||\r\n        this.layerID == 'map_recycle_pipe'\r\n      ) {\r\n        // 压力监测详情面板关闭\r\n        this.pressureMonitorShow = false\r\n        // 管线弹窗打开\r\n        this.pipelineShow = true\r\n        this.pipelineBaseInfo = feature.properties\r\n      } else {\r\n        // 管线弹窗关闭\r\n        this.pipelineShow = false\r\n      }\r\n    },\r\n    /**\r\n     * 高亮选中的元素\r\n     */\r\n    highlightOnMap(type, features, layerID, lngLat) {\r\n      if (layerID) this.layerID = layerID\r\n      this.removeAllHighlightLayer()\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: features,\r\n      }\r\n      const bound = bbox(sourceData)\r\n      const center = lngLat\r\n        ? lngLat\r\n        : getCenter(sourceData).geometry.coordinates\r\n      // window.xaMap.fitBounds(bound, { maxZoom: 12, padding: { right: 400 } });\r\n      // this.showPopup(center, features);\r\n      this.$nextTick(() => {\r\n        if (['Point', 'MultiPoint'].includes(type)) {\r\n          // 点\r\n          if (features[0].layer && features[0].layer.layout['icon-image']) {\r\n            const iconName =\r\n              features[0].layer.layout['icon-image']?.name ||\r\n              features[0].layer.layout['icon-image']\r\n            const iconsize = features[0].layer.layout['icon-size']\r\n            this.removeLayerSource('hightlightPoint')\r\n            // if(this.mouseEnterCallback) this.mouseEnterCallback(e.lngLat, [feature]);\r\n            window.xaMap.addLayer({\r\n              id: 'hightlightPoint',\r\n              type: 'symbol',\r\n              source: {\r\n                type: 'geojson',\r\n                data: features[0],\r\n              },\r\n              layout: {\r\n                'icon-size': iconsize * 1.4,\r\n                'icon-image': iconName,\r\n              },\r\n            })\r\n          } else {\r\n            window.xaMap.addLayer({\r\n              id: `hightlightPoint`,\r\n              type: 'circle',\r\n              source: {\r\n                type: 'geojson',\r\n                data: sourceData,\r\n              },\r\n              paint: {\r\n                'circle-color': 'red',\r\n                'circle-opacity': 0,\r\n                'circle-radius': 6,\r\n                'circle-stroke-color': '#1D75FF',\r\n                'circle-stroke-opacity': 1,\r\n                'circle-stroke-width': 3,\r\n              },\r\n              // layout: {\r\n              //   'icon-image': 'uncured-pulsing-dot',\r\n              //   'icon-ignore-placement': true,\r\n              //   'icon-allow-overlap': true\r\n              // },\r\n            })\r\n          }\r\n          this.$store.commit('SHOW_MAPRESERVOIR', false)\r\n        } else if (['LineString', 'MultiLineString'].includes(type)) {\r\n          let color = '#91510A'\r\n          if (layerID == 'rd_map_drainpipe_ys_small') {\r\n            color = '#399AEA'\r\n          } else if (layerID == 'rd_map_drainpipe_ws_small') {\r\n            color = '#91510A'\r\n          } else {\r\n            defaltLegendList.forEach((legend) => {\r\n              if (legend.id == layerID) {\r\n                color = legend.clickColor\r\n              }\r\n            })\r\n          }\r\n          // 线\r\n          window.xaMap.addLayer({\r\n            id: `hightlightLine`,\r\n            type: 'line',\r\n            source: {\r\n              type: 'geojson',\r\n              data: sourceData,\r\n            },\r\n            paint: {\r\n              'line-color': color,\r\n              'line-width': 8,\r\n            },\r\n            // layout: {\r\n            //   'icon-image': 'uncured-pulsing-dot',\r\n            //   'icon-ignore-placement': true,\r\n            //   'icon-allow-overlap': true\r\n            // },\r\n          })\r\n          // window.xaMap.fitBounds(bound, {maxZoom: 15, padding: {right: 400}});\r\n        } else if (['Polygon', 'MultiPolygon'].includes(type)) {\r\n          // 面\r\n          window.xaMap.addLayer({\r\n            id: `hightlightPolygon`,\r\n            type: 'fill',\r\n            source: {\r\n              type: 'geojson',\r\n              data: sourceData,\r\n            },\r\n            paint: {\r\n              'fill-color': 'rgba(255, 0, 0, 0.6)',\r\n            },\r\n            // layout: {\r\n            //   'icon-image': 'uncured-pulsing-dot',\r\n            //   'icon-ignore-placement': true,\r\n            //   'icon-allow-overlap': true\r\n            // },\r\n          })\r\n          // window.xaMap.fitBounds(bound, {maxZoom: 15, padding: {right: 400}});\r\n        }\r\n      })\r\n    },\r\n    removeAllHighlightLayer(e) {\r\n      this.removeLayerSource('hightlightPoint')\r\n      this.removeLayerSource('hightlightLine')\r\n      this.removeLayerSource('hightlightPolygon')\r\n    },\r\n    /**\r\n     * 清空临时的图层和源\r\n     */\r\n    removeLayerSource(name) {\r\n      if (window.xaMap.getLayer(`${name}`)) window.xaMap.removeLayer(`${name}`)\r\n      if (window.xaMap.getSource(`${name}`))\r\n        window.xaMap.removeSource(`${name}`)\r\n    },\r\n    // 压力监测详情面板PressureMonitor.vue关闭按钮回调\r\n    closePopup_pressure() {\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = false\r\n    },\r\n    //关闭管线弹窗\r\n    closePopup_line() {\r\n      this.pipelineShow = false\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.main {\r\n  width: 100%;\r\n  height: calc(100% - 98px - env(safe-area-inset-bottom));\r\n  height: calc(100% - 98px - constant(safe-area-inset-bottom));\r\n  position: relative;\r\n  .top {\r\n    width: 100%;\r\n    height: 70px;\r\n    padding: 10px 0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /deep/.fm-tabs__nav--card {\r\n      border-color: transparent !important;\r\n    }\r\n    /deep/.fm-tab {\r\n      color: #555555 !important;\r\n      width: 202px;\r\n      height: 56px;\r\n      box-shadow: 0px 8px 16px 0px rgba(104, 115, 127, 0.06);\r\n      border-radius: 32px;\r\n      border-right: none !important;\r\n      background-color: #f5f5f5;\r\n    }\r\n    /deep/.fm-tab--active {\r\n      color: #ffffff !important;\r\n      width: 202px;\r\n      height: 56px;\r\n      border-radius: 32px;\r\n    }\r\n  }\r\n}\r\n</style>"]}]}