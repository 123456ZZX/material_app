{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\Inspection\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\Inspection\\index.vue","mtime":1708928163380},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqfile":"index.vue","sourceRoot":"src/views/Inspection","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <img :src=\"require('@/assets/img/blueBg.png')\" class=\"main-bg\" />\r\n    <fm-nav-bar title=\"巡检任务\" left-arrow @click-left=\"$router.go(-1)\"></fm-nav-bar>\r\n    <div class=\"content\">\r\n      <img :src=\"bgSrc\" class=\"bgImg\"\r\n        :class=\"selectedTab == '执行中' ? 'left' : selectedTab == '未巡检' ? 'middle' : 'right'\" />\r\n      <fm-tabs v-model=\"selectedTab\" @tab-click=\"changeType\" line-width=\"60px\">\r\n        <fm-tab name=\"执行中\" :label=\"working\"></fm-tab>\r\n        <fm-tab name=\"未巡检\" :label=\"notStart\"></fm-tab>\r\n        <fm-tab name=\"已完成\" :label=\"workDone\"></fm-tab>\r\n      </fm-tabs>\r\n      <!-- 选择框 -->\r\n      <div class=\"selectStyle\">\r\n        <Select :selectData=\"inspDateTypeList\" :selValue=\"dateType\" color=\"white\" @getValue=\"getValue\"></Select>\r\n        <Select :selectData=\"inspTaskTypeList\" :selValue=\"inspTaskType\" color=\"white\" @getValue=\"getValue\"></Select>\r\n      </div>\r\n      <div class=\"main-container\">\r\n        <template>\r\n          <!-- 下拉刷新 -->\r\n          <fm-pull-refresh v-model=\"refreshing\" success-text=\"刷新成功\" @refresh=\"onRefresh\">\r\n            <!-- 无数据 -->\r\n            <template v-if=\"taskList.length == 0 && !loading\">\r\n              <div class=\"no-data-img\">\r\n                <fm-image fit=\"cover\" :src=\"require('@/assets/img/no-data-img.png')\" />\r\n              </div>\r\n              <div class=\"no-data-text\">\r\n                <div class=\"no-data-text-descripe\">暂无数据</div>\r\n              </div>\r\n            </template>\r\n            <!-- 列表 -->\r\n            <fm-list v-else v-model=\"loading\" :finished=\"finished\" finished-text=\"没有更多了\" @load=\"onLoad\" :offset=\"0\">\r\n              <div>\r\n                <div v-for=\"(item, index) in taskList\" :key=\"index\">\r\n                  <!-- 执行中卡片 -->\r\n                  <InfoCardWorking :cardInfo=\"item\" @execute=\"execute\" v-if=\"selectedTab == '执行中'\"></InfoCardWorking>\r\n                  <!-- 未巡检卡片 -->\r\n                  <InfoCardNotAndDone :cardInfo=\"item\" cardType=\"not\" @transmitEvent=\"transmitEvent\"\r\n                    v-else-if=\"selectedTab == '未巡检'\" @startEvent=\"startEvent\"></InfoCardNotAndDone>\r\n                  <!-- 已完成卡片 -->\r\n                  <InfoCardNotAndDone :cardInfo=\"item\" cardType=\"done\" @execute=\"handleView\" v-else>\r\n                  </InfoCardNotAndDone>\r\n                </div>\r\n              </div>\r\n            </fm-list>\r\n          </fm-pull-refresh>\r\n        </template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  NavBar,\r\n  Search,\r\n  Toast,\r\n  Cell,\r\n  CellGroup,\r\n  PullRefresh,\r\n  List,\r\n  Sidebar,\r\n  SidebarItem,\r\n  SwipeCell,\r\n  Button,\r\n  NoticeBar,\r\n  Icon,\r\n  Dialog,\r\n} from 'fawkes-mobile-lib'\r\n// 执行中信息卡片\r\nimport InfoCardWorking from './InfoCardWorking.vue'\r\n// 未巡检、已完成信息卡片\r\nimport InfoCardNotAndDone from './InfoCardNotAndDone.vue'\r\n// 下拉选择框\r\nimport Select from './Select.vue'\r\nimport { queryTaskList } from './api'\r\n\r\nexport default {\r\n  name: 'Inspection',\r\n  components: {\r\n    [NavBar.name]: NavBar,\r\n    [Search.name]: Search,\r\n    [Toast.name]: Toast,\r\n    [Cell.name]: Cell,\r\n    [CellGroup.name]: CellGroup,\r\n    [PullRefresh.name]: PullRefresh,\r\n    [List.name]: List,\r\n    [Sidebar.name]: Sidebar,\r\n    [SidebarItem.name]: SidebarItem,\r\n    [SwipeCell.name]: SwipeCell,\r\n    [Button.name]: Button,\r\n    [NoticeBar.name]: NoticeBar,\r\n    [Icon.name]: Icon,\r\n    [Dialog.name]: Dialog,\r\n    InfoCardWorking,\r\n    InfoCardNotAndDone,\r\n    Select,\r\n  },\r\n  data() {\r\n    return {\r\n      taskList: [],\r\n      activeKey: 0,\r\n      searchValue: '', // 搜索文字\r\n      tabs: ['执行中', '未巡检', '已完成'],\r\n      pageSize: 10,\r\n      refreshing: false, // 下拉刷新是否处于加载中状态，下拉时组件会自动设置true\r\n      loading: false, // 列表加载更多时控制加载状态，加载时组件会自动设置为true，加载完成后需手动设置为false\r\n      finished: false, // 列表加载更多时控制加载状态，全部加载完成时需设置为true\r\n      currentRate: 0,\r\n      inspDateTypeList: [\r\n        { type: 1, name: '全部时间', value: '全部时间' },\r\n        { type: 1, name: '近一周', value: '近一周' },\r\n        { type: 1, name: '近一月', value: '近一月' },\r\n        { type: 1, name: '近三月', value: '近三月' },\r\n      ],\r\n      inspTaskTypeList: [\r\n        { type: 2, name: '全部类型', value: '全部类型' },\r\n        { type: 2, name: '人巡', value: '人巡' },\r\n        { type: 2, name: '车辆巡检', value: '车巡' },\r\n        { type: 2, name: '管廊巡检', value: '管廊巡检' },\r\n        { type: 2, name: '泵站巡检', value: '泵站巡检' },\r\n      ],\r\n      dateType: '全部时间',\r\n      inspTaskType: '全部类型',\r\n      // tab切换标题\r\n      selectedTab: '执行中',\r\n      working: '执行中',\r\n      notStart: '未巡检',\r\n      workDone: '已完成',\r\n      toast: null\r\n    }\r\n  },\r\n  created() {\r\n    // 初始化下拉框\r\n    this.dateType = this.inspDateTypeList[0].value\r\n    this.inspTaskType = this.inspTaskTypeList[0].value\r\n  },\r\n  mounted() {\r\n    this.toast = Toast.loading({\r\n      message: '加载中...',\r\n      forbidClick: true,\r\n      duration: 0\r\n    })\r\n    this.onRefresh()\r\n  },\r\n  computed: {\r\n    bgSrc() {\r\n      let src = ''\r\n      switch (this.selectedTab) {\r\n        case '执行中':\r\n          src = require('@/assets/img/selectLeftBg.png')\r\n          break;\r\n\r\n        case '已完成':\r\n          src = require('@/assets/img/selectRightBg.png')\r\n          break;\r\n\r\n        case '未巡检':\r\n          src = require('@/assets/img/selectBg.png')\r\n          break;\r\n\r\n        default:\r\n          src = require('@/assets/img/selectLeftBg.png')\r\n          break;\r\n      }\r\n      return src\r\n    },\r\n    text() {\r\n      return this.currentRate.toFixed(0) + '%'\r\n    },\r\n  },\r\n  methods: {\r\n    // select框选择回调\r\n    getValue(type, name, value) {\r\n      if (type === 1) {\r\n        this.dateType = value\r\n      } else if (type === 2) {\r\n        this.inspTaskType = value\r\n      }\r\n      this.toast = Toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0\r\n      })\r\n      this.onRefresh()\r\n    },\r\n    // 重置列表page,list值\r\n    pageReset() {\r\n      this.pageNum = 1\r\n      this.taskList = []\r\n    },\r\n    // tab切换回调\r\n    changeType(name, title) {\r\n      this.toast = Toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0\r\n      })\r\n      this.selectedTab = name\r\n      this.onRefresh()\r\n    },\r\n    onClear() {\r\n      // 复用刷新接口\r\n      // this.searchParams.reimburseName = ''\r\n      this.onRefresh()\r\n    },\r\n    // 搜索\r\n    onSearch(val) {\r\n      // this.searchParams.reimburseName = val\r\n      // 复用刷新接口\r\n      this.onRefresh()\r\n    },\r\n    // 页面加载/下拉刷新\r\n    onRefresh() {\r\n      this.pageReset()\r\n      this.loading = true\r\n      this.finished = false\r\n      this.getList()\r\n    },\r\n    // 列表加载更多\r\n    onLoad() {\r\n      this.pageNum = this.pageNum + 1\r\n      this.getList()\r\n    },\r\n    // 获取列表数据\r\n    getList() {\r\n      let startTime = ''\r\n      switch (this.dateType) {\r\n        case '近一周':\r\n          startTime = this.$dayjs().subtract(7, 'day').format('YYYY-MM-DD HH:mm:ss')\r\n          break;\r\n        case '近一月':\r\n          startTime = this.$dayjs().subtract(1, 'month').format('YYYY-MM-DD HH:mm:ss')\r\n          break;\r\n        case '近三月':\r\n          startTime = this.$dayjs().subtract(3, 'month').format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        default:\r\n          startTime = ''\r\n          break\r\n      }\r\n      let searchParams = {\r\n        page: this.pageNum,\r\n        size: this.pageSize,\r\n        taskStartTime: startTime,\r\n        taskEndTime: this.$dayjs().format('YYYY-MM-DD HH:mm:ss')\r\n      }\r\n      if (this.inspTaskType != '全部类型') {\r\n        searchParams.taskType = this.inspTaskType\r\n      }\r\n      switch (this.selectedTab) {\r\n        case '执行中':\r\n          searchParams.taskStatus = '1'\r\n          break\r\n        case '未巡检':\r\n          searchParams.taskStatus = '0'\r\n          break\r\n        case '已完成':\r\n          searchParams.taskStatus = '2'\r\n          break\r\n        default:\r\n          searchParams.taskStatus = '1'\r\n          break\r\n      }\r\n      queryTaskList(searchParams)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            console.log('巡检任务', res);\r\n            this.taskList = [...this.taskList, ...res.data.records]\r\n            console.log('this.taskList: ', this.taskList);\r\n            // this.taskList.push(JSON.parse(JSON.stringify(this.taskList[0])))\r\n            // this.taskList[this.taskList.length - 1].taskType = '管廊'\r\n            // this.taskList.push({\r\n            //   id:'122333',\r\n            //   taskType: '管廊',\r\n            //   taskName: '2023年2月管廊巡检',\r\n            //   taskEndTime: \"2023-02-28 12:00:00\",\r\n            // })\r\n            if (res.data.current >= res.data.pages) {\r\n              this.finished = true\r\n            }\r\n            this.refreshing = false\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.finished = true\r\n        })\r\n        .finally(() => {\r\n          this.toast.close()\r\n          this.toast = null\r\n          this.loading = false\r\n        })\r\n    },\r\n    /*打开新增页面*/\r\n    add() {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: { type: 'add' }\r\n      })\r\n    },\r\n\r\n    /*已完成任务，打开任务查看页面*/\r\n    handleView(item) {\r\n      if (item.taskType === '人巡' || item.taskType === '车巡') {\r\n        this.$router.push({\r\n          name: 'InspectionManage',\r\n          query: {\r\n            isView: true,\r\n            taskId: item.id,\r\n            taskType: item.taskType\r\n          },\r\n        })\r\n        return\r\n      }\r\n      if (item.taskType === '管廊' || item.taskType === '管廊巡检') {\r\n        // 任务数据存储在本地，避免数据缺失\r\n        localStorage.setItem('galleryTaskData', null)\r\n        localStorage.setItem('galleryTaskData', JSON.stringify(item))\r\n        // 已完成的管廊巡检任务，点进去，不是进入GalleryInspection，\r\n        // 而是直接进入StartGalleryInspection，同时用 isView 控制一些按钮可点击状态\r\n        this.$router.push({\r\n          name: 'StartGalleryInspection',\r\n          query: {\r\n            isView: true,\r\n          },\r\n        })\r\n      }\r\n    },\r\n    // 转发\r\n    transmitEvent(item) {\r\n      console.log(item)\r\n    },\r\n    // 开始\r\n    // 对于未巡检的任务第一次进入巡检任务需要更新任务状态\r\n    startEvent(item) {\r\n      this.execute(item, true)\r\n    },\r\n    //执行\r\n    execute(item, isNew = false) {\r\n      if (item.taskType === '人巡' || item.taskType === '车巡') {\r\n        this.$router.push({\r\n          name: 'InspectionManage',\r\n          query: {\r\n            name: '执行',\r\n            taskId: item.id,\r\n            isNew: isNew,\r\n            taskType: item.taskType\r\n          },\r\n        })\r\n        return\r\n      }\r\n      if (item.taskType === '管廊' || item.taskType === '管廊巡检') {\r\n        // 任务数据存储在本地，避免数据缺失\r\n        localStorage.setItem('galleryTaskData', null)\r\n        localStorage.setItem('galleryTaskData', JSON.stringify(item))\r\n        this.$router.push({\r\n          name: 'GalleryInspection',\r\n        })\r\n      }\r\n    },\r\n\r\n    /*打开编辑*/\r\n    handleEdit(row) {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: {\r\n          type: 'edit',\r\n          id: row.id,\r\n        },\r\n      })\r\n    },\r\n    /*打开编辑*/\r\n    handleDelete(row) {\r\n      Dialog.confirm({\r\n        title: '提示',\r\n        message: '确认是否删除?',\r\n      })\r\n        .then(() => {\r\n          let idList = []\r\n          idList.push(row.id)\r\n\r\n          deleteCommonForm(idList).then((res) => {\r\n            if (res.status) {\r\n              Toast('删除成功')\r\n              this.onRefresh()\r\n            } else {\r\n              Toast(res.message)\r\n            }\r\n          })\r\n        })\r\n        .catch(() => { })\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n// ecf4ff\r\n//隐藏滚动条\r\n&::-webkit-scrollbar {\r\n  display: none; //Chrome | Safari\r\n}\r\n\r\n.main {\r\n  background-color: #055ffc !important;\r\n  height: 100%;\r\n\r\n  .main-bg {\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  .content {\r\n    margin-top: 40px;\r\n    position: relative;\r\n    background: #d4e8fc;\r\n    height: calc(100% - 46px);\r\n    width: 100%;\r\n    border-top-left-radius: 24px;\r\n    border-top-right-radius: 24px;\r\n\r\n    .bgImg {\r\n      position: absolute;\r\n      height: 100px;\r\n      z-index: 1;\r\n      top: -20px;\r\n    }\r\n\r\n    .middle {\r\n      left: 240px;\r\n    }\r\n\r\n    .right {\r\n      right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// 顶部标题背景色\r\n/deep/.fm-nav-bar__content {\r\n  background-color: transparent;\r\n}\r\n\r\n/deep/.fm-hairline--bottom::after {\r\n  border-bottom-width: 0;\r\n}\r\n\r\n/deep/.fm-nav-bar__title {\r\n  color: #FFFFFF !important;\r\n}\r\n\r\n// tab切换栏\r\n// 更改背景色\r\n/deep/.fm-tabs__nav--line {\r\n  background-color: #d4e8fc;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  border-top-left-radius: 24px;\r\n  border-top-right-radius: 24px;\r\n}\r\n\r\n/deep/.fm-nav-bar {\r\n  background: transparent;\r\n}\r\n\r\n/deep/ .fm-nav-bar .fm-icon {\r\n  color: #FFFFFF !important;\r\n}\r\n\r\n// 每个tab高度变低\r\n/deep/.fm-tab {\r\n  line-height: 72px;\r\n  // height: 80%;\r\n  // border-radius: 20px 20px 0px 0px;\r\n  // // background-image: linear-gradient(40deg, #99cc33, #ff6666, #336699, #ff0033);\r\n  // background-image: linear-gradient(180deg, #d0e7ff, #d3e8fe, #dbebff, #ecf4ff);\r\n}\r\n\r\n// 取消选中横条\r\n/deep/.fm-tabs__line {\r\n  width: 0 !important;\r\n}\r\n\r\n// 选中效果\r\n/deep/.fm-tab--active {\r\n  // 梯形样式\r\n  // height: 0;\r\n  // width: 100px;\r\n  // border-width: 0 20px 90px 20px;\r\n  // border-style: none solid solid;\r\n  // border-color: transparent transparent rgb(141, 247, 155);\r\n\r\n  // height: 100%;\r\n  font-size: 32px;\r\n  font-family: PingFangSC-Semibold, PingFang SC;\r\n  font-weight: 600;\r\n  color: #191919;\r\n}\r\n\r\n// 选中tab的文字样式\r\n/deep/.fm-tab--active .fm-tab__text--ellipsis {\r\n  // margin-top: 90px;\r\n  z-index: 1;\r\n}\r\n\r\n// select选择框\r\n.selectStyle {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 690px;\r\n  margin: 24px auto 12px;\r\n}\r\n\r\n.main-container {\r\n  height: calc(100% - 208px);\r\n  overflow: auto;\r\n  background-color: #d4e8fc;\r\n}\r\n\r\n/* 暂无数据begin */\r\n.no-data-img {\r\n  margin: 200px 95px 0 95px;\r\n}\r\n\r\n.no-data-text {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data-text-descripe {\r\n  font-size: 32px;\r\n  font-weight: 400;\r\n  color: #999999;\r\n}\r\n\r\n/* 暂无数据end */\r\n/* 解决下拉时，数据和全部加载的提示文案超出列表元素不显示的问题 */\r\n/deep/ .fm-pull-refresh {\r\n  overflow: visible;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__content {\r\n  height: 88px;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__title {\r\n  font-size: 36px;\r\n  color: #FFFFFF !important;\r\n  font-weight: 600;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar .fm-icon {\r\n  color: #027aff !important;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__arrow {\r\n  font-size: 48px;\r\n}\r\n\r\n.fm-sidebar {\r\n  width: 100%;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  border-bottom: 2px solid #ebedf0;\r\n}\r\n\r\n.fm-cell::after {\r\n  border: none;\r\n}\r\n\r\n.fm-cell-group {\r\n  margin-top: 24px;\r\n}\r\n\r\n/deep/ .fm-swipe-cell__right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/deep/ .fm-button--square {\r\n  border-radius: 50%;\r\n  width: 106px;\r\n  height: 106px;\r\n  padding: 0;\r\n  margin-right: 20px;\r\n}\r\n\r\n.bottom {\r\n  position: fixed;\r\n  bottom: 24px;\r\n  right: 44px;\r\n  background-color: #027aff;\r\n  width: 102px;\r\n  height: 102px;\r\n  line-height: 102px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  z-index: 1000;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]}]}