{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MeterReading\\SurveyDetail.vue?vue&type=style&index=0&id=18fa93ed&lang=less&scoped=true","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MeterReading\\SurveyDetail.vue","mtime":1705912800041},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojU3VydmV5RGV0YWlsIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICBvdmVyZmxvdzogYXV0bzsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjRmZiAhaW1wb3J0YW50Ow0KDQogIC9kZWVwLyAuZm0tbmF2LWJhcl9fY29udGVudCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzA2NzZmZCAhaW1wb3J0YW50Ow0KICAgIGhlaWdodDogMS44cmVtOw0KICB9DQoNCiAgL2RlZXAvIC5mbS1uYXYtYmFyX190aXRsZSB7DQogICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDsNCiAgfQ0KDQogIC9kZWVwLyAuZm0tbmF2LWJhciAuZm0taWNvbiB7DQogICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDsNCiAgfQ0KDQogIC9kZWVwLyAuZm0tY2VsbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjRmZiAhaW1wb3J0YW50Ow0KICB9DQoNCiAgL2RlZXAvIC5mbS1kcm9wZG93bi1tZW51IHsNCiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNlY2Y0ZmYgIWltcG9ydGFudDsNCiAgfQ0KDQogIC9kZWVwLyAuZm0tZHJvcGRvd24tbWVudV9fYmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWNmNGZmICFpbXBvcnRhbnQ7DQogICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50Ow0KICB9DQoNCiAgL2RlZXAvIC5mbS1kcm9wZG93bi1tZW51X19pdGVtIHsNCiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQgIWltcG9ydGFudDsNCiAgfQ0KDQogIC5yaWdodEljb24gew0KICAgIGNvbG9yOiAjZmZmOw0KICAgIGZvbnQtc2l6ZTogNTVweDsNCiAgfQ0KDQogIC5idG4tZ3JvdXAgew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC13cmFwOiBub3dyYXA7DQogICAgbWFyZ2luOiAxNnB4IDE2cHggMjAwcHg7DQogIH0NCg0KICAuYm90dG9tIHsNCiAgICBwb3NpdGlvbjogZml4ZWQ7DQogICAgYm90dG9tOiAzMDBweDsNCiAgICByaWdodDogNDRweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDI3YWZmOw0KICAgIHdpZHRoOiAxMDJweDsNCiAgICBoZWlnaHQ6IDEwMnB4Ow0KICAgIGxpbmUtaGVpZ2h0OiAxMDJweDsNCiAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgY29sb3I6ICNmZmY7DQogICAgei1pbmRleDogMTAwMDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIH0NCn0NCg=="},{"version":3,"sources":["SurveyDetail.vue"],"names":[],"mappings":";AA8bA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SurveyDetail.vue","sourceRoot":"src/views/MeterReading","sourcesContent":["<template>\r\n  <div id='SurveyDetail'>\r\n    <fm-nav-bar title='用户详情' left-arrow @click-left=\"$router.replace('/TaskIndex')\">\r\n      <!--      <template #right>-->\r\n      <!--        <i class=\"fm-icon fm-icon-scan rightIcon\" @click=\"scan\"></i>-->\r\n      <!--      </template>-->\r\n    </fm-nav-bar>\r\n    <div class='mainContainer'>\r\n      <fm-form @submit='onSubmit'>\r\n        <fm-cell-group>\r\n          <fm-cell>\r\n            <fm-field v-model='userInfo.guestNo' name='客户号' label='客户号' :readonly='true' />\r\n            <fm-field v-model='userInfo.name' name='姓名' label='姓名' :readonly='true' />\r\n            <fm-field v-model='userInfo.phoneOne' name='电话' label='电话' :readonly='true' />\r\n            <fm-field v-model='userInfo.address' name='地址' label='地址' :readonly='true' />\r\n            <fm-field v-model='userInfo.company' name='分公司' label='分公司' :readonly='true' />\r\n            <fm-field v-model='userInfo.businessCompany' name='营业所' label='营业所' :readonly='true' />\r\n          </fm-cell>\r\n          <fm-cell>\r\n            <fm-field v-model='curMeterInfo.meterNum' name='表号' label='表号'>\r\n              <template #input>\r\n                <fm-dropdown-menu :modal='false'>\r\n                  <fm-dropdown-item v-model='curMeterCode' :options='meterCodeList' @change='changeMeterCode' />\r\n                </fm-dropdown-menu>\r\n              </template>\r\n            </fm-field>\r\n            <fm-field v-model='curMeterInfo.waterMeterBrand' name='品牌' label='品牌' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.bore' name='口径' label='口径' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.waterMeterType' name='类型' label='类型' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.usingWaterType' name='用水性质' label='用水性质' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.imeiNo' name='IMEI号' label='IMEI号' :readonly='true' />\r\n            <!--            <fm-field v-model=\"curMeterInfo.connectingWellNo\" name=\"接驳井编号\" label=\"接驳井编号\" :readonly=\"true\" />-->\r\n            <fm-field v-model='curMeterInfo.meterIndex' name='上次读数' label='上次读数' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.readingTime' name='上次抄表时间' label='上次抄表时间' :readonly='true' />\r\n            <fm-field name='是否异常' label='是否异常'>\r\n              <template #input>\r\n                <fm-radio-group v-model='curMeterInfo.state' direction='horizontal'>\r\n                  <fm-radio name='1'>是</fm-radio>\r\n                  <fm-radio name='0'>否</fm-radio>\r\n                </fm-radio-group>\r\n              </template>\r\n            </fm-field>\r\n            <fm-field v-model='curMeterInfo.unusualReason' name='异常原因' label='异常原因' required placeholder='请输入异常原因'\r\n                      v-show='curMeterInfo.state == 1' @change='changeMeterInfo' />\r\n          </fm-cell>\r\n        </fm-cell-group>\r\n        <div class='btn-group'>\r\n          <fm-button round block type='primary' native-type='submit' v-if='copyStatus != 2' :disabled='disableCommit'>\r\n            提交\r\n          </fm-button>\r\n          <fm-button round block type='primary' @click='save' v-if='copyStatus == 0'>暂存</fm-button>\r\n        </div>\r\n      </fm-form>\r\n    </div>\r\n    <!-- 增加按钮 -->\r\n    <!--    <div class=\"bottom\" @click=\"add\" v-if=\"curMeterInfo.state == 1\">-->\r\n    <!--      <i class=\"fm-icon fm-icon-plus\"></i>-->\r\n    <!--    </div>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  NavBar,\r\n  Cell,\r\n  Form,\r\n  Field,\r\n  RadioGroup,\r\n  Radio,\r\n  Notify,\r\n  Toast\r\n} from 'fawkes-mobile-lib'\r\nimport { queryTaskDetail, getDict, commitTask } from './api'\r\n\r\nexport default {\r\n  name: 'SurveyDetail',\r\n  components: {\r\n    [NavBar.name]: NavBar,\r\n    [Cell.name]: Cell,\r\n    [Form.name]: Form,\r\n    [Field.name]: Field,\r\n    [RadioGroup.name]: RadioGroup,\r\n    [Radio.name]: Radio,\r\n    [Notify.name]: Notify,\r\n    [Toast.name]: Toast\r\n  },\r\n  data() {\r\n    return {\r\n      copyStatus: '0',\r\n      bookCode: null,\r\n      planCode: null,\r\n      userInfo: {},\r\n      meterCodeList: [],\r\n      meterInfoList: [],\r\n      curMeterCode: '',\r\n      curMeterInfo: {},\r\n      //字典\r\n      companyDict: [],\r\n      businessCompanyDict: [],\r\n      waterTypeDict: [],\r\n      meterDict: [],\r\n      meterBrandDict: []\r\n    }\r\n  },\r\n  computed: {\r\n    disableCommit() {\r\n      let state = this.curMeterInfo.state\r\n      let cr = this.curMeterInfo.unusualReason\r\n      if (state == 1) {\r\n        if (cr == '' || cr == null || cr == undefined) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //扫描条形码\r\n    // scan() {\r\n    //   if (typeof yuanchu != 'undefined') {\r\n    //     yuanchu.scanner.openScanner((res) => {\r\n    //       if (res) {\r\n    //         console.log(res)\r\n    //         getTaskDetail(res.data.guestNo)\r\n    //       }\r\n    //     })\r\n    //   } else {\r\n    //   }\r\n    // },\r\n    getTaskDetail(guestNo) {\r\n      this.userInfo = {}\r\n      this.curMeterCode = ''\r\n      this.meterCodeList = []\r\n      this.curMeterInfo = {}\r\n      this.meterInfoList = []\r\n      queryTaskDetail({ guestNo }).then(async (res) => {\r\n        if (res.data) {\r\n          this.userInfo = res.data\r\n          this.userInfo.company = this.filterDict(\r\n            'revenue_company',\r\n            this.userInfo.company\r\n          )\r\n          this.userInfo.businessCompany = this.filterDict(\r\n            'place_of_business',\r\n            this.userInfo.businessCompany\r\n          )\r\n          let data = res.data.waterMeterList\r\n          if (data.length > 0) {\r\n            this.meterInfoList = data\r\n            this.curMeterInfo = data[0]\r\n            this.curMeterInfo.usingWaterType = this.filterDict(\r\n              'water_use_type',\r\n              this.curMeterInfo.usingWaterType\r\n            )\r\n            this.curMeterInfo.waterMeterType = this.filterDict(\r\n              'water_meter_type',\r\n              this.curMeterInfo.waterMeterType\r\n            )\r\n            this.curMeterInfo.waterMeterBrand = this.filterDict(\r\n              'water_meter_brand',\r\n              this.curMeterInfo.waterMeterBrand\r\n            )\r\n            this.curMeterCode = data[0].meterNum\r\n            data.forEach((item) => {\r\n              this.meterCodeList.push({\r\n                value: item.meterNum,\r\n                text: item.meterNum\r\n              })\r\n            })\r\n\r\n          }\r\n        }\r\n        this.$set(this.curMeterInfo, 'state', '0')\r\n        this.$set(this.curMeterInfo, 'unusualReason', '')\r\n      })\r\n    },\r\n    //暂存加载信息\r\n    getStagingDetail(guestNo) {\r\n      this.userInfo = {}\r\n      this.curMeterCode = ''\r\n      this.meterCodeList = []\r\n      this.curMeterInfo = {}\r\n      this.meterInfoList = []\r\n      queryTaskDetail({ guestNo }).then((res) => {\r\n        if (res.data) {\r\n          this.userInfo = res.data\r\n          this.userInfo.company = this.filterDict(\r\n            'revenue_company',\r\n            this.userInfo.company\r\n          )\r\n          this.userInfo.businessCompany = this.filterDict(\r\n            'place_of_business',\r\n            this.userInfo.businessCompany\r\n          )\r\n          let savedTasks = localStorage.getItem('savedTasks')\r\n          let allTask = savedTasks ? JSON.parse(savedTasks) : []\r\n          let curTask = allTask.filter((item) => {\r\n            return item.planCode == this.planCode\r\n          })\r\n          let data = curTask[0].paramList\r\n          if (data.length > 0) {\r\n            this.meterInfoList = data\r\n            this.curMeterInfo = data[0]\r\n            this.curMeterCode = data[0].meterNum\r\n            data.forEach((item) => {\r\n              this.meterCodeList.push({\r\n                value: item.meterNum,\r\n                text: item.meterNum\r\n              })\r\n            })\r\n          }\r\n        }\r\n\r\n      })\r\n    },\r\n    //点击水表编号切换水表\r\n    changeMeterCode(e) {\r\n      let arr = this.meterInfoList.filter((item) => {\r\n        return item.meterNum == this.curMeterCode\r\n      })\r\n      this.curMeterInfo = arr[0]\r\n      let state = this.curMeterInfo.state ? this.curMeterInfo.state : '0'\r\n      let unusualReason = this.curMeterInfo.unusualReason\r\n        ? this.curMeterInfo.unusualReason\r\n        : ''\r\n      this.$set(this.curMeterInfo, 'state', state)\r\n      this.$set(this.curMeterInfo, 'unusualReason', unusualReason)\r\n      this.curMeterInfo.usingWaterType = this.filterDict(\r\n        'water_use_type',\r\n        this.curMeterInfo.usingWaterType\r\n      )\r\n      this.curMeterInfo.waterMeterType = this.filterDict(\r\n        'water_meter_type',\r\n        this.curMeterInfo.waterMeterType\r\n      )\r\n      this.curMeterInfo.waterMeterBrand = this.filterDict(\r\n        'water_meter_brand',\r\n        this.curMeterInfo.waterMeterBrand\r\n      )\r\n    },\r\n    changeMeterInfo() {\r\n      this.meterInfoList.forEach((item) => {\r\n        if (item.meterNum == this.curMeterCode) {\r\n          item = this.curMeterInfo\r\n        }\r\n      })\r\n    },\r\n    onSubmit() {\r\n      let paramList = []\r\n      let curTime = this.getCurTime()\r\n      let uid = localStorage.getItem('cs_userId')\r\n      this.meterInfoList.forEach((item) => {\r\n        paramList.push({\r\n          registerNo: item.registerNo,\r\n          meterTime: curTime,\r\n          planCode: this.planCode,\r\n          bookCode: this.bookCode,\r\n          state: item.state == '0' ? 'NORMAL' : 'ABNORMAL',\r\n          unusualReason: item.unusualReason,\r\n          readingPerson: uid,\r\n          type: 'ZCBS'\r\n        })\r\n      })\r\n      let notAll = false\r\n      this.meterInfoList.map((item) => {\r\n        if (!item.state) {\r\n          notAll = true\r\n          Notify({\r\n            type: 'warning',\r\n            duration: 1000,\r\n            message: '请完善所有水表信息'\r\n          })\r\n        } else {\r\n          if (\r\n            item.state == '1' &&\r\n            (item.unusualReason == '' ||\r\n              item.unusualReason == null ||\r\n              item.unusualReason == undefined)\r\n          ) {\r\n            notAll = true\r\n            Notify({\r\n              type: 'warning',\r\n              duration: 1000,\r\n              message: '请填写异常原因'\r\n            })\r\n          }\r\n        }\r\n      })\r\n      if (!notAll) {\r\n        commitTask(paramList).then((res) => {\r\n          if (res.status) {\r\n            if (this.copyStatus == 0) {\r\n              let all = localStorage.getItem('myDownloadPlan')\r\n              let allTask = all ? JSON.parse(all) : []\r\n              let otherTasks = allTask.filter((item) => {\r\n                return item.planCode != this.planCode\r\n              })\r\n              localStorage.removeItem('myDownloadPlan')\r\n              localStorage.setItem('myDownloadPlan', JSON.stringify(otherTasks))\r\n            } else {\r\n              let all = localStorage.getItem('savedTasks')\r\n              let allTask = all ? JSON.parse(all) : []\r\n              let otherTasks = allTask.filter((item) => {\r\n                return item.planCode != this.planCode\r\n              })\r\n              localStorage.removeItem('savedTasks')\r\n              localStorage.setItem('savedTasks', JSON.stringify(otherTasks))\r\n            }\r\n            Notify({ type: 'success', duration: 500, message: '提交成功' })\r\n            this.$router.replace({\r\n              name: 'TaskIndex'\r\n            })\r\n          } else {\r\n            Notify({ type: 'error', duration: 500, message: '提交失败' })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    save() {\r\n      let all = localStorage.getItem('myDownloadPlan')\r\n      let saved = localStorage.getItem('savedTasks')\r\n      let allTask = all ? JSON.parse(all) : []\r\n      let savedTasks = saved ? JSON.parse(saved) : []\r\n      let curTask = allTask.filter((item) => {\r\n        return item.planCode == this.planCode\r\n      })\r\n      let otherTasks = allTask.filter((item) => {\r\n        return item.planCode != this.planCode\r\n      })\r\n      let paramList = []\r\n      this.meterInfoList.forEach((item) => {\r\n        paramList.push({\r\n          waterMeterBrand: item.waterMeterBrand,\r\n          bore: item.bore,\r\n          remoteModuleNo: item.remoteModuleNo,\r\n          meterIndex: item.meterIndex,\r\n          connectingWellNo: item.connectingWellNo,\r\n          usingWaterType: item.usingWaterType,\r\n          installAddress: item.installAddress,\r\n          waterMeterType: item.waterMeterType,\r\n          readingTime: item.readingTime,\r\n          meterNum: item.meterNum,\r\n          registerNo: item.registerNo,\r\n          planCode: this.planCode,\r\n          bookCode: this.bookCode,\r\n          lastReadingIndex: item.meterIndex,\r\n          lastReadingTime: item.readingTime,\r\n          state: item.state,\r\n          unusualReason: item.unusualReason\r\n        })\r\n      })\r\n      curTask[0].paramList = paramList\r\n      savedTasks.push(...curTask)\r\n      localStorage.removeItem('myDownloadPlan')\r\n      localStorage.removeItem('savedTasks')\r\n      localStorage.setItem('myDownloadPlan', JSON.stringify(otherTasks))\r\n      localStorage.setItem('savedTasks', JSON.stringify(savedTasks))\r\n      Notify({ type: 'success', duration: 500, message: '暂存成功' })\r\n      this.$router.replace({\r\n        name: 'TaskIndex'\r\n      })\r\n    },\r\n    /*打开新增异常工单页面*/\r\n    add() {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: { type: 'add' }\r\n      })\r\n    },\r\n    //获取类型所有字典\r\n    queryDict(dictType) {\r\n      return new Promise((resolve, reject) => {\r\n        getDict(dictType).then((res) => {\r\n          if (res.data) {\r\n            resolve(res.data)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    //过滤字典\r\n    filterDict(type, detail) {\r\n      if (detail !== null && detail !== '' && detail !== undefined) {\r\n        let dict = []\r\n        if (type == 'revenue_company') {\r\n          dict = this.companyDict\r\n        } else if (type == 'place_of_business') {\r\n          dict = this.businessCompanyDict\r\n        } else if (type == 'water_use_type') {\r\n          dict = this.waterTypeDict\r\n        } else if (type == 'water_meter_type') {\r\n          dict = this.meterDict\r\n        } else if (type == 'water_meter_brand') {\r\n          dict = this.meterBrandDict\r\n        }\r\n        return dict.filter((item) => item.dictValue === detail)[0].dictLabel\r\n      }\r\n      return ''\r\n    },\r\n    //获取当前时间\r\n    getCurTime() {\r\n      let date = new Date()\r\n      let year = date.getFullYear()\r\n      let month = date.getMonth() + 1\r\n      let day = date.getDate()\r\n      let hour = date.getHours()\r\n      let minute = date.getMinutes()\r\n      let second = date.getSeconds()\r\n      let curTime =\r\n        year +\r\n        '-' +\r\n        (month >= 10 ? month : '0' + month) +\r\n        '-' +\r\n        (day >= 10 ? day : '0' + day) +\r\n        ' ' +\r\n        (hour >= 10 ? hour : '0' + hour) +\r\n        ':' +\r\n        (minute >= 10 ? minute : '0' + minute) +\r\n        ':' +\r\n        second\r\n      return curTime\r\n    }\r\n  },\r\n\r\n  async activated() {\r\n    Toast.loading({\r\n      message: '加载中...',\r\n      forbidClick: true\r\n    })\r\n    this.copyStatus = this.$route.params.type\r\n    this.planCode = this.$route.params.planCode\r\n    this.bookCode = this.$route.params.bookCode\r\n    let taskId = this.$route.params.tId\r\n    this.companyDict = await this.queryDict('revenue_company')\r\n    this.businessCompanyDict = await this.queryDict('place_of_business')\r\n    this.waterTypeDict = await this.queryDict('water_use_type')\r\n    this.meterDict = await this.queryDict('water_meter_type')\r\n    this.meterBrandDict = await this.queryDict('water_meter_brand')\r\n    if (this.copyStatus == 1) {\r\n      this.getStagingDetail(taskId)\r\n    } else {\r\n      this.getTaskDetail(taskId)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n#SurveyDetail {\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: #ecf4ff !important;\r\n\r\n  /deep/ .fm-nav-bar__content {\r\n    background-color: #0676fd !important;\r\n    height: 1.8rem;\r\n  }\r\n\r\n  /deep/ .fm-nav-bar__title {\r\n    color: #ffffff !important;\r\n  }\r\n\r\n  /deep/ .fm-nav-bar .fm-icon {\r\n    color: #ffffff !important;\r\n  }\r\n\r\n  /deep/ .fm-cell {\r\n    background-color: #ecf4ff !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu {\r\n    width: 100% !important;\r\n    background-color: #ecf4ff !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu__bar {\r\n    background-color: #ecf4ff !important;\r\n    box-shadow: none !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu__item {\r\n    align-items: flex-start;\r\n    justify-content: left !important;\r\n  }\r\n\r\n  .rightIcon {\r\n    color: #fff;\r\n    font-size: 55px;\r\n  }\r\n\r\n  .btn-group {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    margin: 16px 16px 200px;\r\n  }\r\n\r\n  .bottom {\r\n    position: fixed;\r\n    bottom: 300px;\r\n    right: 44px;\r\n    background-color: #027aff;\r\n    width: 102px;\r\n    height: 102px;\r\n    line-height: 102px;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    z-index: 1000;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n"]}]}