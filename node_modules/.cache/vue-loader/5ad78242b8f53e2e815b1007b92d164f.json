{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\NewsNotice\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\NewsNotice\\index.vue","mtime":1708928163397},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgKiBhcyBhcGkgZnJvbSAnQC92aWV3cy9Ib21lL2FwaS5qcycNCmltcG9ydCB7IHVwZGF0ZUJhdGNoTXNnU3RhdHVzIH0gZnJvbSAnQC9hcGkvbWVzc2FnZS5qcycNCmltcG9ydCBDaGFuZ2VCdXR0b24gZnJvbSAnLi9DaGFuZ2VCdXR0b24udnVlJw0KaW1wb3J0IF9jbG9uZURlZXAgZnJvbSAnbG9kYXNoL2Nsb25lRGVlcCcNCmltcG9ydCB7IFRvYXN0LCBEaWFsb2cgfSBmcm9tICdmYXdrZXMtbW9iaWxlLWxpYicNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnTmV3c05vdGljZScsDQogIGNvbXBvbmVudHM6IHsNCiAgICBDaGFuZ2VCdXR0b24sDQogICAgW1RvYXN0Lm5hbWVdOiBUb2FzdCwNCiAgICBbRGlhbG9nLm5hbWVdOiBEaWFsb2csDQogIH0sDQogIGRhdGE6ICgpID0+ICh7DQogICAgbm93Q2hlY2tlZEJ0bjogJ+WFqOmDqCcsDQogICAgLy8g57G75Z6LKDEwMDrlhazlkYrvvIwyMDA65Lia5Yqh6YCa55+l77yMMjAxOuWRiuitpu+8jDIwMjrlt6XljZXvvIwyMDM65LqL5Lu277yMMzAwOuengeS/oSkNCiAgICBjYXJkQ29uZmlnOiBbDQogICAgICB7DQogICAgICAgIG1zZ1R5cGU6IDEwMCwNCiAgICAgICAgbXNnVGl0bGU6ICflhazlkYonLA0KICAgICAgICBtc2dDb250ZW50OiAnJywNCiAgICAgICAgbXNnVGltZTogJycsDQogICAgICAgIG5ld01lc3NhZ2U6IDAsDQogICAgICAgIG1zZ0ljb246IHJlcXVpcmUoJy4vaW1ncy/lhazlkYoucG5nJyksDQogICAgICB9LA0KICAgICAgew0KICAgICAgICBtc2dUeXBlOiAyMDAsDQogICAgICAgIG1zZ1RpdGxlOiAn5Lia5Yqh6YCa55+lJywNCiAgICAgICAgbXNnQ29udGVudDogJycsDQogICAgICAgIG1zZ1RpbWU6ICcnLA0KICAgICAgICBuZXdNZXNzYWdlOiAwLA0KICAgICAgICBtc2dJY29uOiByZXF1aXJlKCcuL2ltZ3Mv5Lia5Yqh6YCa55+lLnBuZycpLA0KICAgICAgfSwNCiAgICAgIHsNCiAgICAgICAgbXNnVHlwZTogMjAxLA0KICAgICAgICBtc2dUaXRsZTogJ+WRiuitpicsDQogICAgICAgIG1zZ0NvbnRlbnQ6ICcnLA0KICAgICAgICBtc2dUaW1lOiAnJywNCiAgICAgICAgbmV3TWVzc2FnZTogMCwNCiAgICAgICAgbXNnSWNvbjogcmVxdWlyZSgnLi9pbWdzL+WRiuitpi5wbmcnKSwNCiAgICAgIH0sDQogICAgICB7DQogICAgICAgIG1zZ1R5cGU6IDIwMiwNCiAgICAgICAgbXNnVGl0bGU6ICflt6XljZUnLA0KICAgICAgICBtc2dDb250ZW50OiAnJywNCiAgICAgICAgbXNnVGltZTogJycsDQogICAgICAgIG5ld01lc3NhZ2U6IDAsDQogICAgICAgIG1zZ0ljb246IHJlcXVpcmUoJy4vaW1ncy/lt6XljZUucG5nJyksDQogICAgICB9LA0KICAgICAgew0KICAgICAgICBtc2dUeXBlOiAyMDMsDQogICAgICAgIG1zZ1RpdGxlOiAn5LqL5Lu2JywNCiAgICAgICAgbXNnQ29udGVudDogJycsDQogICAgICAgIG1zZ1RpbWU6ICcnLA0KICAgICAgICBuZXdNZXNzYWdlOiAwLA0KICAgICAgICBtc2dJY29uOiByZXF1aXJlKCcuL2ltZ3Mv5LqL5Lu2LnBuZycpLA0KICAgICAgfSwNCiAgICBdLA0KICAgIC8vIOexu+WeiygxMDA65YWs5ZGK77yMMjAwOuS4muWKoemAmuefpe+8jDIwMTrlkYrorabvvIwyMDI65bel5Y2V77yMMjAzOuS6i+S7tu+8jDMwMDrnp4Hkv6EpDQogICAgdHlwZUxpc3Q6IFsxMDAsIDIwMCwgMjAxLCAyMDIsIDIwM10sDQogIH0pLA0KICBjcmVhdGVkKCkgew0KICAgIC8vIOiOt+WPlua2iOaBrw0KICAgIHRoaXMuZ2V0TXNnTGlzdCgpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDlhajpg6jjgIHmnKror7vliIfmjaLmjInpkq4NCiAgICBidXR0b25DaGFuZ2UoYnRuKSB7DQogICAgICBjb25zb2xlLmxvZyhidG4pDQogICAgICB0aGlzLm5vd0NoZWNrZWRCdG4gPSBidG4NCiAgICAgIHRoaXMuZ2V0TXNnTGlzdCgpDQogICAgfSwNCiAgICAvLyDojrflj5bmtojmga8NCiAgICBnZXRNc2dMaXN0KCkgew0KICAgICAgLy8gcGFyYW1zID0gew0KICAgICAgLy8gICBjdXJyZW50UGFnZTogMSwNCiAgICAgIC8vICAgcGFnZVNpemU6IDIwMDAsDQogICAgICAvLyAgIC8vIHN0YXR1czogLTEsIC8vIOeKtuaAgSgwOuW3suivu++8jC0xOuacquivuykNCiAgICAgIC8vICAgc2VhcmNoVmFsdWU6IHRoaXMudmFsdWVUZXh0LCAvLyDmtojmga/lhoXlrrkNCiAgICAgIC8vICAgc3RhcnREYXRlOiAnJywgLy8g5byA5aeL5pel5pyfDQogICAgICAvLyAgIGVuZERhdGU6ICcnLCAvLyDnu5PmnZ/ml6XmnJ8NCiAgICAgIC8vICAgLy8gdHlwZTogJycgLy8g57G75Z6LKDEwMDrlhazlkYrvvIwyMDA65Lia5Yqh6YCa55+l77yMMjAxOuWRiuitpu+8jDIwMjrlt6XljZXvvIwyMDM65LqL5Lu277yMMzAwOuengeS/oSko5pSv5oyBeHh4LHh4eOagvOW8jyko5pSv5oyBeHh4LXh4eOagvOW8jykNCiAgICAgIC8vIH0NCiAgICAgIHRoaXMudHlwZUxpc3QuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsNCiAgICAgICAgbGV0IHBhcmFtcyA9IHsNCiAgICAgICAgICBjdXJyZW50UGFnZTogMSwNCiAgICAgICAgICBwYWdlU2l6ZTogMSwNCiAgICAgICAgICAvLyBzdGF0dXM6IC0xLCAvLyDnirbmgIEoMDrlt7Lor7vvvIwtMTrmnKror7spDQogICAgICAgICAgdHlwZTogaXRlbSwNCiAgICAgICAgfQ0KICAgICAgICBpZiAodGhpcy5ub3dDaGVja2VkQnRuID09PSAn5pyq6K+7Jykgew0KICAgICAgICAgIHBhcmFtcy5zdGF0dXMgPSAtMQ0KICAgICAgICB9DQogICAgICAgIGFwaS5nZXRNc2dMaXN0KHBhcmFtcykudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgbGV0IG1zZ0xpc3QgPSByZXM/LmRhdGE/Lmxpc3QgfHwgW10NCiAgICAgICAgICB0aGlzLmNhcmRDb25maWcuZm9yRWFjaCgoY2FyZCkgPT4gew0KICAgICAgICAgICAgaWYgKGNhcmQubXNnVHlwZSA9PT0gaXRlbSkgew0KICAgICAgICAgICAgICAvLyDlpoLmnpzmnInmtojmga8NCiAgICAgICAgICAgICAgaWYgKG1zZ0xpc3QubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgIC8vIOWmguaenG1zZ0JvZHnkuK3lkKvmnIlodG1s5qCH562+77yM5YiZ5Yig6ZmkaHRtbOagh+etvg0KICAgICAgICAgICAgICAgIGlmICgvPFtePl0rPi9nLnRlc3QobXNnTGlzdFswXS5tc2dCb2R5KSkgew0KICAgICAgICAgICAgICAgICAgbXNnTGlzdFswXS5tc2dCb2R5ID0gbXNnTGlzdFswXS5tc2dCb2R5LnJlcGxhY2UoLzxbXj5dKz4vZywgJycpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGNhcmQubXNnQ29udGVudCA9IG1zZ0xpc3RbMF0ubXNnQm9keQ0KICAgICAgICAgICAgICAgIGNhcmQubXNnVGltZSA9IG1zZ0xpc3RbMF0udXBkYXRlRGF0ZQ0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIC8vIOWmguaenOayoeaciea2iOaBr++8jOaYvuekuuaaguaXoOa2iOaBrw0KICAgICAgICAgICAgICAgIGNhcmQubXNnQ29udGVudCA9ICfmmoLml6Dmtojmga8nDQogICAgICAgICAgICAgICAgY2FyZC5tc2dUaW1lID0gJycNCiAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgIGlmICh0aGlzLm5vd0NoZWNrZWRCdG4gPT09ICflhajpg6gnKSB7DQogICAgICAgICAgICAgICAgLy8g5YWo6YOo5raI5oGv77yM57qi54K55LiN5pi+56S6DQogICAgICAgICAgICAgICAgY2FyZC5uZXdNZXNzYWdlID0gMA0KICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMubm93Q2hlY2tlZEJ0biA9PT0gJ+acquivuycpIHsNCiAgICAgICAgICAgICAgICAvLyDmnKror7vmtojmga/vvIznuqLngrnmmL7npLoNCiAgICAgICAgICAgICAgICBjYXJkLm5ld01lc3NhZ2UgPSByZXM/LmRhdGE/LnRvdGFsIHx8IDANCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0pDQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5ub3dDaGVja2VkQnRuLCBpdGVtLCByZXMuZGF0YS50b3RhbCwgbXNnTGlzdCwgcmVzLmRhdGEpDQogICAgICAgIH0pDQogICAgICB9KQ0KICAgIH0sDQogICAgLy8g5om56YeP5pu05paw56uZ5YaF5L+h54q25oCBDQogICAgY2xlYXJBbGxNZXNzYWdlKCkgew0KICAgICAgRGlhbG9nLmNvbmZpcm0oew0KICAgICAgICB0aXRsZTogJ+ehruiupOa4heepuuacquivu+a2iOaBr+S5iCcsDQogICAgICAgIG1lc3NhZ2U6ICcnLA0KICAgICAgfSkNCiAgICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICAgIGxldCBwYXJhbXMgPSB7DQogICAgICAgICAgICBtc2dUeXBlTGlzdDogdGhpcy50eXBlTGlzdC50b1N0cmluZygpLCAvLyDnq5nlhoXkv6HnsbvlnosNCiAgICAgICAgICAgIHN0YXR1czogMCwgLy8g54q25oCBKDA65bey6K+7LC0xOuacquivuywtMjrliKDpmaQpDQogICAgICAgICAgfQ0KICAgICAgICAgIHVwZGF0ZUJhdGNoTXNnU3RhdHVzKHBhcmFtcykudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgICBpZiAocmVzLm1lc3NhZ2UgPT09ICfmiJDlip8nKSB7DQogICAgICAgICAgICAgIFRvYXN0KCflhajpg6jlt7Lor7vmiJDlip8nKQ0KICAgICAgICAgICAgICB0aGlzLmdldE1zZ0xpc3QoKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0pDQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoKSA9PiB7fSkNCiAgICB9LA0KICAgIC8vIOi3s+i9rOWIsOa2iOaBr+WIl+ihqA0KICAgIGdvVG9NZXNzYWdlTGlzdChpdGVtKSB7DQogICAgICAvLyBjb25zb2xlLmxvZyhfY2xvbmVEZWVwKGl0ZW0pKQ0KICAgICAgaWYgKGl0ZW0ubXNnQ29udGVudCA9PT0gJ+aaguaXoOa2iOaBrycpIHsNCiAgICAgICAgVG9hc3QoJ+aaguaXoOa2iOaBrycpDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgaXRlbS5ub3dDaGVja2VkQnRuID0gdGhpcy5ub3dDaGVja2VkQnRuDQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7DQogICAgICAgIHBhdGg6ICcvbmV3c0luZm8nLA0KICAgICAgICBxdWVyeTogaXRlbSwNCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDov5Tlm57kuIrkuIDpobUNCiAgICBvbkNsaWNrTGVmdCgpIHsNCiAgICAgIHRoaXMuJHJvdXRlci5nbygtMSkNCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/NewsNotice","sourcesContent":["<template>\r\n  <div class=\"NewsNoticeStyle\">\r\n    <fm-nav-bar title=\"站内信\" left-arrow @click-left=\"onClickLeft\">\r\n      <template #left>\r\n        <i class=\"fm-icon fm-icon-arrow-left\" style=\"font-size: 18px; color: #000 !important\"></i>\r\n      </template>\r\n      <template v-if=\"this.nowCheckedBtn === '未读'\" #right>\r\n        <img @click=\"clearAllMessage\" class=\"clearImgStyle\" src=\"./imgs/清理扫把.png\" alt=\"\" />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <!-- 全部、未读切换按钮组件 -->\r\n    <ChangeButton btn1=\"全部\" btn2=\"未读\" @buttonChange=\"buttonChange\"></ChangeButton>\r\n    <div class=\"mainContainer\">\r\n      <div\r\n        @click=\"goToMessageList(item)\"\r\n        v-for=\"(item, index) in cardConfig\"\r\n        :key=\"index\"\r\n        class=\"typeCardContainer\"\r\n      >\r\n        <div class=\"leftIconSide\">\r\n          <!-- 显示全部未读消息 -->\r\n          <!-- <div class=\"redNumPoint\" v-if=\"item.newMessage > 0\">{{ item.newMessage }}</div> -->\r\n          <!-- 当未读消息大于99条时显示'···' -->\r\n          <div class=\"redNumPoint\" v-if=\"item.newMessage > 0\">\r\n            {{ item.newMessage > 99 ? '···' : item.newMessage }}\r\n          </div>\r\n          <img class=\"iconStyle\" :src=\"item.msgIcon\" alt=\"\" />\r\n        </div>\r\n        <div class=\"rightContentSide\">\r\n          <div class=\"topTitleContainer\">\r\n            <div class=\"topTitle\">{{ item.msgTitle }}</div>\r\n            <div class=\"topTime\">{{ item.msgTime }}</div>\r\n          </div>\r\n          <div class=\"bottomContent\">\r\n            <span\r\n              class=\"textStyle\"\r\n              :style=\"item.msgContent == '暂无消息' ? { color: '#999999' } : ''\"\r\n              >{{ item.msgContent }}</span\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as api from '@/views/Home/api.js'\r\nimport { updateBatchMsgStatus } from '@/api/message.js'\r\nimport ChangeButton from './ChangeButton.vue'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\nimport { Toast, Dialog } from 'fawkes-mobile-lib'\r\n\r\nexport default {\r\n  name: 'NewsNotice',\r\n  components: {\r\n    ChangeButton,\r\n    [Toast.name]: Toast,\r\n    [Dialog.name]: Dialog,\r\n  },\r\n  data: () => ({\r\n    nowCheckedBtn: '全部',\r\n    // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)\r\n    cardConfig: [\r\n      {\r\n        msgType: 100,\r\n        msgTitle: '公告',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/公告.png'),\r\n      },\r\n      {\r\n        msgType: 200,\r\n        msgTitle: '业务通知',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/业务通知.png'),\r\n      },\r\n      {\r\n        msgType: 201,\r\n        msgTitle: '告警',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/告警.png'),\r\n      },\r\n      {\r\n        msgType: 202,\r\n        msgTitle: '工单',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/工单.png'),\r\n      },\r\n      {\r\n        msgType: 203,\r\n        msgTitle: '事件',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/事件.png'),\r\n      },\r\n    ],\r\n    // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)\r\n    typeList: [100, 200, 201, 202, 203],\r\n  }),\r\n  created() {\r\n    // 获取消息\r\n    this.getMsgList()\r\n  },\r\n  methods: {\r\n    // 全部、未读切换按钮\r\n    buttonChange(btn) {\r\n      console.log(btn)\r\n      this.nowCheckedBtn = btn\r\n      this.getMsgList()\r\n    },\r\n    // 获取消息\r\n    getMsgList() {\r\n      // params = {\r\n      //   currentPage: 1,\r\n      //   pageSize: 2000,\r\n      //   // status: -1, // 状态(0:已读，-1:未读)\r\n      //   searchValue: this.valueText, // 消息内容\r\n      //   startDate: '', // 开始日期\r\n      //   endDate: '', // 结束日期\r\n      //   // type: '' // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)(支持xxx,xxx格式)(支持xxx-xxx格式)\r\n      // }\r\n      this.typeList.forEach((item, index) => {\r\n        let params = {\r\n          currentPage: 1,\r\n          pageSize: 1,\r\n          // status: -1, // 状态(0:已读，-1:未读)\r\n          type: item,\r\n        }\r\n        if (this.nowCheckedBtn === '未读') {\r\n          params.status = -1\r\n        }\r\n        api.getMsgList(params).then((res) => {\r\n          let msgList = res?.data?.list || []\r\n          this.cardConfig.forEach((card) => {\r\n            if (card.msgType === item) {\r\n              // 如果有消息\r\n              if (msgList.length > 0) {\r\n                // 如果msgBody中含有html标签，则删除html标签\r\n                if (/<[^>]+>/g.test(msgList[0].msgBody)) {\r\n                  msgList[0].msgBody = msgList[0].msgBody.replace(/<[^>]+>/g, '')\r\n                }\r\n                card.msgContent = msgList[0].msgBody\r\n                card.msgTime = msgList[0].updateDate\r\n              } else {\r\n                // 如果没有消息，显示暂无消息\r\n                card.msgContent = '暂无消息'\r\n                card.msgTime = ''\r\n              }\r\n\r\n              if (this.nowCheckedBtn === '全部') {\r\n                // 全部消息，红点不显示\r\n                card.newMessage = 0\r\n              } else if (this.nowCheckedBtn === '未读') {\r\n                // 未读消息，红点显示\r\n                card.newMessage = res?.data?.total || 0\r\n              }\r\n            }\r\n          })\r\n          console.log(this.nowCheckedBtn, item, res.data.total, msgList, res.data)\r\n        })\r\n      })\r\n    },\r\n    // 批量更新站内信状态\r\n    clearAllMessage() {\r\n      Dialog.confirm({\r\n        title: '确认清空未读消息么',\r\n        message: '',\r\n      })\r\n        .then(() => {\r\n          let params = {\r\n            msgTypeList: this.typeList.toString(), // 站内信类型\r\n            status: 0, // 状态(0:已读,-1:未读,-2:删除)\r\n          }\r\n          updateBatchMsgStatus(params).then((res) => {\r\n            if (res.message === '成功') {\r\n              Toast('全部已读成功')\r\n              this.getMsgList()\r\n            }\r\n          })\r\n        })\r\n        .catch(() => {})\r\n    },\r\n    // 跳转到消息列表\r\n    goToMessageList(item) {\r\n      // console.log(_cloneDeep(item))\r\n      if (item.msgContent === '暂无消息') {\r\n        Toast('暂无消息')\r\n        return\r\n      }\r\n      item.nowCheckedBtn = this.nowCheckedBtn\r\n      this.$router.push({\r\n        path: '/newsInfo',\r\n        query: item,\r\n      })\r\n    },\r\n    // 返回上一页\r\n    onClickLeft() {\r\n      this.$router.go(-1)\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.NewsNoticeStyle {\r\n  height: 100%;\r\n  background-color: #ff5d5d;\r\n  background-color: #f5f7f9;\r\n\r\n  .clearImgStyle {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .mainContainer {\r\n    width: 100%;\r\n    height: calc(100% - 140px - 92px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    overflow: scroll;\r\n    background-color: #f5f7f9;\r\n\r\n    .typeCardContainer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: calc(100% - 60px);\r\n      height: 154px;\r\n      min-height: 154px;\r\n      margin-top: 26px;\r\n      border-radius: 24px;\r\n      box-shadow: 0px 4px 16px 0px rgba(104, 115, 127, 0.08);\r\n      background: #ffffff;\r\n\r\n      .leftIconSide {\r\n        position: relative;\r\n        width: 20%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        .redNumPoint {\r\n          position: absolute;\r\n          top: 26px;\r\n          right: 14px;\r\n          width: 30px;\r\n          height: 30px;\r\n          line-height: 30px;\r\n          border-radius: 50%;\r\n          // min-width: 24px;\r\n          // min-height: 24px;\r\n          // padding: 3px 5px;\r\n          // border-radius: 24px;\r\n          text-align: center;\r\n          border: 1px solid #f7f7f7;\r\n          background-color: #ff4b4b;\r\n          // 12px = 0.16rem\r\n          font-size: 16px;\r\n          font-family: Roboto-Regular, Roboto;\r\n          font-weight: 400;\r\n          color: #ffffff;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .iconStyle {\r\n          width: 94px;\r\n          height: 94px;\r\n        }\r\n      }\r\n\r\n      .rightContentSide {\r\n        width: 80%;\r\n        height: 76%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        background-color: #ffffff;\r\n\r\n        .topTitleContainer {\r\n          width: 100%;\r\n          height: calc(50%);\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n\r\n          .topTitle {\r\n            font-size: 28px;\r\n            font-family: PingFangSC-Semibold, PingFang SC;\r\n            font-weight: 600;\r\n            color: #191919;\r\n          }\r\n\r\n          .topTime {\r\n            margin-right: 30px;\r\n            font-size: 24px;\r\n            font-family: PingFangSC-Regular, PingFang SC;\r\n            font-weight: 400;\r\n            color: #999999;\r\n          }\r\n        }\r\n\r\n        .bottomContent {\r\n          width: 100%;\r\n          height: calc(50%);\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          align-items: center;\r\n          font-size: 24px;\r\n          font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n          color: #333333;\r\n\r\n          .textStyle {\r\n            width: calc(100% - 30px);\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}