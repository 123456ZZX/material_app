{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\PumpStationInspection\\components\\Uploader.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\PumpStationInspection\\components\\Uploader.vue","mtime":1705912915820},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Uploader.vue"],"names":[],"mappings":";AAqfile":"Uploader.vue","sourceRoot":"src/views/PumpStationInspection/components","sourcesContent":["<!--\r\n * @Author: xie_sm\r\n * @Date: 2022-02-28 16:07:02\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2022-06-22 08:50:15\r\n * @FilePath: \\mobile-template\\src\\components\\upload\\Uploader.vue\r\n * @Description: 参考凤翎web端form-upload组件，demo可查看src\\views\\CommonOne\\index.vue\r\n *\r\n-->\r\n<template>\r\n  <div>\r\n    <fm-field\r\n      :name=\"name\"\r\n      :label=\"label\"\r\n      label-class=\"cus-label\"\r\n      :class=\"[\r\n        'field-attachment',\r\n        type === 'file' && fileList.length == 0 && !disabled ? 'no-upload-list' : '',\r\n      ]\"\r\n    >\r\n      <template #label v-if=\"type == 'file'\">\r\n        <!-- 提供该组件label插槽，其中按照移动端设计规范设置默认样式 -->\r\n        <slot name=\"uploader-label\">\r\n          <div class=\"cus-label__div\">\r\n            <span>{{ previewLabel }}</span>\r\n            <!--  点击文本触发的原生input上传事件 -->\r\n            <div v-if=\"!disabled\" @click=\"clickUpload\">\r\n              <span class=\"label-action\">点击添加</span>\r\n              <i class=\"fm-icon fm-icon-arrow\"></i>\r\n            </div>\r\n          </div>\r\n        </slot>\r\n      </template>\r\n      <template #input>\r\n        <fm-uploader\r\n          :after-read=\"afterRead\"\r\n          :before-read=\"beforeRead\"\r\n          v-model=\"fileList\"\r\n          multiple\r\n          :max-count=\"6\"\r\n          :max-size=\"6 * 1024 * 1024\"\r\n          @oversize=\"onOversize\"\r\n          :accept=\"accept\"\r\n          :before-delete=\"removeFile\"\r\n          :disabled=\"disabled\"\r\n          :deletable=\"deletable\"\r\n          @click-preview=\"download\"\r\n          :show-upload=\"showUpload\"\r\n          :onClickUpload=\"onClickUpload\"\r\n          ref=\"relUploader\"\r\n          class=\"uploader\"\r\n          :preview-full-image=\"previewFullImage\"\r\n        >\r\n          <!-- 提供修改上传区域的插槽 -->\r\n          <slot name=\"upload-area\" v-if=\"type == 'file'\">\r\n            <div></div>\r\n          </slot>\r\n          <span v-if=\"fileList.length == 0 && type === 'file' && disabled\">暂无附件</span>\r\n          <!-- 自定义预览列表样式 -->\r\n          <template #preview-list=\"previewFileList\" v-if=\"type === 'file'\">\r\n            <slot name=\"upload-list\" v-bind=\"fileList\">\r\n              <div\r\n                v-for=\"(file, index) in previewFileList\"\r\n                :key=\"file.fileToken || file.fileId\"\r\n                class=\"preview-list-item\"\r\n                @click=\"download(file)\"\r\n              >\r\n                <img :src=\"file.file.name | getFileIcon\" class=\"file-icon\" />\r\n                <div class=\"file-info\">\r\n                  <span>{{ file.file.name }}</span>\r\n                  <span>{{ file.file.size | calculateFileSize }}</span>\r\n                </div>\r\n                <span class=\"delete-text\" @click=\"deleteFile(index)\" v-if=\"!disabled\">删除</span>\r\n              </div>\r\n            </slot>\r\n          </template>\r\n          <template #preview-list v-else-if=\"fileList.length == 0 && disabled\">\r\n            <span>暂无附件</span>\r\n          </template>\r\n        </fm-uploader>\r\n      </template>\r\n    </fm-field>\r\n  </div>\r\n</template>\r\n<script>\r\n/* eslint-disable no-undef */\r\n// 该组件需要和真机交互，会出现原生 API 未定义的情况，故全局应用屏蔽 no-undef 规则\r\n\r\nimport { Uploader, Toast, Button, Field } from 'fawkes-mobile-lib'\r\nimport { changeFileG9s, getFileToken } from '@/api/file'\r\nimport { uuid } from '@/utils/param'\r\nimport { isImage, downloadFile, calcFileSize } from '@/utils/file'\r\nimport request from '@/utils/request'\r\nimport axios from 'axios'\r\n\r\nconst cancelTokenObj = new Map()\r\n\r\nexport default {\r\n  name: 'Uploader',\r\n  components: {\r\n    [Uploader.name]: Uploader,\r\n    [Toast.name]: Toast,\r\n    [Button.name]: Button,\r\n    [Field.name]: Field,\r\n  },\r\n  filters: {\r\n    calculateFileSize: function (val) {\r\n      return calcFileSize(val)\r\n    },\r\n  },\r\n  props: {\r\n    // 文件groupToken\r\n    value: {\r\n      type: String,\r\n      required: true,\r\n      default: '',\r\n    },\r\n    // TODO: 文件上传数量限制，暂未使用\r\n    limit: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    // 图片上传时的标签名称\r\n    label: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n    // 名称，提交表单的标识符\r\n    name: {\r\n      type: String,\r\n      default: 'uploader',\r\n    },\r\n    // 开启自动上传\r\n    autoUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否展示删除按钮\r\n    deletable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否显示上传区域\r\n    showUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 上传类型，image或file\r\n    type: {\r\n      type: String,\r\n      default: 'image',\r\n    },\r\n    // 图片多选限制数量，默认为9\r\n    maxImagesCount: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n    // 上传前的校验方法\r\n    beforeRead: {\r\n      type: Function,\r\n      default: function () {\r\n        return true\r\n      },\r\n    },\r\n    // 允许预览，默认为true\r\n    previewFullImage: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 文件上传时标签名称\r\n    previewLabel: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n  },\r\n  data: () => ({\r\n    fileList: [],\r\n    fileTokenList: [],\r\n    // 是否需要请求文件资源\r\n    needToGetFile: true,\r\n    percent: 0,\r\n  }),\r\n  computed: {\r\n    // 允许上传的文件类型\r\n    accept() {\r\n      return this.type == 'image' ? 'image/*' : '*'\r\n    },\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (!newVal) {\r\n          this.fileTokenList = []\r\n          this.fileList = []\r\n          return\r\n        } else if (this.needToGetFile) {\r\n          let postData = {\r\n            g9s: [newVal],\r\n          }\r\n          getFileToken(postData).then((res) => {\r\n            if (res.status) {\r\n              let fileTokenList = res.data\r\n              const fileList = []\r\n              fileTokenList.forEach((item) => {\r\n                let isImageType = isImage(item.fileName)\r\n                let fileItem = {\r\n                  file: {\r\n                    name: item.fileName,\r\n                    size: item.size,\r\n                  },\r\n                  response: item,\r\n                  isImage: isImageType,\r\n                  fileToken: item.fileToken,\r\n                }\r\n                // 展示图片\r\n                if (isImageType) {\r\n                  fileItem.url = `${process.env.VUE_APP_BASE_URL}/sys-storage/download_image?f8s=${item.fileToken}`\r\n                } else {\r\n                  // 展示文件\r\n                  fileItem.url = item.fileToken\r\n                }\r\n\r\n                fileList.push(fileItem)\r\n                this.fileTokenList.push(item.fileToken)\r\n              })\r\n              this.fileList = fileList\r\n              this.$emit('fileChange', {\r\n                file: null,\r\n                fileList,\r\n                length: fileList.length,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    setG9s() {\r\n      if (this.fileTokenList.length) {\r\n        const g9s = uuid()\r\n        this.$emit('input', g9s)\r\n        //将各文件的filetoken合并成grouptoken\r\n        return changeFileG9s(g9s, this.fileTokenList)\r\n      } else {\r\n        this.$emit('input', '')\r\n      }\r\n    },\r\n    afterRead(file) {\r\n      if (this.autoUpload) {\r\n        // 多选的情况下\r\n        if (Array.isArray(file)) {\r\n          file.forEach((el) => this.uploadFile(el))\r\n        } else {\r\n          this.uploadFile(file)\r\n        }\r\n      }\r\n    },\r\n    uploadFile(file) {\r\n      //文件读取完成后的回调函数\r\n      file.status = 'uploading'\r\n      let formData = new FormData()\r\n\r\n      formData.append('file', file.file)\r\n\r\n      let waterMarkJson = {\r\n        isWaterMark: 1,\r\n        waterMark: this.$dayjs().format('YYYY-MM-DD HH:mm'),\r\n        fontSize: 20,\r\n        waterMarkLocation: 3,\r\n      }\r\n      formData.append('waterMarkJson', JSON.stringify(waterMarkJson))\r\n\r\n      // fileId用于标记文件，方便后续删除定位文件\r\n      const fileId = uuid()\r\n      file.fileId = fileId\r\n\r\n      //生成取消请求的token,方便在handleRemove取消上传时结束请求\r\n      const CancelToken = axios.CancelToken\r\n      const source = CancelToken.source()\r\n      cancelTokenObj.set(fileId, source)\r\n      request({\r\n        url: '/sys-storage/image/upload',\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        data: formData,\r\n        timeout: 0,\r\n        cancelToken: source.token,\r\n        onUploadProgress: (progressEvent) => {\r\n          let percent = ((progressEvent.loaded / progressEvent.total) * 100) | 0\r\n          //调用onProgress方法来显示进度条，需要传递个对象 percent为进度值\r\n          // file.onProgress({ percent: percent });\r\n          file.message = `上传中 ${percent}%`\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.status) {\r\n            file.status = 'success'\r\n            file.fileToken = res?.data?.fileToken\r\n            this.fileTokenList.push(res?.data?.fileToken)\r\n            this.setG9s()\r\n            // 解决上传结束后进度仍然显示问题\r\n            this.$refs.relUploader.$forceUpdate()\r\n            // this.$emit('fileChange', {\r\n            //   file: res.data,\r\n            //   fileList: this.fileList,\r\n            //   length: this.fileList.length,\r\n            // })\r\n          } else {\r\n            Toast(res.message)\r\n            // 删除上传失败的文件\r\n            this.fileList.splice(\r\n              this.fileList.findIndex((el) => el.fileId === fileId),\r\n              1\r\n            )\r\n          }\r\n          // file.onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n          Toast('上传失败')\r\n          // 删除上传失败的文件\r\n          this.fileList.splice(\r\n            this.fileList.findIndex((el) => el.fileId === fileId),\r\n            1\r\n          )\r\n        })\r\n    },\r\n    removeFile(file) {\r\n      const fileId = file.fileId\r\n      //如果文件在上传中的话，则取消上传请求\r\n      const source = cancelTokenObj.get(fileId)\r\n      source && source.cancel()\r\n      // 没有上传成功，或非查看页面预览时，直接return\r\n      if (file.status !== 'success' && !file.response) {\r\n        return\r\n      }\r\n      this.fileTokenList = this.fileTokenList.filter((item) => {\r\n        return item !== file.fileToken\r\n      })\r\n\r\n      if (fileId) {\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileId === fileId),\r\n          1\r\n        )\r\n        // 从后台获取附件后没有filedId时，利用token定位文件做删除\r\n      } else {\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileToken === file.fileToken),\r\n          1\r\n        )\r\n      }\r\n\r\n      //派发文件列表状态变化事件\r\n      this.$emit('fileChange', {\r\n        file,\r\n        fileList: this.fileList,\r\n        length: this.fileList.length,\r\n      })\r\n    },\r\n    // 移动端设备下载文件\r\n    download(file) {\r\n      if ((file.isImage && this.type == 'image') || !this.disabled) {\r\n        return\r\n      } else if (typeof yuanchu != 'undefined') {\r\n        let accessToken = this.$storage.get('access_token')\r\n        let url = process.env.VUE_APP_BASE_URL + '/sys-storage/download?f8s=' + file.fileToken\r\n        let name = file.file.name\r\n        this.$loading.show({ title: '' })\r\n\r\n        // 从设备应用缓存目录下获取文件系统路径\r\n        let fileUrl = yuanchu.fileSystemPaths.file.cacheDirectory + name\r\n\r\n        // 调用原生框架附件下载插件暴露的接口\r\n        let fileTransfer = new yuanchu.fileTransfer()\r\n        let that = this\r\n        that.fileTransfer = fileTransfer\r\n        fileTransfer.onprogress = (progressEvent) => {\r\n          if (progressEvent) {\r\n            if (file?.response?.size != progressEvent.total) {\r\n              that.percent = Math.round((progressEvent.loaded * 100) / file?.response?.size)\r\n            }\r\n          }\r\n        }\r\n\r\n        fileTransfer.download(\r\n          url,\r\n          fileUrl,\r\n          (entry) => {\r\n            entry.file((data) => {\r\n              yuanchu.fileOpener2.open(entry.toURL(), data.type, {\r\n                success: function () {\r\n                  return\r\n                },\r\n                error: function (err) {\r\n                  console.error(err)\r\n                  this.$loading.hide()\r\n                },\r\n              })\r\n            })\r\n            this.$loading.hide()\r\n          },\r\n          () => {\r\n            that.percent = 0\r\n            this.$loading.hide()\r\n          },\r\n          false,\r\n          {\r\n            headers: {\r\n              'Fawkes-Auth': accessToken,\r\n            },\r\n          }\r\n        )\r\n      } else {\r\n        downloadFile(file.fileToken)\r\n      }\r\n    },\r\n    deleteFile(index) {\r\n      this.$refs.relUploader.onDelete(this.fileList[index], index)\r\n    },\r\n    onClickUpload(event) {\r\n      if (this.type == 'image') {\r\n        // 解决浏览器调试时控制报错问题\r\n        if (typeof yuanchu != 'undefined') {\r\n          this.takePicture()\r\n          event.preventDefault()\r\n        }\r\n      } else {\r\n        this.$refs.relUploader.$emit('click-upload', event)\r\n      }\r\n    },\r\n    takePicture() {\r\n      // 调用原生插件拍照或从相册选取\r\n      yuanchu.imagePicker.getPictures(this.onSuccess, this.onFail, {\r\n        quality: 50,\r\n        maximumImagesCount: this.maxImagesCount,\r\n        width: 1920,\r\n        height: 1440,\r\n      })\r\n    },\r\n    onFail(error) {\r\n      console.error(error)\r\n    },\r\n    // 拍照或从相册选取图片成功后回调\r\n    onSuccess(obj) {\r\n      obj?.images.forEach((val) => {\r\n        resolveLocalFileSystemURL(\r\n          val.uri,\r\n          (fileEntry) => {\r\n            //获取file对象，和js原生的file不一样，需要插件处理\r\n            fileEntry.file(\r\n              (file) => {\r\n                //读取文件对象\r\n                const reader = new yuanchu.fileReader()\r\n                reader.onloadend = (event) => {\r\n                  const result = {}\r\n                  const thisFile = new File(\r\n                    [new Blob([event.target.result], { type: file.type })],\r\n                    file.name\r\n                  )\r\n                  result.url = window.URL.createObjectURL(new Blob([event.target.result]))\r\n                  result.isImage = true\r\n                  result.file = thisFile\r\n                  // 插入到fileList中并调用上传方法\r\n                  this.fileList.push(result)\r\n                  this.afterRead(result)\r\n                }\r\n                reader.readAsArrayBuffer(file)\r\n              },\r\n              function (error) {\r\n                console.error('error', error)\r\n              }\r\n            )\r\n          },\r\n          function (error) {\r\n            console.error('error resolve', error)\r\n          }\r\n        )\r\n      })\r\n    },\r\n    clickUpload() {\r\n      this.$refs?.relUploader?.$refs?.input.click()\r\n    },\r\n\r\n    onOversize() {\r\n      this.$toast('文件大小不能超过 6MB')\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n// 自定义文件列表预览\r\n.custom-preview-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n// 自定义文件项\r\n.preview-list-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 12px;\r\n  padding-top: 16px;\r\n\r\n  .file-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 12px;\r\n    height: 3em;\r\n    justify-content: space-between;\r\n    flex: 1;\r\n    min-width: 0;\r\n\r\n    span {\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-align: left;\r\n    }\r\n\r\n    span + span {\r\n      font-size: 28px;\r\n      color: #999999;\r\n    }\r\n  }\r\n\r\n  .file-icon {\r\n    height: 53px;\r\n    width: 44px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  .delete-text {\r\n    color: #999999;\r\n  }\r\n}\r\n.field-attachment {\r\n  height: 100%;\r\n  flex-direction: column;\r\n  /deep/ .fm-field__control--right {\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n/deep/ .cus-label {\r\n  width: 100%;\r\n}\r\n.cus-label__div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .label-action {\r\n    color: #027aff;\r\n  }\r\n}\r\n.uploder-attachment {\r\n  width: 100%;\r\n}\r\n\r\n.no-upload-list {\r\n  /deep/ .fm-field__control {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n"]}]}