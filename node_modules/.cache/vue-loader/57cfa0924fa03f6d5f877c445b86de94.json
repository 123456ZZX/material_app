{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\PipeNetLeakDetection\\index.vue?vue&type=style&index=0&id=580ba810&lang=less&scoped=true","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\PipeNetLeakDetection\\index.vue","mtime":1708928163407},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyBlY2Y0ZmYNCi8vIOmakOiXj+a7muWKqOadoQ0KJjo6LXdlYmtpdC1zY3JvbGxiYXIgew0KICBkaXNwbGF5OiBub25lOyAvLyBDaHJvbWUgfCBTYWZhcmkNCn0NCg0KLm1haW4gew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDU1ZmZjICFpbXBvcnRhbnQ7DQogIGhlaWdodDogMTAwJTsNCg0KICAubWFpbi1iZyB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHdpZHRoOiAxMDAlOw0KICB9DQoNCiAgLmNvbnRlbnQgew0KICAgIG1hcmdpbi10b3A6IDQwcHg7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIGJhY2tncm91bmQ6ICNkNGU4ZmM7DQogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0NnB4KTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyNHB4Ow0KICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAyNHB4Ow0KDQogICAgLmJnSW1nIHsNCiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgIGhlaWdodDogMTAwcHg7DQogICAgICB6LWluZGV4OiAxOw0KICAgICAgdG9wOiAtMjBweDsNCiAgICB9DQoNCiAgICAubWlkZGxlIHsNCiAgICAgIGxlZnQ6IDI0MHB4Ow0KICAgIH0NCg0KICAgIC5yaWdodCB7DQogICAgICByaWdodDogMDsNCiAgICB9DQogIH0NCn0NCg0KLy8g6aG26YOo5qCH6aKY6IOM5pmv6ImyDQovZGVlcC8uZm0tbmF2LWJhcl9fY29udGVudCB7DQogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ow0KfQ0KDQovZGVlcC8uZm0taGFpcmxpbmUtLWJvdHRvbTo6YWZ0ZXIgew0KICBib3JkZXItYm90dG9tLXdpZHRoOiAwOw0KfQ0KDQovZGVlcC8uZm0tbmF2LWJhcl9fdGl0bGUgew0KICBjb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50Ow0KfQ0KDQovLyB0YWLliIfmjaLmoI8NCi8vIOabtOaUueiDjOaZr+iJsg0KL2RlZXAvLmZtLXRhYnNfX25hdi0tbGluZSB7DQogIGJhY2tncm91bmQtY29sb3I6ICNkNGU4ZmM7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsNCiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMjRweDsNCiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDI0cHg7DQp9DQoNCi9kZWVwLy5mbS1uYXYtYmFyIHsNCiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7DQp9DQoNCi9kZWVwLyAuZm0tbmF2LWJhciAuZm0taWNvbiB7DQogIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7DQp9DQoNCi8vIOavj+S4qnRhYumrmOW6puWPmOS9jg0KL2RlZXAvLmZtLXRhYiB7DQogIGxpbmUtaGVpZ2h0OiA3MnB4Ow0KICAvLyBoZWlnaHQ6IDgwJTsNCiAgLy8gYm9yZGVyLXJhZGl1czogMjBweCAyMHB4IDBweCAwcHg7DQogIC8vIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0MGRlZywgIzk5Y2MzMywgI2ZmNjY2NiwgIzMzNjY5OSwgI2ZmMDAzMyk7DQogIC8vIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNkMGU3ZmYsICNkM2U4ZmUsICNkYmViZmYsICNlY2Y0ZmYpOw0KfQ0KDQovLyDlj5bmtojpgInkuK3mqKrmnaENCi9kZWVwLy5mbS10YWJzX19saW5lIHsNCiAgd2lkdGg6IDAgIWltcG9ydGFudDsNCn0NCg0KLy8g6YCJ5Lit5pWI5p6cDQovZGVlcC8uZm0tdGFiLS1hY3RpdmUgew0KICAvLyDmoq/lvaLmoLflvI8NCiAgLy8gaGVpZ2h0OiAwOw0KICAvLyB3aWR0aDogMTAwcHg7DQogIC8vIGJvcmRlci13aWR0aDogMCAyMHB4IDkwcHggMjBweDsNCiAgLy8gYm9yZGVyLXN0eWxlOiBub25lIHNvbGlkIHNvbGlkOw0KICAvLyBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYigxNDEsIDI0NywgMTU1KTsNCg0KICAvLyBoZWlnaHQ6IDEwMCU7DQogIGZvbnQtc2l6ZTogMzJweDsNCiAgZm9udC1mYW1pbHk6IFBpbmdGYW5nU0MtU2VtaWJvbGQsIFBpbmdGYW5nIFNDOw0KICBmb250LXdlaWdodDogNjAwOw0KICBjb2xvcjogIzE5MTkxOTsNCn0NCg0KLy8g6YCJ5LitdGFi55qE5paH5a2X5qC35byPDQovZGVlcC8uZm0tdGFiLS1hY3RpdmUgLmZtLXRhYl9fdGV4dC0tZWxsaXBzaXMgew0KICAvLyBtYXJnaW4tdG9wOiA5MHB4Ow0KICB6LWluZGV4OiAxOw0KfQ0KDQovLyBzZWxlY3TpgInmi6nmoYYNCi5zZWxlY3RTdHlsZSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgd2lkdGg6IDY5MHB4Ow0KICBtYXJnaW46IDI0cHggYXV0byAxMnB4Ow0KfQ0KDQoubWFpbi1jb250YWluZXIgew0KICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIwOHB4KTsNCiAgb3ZlcmZsb3c6IGF1dG87DQogIGJhY2tncm91bmQtY29sb3I6ICNkNGU4ZmM7DQp9DQoNCi8qIOaaguaXoOaVsOaNrmJlZ2luICovDQoubm8tZGF0YS1pbWcgew0KICBtYXJnaW46IDIwMHB4IDk1cHggMCA5NXB4Ow0KfQ0KDQoubm8tZGF0YS10ZXh0IHsNCiAgZGlzcGxheTogZmxleDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQoNCi5uby1kYXRhLXRleHQtZGVzY3JpcGUgew0KICBmb250LXNpemU6IDMycHg7DQogIGZvbnQtd2VpZ2h0OiA0MDA7DQogIGNvbG9yOiAjOTk5OTk5Ow0KfQ0KDQovKiDmmoLml6DmlbDmja5lbmQgKi8NCi8qIOino+WGs+S4i+aLieaXtu+8jOaVsOaNruWSjOWFqOmDqOWKoOi9veeahOaPkOekuuaWh+ahiOi2heWHuuWIl+ihqOWFg+e0oOS4jeaYvuekuueahOmXrumimCAqLw0KL2RlZXAvIC5mbS1wdWxsLXJlZnJlc2ggew0KICBvdmVyZmxvdzogdmlzaWJsZTsNCn0NCg0KLnRhc2stY29udGFpbmVyIC9kZWVwLyAuZm0tbmF2LWJhcl9fY29udGVudCB7DQogIGhlaWdodDogODhweDsNCn0NCg0KLnRhc2stY29udGFpbmVyIC9kZWVwLyAuZm0tbmF2LWJhcl9fdGl0bGUgew0KICBmb250LXNpemU6IDM2cHg7DQogIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7DQogIGZvbnQtd2VpZ2h0OiA2MDA7DQp9DQoNCi50YXNrLWNvbnRhaW5lciAvZGVlcC8gLmZtLW5hdi1iYXIgLmZtLWljb24gew0KICBjb2xvcjogIzAyN2FmZiAhaW1wb3J0YW50Ow0KfQ0KDQoudGFzay1jb250YWluZXIgL2RlZXAvIC5mbS1uYXYtYmFyX19hcnJvdyB7DQogIGZvbnQtc2l6ZTogNDhweDsNCn0NCg0KLmZtLXNpZGViYXIgew0KICB3aWR0aDogMTAwJTsNCiAgcGFkZGluZy1sZWZ0OiAzMHB4Ow0KICBwYWRkaW5nLXJpZ2h0OiAzMHB4Ow0KICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ViZWRmMDsNCn0NCg0KLmZtLWNlbGw6OmFmdGVyIHsNCiAgYm9yZGVyOiBub25lOw0KfQ0KDQouZm0tY2VsbC1ncm91cCB7DQogIG1hcmdpbi10b3A6IDI0cHg7DQp9DQoNCi9kZWVwLyAuZm0tc3dpcGUtY2VsbF9fcmlnaHQgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KDQovZGVlcC8gLmZtLWJ1dHRvbi0tc3F1YXJlIHsNCiAgYm9yZGVyLXJhZGl1czogNTAlOw0KICB3aWR0aDogMTA2cHg7DQogIGhlaWdodDogMTA2cHg7DQogIHBhZGRpbmc6IDA7DQogIG1hcmdpbi1yaWdodDogMjBweDsNCn0NCg0KLmJvdHRvbSB7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgYm90dG9tOiAyNHB4Ow0KICByaWdodDogNDRweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogIzAyN2FmZjsNCiAgd2lkdGg6IDEwMnB4Ow0KICBoZWlnaHQ6IDEwMnB4Ow0KICBsaW5lLWhlaWdodDogMTAycHg7DQogIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgY29sb3I6ICNmZmY7DQogIHotaW5kZXg6IDEwMDA7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAsfile":"index.vue","sourceRoot":"src/views/PipeNetLeakDetection","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <template>\r\n      <img :src=\"require('@/assets/img/blueBg.png')\" class=\"main-bg\" />\r\n      <fm-nav-bar title=\"检漏管理\" left-arrow @click-left=\"$router.go(-1)\"></fm-nav-bar>\r\n      <div class=\"content\">\r\n        <img\r\n          :src=\"bgSrc\"\r\n          class=\"bgImg\"\r\n          :class=\"selectedTab == '执行中' ? 'left' : selectedTab == '未开始' ? 'middle' : 'right'\"\r\n        />\r\n        <fm-tabs v-model=\"selectedTab\" @tab-click=\"changeType\" line-width=\"60px\">\r\n          <fm-tab name=\"执行中\" :label=\"working\"></fm-tab>\r\n          <fm-tab name=\"未开始\" :label=\"notStart\"></fm-tab>\r\n          <fm-tab name=\"已完成\" :label=\"workDone\"></fm-tab>\r\n        </fm-tabs>\r\n        <!-- 选择框 -->\r\n        <div class=\"selectStyle\">\r\n          <Select\r\n            :selectData=\"inspDateTypeList\"\r\n            :selValue=\"dateType\"\r\n            color=\"white\"\r\n            @getValue=\"getValue\"\r\n          ></Select>\r\n          <!-- <Select\r\n          :selectData=\"inspTaskTypeList\"\r\n          :selValue=\"inspTaskType\"\r\n          color=\"white\"\r\n          @getValue=\"getValue\"\r\n        ></Select> -->\r\n        </div>\r\n        <div class=\"main-container\">\r\n          <template>\r\n            <!-- 下拉刷新 -->\r\n            <fm-pull-refresh v-model=\"refreshing\" success-text=\"刷新成功\" @refresh=\"onRefresh\">\r\n              <!-- 无数据 -->\r\n              <template v-if=\"taskList.length == 0\">\r\n                <div class=\"no-data-img\">\r\n                  <fm-image fit=\"cover\" :src=\"require('@/assets/img/no-data-img.png')\" />\r\n                </div>\r\n                <div class=\"no-data-text\">\r\n                  <div class=\"no-data-text-descripe\">暂无数据</div>\r\n                </div>\r\n              </template>\r\n              <!-- 列表 -->\r\n              <fm-list\r\n                v-else\r\n                v-model=\"loading\"\r\n                :finished=\"finished\"\r\n                finished-text=\"没有更多了\"\r\n                @load=\"onLoad\"\r\n                :offset=\"0\"\r\n              >\r\n                <div>\r\n                  <div v-for=\"(item, index) in taskList\" :key=\"index\">\r\n                    <!-- 执行中卡片 -->\r\n                    <InfoCardWorking\r\n                      :cardInfo=\"item\"\r\n                      @executeWorking=\"executeWorking\"\r\n                      v-if=\"selectedTab == '执行中'\"\r\n                    ></InfoCardWorking>\r\n                    <!-- 未巡检卡片 -->\r\n                    <InfoCardNotAndDone\r\n                      :cardInfo=\"item\"\r\n                      cardType=\"not\"\r\n                      @transmitEvent=\"transmitEvent\"\r\n                      v-else-if=\"selectedTab == '未开始'\"\r\n                      @startEvent=\"startEvent\"\r\n                    ></InfoCardNotAndDone>\r\n                    <!-- 已完成卡片 -->\r\n                    <InfoCardNotAndDone\r\n                      :cardInfo=\"item\"\r\n                      cardType=\"done\"\r\n                      @executeDone=\"executeDone\"\r\n                      v-else\r\n                    >\r\n                    </InfoCardNotAndDone>\r\n                  </div>\r\n                </div>\r\n              </fm-list>\r\n            </fm-pull-refresh>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  NavBar,\r\n  Search,\r\n  Toast,\r\n  Cell,\r\n  CellGroup,\r\n  PullRefresh,\r\n  List,\r\n  Sidebar,\r\n  SidebarItem,\r\n  SwipeCell,\r\n  Button,\r\n  NoticeBar,\r\n  Icon,\r\n  Dialog,\r\n} from 'fawkes-mobile-lib'\r\n// 执行中信息卡片\r\nimport InfoCardWorking from './InfoCardWorking.vue'\r\n// 未巡检、已完成信息卡片\r\nimport InfoCardNotAndDone from './InfoCardNotAndDone.vue'\r\n// 下拉选择框\r\nimport Select from '@/views/Inspection/Select.vue'\r\nimport { queryTaskList } from './api'\r\n\r\nexport default {\r\n  name: 'Inspection',\r\n  components: {\r\n    [NavBar.name]: NavBar,\r\n    [Search.name]: Search,\r\n    [Toast.name]: Toast,\r\n    [Cell.name]: Cell,\r\n    [CellGroup.name]: CellGroup,\r\n    [PullRefresh.name]: PullRefresh,\r\n    [List.name]: List,\r\n    [Sidebar.name]: Sidebar,\r\n    [SidebarItem.name]: SidebarItem,\r\n    [SwipeCell.name]: SwipeCell,\r\n    [Button.name]: Button,\r\n    [NoticeBar.name]: NoticeBar,\r\n    [Icon.name]: Icon,\r\n    [Dialog.name]: Dialog,\r\n    InfoCardWorking,\r\n    InfoCardNotAndDone,\r\n    Select,\r\n  },\r\n  data() {\r\n    return {\r\n      taskList: [], // 任务列表\r\n      activeKey: 0,\r\n      searchValue: '', // 搜索文字\r\n      tabs: ['执行中', '未开始', '已完成'],\r\n      pageSize: 10,\r\n      refreshing: false, // 下拉刷新是否处于加载中状态，下拉时组件会自动设置true\r\n      loading: false, // 列表加载更多时控制加载状态，加载时组件会自动设置为true，加载完成后需手动设置为false\r\n      finished: false, // 列表加载更多时控制加载状态，全部加载完成时需设置为true\r\n      inspDateTypeList: [\r\n        { type: 1, name: '全部时间', value: '全部时间' },\r\n        { type: 1, name: '近一周', value: '近一周' },\r\n        { type: 1, name: '近一月', value: '近一月' },\r\n        { type: 1, name: '近三月', value: '近三月' },\r\n      ],\r\n      inspTaskTypeList: [\r\n        { type: 2, name: '全部类型', value: '全部类型' },\r\n        { type: 2, name: '人巡', value: '人巡' },\r\n        { type: 2, name: '车辆巡检', value: '车巡' },\r\n        { type: 2, name: '管廊巡检', value: '管廊巡检' },\r\n        { type: 2, name: '泵站巡检', value: '泵站巡检' },\r\n      ],\r\n      dateType: '全部时间',\r\n      inspTaskType: '全部类型',\r\n      // tab切换标题\r\n      selectedTab: '执行中',\r\n      working: '执行中',\r\n      notStart: '未开始',\r\n      workDone: '已完成',\r\n      nowClickTask: {}, // 当前点击的任务，传递给MapPage组件\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    Toast.loading({\r\n      message: '加载中...',\r\n      forbidClick: true,\r\n      duration: 0,\r\n    })\r\n    this.onRefresh()\r\n  },\r\n  computed: {\r\n    bgSrc() {\r\n      let src = ''\r\n      switch (this.selectedTab) {\r\n        case '执行中':\r\n          src = require('@/assets/img/selectLeftBg.png')\r\n          break\r\n\r\n        case '已完成':\r\n          src = require('@/assets/img/selectRightBg.png')\r\n          break\r\n\r\n        case '未开始':\r\n          src = require('@/assets/img/selectBg.png')\r\n          break\r\n\r\n        default:\r\n          src = require('@/assets/img/selectLeftBg.png')\r\n          break\r\n      }\r\n      return src\r\n    },\r\n  },\r\n  methods: {\r\n    // select框选择回调\r\n    getValue(type, name, value) {\r\n      if (type === 1) {\r\n        this.dateType = value\r\n      } else if (type === 2) {\r\n        this.inspTaskType = value\r\n      }\r\n      Toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0,\r\n      })\r\n      this.onRefresh()\r\n    },\r\n    // tab切换回调\r\n    changeType(name, title) {\r\n      Toast.loading({\r\n        message: '加载中...',\r\n        forbidClick: true,\r\n        duration: 0,\r\n      })\r\n      this.selectedTab = name\r\n      this.onRefresh()\r\n    },\r\n    // 当组件滚动到底部时，会触发 load 事件并将 loading 设置成 true\r\n    onLoad() {\r\n      this.pageNum = this.pageNum + 1\r\n      this.getList()\r\n    },\r\n    // 页面加载、下拉刷新\r\n    onRefresh() {\r\n      // 重置列表page、list值\r\n      this.pageNum = 1\r\n      // 任务列表\r\n      this.taskList = []\r\n\r\n      this.loading = true\r\n      this.finished = false\r\n\r\n      this.getList()\r\n    },\r\n    // 获取列表数据\r\n    getList() {\r\n      let startTime = ''\r\n      switch (this.dateType) {\r\n        case '近一周':\r\n          startTime = this.$dayjs().subtract(7, 'day').format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        case '近一月':\r\n          startTime = this.$dayjs().subtract(1, 'month').format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        case '近三月':\r\n          startTime = this.$dayjs().subtract(3, 'month').format('YYYY-MM-DD HH:mm:ss')\r\n          break\r\n        default:\r\n          startTime = ''\r\n          break\r\n      }\r\n      let searchParams = {\r\n        page: this.pageNum,\r\n        size: this.pageSize,\r\n        // 任务开始时间\r\n        taskStartTime: startTime,\r\n        // 任务结束时间\r\n        taskEndTime: this.$dayjs().format('YYYY-MM-DD HH:mm:ss'),\r\n      }\r\n\r\n      // 状态（0未开始 1执行中 2已完成）\r\n      switch (this.selectedTab) {\r\n        case '执行中':\r\n          searchParams.taskStatus = '1'\r\n          break\r\n        case '未开始':\r\n          searchParams.taskStatus = '0'\r\n          break\r\n        case '已完成':\r\n          searchParams.taskStatus = '2'\r\n          break\r\n        default:\r\n          searchParams.taskStatus = '1'\r\n          break\r\n      }\r\n      // 固定为未开始\r\n      // searchParams.taskStatus = '0'\r\n\r\n      queryTaskList(searchParams)\r\n        .then((res) => {\r\n          if (res.data) {\r\n            console.log('检漏任务', res)\r\n            this.taskList = [...this.taskList, ...res.data.records]\r\n\r\n            // 若数据已全部加载完毕，则直接将 finished 设置成 true，展示: 没有更多了\r\n            if (res.data.current >= res.data.pages) {\r\n              this.finished = true\r\n            }\r\n            // 下拉刷新状态\r\n            this.refreshing = false\r\n          }\r\n        })\r\n        .catch(() => {\r\n          // 若数据已全部加载完毕，则直接将 finished 设置成 true，展示: 没有更多了\r\n          this.finished = true\r\n        })\r\n        .finally(() => {\r\n          Toast.clear()\r\n          this.loading = false\r\n        })\r\n    },\r\n    // 未开始-转发\r\n    transmitEvent(item) {\r\n      console.log('转发', item)\r\n    },\r\n    // 未开始-开始\r\n    startEvent(item) {\r\n      console.log('开始', item)\r\n      // 当前点击的任务，传递给MapPage组件\r\n      this.nowClickTask = item\r\n      // 对于未巡检的任务第一次进入巡检任务需要更新任务状态\r\n      this.executeWorking(item, true)\r\n    },\r\n    // 执行中-继续\r\n    executeWorking(item, isNew = false) {\r\n      item.taskType = '人巡'\r\n      console.log('执行中-继续', item)\r\n      // 当前点击的任务，传递给MapPage组件\r\n      this.nowClickTask = item\r\n\r\n      let queryData = {\r\n        taskId: item.id,\r\n        isNew: isNew,\r\n        isView: false,\r\n        taskType: item.taskType,\r\n        nowClickTask: this.nowClickTask,\r\n      }\r\n      // 将该检漏任务数据存储在本地，避免进入工单页后再返回数据缺失\r\n      localStorage.setItem('leakDetectionData', null)\r\n      localStorage.setItem('leakDetectionData', JSON.stringify(queryData))\r\n\r\n      this.$router.push({\r\n        name: 'LeakDetectionMapPage',\r\n      })\r\n    },\r\n    // 已完成-查看\r\n    executeDone(item) {\r\n      item.taskType = '人巡'\r\n      console.log('已完成-查看', item)\r\n      // 当前点击的任务，传递给MapPage组件\r\n      this.nowClickTask = item\r\n\r\n      let queryData = {\r\n        taskId: item.id,\r\n        isNew: false,\r\n        isView: true,\r\n        taskType: item.taskType,\r\n        nowClickTask: this.nowClickTask,\r\n      }\r\n      // 将该检漏任务数据存储在本地，避免进入工单页后再返回数据缺失\r\n      localStorage.setItem('leakDetectionData', null)\r\n      localStorage.setItem('leakDetectionData', JSON.stringify(queryData))\r\n\r\n      this.$router.push({\r\n        name: 'LeakDetectionMapPage',\r\n      })\r\n    },\r\n    // 新增\r\n    add() {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: { type: 'add' },\r\n      })\r\n    },\r\n    // 编辑\r\n    handleEdit(row) {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: {\r\n          type: 'edit',\r\n          id: row.id,\r\n        },\r\n      })\r\n    },\r\n    // 删除\r\n    handleDelete(row) {\r\n      Dialog.confirm({\r\n        title: '提示',\r\n        message: '确认是否删除?',\r\n      })\r\n        .then(() => {\r\n          let idList = []\r\n          idList.push(row.id)\r\n\r\n          deleteCommonForm(idList).then((res) => {\r\n            if (res.status) {\r\n              Toast('删除成功')\r\n              this.onRefresh()\r\n            } else {\r\n              Toast(res.message)\r\n            }\r\n          })\r\n        })\r\n        .catch(() => {})\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n// ecf4ff\r\n// 隐藏滚动条\r\n&::-webkit-scrollbar {\r\n  display: none; // Chrome | Safari\r\n}\r\n\r\n.main {\r\n  background-color: #055ffc !important;\r\n  height: 100%;\r\n\r\n  .main-bg {\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  .content {\r\n    margin-top: 40px;\r\n    position: relative;\r\n    background: #d4e8fc;\r\n    height: calc(100% - 46px);\r\n    width: 100%;\r\n    border-top-left-radius: 24px;\r\n    border-top-right-radius: 24px;\r\n\r\n    .bgImg {\r\n      position: absolute;\r\n      height: 100px;\r\n      z-index: 1;\r\n      top: -20px;\r\n    }\r\n\r\n    .middle {\r\n      left: 240px;\r\n    }\r\n\r\n    .right {\r\n      right: 0;\r\n    }\r\n  }\r\n}\r\n\r\n// 顶部标题背景色\r\n/deep/.fm-nav-bar__content {\r\n  background-color: transparent;\r\n}\r\n\r\n/deep/.fm-hairline--bottom::after {\r\n  border-bottom-width: 0;\r\n}\r\n\r\n/deep/.fm-nav-bar__title {\r\n  color: #ffffff !important;\r\n}\r\n\r\n// tab切换栏\r\n// 更改背景色\r\n/deep/.fm-tabs__nav--line {\r\n  background-color: #d4e8fc;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  border-top-left-radius: 24px;\r\n  border-top-right-radius: 24px;\r\n}\r\n\r\n/deep/.fm-nav-bar {\r\n  background: transparent;\r\n}\r\n\r\n/deep/ .fm-nav-bar .fm-icon {\r\n  color: #ffffff !important;\r\n}\r\n\r\n// 每个tab高度变低\r\n/deep/.fm-tab {\r\n  line-height: 72px;\r\n  // height: 80%;\r\n  // border-radius: 20px 20px 0px 0px;\r\n  // background-image: linear-gradient(40deg, #99cc33, #ff6666, #336699, #ff0033);\r\n  // background-image: linear-gradient(180deg, #d0e7ff, #d3e8fe, #dbebff, #ecf4ff);\r\n}\r\n\r\n// 取消选中横条\r\n/deep/.fm-tabs__line {\r\n  width: 0 !important;\r\n}\r\n\r\n// 选中效果\r\n/deep/.fm-tab--active {\r\n  // 梯形样式\r\n  // height: 0;\r\n  // width: 100px;\r\n  // border-width: 0 20px 90px 20px;\r\n  // border-style: none solid solid;\r\n  // border-color: transparent transparent rgb(141, 247, 155);\r\n\r\n  // height: 100%;\r\n  font-size: 32px;\r\n  font-family: PingFangSC-Semibold, PingFang SC;\r\n  font-weight: 600;\r\n  color: #191919;\r\n}\r\n\r\n// 选中tab的文字样式\r\n/deep/.fm-tab--active .fm-tab__text--ellipsis {\r\n  // margin-top: 90px;\r\n  z-index: 1;\r\n}\r\n\r\n// select选择框\r\n.selectStyle {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 690px;\r\n  margin: 24px auto 12px;\r\n}\r\n\r\n.main-container {\r\n  height: calc(100% - 208px);\r\n  overflow: auto;\r\n  background-color: #d4e8fc;\r\n}\r\n\r\n/* 暂无数据begin */\r\n.no-data-img {\r\n  margin: 200px 95px 0 95px;\r\n}\r\n\r\n.no-data-text {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.no-data-text-descripe {\r\n  font-size: 32px;\r\n  font-weight: 400;\r\n  color: #999999;\r\n}\r\n\r\n/* 暂无数据end */\r\n/* 解决下拉时，数据和全部加载的提示文案超出列表元素不显示的问题 */\r\n/deep/ .fm-pull-refresh {\r\n  overflow: visible;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__content {\r\n  height: 88px;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__title {\r\n  font-size: 36px;\r\n  color: #ffffff !important;\r\n  font-weight: 600;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar .fm-icon {\r\n  color: #027aff !important;\r\n}\r\n\r\n.task-container /deep/ .fm-nav-bar__arrow {\r\n  font-size: 48px;\r\n}\r\n\r\n.fm-sidebar {\r\n  width: 100%;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  border-bottom: 2px solid #ebedf0;\r\n}\r\n\r\n.fm-cell::after {\r\n  border: none;\r\n}\r\n\r\n.fm-cell-group {\r\n  margin-top: 24px;\r\n}\r\n\r\n/deep/ .fm-swipe-cell__right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/deep/ .fm-button--square {\r\n  border-radius: 50%;\r\n  width: 106px;\r\n  height: 106px;\r\n  padding: 0;\r\n  margin-right: 20px;\r\n}\r\n\r\n.bottom {\r\n  position: fixed;\r\n  bottom: 24px;\r\n  right: 44px;\r\n  background-color: #027aff;\r\n  width: 102px;\r\n  height: 102px;\r\n  line-height: 102px;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  z-index: 1000;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]}]}