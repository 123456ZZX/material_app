{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\FlawsManagement\\addFlaws.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\FlawsManagement\\addFlaws.vue","mtime":1705912915789},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBFTlVNIH0gZnJvbSAnQC9zdG9yZS9TdGF0ZS9zdGF0ZVR5cGVzJw0KaW1wb3J0IFVwbG9hZGVyIGZyb20gJy4vdXBsb2FkL1VwbG9hZGVyJzsNCi8vIGltcG9ydCBVcGxvYWRlciBmcm9tICdAL2NvbXBvbmVudHMvdXBsb2FkL1VwbG9hZGVyLnZ1ZScNCmltcG9ydCBmaWxlVXBsb2FkIGZyb20gJ0AvY29tcG9uZW50cy9maWxlVXBsb2FkL2luZGV4LnZ1ZSc7DQppbXBvcnQgeyBUb2FzdCB9IGZyb20gJ2Zhd2tlcy1tb2JpbGUtbGliJzsNCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiYWRkRmxhd3MiLA0KICAgIGNvbXBvbmVudHM6IHsgVXBsb2FkZXIsIGZpbGVVcGxvYWQgfSwNCiAgICBkYXRhKCkgew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgd3BnSGVhZGVyOiB7fSwNCiAgICAgICAgICAgIHRva2VuOiAnJywNCiAgICAgICAgICAgIHBpY1VwOiAnJywNCiAgICAgICAgICAgIGF0dGFjaG1lbnQ6ICcnLA0KICAgICAgICAgICAgZmlsZUxpc3Q6IFtdLC8vIOWbvueJh+WkmuWqkuS9kw0KICAgICAgICAgICAgLy8g6YCJ5oup5ZmoDQogICAgICAgICAgICBjb21tb25Gb3JtOiB7DQogICAgICAgICAgICAgICAgZGVmZWN0RnJvbTogJ+W3oeajgCcsLy/nvLrpmbfmnaXmupDvvIznp7vliqjnq6/pu5jorqTlt6Hmo4ANCiAgICAgICAgICAgICAgICBiaWdUeXBlOiAnJywvL+S4muWKoeexu+Weiw0KICAgICAgICAgICAgICAgIHNtYWxsVHlwZTogJycsLy/orr7mlr3nsbvlnosNCiAgICAgICAgICAgICAgICBzbWFsbENvZGU6ICcnLC8v6K6+5pa957yW5Y+3DQogICAgICAgICAgICAgICAgcG9zaXRpb246ICcnLC8v57y66Zm35L2N572u77yMeHjot6/lsLHlpb3vvIznu4/nuqzluqbpnIDopoHkvYbkuI3nlKjmmL7npLoNCiAgICAgICAgICAgICAgICBsbmc6ICcnLA0KICAgICAgICAgICAgICAgIGxhdDogJycsDQogICAgICAgICAgICAgICAgcHJvcGVydGllczoge30sDQogICAgICAgICAgICAgICAgZGVzY3JpYmU6ICcnLC8v546w5Zy65o+P6L+wDQogICAgICAgICAgICAgICAgbWVkaWE6IFtdLC8v5aSa5aqS5L2T6ZmE5Lu2DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgdXBQZXJzb246ICcnLA0KICAgICAgICAgICAgdXBUaW1lOiAnJywNCiAgICAgICAgICAgIC8vIHZhbHVlOiAnJywNCiAgICAgICAgICAgIGNvbHVtbnM6IFtdLA0KICAgICAgICAgICAgc2hvd1BpY2tlcjogZmFsc2UsLy/lsLHkuIDmnaHmrKEg6YCJ5oup5ZmoDQogICAgICAgICAgICBzaG93UGlja2VyRGVmZWN0OiBmYWxzZSwvL+aWsOWinue8uumZtyDlj6/lpJrmrKEg6YCJ5oup5ZmoDQogICAgICAgICAgICB3aGljaFBpY2tlcjogJycsDQogICAgICAgICAgICAvLyBkZWZlY3RGcm9tTGlzdDogW10sDQogICAgICAgICAgICAvLyBiaWdUeXBlTGlzdDogW10sDQogICAgICAgICAgICAvLyBzbWFsbFR5cGVPYmo6IHsNCiAgICAgICAgICAgIC8vICAgICAn5rGh5rC0JzogWyfmsaHmsLTnrqHnur8nLCAn5qOA5p+l5LqVJywgJ+aOkuaUvuWPoycsICfpl7jpl6gnXSwgJ+mbqOawtCc6IFsn6Zuo5rC05Y+jJywgJ+mbqOawtOeuoee6vycsICfmo4Dmn6XkupUnLCAn5o6S5pS+5Y+jJywgJ+mXuOmXqCddLA0KICAgICAgICAgICAgLy8gICAgICfnu5nmsLQnOiBbJ+mFjeawtOeuoee6vycsICfovpPmsLTnrqHnur8nLCAn5Zue5rC0566h57q/JywgJ+e7meawtOmYgOmXqCddLCAn5YaN55Sf5rC0JzogWyflho3nlJ/msLTnrqHnur8nLCAn5YaN55Sf5rC05Y6CJ10NCiAgICAgICAgICAgIC8vIH0sDQogICAgICAgICAgICAvLyBkZWZlY3RUeXBlTGlzdDogW10sDQogICAgICAgICAgICAvLyBkZWZlY3RGcm9tTGlzdERpYzogeyAn5beh5qOAJzogJ0luc3BlY3Rpb24nLCAn5a6i5pyNJzogJ2NvbXBsYWluJywgJ+WFu+aKpCc6ICdtYWludGFpbicsICfnm5HmtYsnOiAnbW9uaXRvcicgfSwNCiAgICAgICAgICAgIC8vIGJpZ1R5cGVMaXN0RGljOiB7ICfmsaHmsLQnOiAnc2V3YWdlJywgJ+mbqOawtCc6ICdyYWluJywgJ+e7meawtCc6ICdzdXBwbHknLCAn5YaN55Sf5rC0JzogJ3JlY3ljbCcgfSwNCiAgICAgICAgICAgIC8vIHNtYWxsVHlwZURpYzogew0KICAgICAgICAgICAgLy8gICAgICfpm6jmsLTlj6MnOiAnY29tYicsICfpm6jmsLTnrqHnur8nOiAncGlwZWxpbmUnLCAn5rGh5rC0566h57q/JzogJ3BpcGVsaW5lJywgJ+ajgOafpeS6lSc6ICd3ZWxsJywgJ+aOkuaUvuWPoyc6ICdvdXRmYWxsJywgJ+mXuOmXqCc6ICdnYXRlJywNCiAgICAgICAgICAgIC8vICAgICAn5raI54Gr5qCTJzogJ2ZpcmVoeWRyYW50JywgJ+mFjeawtOeuoee6vyc6ICdkaXN0cmlidXRlJywgJ+i+k+awtOeuoee6vyc6ICdkZWxpdmVyeScsICflm57msLTnrqHnur8nOiAnY2lyY3VsYXRpbmcnLCAn57uZ5rC06ZiA6ZeoJzogJ3ZhbHZlJywNCiAgICAgICAgICAgIC8vICAgICAn5YaN55Sf5rC0566h57q/JzogJ3JlY3ljbGUnLCAn5YaN55Sf5rC05Y6CJzogJ3dhdGVyd29yaycsDQogICAgICAgICAgICAvLyB9LA0KICAgICAgICAgICAgLy8gZGVmZWN0VHlwZUxpc3REaWM6IHsgJ+S6leWupOeXheWusyc6ICdqc2JoJywgJ+S7quihqOazhOmcsic6ICdtZXRlckxlYWsnLCAn566h6YGT56C06KOCJzogJ3BpcGVQb21wJywgJ+S4pemHjeWgteWhnic6ICdiYWRGaWxsJyB9LA0KICAgICAgICAgICAgc3ViRm9ybUlEOiAxLA0KICAgICAgICAgICAgc3ViRm9ybXM6IFt7DQogICAgICAgICAgICAgICAgaWQ6IDEsDQogICAgICAgICAgICAgICAgZGVmZWN0VHlwZTogJycsDQogICAgICAgICAgICAgICAgbm90ZTogJycsLy/lpIfms6gNCiAgICAgICAgICAgICAgICBwaWM6IFtdLA0KICAgICAgICAgICAgfV0sDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNvbXB1dGVkOiB7DQogICAgICAgIC8vIOe8uumZt+adpea6kA0KICAgICAgICBkZWZlY3RGcm9tRGljKCkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdEZyb206ICcsIHRoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdEZyb20pOw0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdEZyb207DQogICAgICAgIH0sDQogICAgICAgIGRlZmVjdEZyb21MaXN0KCkgew0KICAgICAgICAgICAgbGV0IGxpc3QgPSBbXQ0KICAgICAgICAgICAgaWYgKHRoaXMuZGVmZWN0RnJvbURpYykgew0KICAgICAgICAgICAgICAgIHRoaXMuZGVmZWN0RnJvbURpYy5mb3JFYWNoKChkaWMpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKGRpY1snemgtQ04nXSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGxpc3QNCiAgICAgICAgfSwNCiAgICAgICAgZGVmZWN0RnJvbUxpc3REaWMoKSB7DQogICAgICAgICAgICBsZXQgbGlzdERpYyA9IHt9DQogICAgICAgICAgICBpZiAodGhpcy5kZWZlY3RGcm9tRGljKSB7DQogICAgICAgICAgICAgICAgdGhpcy5kZWZlY3RGcm9tRGljLmZvckVhY2goKGRpYykgPT4gew0KICAgICAgICAgICAgICAgICAgICBsaXN0RGljW2RpY1snemgtQ04nXV0gPSBkaWMuY29kZQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gbGlzdERpYw0KICAgICAgICB9LA0KICAgICAgICAvLyDnvLrpmbfnsbvlnosNCiAgICAgICAgZmF1bHRUeXBlc0RpYygpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLiRzdG9yZS5zdGF0ZVtFTlVNXS5waXBlTmV0RGVmZWN0VHlwZXMnLCB0aGlzLiRzdG9yZS5zdGF0ZVtFTlVNXS5waXBlTmV0RGVmZWN0VHlwZXMpDQogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGVbRU5VTV0ucGlwZU5ldERlZmVjdFR5cGVzOw0KICAgICAgICB9LA0KICAgICAgICBkZWZlY3RUeXBlTGlzdCgpIHsNCiAgICAgICAgICAgIGxldCBsaXN0ID0gW10NCiAgICAgICAgICAgIGlmICh0aGlzLmZhdWx0VHlwZXNEaWMpIHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5mYXVsdFR5cGVzRGljLmZpbHRlcihpdCA9PiBpdFsnemgtQ04nXS5pbmNsdWRlcyh0aGlzLmNvbW1vbkZvcm0uc21hbGxUeXBlKSkubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmZhdWx0VHlwZXNEaWMuZmlsdGVyKGl0ID0+IGl0Wyd6aC1DTiddLmluY2x1ZGVzKHRoaXMuY29tbW9uRm9ybS5zbWFsbFR5cGUpKVswXS5jaGlsZC5mb3JFYWNoKChkaWMpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaChkaWNbJ3poLUNOJ10pDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGxpc3QNCiAgICAgICAgfSwNCiAgICAgICAgZGVmZWN0VHlwZUxpc3REaWMoKSB7DQogICAgICAgICAgICBsZXQgbGlzdERpYyA9IHt9DQogICAgICAgICAgICBpZiAodGhpcy5mYXVsdFR5cGVzRGljKSB7DQogICAgICAgICAgICAgICAgdGhpcy5mYXVsdFR5cGVzRGljLmZvckVhY2goKGRpYykgPT4gew0KICAgICAgICAgICAgICAgICAgICBsaXN0RGljW2RpY1snemgtQ04nXV0gPSBkaWMuY29kZQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gbGlzdERpYw0KICAgICAgICB9LA0KICAgICAgICAvLyDns7vnu5/lrZflhbjomb3lj6tkZWZlY3RUeXBl77yM5L2G5a6e6ZmF5LqM57qn5Li6IOS4muWKoeexu+Weiy/orr7mlr3nsbvlnosNCiAgICAgICAgLy8g5Lia5Yqh57G75Z6LL+iuvuaWveexu+Weiw0KICAgICAgICBidXNEZXZpY2VUeXBlRGljKCkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdFR5cGU6ICcsIHRoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdFR5cGUpOw0KICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlW0VOVU1dLmRlZmVjdFR5cGU7DQogICAgICAgIH0sDQogICAgICAgIGJpZ1R5cGVMaXN0KCkgew0KICAgICAgICAgICAgbGV0IGxpc3QgPSBbXQ0KICAgICAgICAgICAgaWYgKHRoaXMuYnVzRGV2aWNlVHlwZURpYykgew0KICAgICAgICAgICAgICAgIHRoaXMuYnVzRGV2aWNlVHlwZURpYy5mb3JFYWNoKChkaWMpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKGRpY1snemgtQ04nXSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGxpc3QNCiAgICAgICAgfSwNCiAgICAgICAgYmlnVHlwZUxpc3REaWMoKSB7DQogICAgICAgICAgICBsZXQgbGlzdERpYyA9IHt9DQogICAgICAgICAgICBpZiAodGhpcy5idXNEZXZpY2VUeXBlRGljKSB7DQogICAgICAgICAgICAgICAgdGhpcy5idXNEZXZpY2VUeXBlRGljLmZvckVhY2goKGRpYykgPT4gew0KICAgICAgICAgICAgICAgICAgICBsaXN0RGljW2RpY1snemgtQ04nXV0gPSBkaWMuY29kZQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgICByZXR1cm4gbGlzdERpYw0KICAgICAgICB9LA0KICAgICAgICAvLyDkuoznuqctLeiuvuaWveexu+Weiw0KICAgICAgICBzbWFsbFR5cGVPYmooKSB7DQogICAgICAgICAgICBsZXQgbGlzdERpYyA9IHt9DQogICAgICAgICAgICBpZiAodGhpcy5idXNEZXZpY2VUeXBlRGljKSB7DQogICAgICAgICAgICAgICAgdGhpcy5idXNEZXZpY2VUeXBlRGljLmZvckVhY2goKGRpYykgPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgbGlzdCA9IFtdDQogICAgICAgICAgICAgICAgICAgIGRpYy5jaGlsZC5mb3JFYWNoKChzZWNvbmQpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3QucHVzaChzZWNvbmRbJ3poLUNOJ10pDQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgICAgIGxpc3REaWNbZGljWyd6aC1DTiddXSA9IGxpc3QNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGxpc3REaWMNCiAgICAgICAgfSwNCiAgICAgICAgc21hbGxUeXBlRGljKCkgew0KICAgICAgICAgICAgbGV0IGxpc3REaWMgPSB7fQ0KICAgICAgICAgICAgaWYgKHRoaXMuYnVzRGV2aWNlVHlwZURpYykgew0KICAgICAgICAgICAgICAgIHRoaXMuYnVzRGV2aWNlVHlwZURpYy5mb3JFYWNoKChkaWMpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgZGljLmNoaWxkLmZvckVhY2goKHNlY29uZCkgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgbGlzdERpY1tzZWNvbmRbJ3poLUNOJ11dID0gc2Vjb25kLmNvZGUNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgcmV0dXJuIGxpc3REaWMNCiAgICAgICAgfSwNCiAgICB9LA0KICAgIGNyZWF0ZWQoKSB7DQogICAgICAgIC8vIOi3r+eUsei/h+adpe+8jOW4puedgOWPguaVsA0KICAgICAgICB0aGlzLm9iakluZm8gPSB0aGlzLiRyb3V0ZS5xdWVyeS5tc2cNCiAgICAgICAgdGhpcy50b2tlbiA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnRva2VuDQogICAgICAgIC8vIOWbnuWhq+S/oeaBrw0KICAgICAgICB0aGlzLmNvbW1vbkZvcm0uYmlnVHlwZSA9IHRoaXMub2JqSW5mby5iaWdUeXBlIHx8ICcnDQogICAgICAgIHRoaXMuY29tbW9uRm9ybS5zbWFsbFR5cGUgPSB0aGlzLm9iakluZm8uc21hbGxUeXBlIHx8ICcnDQogICAgICAgIHRoaXMuY29tbW9uRm9ybS5zbWFsbENvZGUgPSB0aGlzLm9iakluZm8uY29kZSB8fCAnJw0KICAgICAgICB0aGlzLmNvbW1vbkZvcm0ucG9zaXRpb24gPSB0aGlzLm9iakluZm8ucm9hZF9uYW1lIHx8IFt0aGlzLm9iakluZm8ubG5nLCB0aGlzLm9iakluZm8ubGF0XS50b1N0cmluZygpDQogICAgICAgIC8vIOaPkOS6pOihqOWNleeUqOeahO+8jOS4jeWbnuWhq+aYvuekug0KICAgICAgICB0aGlzLmNvbW1vbkZvcm0ubG5nID0gdGhpcy5vYmpJbmZvLmxuZw0KICAgICAgICB0aGlzLmNvbW1vbkZvcm0ubGF0ID0gdGhpcy5vYmpJbmZvLmxhdA0KICAgICAgICB0aGlzLmNvbW1vbkZvcm0ucHJvcGVydGllcyA9IHRoaXMub2JqSW5mby5wcm9wZXJ0aWVzDQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8vIGZpbGVDaGFuZ2UoZmlsZSwgbWFyaywgcm93SXRlbSkgew0KICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ2ZpbGU6ICcsIGZpbGUpOw0KICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ21hcms6ICcsIG1hcmspOw0KICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ3Jvd0l0ZW06ICcsIHJvd0l0ZW0pOw0KICAgICAgICAvLyAgICAgbGV0IGFyciA9IFtdDQogICAgICAgIC8vICAgICBmaWxlLmZpbGVMaXN0LmZvckVhY2goaXQgPT4gew0KICAgICAgICAvLyAgICAgICAgIGFyci5wdXNoKA0KICAgICAgICAvLyAgICAgICAgICAgICB7DQogICAgICAgIC8vICAgICAgICAgICAgICAgICAiZmlsZVVybCI6IGl0LnVybCwNCiAgICAgICAgLy8gICAgICAgICAgICAgICAgICJmaWxlVHlwZSI6ICdpbWFnZScsDQogICAgICAgIC8vICAgICAgICAgICAgICAgICAiZmlsZVNpemUiOiBpdC5maWxlLnNpemUsDQogICAgICAgIC8vICAgICAgICAgICAgICAgICAiZmlsZUlkIjogaXQuZmlsZVRva2VuLA0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgIm5hbWUiOiBpdC5maWxlLm5hbWUsDQogICAgICAgIC8vICAgICAgICAgICAgICAgICAidXJsIjogaXQudXJsLA0KICAgICAgICAvLyAgICAgICAgICAgICAgICAgInVpZCI6IGl0LmZpbGVUb2tlbg0KICAgICAgICAvLyAgICAgICAgICAgICB9DQogICAgICAgIC8vICAgICAgICAgKQ0KICAgICAgICAvLyAgICAgfSkNCiAgICAgICAgLy8gICAgIGlmIChtYXJrID09ICflhazlhbEnKSB7DQogICAgICAgIC8vICAgICAgICAgLy8g5YWs5YWx55qEDQogICAgICAgIC8vICAgICAgICAgdGhpcy5jb21tb25Gb3JtLm1lZGlhLnB1c2goYXJyKQ0KICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCd0aGlzLmNvbW1vbkZvcm06ICcsIHRoaXMuY29tbW9uRm9ybSk7DQogICAgICAgIC8vICAgICB9IGVsc2Ugew0KICAgICAgICAvLyAgICAgICAgIC8vIOavj+adoee8uumZt+eahA0KICAgICAgICAvLyAgICAgICAgIHJvd0l0ZW0ucHVzaChhcnIpDQogICAgICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ3Jvd0l0ZW06ICcsIHJvd0l0ZW0pOw0KICAgICAgICAvLyAgICAgfQ0KICAgICAgICAvLyAgICAgY29uc29sZS5sb2coImFycjoiLCBhcnIpOw0KICAgICAgICAvLyB9LA0KICAgICAgICAvLyDlm77niYflpJrlqpLkvZMNCiAgICAgICAgZmlsZUNoYW5nZShyZWNhbGwsIG1hcmssIHJvd0l0ZW0pIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdyb3dJdGVtOiAnLCByb3dJdGVtKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtYXJrOiAnLCBtYXJrKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdyZWNhbGw6ICcsIHJlY2FsbCk7DQogICAgICAgICAgICAvLyB0aGlzLmZpbGVMaXN0ID0gcmVjYWxsLmZpbGVMaXN0DQogICAgICAgICAgICBjb25zb2xlLmxvZygndGhpcy5maWxlTGlzdDogJywgdGhpcy5maWxlTGlzdCk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygndGhpcy5hdHRhY2htZW50OiAnLCB0aGlzLmF0dGFjaG1lbnQpOw0KICAgICAgICAgICAgaWYgKHJlY2FsbC5yZXMpIHsNCiAgICAgICAgICAgICAgICBsZXQgZm9ybUZpbGUgPQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgImZpbGVVcmwiOiByZWNhbGwucmVzLnJlc3VsdERhdGEudXJsLA0KICAgICAgICAgICAgICAgICAgICAiZmlsZVR5cGUiOiByZWNhbGwucmVzLnJlc3VsdERhdGEuc3VmZml4LA0KICAgICAgICAgICAgICAgICAgICAiZmlsZVNpemUiOiByZWNhbGwucmVzLnJlc3VsdERhdGEuc2l6ZSwNCiAgICAgICAgICAgICAgICAgICAgImZpbGVJZCI6IHJlY2FsbC5yZXMucmVzdWx0RGF0YS5pZCwNCiAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiByZWNhbGwucmVzLnJlc3VsdERhdGEub2xkTmFtZSwNCiAgICAgICAgICAgICAgICAgICAgInVybCI6IHByb2Nlc3MuZW52LlZVRV9BUFBfVEhJUkRfUkVRVUVTVF9VUkwgKyAnL21haW4vdXNlckNlbnRlckFwaS9GaWxlTWFuYWdlci9kb3dubG9hZC8nICsgcmVjYWxsLnJlcy5yZXN1bHREYXRhLmlkLA0KICAgICAgICAgICAgICAgICAgICAidWlkIjogcmVjYWxsLnJlcy5yZXN1bHREYXRhLmlkDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmIChtYXJrID09ICflhazlhbEnKSB7DQogICAgICAgICAgICAgICAgICAgIC8vIOWFrOWFseeahA0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbkZvcm0ubWVkaWEucHVzaChmb3JtRmlsZSkNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuY29tbW9uRm9ybTogJywgdGhpcy5jb21tb25Gb3JtKTsNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAvLyDmr4/mnaHnvLrpmbfnmoQNCiAgICAgICAgICAgICAgICAgICAgcm93SXRlbS5wdXNoKGZvcm1GaWxlKQ0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncm93SXRlbTogJywgcm93SXRlbSk7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICAvLyDmlrDlop7nm7jlhbMNCiAgICAgICAgLy8g5paw5aKe57y66Zm3IOWtkOihqOmhuQ0KICAgICAgICBhZGRSb3coKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnc3ViRm9ybXPliY06ICcsIHRoaXMuc3ViRm9ybXMpOw0KICAgICAgICAgICAgdGhpcy5zdWJGb3Jtcy5wdXNoKHsNCiAgICAgICAgICAgICAgICBpZDogdGhpcy5zdWJGb3JtSUQgKz0gMSwNCiAgICAgICAgICAgICAgICBkZWZlY3RUeXBlOiAnJywNCiAgICAgICAgICAgICAgICBub3RlOiAnJywvL+Wkh+azqA0KICAgICAgICAgICAgICAgIHBpYzogW10sDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgY29uc29sZS5sb2coJ3N1YkZvcm1z5ZCOOiAnLCB0aGlzLnN1YkZvcm1zKTsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkZWZlY3RGcm9tTGlzdDogJywgdGhpcy5kZWZlY3RGcm9tTGlzdCk7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnZGVmZWN0RnJvbUxpc3REaWM6ICcsIHRoaXMuZGVmZWN0RnJvbUxpc3REaWMpOw0KICAgICAgICB9LA0KDQogICAgICAgIC8vIOWPlua2iA0KICAgICAgICBjb25jbGUoKSB7DQogICAgICAgICAgICAvLyBsZXQgcGljcyA9IFtdDQogICAgICAgICAgICAvLyB0aGlzLnN1YkZvcm1zLmZvckVhY2goKHNmKSA9PiB7DQogICAgICAgICAgICAvLyAgICAgc2YucGljLmZvckVhY2goKHApID0+IHsNCiAgICAgICAgICAgIC8vICAgICAgICAgcGljcy5wdXNoKHApDQogICAgICAgICAgICAvLyAgICAgfSkNCiAgICAgICAgICAgIC8vIH0pDQogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygncGljczogJywgcGljcyk7DQogICAgICAgICAgICAvLyBwaWNzLmZvckVhY2goKHBzKSA9PiB7DQogICAgICAgICAgICAvLyAgICAgdGhpcy4kcmVmcy5waWNVcC5yZW1vdmVGaWxlKHBzKQ0KICAgICAgICAgICAgLy8gfSkNCiAgICAgICAgICAgIHRoaXMuY29tbW9uRm9ybS5tZWRpYS5mb3JFYWNoKChtKSA9PiB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ206ICcsIG0pOw0KICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuYXR0YWNobWVudC5yZW1vdmVGaWxlKG0pDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3RoaXMuJHJlZnMuYXR0YWNobWVudDogJywgdGhpcy4kcmVmcy5hdHRhY2htZW50KTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICB0aGlzLmF0dGFjaG1lbnQgPSAnJw0KICAgICAgICAgICAgdGhpcy5waWNVcCA9ICcnDQogICAgICAgICAgICB0aGlzLnN1YkZvcm1zID0gWw0KICAgICAgICAgICAgICAgIC8vIHsNCiAgICAgICAgICAgICAgICAvLyAgICAgaWQ6IHRoaXMuc3ViRm9ybUlELTEsDQogICAgICAgICAgICAgICAgLy8gICAgIC8vIGRlZmVjdFR5cGU6ICcnLA0KICAgICAgICAgICAgICAgIC8vICAgICAvLyBub3RlOiAnJywvL+Wkh+azqA0KICAgICAgICAgICAgICAgIC8vICAgICAvLyBwaWM6IFtdLA0KICAgICAgICAgICAgICAgIC8vIH0NCiAgICAgICAgICAgIF0NCiAgICAgICAgICAgIHRoaXMuY29tbW9uRm9ybSA9IHsNCiAgICAgICAgICAgICAgICBkZWZlY3RGcm9tOiAn5beh5qOAJywvL+e8uumZt+adpea6kO+8jOenu+WKqOerr+m7mOiupOW3oeajgA0KICAgICAgICAgICAgICAgIGJpZ1R5cGU6ICcnLC8v5Lia5Yqh57G75Z6LDQogICAgICAgICAgICAgICAgc21hbGxUeXBlOiAnJywvL+iuvuaWveexu+Weiw0KICAgICAgICAgICAgICAgIHNtYWxsQ29kZTogJycsLy/orr7mlr3nvJblj7cNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJycsLy/nvLrpmbfkvY3nva7vvIx4eOi3r+WwseWlve+8jOe7j+e6rOW6pumcgOimgeS9huS4jeeUqOaYvuekug0KICAgICAgICAgICAgICAgIGxuZzogJycsDQogICAgICAgICAgICAgICAgbGF0OiAnJywNCiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiB7fSwNCiAgICAgICAgICAgICAgICBkZXNjcmliZTogJycsLy/njrDlnLrmj4/ov7ANCiAgICAgICAgICAgICAgICBtZWRpYTogW10sLy/lpJrlqpLkvZPpmYTku7YNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGxldCB0aW1lID0gbmV3IERhdGUoKQ0KICAgICAgICAgICAgdGhpcy51cFRpbWUgPSB0aW1lLnRvTG9jYWxlU3RyaW5nKCkNCiAgICAgICAgfSwNCiAgICAgICAgLy/mj5DkuqTliY0g5qCh6aqM5pyq6YCa6L+HDQogICAgICAgIG9uRmFpbGVkKCkgew0KICAgICAgICAgICAgaWYgKHRoaXMuY29tbW9uRm9ybS5kZWZlY3RGcm9tID09ICcnIHx8IHRoaXMuY29tbW9uRm9ybS5iaWdUeXBlID09ICcnIHx8IHRoaXMuY29tbW9uRm9ybS5zbWFsbFR5cGUgPT0gJycpIHsNCiAgICAgICAgICAgICAgICBUb2FzdCh7DQogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fmo4Dmn6Xlv4Xloavkv6Hmga8nLA0KICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsDQogICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIC8vIOaPkOS6pA0KICAgICAgICBvblN1Ym1pdCgpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvblN1Ym1pdDogJywgdGhpcy5zdWJGb3JtLCB0aGlzLmNvbW1vbkZvcm0sIHRoaXMudXBQZXJzb24sIHRoaXMudXBUaW1lKTsNCiAgICAgICAgICAgIFRvYXN0KHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5o+Q5Lqk5LitJywNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcsDQogICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdzbWFsbFR5cGVEaWM6ICcsIHRoaXMuc21hbGxUeXBlRGljKTsNCiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCd0aGlzLmNvbW1vbkZvcm0uc21hbGxUeXBlOiAnLCB0aGlzLmNvbW1vbkZvcm0uc21hbGxUeXBlKTsNCiAgICAgICAgICAgIHRoaXMuc3ViRm9ybXMuZm9yRWFjaCgoc2YpID0+IHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndGhpcy5zdWJGb3JtczogJywgdGhpcy5zdWJGb3Jtcyk7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NmOiAnLCBzZik7DQogICAgICAgICAgICAgICAgbGV0IHBhcmFtcyA9IHsNCiAgICAgICAgICAgICAgICAgICAgInRlbXBsYXRlQ29kZSI6ICJkZWZlY3RfdGVtcGxhdGUiLA0KICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAn57y66Zm35paw5aKeJywvL+ihqOWNlemhueaXoO+8jOS9huaYr+aOpeWPo+W/heWhq+Wtl+autQ0KICAgICAgICAgICAgICAgICAgICAic3lzU291cmNlIjogIm91dHdvcmsiLA0KICAgICAgICAgICAgICAgICAgICAiY3JlYXRlVHlwZSI6ICJBUFAiLA0KICAgICAgICAgICAgICAgICAgICAvLyAgZ3JpZF9pZDogJ3hqMDAxJywvL+e9keagvOS7u+WKoUlEDQogICAgICAgICAgICAgICAgICAgIC8vICJwcmlvcml0eSI6IHRoaXMuZm9ybS5wcmlvcml0eSwvL+S8mOWFiOe6p++8jOmrmOS4reS9ju+8m+ihqOWNlemhueaXoA0KICAgICAgICAgICAgICAgICAgICAibG9uZ2l0dWRlIjogdGhpcy5jb21tb25Gb3JtLmxuZywNCiAgICAgICAgICAgICAgICAgICAgImxhdGl0dWRlIjogdGhpcy5jb21tb25Gb3JtLmxhdCwNCiAgICAgICAgICAgICAgICAgICAgInF1ZXN0aW9uRGVzY3JpYmUiOiB0aGlzLmNvbW1vbkZvcm0uZGVzY3JpYmUsDQogICAgICAgICAgICAgICAgICAgICJhZGRyZXNzIjogdGhpcy5jb21tb25Gb3JtLnByb3BlcnRpZXMucm9hZF9uYW1lIHx8ICcnLA0KICAgICAgICAgICAgICAgICAgICAiZm9ybUpzb24iOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAndGFza19pZCc6IHRoaXMuJHJvdXRlLnF1ZXJ5LnRhc2tJZCwgLy/lt6Hmo4Dku7vliqFJRA0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gImZhdWx0VHlwZXMiOiBzZi5kZWZlY3RUeXBlLC8v5a2Q6KGo5q+P5LiA6aG5IOe8uumZt+exu+Weiw0KICAgICAgICAgICAgICAgICAgICAgICAgImZhdWx0VHlwZXMiOiB0aGlzLmRlZmVjdFR5cGVMaXN0RGljW3NmLmRlZmVjdFR5cGVdLA0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gImZpbGVzIjogc2YucGljLmNvbmNhdCh0aGlzLmNvbW1vbkZvcm0ubWVkaWEpLC8v5a2Q6KGo5q+P5LiA6aG5IOeFp+eJh+e7hA0KICAgICAgICAgICAgICAgICAgICAgICAgImZpbGVzIjogdGhpcy5jb21tb25Gb3JtLm1lZGlhLC8v5a2Q6KGo5q+P5LiA6aG5IOeFp+eJh+e7hA0KICAgICAgICAgICAgICAgICAgICAgICAgImhhbmRsZUltZ3MiOiBzZi5waWMsDQogICAgICAgICAgICAgICAgICAgICAgICAiaGFuZGxlUmVtYXJrIjogc2Yubm90ZSwvL+WtkOihqOavj+S4gOmhuSDlpIfms6gNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vICJoYW5kbGVUeXBlIjogIkRJUkVDVF9QUk9DRVNTSU5HIiwgLy/lpITnkIbmlrnlvI/vvIzkvovlpoLnm7TmjqXlpITnkIbvvJvooajljZXpobnml6ANCiAgICAgICAgICAgICAgICAgICAgICAgIC8vICJkZWZlY3RGcm9tIjogdGhpcy5jb21tb25Gb3JtLmRlZmVjdEZyb20sDQogICAgICAgICAgICAgICAgICAgICAgICAiZGVmZWN0RnJvbSI6IHRoaXMuZGVmZWN0RnJvbUxpc3REaWNbdGhpcy5jb21tb25Gb3JtLmRlZmVjdEZyb21dLA0KICAgICAgICAgICAgICAgICAgICAgICAgImRldmljZV90eXBlIjogW3RoaXMuYmlnVHlwZUxpc3REaWNbdGhpcy5jb21tb25Gb3JtLmJpZ1R5cGVdLCB0aGlzLnNtYWxsVHlwZURpY1t0aGlzLmNvbW1vbkZvcm0uc21hbGxUeXBlXV0sDQogICAgICAgICAgICAgICAgICAgICAgICAvLyAiZGV2aWNlX3R5cGUiOiBbdGhpcy5jb21tb25Gb3JtLmJpZ1R5cGUsIHRoaXMuY29tbW9uRm9ybS5zbWFsbFR5cGVdLA0KICAgICAgICAgICAgICAgICAgICAgICAgImRldmljZUNvZGUiOiB0aGlzLmNvbW1vbkZvcm0uc21hbGxDb2RlLA0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gImRldmljZURldGFpbCI6IHRoaXMuY29tbW9uRm9ybS5wcm9wZXJ0aWVzLA0KICAgICAgICAgICAgICAgICAgICAgICAgImRldmljZURldGFpbCI6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibG9uZ2l0dWRlIjogdGhpcy5jb21tb25Gb3JtLmxuZywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAibGF0aXR1ZGUiOiB0aGlzLmNvbW1vbkZvcm0ubGF0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICJyb2FkX25hbWUiOiB0aGlzLmNvbW1vbkZvcm0ucHJvcGVydGllcz8ucm9hZF9uYW1lIHx8ICcnDQogICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgLy/kuIvkuKroioLngrnlpITnkIbkuroNCiAgICAgICAgICAgICAgICAgICAgICAgICJ0aWNrZXREaXNwYXRjaFVzZXJJZHMiOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICflpITnkIbkuronLC8v5aSE55CG5Lq65ZCN56ewDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJpZCI6ICIxMSIsLy/lpITnkIbkurpJRA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICI5OSINCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9Ow0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfliJvlu7rooajljZXnmoRwYXJhbXM6ICcsIHBhcmFtcyk7DQogICAgICAgICAgICAgICAgdGhpcy53cGdIZWFkZXIgPSB7DQogICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsDQogICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICdCZWFyZXIgJyArIHRoaXMudG9rZW4sDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIC8vIOaPkOS6pA0KICAgICAgICAgICAgICAgIGF4aW9zKHsNCiAgICAgICAgICAgICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5WVUVfQVBQX1RISVJEX1JFUVVFU1RfVVJMICsgJy9tYWluL291dHdvcmthcGkvdGlja2V0Q2xpZW50L2NyZWF0ZScsDQogICAgICAgICAgICAgICAgICAgIG1ldGhvZDogInBvc3QiLA0KICAgICAgICAgICAgICAgICAgICBkYXRhOiBwYXJhbXMsDQogICAgICAgICAgICAgICAgICAgIC8vIGhlYWRlcnM6IHsiQXV0aG9yaXphdGlvbiI6ICJCZWFyZXIgOTU4ZjEzODUtZmM2MS00NmRjLTgzNmYtNjNhMzhiNjk5M2FjIiB9DQogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMud3BnSGVhZGVyDQogICAgICAgICAgICAgICAgfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygi5o6l5Y+j5Yib5bu657y66Zm35bel5Y2VcmVzOiIsIHJlcykNCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBUb2FzdCh7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ+aPkOS6pOaIkOWKnycsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AnLA0KICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN1YkZvcm1zLnNoaWZ0KCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmiJDlip/liJvlu7o6ICcsIHJlcyk7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oLTEpDQogICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLmdldFRhYmxlRGF0YSgpLy/liLfmlrDliJfooagNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0pDQoNCiAgICAgICAgICAgIH0pLy9mb3JFYWNo57uT5p2fDQogICAgICAgIH0sDQogICAgICAgIC8vIOW8ueWHuuWTquS4qumAieaLqeWZqA0KICAgICAgICBjaG9vc2VQaWNrZXIoaXRlbSkgew0KICAgICAgICAgICAgdGhpcy5jb2x1bW5zID0gW10NCiAgICAgICAgICAgIHN3aXRjaCAoaXRlbSkgew0KICAgICAgICAgICAgICAgIGNhc2UgJ+e8uumZt+adpea6kCc6DQogICAgICAgICAgICAgICAgICAgIHRoaXMud2hpY2hQaWNrZXIgPSBpdGVtDQogICAgICAgICAgICAgICAgICAgIHRoaXMuY29sdW1ucyA9IHRoaXMuZGVmZWN0RnJvbUxpc3QNCiAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICBjYXNlICfkuJrliqHnsbvlnosnOg0KICAgICAgICAgICAgICAgICAgICB0aGlzLndoaWNoUGlja2VyID0gaXRlbQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbHVtbnMgPSB0aGlzLmJpZ1R5cGVMaXN0DQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgY2FzZSAn6K6+5pa957G75Z6LJzoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy53aGljaFBpY2tlciA9IGl0ZW0NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb2x1bW5zID0gdGhpcy5zbWFsbFR5cGVPYmpbdGhpcy5jb21tb25Gb3JtLmJpZ1R5cGVdDQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgLy8gY2FzZSAn57y66Zm357G75Z6LJzoNCiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy53aGljaFBpY2tlciA9IGl0ZW0NCiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5jb2x1bW5zID0gdGhpcy5kZWZlY3RUeXBlTGlzdA0KICAgICAgICAgICAgICAgIC8vICAgICBicmVhaw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5zaG93UGlja2VyID0gdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICAvLyDpgInmi6nlmajpgInmi6kNCiAgICAgICAgb25Db25maXJtKHZhbHVlKSB7DQogICAgICAgICAgICBzd2l0Y2ggKHRoaXMud2hpY2hQaWNrZXIpIHsNCiAgICAgICAgICAgICAgICBjYXNlICfnvLrpmbfmnaXmupAnOg0KICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbW1vbkZvcm0uZGVmZWN0RnJvbSA9IHZhbHVlDQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgY2FzZSAn5Lia5Yqh57G75Z6LJzoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tb25Gb3JtLmJpZ1R5cGUgPSB2YWx1ZQ0KICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIGNhc2UgJ+iuvuaWveexu+Weiyc6DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbW9uRm9ybS5zbWFsbFR5cGUgPSB2YWx1ZQ0KICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgIC8vIGNhc2UgJ+e8uumZt+exu+Weiyc6DQogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuc3ViRm9ybS5kZWZlY3RUeXBlID0gdmFsdWUNCiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuc2hvd1BpY2tlciA9IGZhbHNlOw0KICAgICAgICB9LA0KICAgIH0sDQogICAgbW91bnRlZCgpIHsNCiAgICAgICAgY29uc29sZS5sb2coJ2RlZmVjdEZyb21MaXN0OiAnLCB0aGlzLmRlZmVjdEZyb21MaXN0KTsNCiAgICAgICAgY29uc29sZS5sb2coJ2RlZmVjdEZyb21MaXN0RGljOiAnLCB0aGlzLmRlZmVjdEZyb21MaXN0RGljKTsNCiAgICAgICAgdGhpcy51cFBlcnNvbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJjc191c2VybmFtZSIpDQogICAgICAgIGxldCB0aW1lID0gbmV3IERhdGUoKQ0KICAgICAgICB0aGlzLnVwVGltZSA9IHRpbWUudG9Mb2NhbGVTdHJpbmcoKQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["addFlaws.vue"],"names":[],"mappings":";AAqfile":"addFlaws.vue","sourceRoot":"src/views/FlawsManagement","sourcesContent":["<template>\r\n    <div class=\"add-container\">\r\n        <fm-nav-bar title=\"缺陷新增\" left-arrow @click-left=\"$router.go(-1)\"></fm-nav-bar>\r\n        <fm-form class=\"bigForm-container\" @submit=\"onSubmit\" @failed=\"onFailed\">\r\n            <!-- @submit=\"onSubmit\" -->\r\n            <fm-field readonly clickable required name=\"picker\" :value=\"commonForm.defectFrom\" label=\"缺陷来源\"\r\n                placeholder=\"缺陷来源\" suffix-icon=\"arrow\" @click=\"choosePicker('缺陷来源')\"\r\n                :rules=\"[{ required: true, message: '请填写缺陷来源' }]\" input-align=\"right\" />\r\n            <fm-field readonly clickable required name=\"picker\" :value=\"commonForm.bigType\" label=\"业务类型\"\r\n                placeholder=\"业务类型\" suffix-icon=\"arrow\" @click=\"choosePicker('业务类型')\"\r\n                :rules=\"[{ required: true, message: '请填写业务类型' }]\" input-align=\"right\" />\r\n            <fm-field readonly clickable required name=\"picker\" :value=\"commonForm.smallType\" label=\"设施类型\"\r\n                placeholder=\"设施类型\" suffix-icon=\"arrow\" @click=\"choosePicker('设施类型')\"\r\n                :rules=\"[{ required: true, message: '请填写设施类型' }]\" input-align=\"right\" />\r\n\r\n            <fm-popup :visible.sync=\"showPicker\" position=\"bottom\">\r\n                <fm-picker show-toolbar :columns=\"columns\" @confirm=\"onConfirm\" @cancel=\"showPicker = false\" />\r\n            </fm-popup>\r\n\r\n            <fm-field clearable v-model=\"commonForm.smallCode\" name=\"input\" label=\"设施编号\" placeholder=\"设施编号\"\r\n                input-align=\"right\" />\r\n            <fm-field v-model=\"commonForm.position\" name=\"input\" label=\"缺陷位置\" placeholder=\"缺陷位置\" input-align=\"right\" />\r\n            <!-- 新增一条缺陷 -->\r\n            <div class=\"subtable\" v-for=\"(item) in subForms\" :key=\"item.id\">\r\n                <img src=\"./img/link.png\" alt style=\"position: absolute;height: 34px;z-index: 2;top: -18px\" />\r\n                <img src=\"./img/link.png\" alt\r\n                    style=\"position: absolute;height: 34px;z-index: 2;float: right;right: 5px; top: -18px\" />\r\n                <fm-form>\r\n                    <!-- :value=\"subForm.defectType\" -->\r\n                    <fm-field v-model=\"item.defectType\" readonly clickable name=\"picker\" label=\"缺陷类型\"\r\n                        suffix-icon=\"arrow\" placeholder=\"缺陷类型\" @click=\"showPickerDefect = true\" input-align=\"right\">\r\n                    </fm-field>\r\n                    <fm-popup :visible.sync=\"showPickerDefect\" position=\"bottom\">\r\n                        <fm-picker show-toolbar :columns=\"defectTypeList\"\r\n                            @confirm=\"(val) => { item.defectType = val; showPickerDefect = false }\"\r\n                            @cancel=\"showPickerDefect = false\" />\r\n                    </fm-popup>\r\n\r\n                    <fm-field v-model=\"item.note\" name=\"input\" label=\"备注\" placeholder=\"备注\" input-align=\"right\">\r\n                    </fm-field>\r\n\r\n                    <uploader :wpgHeader=\"wpgHeader\" :token=\"token\" label=\"照片\" v-model=\"picUp\" ref=\"picUp\"\r\n                        @fileChange=\"(recall) => fileChange(recall, '', item.pic)\" style=\"width: 100%;\">\r\n                    </uploader>\r\n                </fm-form>\r\n            </div>\r\n            <fm-button native-type=\"button\" type=\"default\" icon=\"plus\" size=\"large\" @click=\"addRow\"\r\n                style=\"margin-left: 8px;width:96%\">新增缺陷\r\n            </fm-button>\r\n            <fm-field v-model=\"commonForm.describe\" name=\"input\" label=\"现场描述\" placeholder=\"现场描述\" type=\"textarea\"\r\n                rows=\"2\" autosize maxlength=\"200\" show-word-limit input-align=\"right\" />\r\n\r\n            <!--多媒体附件等  -->\r\n            <uploader :wpgHeader=\"wpgHeader\" :token=\"token\" label=\"多媒体附件\" v-model=\"attachment\" ref=\"attachment\"\r\n                @fileChange=\"(recall) => fileChange(recall, '公共')\" style=\"width: 100%;\">\r\n            </uploader>\r\n\r\n\r\n            <fm-field readonly v-model=\"upPerson\" name=\"input\" label=\"上报人\" placeholder=\"上报人\" input-align=\"right\" />\r\n            <fm-field readonly v-model=\"upTime\" name=\"input\" label=\"上报时间\" placeholder=\"上报时间\" input-align=\"right\" />\r\n            <div style=\"margin-top:10px;display:flex;justify-content: space-around;\">\r\n                <fm-button type=\"default\" @click=\"concle\" native-type=\"button\">取消</fm-button>\r\n                <!-- @click=\"onSubmit\" -->\r\n                <fm-button type=\"primary\" :disabled=\"subForms.length < 1\" native-type=\"submit\">提交</fm-button>\r\n            </div>\r\n        </fm-form>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ENUM } from '@/store/State/stateTypes'\r\nimport Uploader from './upload/Uploader';\r\n// import Uploader from '@/components/upload/Uploader.vue'\r\nimport fileUpload from '@/components/fileUpload/index.vue';\r\nimport { Toast } from 'fawkes-mobile-lib';\r\nimport axios from 'axios'\r\nexport default {\r\n    name: \"addFlaws\",\r\n    components: { Uploader, fileUpload },\r\n    data() {\r\n        return {\r\n            wpgHeader: {},\r\n            token: '',\r\n            picUp: '',\r\n            attachment: '',\r\n            fileList: [],// 图片多媒体\r\n            // 选择器\r\n            commonForm: {\r\n                defectFrom: '巡检',//缺陷来源，移动端默认巡检\r\n                bigType: '',//业务类型\r\n                smallType: '',//设施类型\r\n                smallCode: '',//设施编号\r\n                position: '',//缺陷位置，xx路就好，经纬度需要但不用显示\r\n                lng: '',\r\n                lat: '',\r\n                properties: {},\r\n                describe: '',//现场描述\r\n                media: [],//多媒体附件\r\n            },\r\n            upPerson: '',\r\n            upTime: '',\r\n            // value: '',\r\n            columns: [],\r\n            showPicker: false,//就一条次 选择器\r\n            showPickerDefect: false,//新增缺陷 可多次 选择器\r\n            whichPicker: '',\r\n            // defectFromList: [],\r\n            // bigTypeList: [],\r\n            // smallTypeObj: {\r\n            //     '污水': ['污水管线', '检查井', '排放口', '闸门'], '雨水': ['雨水口', '雨水管线', '检查井', '排放口', '闸门'],\r\n            //     '给水': ['配水管线', '输水管线', '回水管线', '给水阀门'], '再生水': ['再生水管线', '再生水厂']\r\n            // },\r\n            // defectTypeList: [],\r\n            // defectFromListDic: { '巡检': 'Inspection', '客服': 'complain', '养护': 'maintain', '监测': 'monitor' },\r\n            // bigTypeListDic: { '污水': 'sewage', '雨水': 'rain', '给水': 'supply', '再生水': 'recycl' },\r\n            // smallTypeDic: {\r\n            //     '雨水口': 'comb', '雨水管线': 'pipeline', '污水管线': 'pipeline', '检查井': 'well', '排放口': 'outfall', '闸门': 'gate',\r\n            //     '消火栓': 'firehydrant', '配水管线': 'distribute', '输水管线': 'delivery', '回水管线': 'circulating', '给水阀门': 'valve',\r\n            //     '再生水管线': 'recycle', '再生水厂': 'waterwork',\r\n            // },\r\n            // defectTypeListDic: { '井室病害': 'jsbh', '仪表泄露': 'meterLeak', '管道破裂': 'pipePomp', '严重堵塞': 'badFill' },\r\n            subFormID: 1,\r\n            subForms: [{\r\n                id: 1,\r\n                defectType: '',\r\n                note: '',//备注\r\n                pic: [],\r\n            }],\r\n        }\r\n    },\r\n    computed: {\r\n        // 缺陷来源\r\n        defectFromDic() {\r\n            console.log('this.$store.state[ENUM].defectFrom: ', this.$store.state[ENUM].defectFrom);\r\n            return this.$store.state[ENUM].defectFrom;\r\n        },\r\n        defectFromList() {\r\n            let list = []\r\n            if (this.defectFromDic) {\r\n                this.defectFromDic.forEach((dic) => {\r\n                    list.push(dic['zh-CN'])\r\n                })\r\n            }\r\n            return list\r\n        },\r\n        defectFromListDic() {\r\n            let listDic = {}\r\n            if (this.defectFromDic) {\r\n                this.defectFromDic.forEach((dic) => {\r\n                    listDic[dic['zh-CN']] = dic.code\r\n                })\r\n            }\r\n            return listDic\r\n        },\r\n        // 缺陷类型\r\n        faultTypesDic() {\r\n            console.log('this.$store.state[ENUM].pipeNetDefectTypes', this.$store.state[ENUM].pipeNetDefectTypes)\r\n            return this.$store.state[ENUM].pipeNetDefectTypes;\r\n        },\r\n        defectTypeList() {\r\n            let list = []\r\n            if (this.faultTypesDic) {\r\n                if (this.faultTypesDic.filter(it => it['zh-CN'].includes(this.commonForm.smallType)).length > 0) {\r\n                    this.faultTypesDic.filter(it => it['zh-CN'].includes(this.commonForm.smallType))[0].child.forEach((dic) => {\r\n                        list.push(dic['zh-CN'])\r\n                    })\r\n                }\r\n            }\r\n            return list\r\n        },\r\n        defectTypeListDic() {\r\n            let listDic = {}\r\n            if (this.faultTypesDic) {\r\n                this.faultTypesDic.forEach((dic) => {\r\n                    listDic[dic['zh-CN']] = dic.code\r\n                })\r\n            }\r\n            return listDic\r\n        },\r\n        // 系统字典虽叫defectType，但实际二级为 业务类型/设施类型\r\n        // 业务类型/设施类型\r\n        busDeviceTypeDic() {\r\n            console.log('this.$store.state[ENUM].defectType: ', this.$store.state[ENUM].defectType);\r\n            return this.$store.state[ENUM].defectType;\r\n        },\r\n        bigTypeList() {\r\n            let list = []\r\n            if (this.busDeviceTypeDic) {\r\n                this.busDeviceTypeDic.forEach((dic) => {\r\n                    list.push(dic['zh-CN'])\r\n                })\r\n            }\r\n            return list\r\n        },\r\n        bigTypeListDic() {\r\n            let listDic = {}\r\n            if (this.busDeviceTypeDic) {\r\n                this.busDeviceTypeDic.forEach((dic) => {\r\n                    listDic[dic['zh-CN']] = dic.code\r\n                })\r\n            }\r\n            return listDic\r\n        },\r\n        // 二级--设施类型\r\n        smallTypeObj() {\r\n            let listDic = {}\r\n            if (this.busDeviceTypeDic) {\r\n                this.busDeviceTypeDic.forEach((dic) => {\r\n                    let list = []\r\n                    dic.child.forEach((second) => {\r\n                        list.push(second['zh-CN'])\r\n                    })\r\n                    listDic[dic['zh-CN']] = list\r\n                })\r\n            }\r\n            return listDic\r\n        },\r\n        smallTypeDic() {\r\n            let listDic = {}\r\n            if (this.busDeviceTypeDic) {\r\n                this.busDeviceTypeDic.forEach((dic) => {\r\n                    dic.child.forEach((second) => {\r\n                        listDic[second['zh-CN']] = second.code\r\n                    })\r\n                })\r\n            }\r\n            return listDic\r\n        },\r\n    },\r\n    created() {\r\n        // 路由过来，带着参数\r\n        this.objInfo = this.$route.query.msg\r\n        this.token = this.$route.query.token\r\n        // 回填信息\r\n        this.commonForm.bigType = this.objInfo.bigType || ''\r\n        this.commonForm.smallType = this.objInfo.smallType || ''\r\n        this.commonForm.smallCode = this.objInfo.code || ''\r\n        this.commonForm.position = this.objInfo.road_name || [this.objInfo.lng, this.objInfo.lat].toString()\r\n        // 提交表单用的，不回填显示\r\n        this.commonForm.lng = this.objInfo.lng\r\n        this.commonForm.lat = this.objInfo.lat\r\n        this.commonForm.properties = this.objInfo.properties\r\n    },\r\n    methods: {\r\n        // fileChange(file, mark, rowItem) {\r\n        //     console.log('file: ', file);\r\n        //     console.log('mark: ', mark);\r\n        //     console.log('rowItem: ', rowItem);\r\n        //     let arr = []\r\n        //     file.fileList.forEach(it => {\r\n        //         arr.push(\r\n        //             {\r\n        //                 \"fileUrl\": it.url,\r\n        //                 \"fileType\": 'image',\r\n        //                 \"fileSize\": it.file.size,\r\n        //                 \"fileId\": it.fileToken,\r\n        //                 \"name\": it.file.name,\r\n        //                 \"url\": it.url,\r\n        //                 \"uid\": it.fileToken\r\n        //             }\r\n        //         )\r\n        //     })\r\n        //     if (mark == '公共') {\r\n        //         // 公共的\r\n        //         this.commonForm.media.push(arr)\r\n        //         console.log('this.commonForm: ', this.commonForm);\r\n        //     } else {\r\n        //         // 每条缺陷的\r\n        //         rowItem.push(arr)\r\n        //         console.log('rowItem: ', rowItem);\r\n        //     }\r\n        //     console.log(\"arr:\", arr);\r\n        // },\r\n        // 图片多媒体\r\n        fileChange(recall, mark, rowItem) {\r\n            console.log('rowItem: ', rowItem);\r\n            console.log('mark: ', mark);\r\n            console.log('recall: ', recall);\r\n            // this.fileList = recall.fileList\r\n            console.log('this.fileList: ', this.fileList);\r\n            console.log('this.attachment: ', this.attachment);\r\n            if (recall.res) {\r\n                let formFile =\r\n                {\r\n                    \"fileUrl\": recall.res.resultData.url,\r\n                    \"fileType\": recall.res.resultData.suffix,\r\n                    \"fileSize\": recall.res.resultData.size,\r\n                    \"fileId\": recall.res.resultData.id,\r\n                    \"name\": recall.res.resultData.oldName,\r\n                    \"url\": process.env.VUE_APP_THIRD_REQUEST_URL + '/main/userCenterApi/FileManager/download/' + recall.res.resultData.id,\r\n                    \"uid\": recall.res.resultData.id\r\n                }\r\n                if (mark == '公共') {\r\n                    // 公共的\r\n                    this.commonForm.media.push(formFile)\r\n                    console.log('this.commonForm: ', this.commonForm);\r\n                } else {\r\n                    // 每条缺陷的\r\n                    rowItem.push(formFile)\r\n                    console.log('rowItem: ', rowItem);\r\n                }\r\n            }\r\n        },\r\n        // 新增相关\r\n        // 新增缺陷 子表项\r\n        addRow() {\r\n            console.log('subForms前: ', this.subForms);\r\n            this.subForms.push({\r\n                id: this.subFormID += 1,\r\n                defectType: '',\r\n                note: '',//备注\r\n                pic: [],\r\n            })\r\n            console.log('subForms后: ', this.subForms);\r\n            console.log('defectFromList: ', this.defectFromList);\r\n            console.log('defectFromListDic: ', this.defectFromListDic);\r\n        },\r\n\r\n        // 取消\r\n        concle() {\r\n            // let pics = []\r\n            // this.subForms.forEach((sf) => {\r\n            //     sf.pic.forEach((p) => {\r\n            //         pics.push(p)\r\n            //     })\r\n            // })\r\n            // console.log('pics: ', pics);\r\n            // pics.forEach((ps) => {\r\n            //     this.$refs.picUp.removeFile(ps)\r\n            // })\r\n            this.commonForm.media.forEach((m) => {\r\n                console.log('m: ', m);\r\n                this.$refs.attachment.removeFile(m)\r\n                console.log('this.$refs.attachment: ', this.$refs.attachment);\r\n            })\r\n            this.attachment = ''\r\n            this.picUp = ''\r\n            this.subForms = [\r\n                // {\r\n                //     id: this.subFormID-1,\r\n                //     // defectType: '',\r\n                //     // note: '',//备注\r\n                //     // pic: [],\r\n                // }\r\n            ]\r\n            this.commonForm = {\r\n                defectFrom: '巡检',//缺陷来源，移动端默认巡检\r\n                bigType: '',//业务类型\r\n                smallType: '',//设施类型\r\n                smallCode: '',//设施编号\r\n                position: '',//缺陷位置，xx路就好，经纬度需要但不用显示\r\n                lng: '',\r\n                lat: '',\r\n                properties: {},\r\n                describe: '',//现场描述\r\n                media: [],//多媒体附件\r\n            }\r\n            let time = new Date()\r\n            this.upTime = time.toLocaleString()\r\n        },\r\n        //提交前 校验未通过\r\n        onFailed() {\r\n            if (this.commonForm.defectFrom == '' || this.commonForm.bigType == '' || this.commonForm.smallType == '') {\r\n                Toast({\r\n                    message: '请检查必填信息',\r\n                    position: 'top',\r\n                });\r\n                return\r\n            }\r\n        },\r\n        // 提交\r\n        onSubmit() {\r\n            console.log('onSubmit: ', this.subForm, this.commonForm, this.upPerson, this.upTime);\r\n            Toast({\r\n                message: '提交中',\r\n                position: 'top',\r\n            });\r\n            // console.log('smallTypeDic: ', this.smallTypeDic);\r\n            // console.log('this.commonForm.smallType: ', this.commonForm.smallType);\r\n            this.subForms.forEach((sf) => {\r\n                console.log('this.subForms: ', this.subForms);\r\n                console.log('sf: ', sf);\r\n                let params = {\r\n                    \"templateCode\": \"defect_template\",\r\n                    \"title\": '缺陷新增',//表单项无，但是接口必填字段\r\n                    \"sysSource\": \"outwork\",\r\n                    \"createType\": \"APP\",\r\n                    //  grid_id: 'xj001',//网格任务ID\r\n                    // \"priority\": this.form.priority,//优先级，高中低；表单项无\r\n                    \"longitude\": this.commonForm.lng,\r\n                    \"latitude\": this.commonForm.lat,\r\n                    \"questionDescribe\": this.commonForm.describe,\r\n                    \"address\": this.commonForm.properties.road_name || '',\r\n                    \"formJson\": {\r\n                        'task_id': this.$route.query.taskId, //巡检任务ID\r\n                        // \"faultTypes\": sf.defectType,//子表每一项 缺陷类型\r\n                        \"faultTypes\": this.defectTypeListDic[sf.defectType],\r\n                        // \"files\": sf.pic.concat(this.commonForm.media),//子表每一项 照片组\r\n                        \"files\": this.commonForm.media,//子表每一项 照片组\r\n                        \"handleImgs\": sf.pic,\r\n                        \"handleRemark\": sf.note,//子表每一项 备注\r\n                        // \"handleType\": \"DIRECT_PROCESSING\", //处理方式，例如直接处理；表单项无\r\n                        // \"defectFrom\": this.commonForm.defectFrom,\r\n                        \"defectFrom\": this.defectFromListDic[this.commonForm.defectFrom],\r\n                        \"device_type\": [this.bigTypeListDic[this.commonForm.bigType], this.smallTypeDic[this.commonForm.smallType]],\r\n                        // \"device_type\": [this.commonForm.bigType, this.commonForm.smallType],\r\n                        \"deviceCode\": this.commonForm.smallCode,\r\n                        // \"deviceDetail\": this.commonForm.properties,\r\n                        \"deviceDetail\": {\r\n                            \"longitude\": this.commonForm.lng,\r\n                            \"latitude\": this.commonForm.lat,\r\n                            \"road_name\": this.commonForm.properties?.road_name || ''\r\n                        },\r\n                        //下个节点处理人\r\n                        \"ticketDispatchUserIds\": [\r\n                            {\r\n                                \"name\": '处理人',//处理人名称\r\n                                \"id\": \"11\",//处理人ID\r\n                                \"type\": \"99\"\r\n                            }\r\n                        ]\r\n                    }\r\n                };\r\n                console.log('创建表单的params: ', params);\r\n                this.wpgHeader = {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + this.token,\r\n                }\r\n                // 提交\r\n                axios({\r\n                    url: process.env.VUE_APP_THIRD_REQUEST_URL + '/main/outworkapi/ticketClient/create',\r\n                    method: \"post\",\r\n                    data: params,\r\n                    // headers: {\"Authorization\": \"Bearer 958f1385-fc61-46dc-836f-63a38b6993ac\" }\r\n                    headers: this.wpgHeader\r\n                }).then(res => {\r\n                    console.log(\"接口创建缺陷工单res:\", res)\r\n                    if (res.status == 200) {\r\n                        Toast({\r\n                            message: '提交成功',\r\n                            position: 'top',\r\n                        });\r\n                        this.subForms.shift()\r\n                        console.log('成功创建: ', res);\r\n                        this.$router.go(-1)\r\n                        // this.getTableData()//刷新列表\r\n                    }\r\n                })\r\n\r\n            })//forEach结束\r\n        },\r\n        // 弹出哪个选择器\r\n        choosePicker(item) {\r\n            this.columns = []\r\n            switch (item) {\r\n                case '缺陷来源':\r\n                    this.whichPicker = item\r\n                    this.columns = this.defectFromList\r\n                    break\r\n                case '业务类型':\r\n                    this.whichPicker = item\r\n                    this.columns = this.bigTypeList\r\n                    break\r\n                case '设施类型':\r\n                    this.whichPicker = item\r\n                    this.columns = this.smallTypeObj[this.commonForm.bigType]\r\n                    break\r\n                // case '缺陷类型':\r\n                //     this.whichPicker = item\r\n                //     this.columns = this.defectTypeList\r\n                //     break\r\n            }\r\n            this.showPicker = true\r\n        },\r\n        // 选择器选择\r\n        onConfirm(value) {\r\n            switch (this.whichPicker) {\r\n                case '缺陷来源':\r\n                    this.commonForm.defectFrom = value\r\n                    break\r\n                case '业务类型':\r\n                    this.commonForm.bigType = value\r\n                    break\r\n                case '设施类型':\r\n                    this.commonForm.smallType = value\r\n                    break\r\n                // case '缺陷类型':\r\n                //     this.subForm.defectType = value\r\n                //     break\r\n            }\r\n            this.showPicker = false;\r\n        },\r\n    },\r\n    mounted() {\r\n        console.log('defectFromList: ', this.defectFromList);\r\n        console.log('defectFromListDic: ', this.defectFromListDic);\r\n        this.upPerson = localStorage.getItem(\"cs_username\")\r\n        let time = new Date()\r\n        this.upTime = time.toLocaleString()\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.add-container {\r\n    .bigForm-container {\r\n        width: 750px;\r\n        height: 1234px;\r\n        overflow: scroll;\r\n        background: #ffffff;\r\n\r\n        .subtable {\r\n            position: relative;\r\n            margin: 10px;\r\n            padding: 13px;\r\n            // background-color: aquamarine;\r\n            border-radius: 16px;\r\n            border: 1px solid #5195d0;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}