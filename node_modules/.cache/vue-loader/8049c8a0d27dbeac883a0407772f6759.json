{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\DispatchCenter\\components\\PressureAnalysis\\index.vue?vue&type=style&index=0&id=72e35452&scoped=true&lang=less","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\DispatchCenter\\components\\PressureAnalysis\\index.vue","mtime":1708928163368},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubWFpbiB7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIC5tYXBDb250YWluZXIgew0KICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDZweCk7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2U1ZjJmZiAwJSwgI2Y2ZjhmYSAyNSUsICNmNWY3ZjkgMTAwJSk7DQogICAgLm1hcExlZ2VuZCB7DQogICAgICB3aWR0aDogYXV0bzsNCiAgICAgIG1pbi13aWR0aDogMzEwcHg7DQogICAgICBoZWlnaHQ6IDMyMHB4Ow0KICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsNCiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgIGJvdHRvbTogMzBweDsNCiAgICAgIGxlZnQ6IDMwcHg7DQogICAgICBwYWRkaW5nOiAyMHB4IDMwcHg7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgIC5sZWdlbmRJdGVtIHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgIGhlaWdodDogNDVweDsNCiAgICAgICAgbWFyZ2luOiAxMHB4IDA7DQogICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgIC5jb2xvckl0ZW0gew0KICAgICAgICAgIHdpZHRoOiAxNnB4Ow0KICAgICAgICAgIGhlaWdodDogMTZweDsNCiAgICAgICAgICBtYXJnaW46IGF1dG87DQogICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgICB9DQogICAgICAgIC5wcmVzc3VyZVNwYW4gew0KICAgICAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KICAgICAgICAgIGhlaWdodDogNDVweDsNCiAgICAgICAgICBmb250LXNpemU6IDMycHg7DQogICAgICAgICAgZm9udC1mYW1pbHk6IFBpbmdGYW5nU0MtUmVndWxhciwgUGluZ0ZhbmcgU0M7DQogICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICBjb2xvcjogIzMzMzMzMzsNCiAgICAgICAgICBsaW5lLWhlaWdodDogNDVweDsNCiAgICAgICAgICB3aWR0aDogMjQwcHg7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/DispatchCenter/components/PressureAnalysis","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <fm-nav-bar title=\"压力分析\" left-arrow @click-left=\"$router.go(-1)\">\r\n      <template #right>\r\n        <fm-switch v-model=\"openPopup\" @change=\"changePopup\" size=\"24px\" :disabled=\"isDataLoaded\" />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <div class=\"mapContainer\">\r\n      <xa-map :create=\"mapLoaded\" :legendConfig=\"legendConfig\" />\r\n      <div class=\"mapLegend\">\r\n        <div class=\"legendItem\">\r\n          <div class=\"colorItem\" style=\"background: #F97777;\"></div>\r\n          <div class=\"pressureSpan\">>0.35MPa</div>\r\n        </div>\r\n        <div class=\"legendItem\">\r\n          <div class=\"colorItem\" style=\"background: #FFAF60;\"></div>\r\n          <div class=\"pressureSpan\">0.25 ~ 0.35MPa</div>\r\n        </div>\r\n        <div class=\"legendItem\">\r\n          <div class=\"colorItem\" style=\"background: #FFE36A;\"></div>\r\n          <div class=\"pressureSpan\">0.20 ~ 0.25MPa</div>\r\n        </div>\r\n        <div class=\"legendItem\">\r\n          <div class=\"colorItem\" style=\"background: #B7E89E;\"></div>\r\n          <div class=\"pressureSpan\">0.15 ~ 0.20MPa</div>\r\n        </div>\r\n        <div class=\"legendItem\">\r\n          <div class=\"colorItem\" style=\"background: #95BDFF;\"></div>\r\n          <div class=\"pressureSpan\">0.00 ~ 0.15MPa</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defaltLegendList } from './defaultLegendList.js'\r\nimport * as apis from './api';\r\nimport { addIconToMap } from '@/utils/mapUtils';\r\nimport mapboxgl from 'mapbox-gl';\r\nconst mapObj = {\r\n  mapInstance: null,\r\n  map: null,\r\n  popupList: []\r\n}\r\nexport default {\r\n  name: 'pressureAnalysis',\r\n  data() {\r\n    return {\r\n      openPopup: true,\r\n      isDataLoaded: true,\r\n      legendConfig: [],\r\n      supplyPressure: [],\r\n      icons: [\r\n        {\r\n          name: '压力监测(供)*',\r\n          url: require('@/assets/img/map/压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线供',\r\n          url: require('@/assets/img/map/压力离线供地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警供',\r\n          url: require('@/assets/img/map/压力报警供地图.png'),\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    \r\n  },\r\n  methods: {\r\n    changePopup(val) {\r\n      if (val) {\r\n        let features = this.supplyPressure.map(it => {\r\n          return {\r\n            type: 'Feature',\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: [Number(it.lon), Number(it.lat)],\r\n            },\r\n            properties: {\r\n              value: isNaN(Number(it.realtimeData.filter(it => it.isShow == 0)[0].val)) ? 0 : Number(it.realtimeData.filter(it => it.isShow == 0)[0].val),\r\n              ...it\r\n            }\r\n          }\r\n        })\r\n        features.forEach(it => {\r\n          this.addTitleMarker(it.properties.value, it.geometry.coordinates)\r\n        })\r\n      } else {\r\n        mapObj.popupList.length > 0 && mapObj.popupList.forEach(it => it.remove())\r\n        mapObj.popupList = []\r\n      }\r\n    },\r\n    addTitleMarker(name, points) {\r\n      let pop = new mapboxgl.Popup({\r\n        closeButton: false,\r\n        closeOnClick: false,\r\n        offset: [0, -15]\r\n      });\r\n      mapObj.popupList.push(pop)\r\n      let timer = setInterval(() => {\r\n        if (mapObj.map.getSource('supplyPressMonitor')) {\r\n          clearInterval(timer)\r\n          pop\r\n            .setLngLat(points)\r\n            .setText(name + 'Mpa')\r\n            .addTo(mapObj.map);\r\n        }\r\n      }, 500)\r\n    },\r\n    async mapLoaded() {\r\n      mapObj.mapInstance = window.xaMapBuilder\r\n      mapObj.map = window.xaMap\r\n      mapObj.map.setZoom(12)\r\n      this.legendConfig = defaltLegendList\r\n      await addIconToMap(mapObj.map, this.icons)\r\n      mapObj.map.addSource('supplyPressMonitor', {\r\n        type: 'geojson',\r\n        data: {\r\n            type: 'FeatureCollection',\r\n            features: []\r\n        }\r\n      })\r\n      mapObj.map.addLayer({\r\n        id: 'supplyPressMonitorLayer-heat',\r\n        type: 'heatmap',\r\n        source: 'supplyPressMonitor',\r\n        maxzoom: 14.6,\r\n        paint: {\r\n            'heatmap-weight': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['get', 'value'],\r\n                0,\r\n                0,\r\n                1,\r\n                1\r\n            ],\r\n            'heatmap-intensity': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['zoom'],\r\n                10,\r\n                1,\r\n                13,\r\n                12\r\n            ],\r\n            'heatmap-color': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['heatmap-density'],\r\n                0,\r\n                'rgba(149, 189, 255, 0.1)',\r\n                0.2,\r\n                'rgb(183, 232, 158)',\r\n                0.4,\r\n                'rgb(255, 227, 106)',\r\n                0.6,\r\n                'rgb(255, 175, 96)',\r\n                0.8,\r\n                'rgba(249, 119, 119, 0.9)',\r\n                1,\r\n                'rgb(249, 119, 119)'\r\n            ],\r\n            // Adjust the heatmap radius by zoom level\r\n            'heatmap-radius': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['zoom'],\r\n                10,\r\n                40,\r\n                12,\r\n                30,\r\n                14,\r\n                20\r\n            ],\r\n            // Transition from heatmap to circle layer by zoom level\r\n            'heatmap-opacity': [\r\n                'interpolate',\r\n                ['linear'],\r\n                ['zoom'],\r\n                10,\r\n                1,\r\n                12,\r\n                0.8,\r\n                13.5,\r\n                0.5,\r\n                14.5,\r\n                0.1\r\n            ]\r\n        }\r\n      })\r\n      mapObj.map.addLayer({\r\n        id: 'supplyPressMonitorLayer',\r\n        source: 'supplyPressMonitor',\r\n        type: 'symbol',\r\n        minzoom: 14.5,\r\n        layout: {\r\n          'icon-image': [\r\n            'case',\r\n            [\r\n              'all',\r\n              ['==', ['get', 'iotOnline'], '0'],\r\n              ['!=', ['get', 'isWarn'], '1'],\r\n            ],\r\n            '压力监测(供)*',\r\n            ['==', ['get', 'iotOnline'], '1'],\r\n            '压力监测离线供',\r\n            [\r\n              'all',\r\n              ['==', ['get', 'iotOnline'], '0'],\r\n              ['==', ['get', 'isWarn'], '1'],\r\n            ],\r\n            '压力监测报警供',\r\n            '压力监测(供)*'\r\n          ]\r\n        },\r\n        'icon-size': 0.7,\r\n        // 图标强制全部显示\r\n        'icon-ignore-placement': true,\r\n      })\r\n      this.getAllSupplyWaterPress()\r\n      mapObj.map.on('click', 'supplyPressMonitorLayer', this.pressureDetail)\r\n    },\r\n    pressureDetail(e) {\r\n      let feature = mapObj.map.queryRenderedFeatures(e.point)[0]\r\n      if (feature.layer.id == 'supplyPressMonitorLayer') {\r\n        this.$router.push({\r\n          path: '/DispatchCenter/PressureDetail',\r\n          query: { deviceInfo: feature.properties, pressureStation: this.supplyPressure }\r\n        })\r\n      }\r\n    },\r\n    getAllSupplyWaterPress() {\r\n      let params = {\r\n        deviceType: 'IVTM',\r\n      }\r\n      apis.getAllEquipmentInformation(params).then((res) => {\r\n        if (res.status) {\r\n          this.supplyPressure = res.data.filter(\r\n            (item) => item.belongSystem == '供水' || item.belongSystem == '再生水'\r\n          )\r\n          this.isDataLoaded = false\r\n          let features = this.supplyPressure.map(it => {\r\n            return {\r\n                type: 'Feature',\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: [Number(it.lon), Number(it.lat)],\r\n                },\r\n                properties: {\r\n                    value: isNaN(Number(it.realtimeData.filter(it => it.isShow == 0)[0].val)) ? 0 : Number(it.realtimeData.filter(it => it.isShow == 0)[0].val),\r\n                    ...it\r\n                }\r\n            }\r\n          })\r\n          if (mapObj.map.getSource('supplyPressMonitor')) {\r\n            mapObj.map.getSource('supplyPressMonitor').setData({\r\n                type: 'FeatureCollection',\r\n                features: features\r\n            })\r\n          }\r\n          this.openPopup && features.forEach(it => {\r\n            this.addTitleMarker(it.properties.value, it.geometry.coordinates)\r\n          })\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.main {\r\n  width: 100%;\r\n  height: 100%;\r\n  .mapContainer {\r\n    height: calc(100% - 46px);\r\n    width: 100%;\r\n    background: linear-gradient(180deg, #e5f2ff 0%, #f6f8fa 25%, #f5f7f9 100%);\r\n    .mapLegend {\r\n      width: auto;\r\n      min-width: 310px;\r\n      height: 320px;\r\n      background: #ffffff;\r\n      position: absolute;\r\n      bottom: 30px;\r\n      left: 30px;\r\n      padding: 20px 30px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      .legendItem {\r\n        width: 100%;\r\n        height: 45px;\r\n        margin: 10px 0;\r\n        display: flex;\r\n        .colorItem {\r\n          width: 16px;\r\n          height: 16px;\r\n          margin: auto;\r\n          border-radius: 50%;\r\n        }\r\n        .pressureSpan {\r\n          margin-left: 20px;\r\n          height: 45px;\r\n          font-size: 32px;\r\n          font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n          color: #333333;\r\n          line-height: 45px;\r\n          width: 240px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]}]}