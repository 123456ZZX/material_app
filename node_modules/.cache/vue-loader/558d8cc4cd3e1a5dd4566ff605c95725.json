{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\components\\xa-map\\index.vue?vue&type=style&index=0&id=4becdb0b&lang=scss&scoped=true","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\components\\xa-map\\index.vue","mtime":1708928163330},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoueGEtbWFwIHsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA8cA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/xa-map","sourcesContent":["<template>\r\n  <div class=\"xa-map\" id=\"map\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as turf from '@turf/turf'\r\nimport { Toast, Dialog } from 'fawkes-mobile-lib'\r\nimport MapInit from \"./mapInit\";\r\nimport layerControl from \"./layerControl.js\";\r\nimport API from '@/common/config.js';\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport axios from \"axios\";\r\nimport { legendListImport } from \"./legendList.js\";\r\nexport default {\r\n  name: 'XaMap',\r\n  props: {\r\n    create: {\r\n      type: Function,\r\n      default() {\r\n        return () => {}\r\n      },\r\n    },\r\n    legendConfig: {\r\n      type: Array,\r\n      default() {\r\n        return [];\r\n      },\r\n    },\r\n    legendList: {\r\n      type: Array,\r\n      default() {\r\n        return legendListImport\r\n      }\r\n    },    \r\n  },\r\n  data() {\r\n    return {\r\n      defaultBaseLayers:[]\r\n    }\r\n  },\r\n  watch: {\r\n    legendConfig: {\r\n      handler(newVal) {\r\n        this.changeLegend()\r\n      },\r\n      deep: true\r\n    }\r\n  },  \r\n  async mounted() {\r\n    window.turf = turf\r\n    window.xaMap = ''\r\n    window.xaMapBuilder = ''\r\n    let options = {\r\n      style: {\r\n        version: 8,\r\n        pitch: 0,\r\n        zoom: 13.570532360577655,\r\n        center: [115.92486101369428, 39.06075549589073],\r\n        glyphs:\r\n          API.VUE_APP_MAP_URL + '/mapboxSource/fonts/{fontstack}/{range}.pbf',\r\n        sprite: API.VUE_APP_MAP_URL + '/mapboxSource/sprites/sprite',\r\n        sources: {},\r\n        layers: [{\r\n          id: 'empty',\r\n          type: \"background\",\r\n          layout: {\r\n            visibility: \"none\"\r\n          }\r\n        },{\r\n          id: 'empty1',\r\n          type: \"background\",\r\n          layout: {\r\n            visibility: \"none\"\r\n          }\r\n        },{\r\n          id: 'empty2',\r\n          type: \"background\",\r\n          layout: {\r\n            visibility: \"none\"\r\n          }\r\n        }],\r\n      },\r\n    }\r\n    mapboxgl.accessToken =\r\n      'pk.eyJ1IjoiOTM0MDk0Mjg2IiwiYSI6ImNsMnNmdmVrZDBrZGMzZG50cHJudXJkbW8ifQ.C0wKhJgrToFJgL8GH5M8rg'\r\n    const mapBuilder = (window.xaMapBuilder = new MapInit({\r\n      container: 'map',\r\n      options: options,\r\n      center: [115.92486101369428, 39.06075549589073],\r\n    }))\r\n    window.xaMap = mapBuilder.map\r\n    const map = mapBuilder.map\r\n\r\n    //去除mapbox的logo\r\n    document.getElementsByClassName('mapboxgl-ctrl-logo')[0].style.display =\r\n      'none'\r\n\r\n    map.on('load', async () => {\r\n      /**添加所有底图，不影响mapbox初始化时间 */\r\n      await this.addAllBaseMap()\r\n\r\n      /**添加所有图层 */\r\n      await this.addLayers();\r\n\r\n      /**用户自定义事件 */\r\n      this.create()\r\n    })\r\n  },\r\n  methods: {\r\n    // 该方法用于控制图例对应图层的显示隐藏，只在地图初始化时调用一次，因为 legendConfig 是在地图初始化时传入的\r\n    changeLegend() {\r\n      if(this.legendConfig && this.legendConfig.length > 0) {\r\n        this.legendConfig.forEach((item) => {\r\n          this.legendList.forEach((legend) => {\r\n            //控制一级图层\r\n            if (item.label == legend.label) {\r\n              legend.titleStatus = item.clickFlag;\r\n              // \r\n              legend.options.forEach((smallItem) => {\r\n                // 当该标题下图层内容为显示状态时才进入判断\r\n                if (\r\n                  legend.titleStatus === true &&\r\n                  typeof smallItem.id == \"number\"\r\n                ) {\r\n                  setTimeout(() => {\r\n                    Toast.info({\r\n                      message: smallItem.label + \"图层暂无数据！\",\r\n                    });\r\n                  }, 0);\r\n                  return;\r\n                }\r\n                if (legend.titleStatus === true) {\r\n                  // 标题状态点亮时\r\n                  smallItem.clickFlag = false; // 图层均显示\r\n                } else {\r\n                  smallItem.clickFlag = true; // 图层均隐藏\r\n                }\r\n                this.legendControlLayer(smallItem);\r\n              });\r\n            }else {\r\n              legend.options.forEach(smallItem => {\r\n                if(item.label == smallItem.label) {\r\n                  this.$set(smallItem, 'clickFlag', item.clickFlag)\r\n                  this.legendControlLayer(smallItem)\r\n                }\r\n              })\r\n            }\r\n            \r\n          });\r\n        });\r\n      }\r\n    },\r\n    legendControlLayer(item) {\r\n      let map = window.xaMap\r\n      // if (item.clickFlag) {\r\n      //   if(item.id == \"压力监测(供)*\"){\r\n      //     let domList = document.getElementsByClassName(\"pressure-supply\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"none\"\r\n      //     })\r\n      //   }else if(item.id == \"压力监测(再生)*\") {\r\n      //     let domList = document.getElementsByClassName(\"pressure-recycle\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"none\"\r\n      //     })\r\n      //   }else if(item.id == \"流量计(供)*\") {\r\n      //     let domList = document.getElementsByClassName(\"flow-supply\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"none\"\r\n      //     })\r\n      //   }else if(item.id == \"流量计(再生)*\") {\r\n      //     let domList = document.getElementsByClassName(\"flow-recycle\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"none\"\r\n      //     })\r\n      //   }\r\n      // }else {\r\n      //   if(item.id == \"压力监测(供)*\"){\r\n      //     let domList = document.getElementsByClassName(\"pressure-supply\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"block\"\r\n      //     })\r\n      //   }else if(item.id == \"压力监测(再生)*\") {\r\n      //     let domList = document.getElementsByClassName(\"pressure-recycle\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"block\"\r\n      //     })\r\n      //   }else if(item.id == \"流量计(供)*\") {\r\n      //     let domList = document.getElementsByClassName(\"flow-supply\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"block\"\r\n      //     })\r\n      //   }else if(item.id == \"流量计(再生)*\") {\r\n      //     let domList = document.getElementsByClassName(\"flow-recycle\")\r\n      //     Array.prototype.forEach.call(domList, (dom) => {\r\n      //       dom.style.display = \"block\"\r\n      //     })\r\n      //   }\r\n      // }\r\n      if (map.getLayer(item.id)) {\r\n        if (item.clickFlag) {\r\n          map.setLayoutProperty(item.id, \"visibility\", \"none\");\r\n          if (item.id == \"rd_map_drainpipe_ys_big\") {\r\n            let filter = map.getFilter(\"rd_map_manhole\")\r\n            if(filter.toString() == ['all'].toString() || filter.toString() == ['in', 'manhole_type', '雨水'].toString()){\r\n              if(map.getLayoutProperty('rd_map_drainpipe_ws_big', 'visibility') == 'none'){\r\n                filter = ['in', 'manhole_type', '']\r\n              }else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            //雨水管线图层控制雨水井、雨水箭头、雨水较小层级图层显示\r\n            map.setLayoutProperty(\"rd_map_comb\", \"visibility\", \"none\");\r\n            \r\n            map.setFilter(\"rd_map_manhole\", filter);\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_big_direction\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_small\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_small_direction\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_circulating\") {\r\n            //循环水（回水）管线控制循环水（回水）节点显示\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_circulating\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_distribute\") {\r\n            //配水管线控制配水节点显示\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_distribute\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_delivery\") {\r\n            //输水管线控制输水节点显示\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_delivery\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          } else if (item.id == \"map_recycle_pipe\") {\r\n            //再生水管线控制再生水节点显示\r\n            map.setLayoutProperty(\r\n              \"map_recycle_node\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          } else if (item.id == \"rd_map_drainpipe_ws_big\") {\r\n            //污水管线图层控制污水井、污水箭头、污水较小层级图层显示\r\n            let filter = map.getFilter(\"rd_map_manhole\")\r\n            if(filter.toString() == ['all'].toString() || filter.toString() == ['in', 'manhole_type', '污水'].toString()){\r\n              if(map.getLayoutProperty('rd_map_drainpipe_ys_big', 'visibility') == 'none'){\r\n                filter = ['in', 'manhole_type', '']\r\n              }else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }            \r\n            map.setFilter(\"rd_map_manhole\", filter);\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_big_direction\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_small\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_small_direction\",\r\n              \"visibility\",\r\n              \"none\"\r\n            );\r\n          }\r\n        } else {          \r\n          map.setLayoutProperty(item.id, \"visibility\", \"visible\");\r\n          if (item.id == \"rd_map_drainpipe_ys_big\") {\r\n            let filter = map.getFilter(\"rd_map_manhole\")\r\n            if(filter.toString() == ['in', 'manhole_type', ''].toString() || filter.toString() == ['in', 'manhole_type', '污水'].toString()){\r\n              if(map.getLayoutProperty('rd_map_drainpipe_ws_big', 'visibility') != 'none'){\r\n                filter = ['all']\r\n              }else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter(\"rd_map_manhole\", filter);\r\n            map.setLayoutProperty(\r\n              \"rd_map_comb\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_big_direction\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_small\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ys_small_direction\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_circulating\") {\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_circulating\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_distribute\") {\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_distribute\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          } else if (item.id == \"map_supply_pipe_delivery\") {\r\n            map.setLayoutProperty(\r\n              \"map_supply_node_delivery\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          } else if (item.id == \"map_recycle_pipe\") {\r\n            map.setLayoutProperty(\r\n              \"map_recycle_node\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          } else if (item.id == \"rd_map_drainpipe_ws_big\") {\r\n            let filter = map.getFilter(\"rd_map_manhole\")\r\n            if(filter.toString() == ['in', 'manhole_type', ''].toString() || filter.toString() == ['in', 'manhole_type', '雨水'].toString()){\r\n              if(map.getLayoutProperty('rd_map_drainpipe_ys_big', 'visibility') != 'none'){\r\n                filter = ['all']\r\n              }else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }            \r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_big_direction\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setFilter(\"rd_map_manhole\", filter);\r\n            map.setLayoutProperty(\r\n              \"rd_map_manhole\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_small_direction\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n            map.setLayoutProperty(\r\n              \"rd_map_drainpipe_ws_small\",\r\n              \"visibility\",\r\n              \"visible\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async addLayers() {\r\n      let map = window.xaMap;\r\n      let env = process.env.NODE_ENV;\r\n      //底图\r\n      await axios\r\n        .get(\r\n          API.VUE_APP_MAP_REQUEST_URL +\r\n            \"/api/swan/mapWorkshopSource/detail?id=1557650273895288834\"\r\n        )\r\n        .then((res) => {\r\n          let layers = JSON.parse(res.data.data.combineJsonData);\r\n\r\n          Object.keys(layers.sources).forEach((key) => {\r\n            // if (env == \"production\") {\r\n              let temp = layers.sources[key].tiles[0];\r\n              // temp = temp.replaceAll(\"172.23.0.123:8008\", \"xasw.hdec.com\");\r\n              temp = temp.replaceAll(\"172.17.142.136:8008\", \"sw.chinaxiongan.cn\");\r\n              layers.sources[key].tiles[0] = temp;\r\n            // }\r\n            map.addSource(key, layers.sources[key]);\r\n          });\r\n          layers.layers.forEach((layer) => {\r\n            if (!layer.layout || layer.layout.visibility == \"visible\") {\r\n              this.defaultBaseLayers.push(layer); //控制地图显隐\r\n            }\r\n            map.addLayer(layer, 'empty1');\r\n          });\r\n          this.$emit(\"getDefaultBaseLayers\", this.defaultBaseLayers);\r\n        })\r\n        .catch((e) => {})\r\n        .finally(() => {});\r\n      //管线\r\n      await axios\r\n        .get(\r\n          API.VUE_APP_MAP_REQUEST_URL +\r\n            \"/api/swan/mapWorkshopSource/detail?id=1548573412963749889\"\r\n        )\r\n        .then((res) => {\r\n          let layers = JSON.parse(res.data.data.jsonData);\r\n\r\n          Object.keys(layers.sources).forEach((key) => {\r\n            // if (env == \"production\") {\r\n              let temp = layers.sources[key].tiles[0];\r\n              // temp = temp.replaceAll(\"172.23.0.123:8008\", \"xasw.hdec.com\");\r\n              temp = temp.replaceAll(\"172.17.142.136:8008\", \"sw.chinaxiongan.cn\");\r\n              layers.sources[key].tiles[0] = temp;\r\n            // }\r\n            map.addSource(key, layers.sources[key]);\r\n          });\r\n          layers.layers.forEach((layer) => {\r\n            map.addLayer(layer, 'empty1');\r\n            //图层移入移除以及点击事件\r\n            map.on(\"mouseenter\", layer.id, this.handleLayerEnter);\r\n            map.on(\"mouseout\", layer.id, this.handleLayerLeave);\r\n            map.on(\"click\", layer.id, this.handleLayerClick); \r\n          });\r\n        })\r\n        .catch((e) => {})\r\n        .finally(() => {});\r\n    },\r\n    handleLayerEnter(e) {\r\n      this.$emit(\"handleLayerEnter\", e);\r\n    },\r\n    handleLayerLeave(e) {\r\n      this.$emit(\"handleLayerLeave\", e);\r\n    },\r\n    handleLayerClick(e) {\r\n      this.$emit(\"handleLayerClick\", e);\r\n    },\r\n    /**添加所有的底图 */\r\n    addAllBaseMap() {\r\n      let map = window.xaMap;\r\n      let sources = layerControl.defaultSource;\r\n      let layers = layerControl.defaultLayers;\r\n      this.$emit(\"getBaseLayerObject\", layers);\r\n      Object.keys(sources).forEach((key) => {\r\n        map.addSource(key, sources[key]);\r\n      });\r\n      layers.forEach((layer) => {\r\n        map.addLayer(layer, 'empty');\r\n      });\r\n    },     \r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.xa-map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>"]}]}