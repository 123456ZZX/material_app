{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\FlawsManagement\\upload\\Uploader.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\FlawsManagement\\upload\\Uploader.vue","mtime":1708928163376},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiAqLw0KLy8g6K+l57uE5Lu26ZyA6KaB5ZKM55yf5py65Lqk5LqS77yM5Lya5Ye6546w5Y6f55SfIEFQSSDmnKrlrprkuYnnmoTmg4XlhrXvvIzmlYXlhajlsYDlupTnlKjlsY/olL0gbm8tdW5kZWYg6KeE5YiZDQoNCmltcG9ydCB7IFVwbG9hZGVyLCBUb2FzdCwgQnV0dG9uLCBGaWVsZCB9IGZyb20gJ2Zhd2tlcy1tb2JpbGUtbGliJw0KaW1wb3J0IHsgY2hhbmdlRmlsZUc5cywgZ2V0RmlsZVRva2VuIH0gZnJvbSAnQC9hcGkvZmlsZScNCmltcG9ydCB7IHV1aWQgfSBmcm9tICdAL3V0aWxzL3BhcmFtJw0KaW1wb3J0IHsgaXNJbWFnZSwgZG93bmxvYWRGaWxlLCBjYWxjRmlsZVNpemUgfSBmcm9tICdAL3V0aWxzL2ZpbGUnDQppbXBvcnQgcmVxdWVzdCBmcm9tICdAL3V0aWxzL3JlcXVlc3QnDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQoNCmNvbnN0IGNhbmNlbFRva2VuT2JqID0gbmV3IE1hcCgpDQpjb25zdCB3cGdVUkw9cHJvY2Vzcy5lbnYuVlVFX0FQUF9USElSRF9SRVFVRVNUX1VSTA0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnVXBsb2FkZXInLA0KICBjb21wb25lbnRzOiB7DQogICAgW1VwbG9hZGVyLm5hbWVdOiBVcGxvYWRlciwNCiAgICBbVG9hc3QubmFtZV06IFRvYXN0LA0KICAgIFtCdXR0b24ubmFtZV06IEJ1dHRvbiwNCiAgICBbRmllbGQubmFtZV06IEZpZWxkLA0KICB9LA0KICBmaWx0ZXJzOiB7DQogICAgY2FsY3VsYXRlRmlsZVNpemU6IGZ1bmN0aW9uICh2YWwpIHsNCiAgICAgIHJldHVybiBjYWxjRmlsZVNpemUodmFsKQ0KICAgIH0sDQogIH0sDQogIHByb3BzOiB7DQogICAgLy8g5paH5Lu2Z3JvdXBUb2tlbg0KICAgIHZhbHVlOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICByZXF1aXJlZDogdHJ1ZSwNCiAgICAgIGRlZmF1bHQ6ICcnLA0KICAgIH0sDQogICAgLy8gVE9ETzog5paH5Lu25LiK5Lyg5pWw6YeP6ZmQ5Yi277yM5pqC5pyq5L2/55SoDQogICAgbGltaXQ6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIGRlZmF1bHQ6IDEsDQogICAgfSwNCiAgICAvLyDlm77niYfkuIrkvKDml7bnmoTmoIfnrb7lkI3np7ANCiAgICBsYWJlbDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ+mZhOS7ticsDQogICAgfSwNCiAgICAvLyDlkI3np7DvvIzmj5DkuqTooajljZXnmoTmoIfor4bnrKYNCiAgICBuYW1lOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAndXBsb2FkZXInLA0KICAgIH0sDQogICAgLy8g5byA5ZCv6Ieq5Yqo5LiK5LygDQogICAgYXV0b1VwbG9hZDogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IHRydWUsDQogICAgfSwNCiAgICBkaXNhYmxlZDogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlLA0KICAgIH0sDQogICAgLy8g5piv5ZCm5bGV56S65Yig6Zmk5oyJ6ZKuDQogICAgZGVsZXRhYmxlOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogdHJ1ZSwNCiAgICB9LA0KICAgIC8vIOaYr+WQpuaYvuekuuS4iuS8oOWMuuWfnw0KICAgIHNob3dVcGxvYWQ6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICBkZWZhdWx0OiB0cnVlLA0KICAgIH0sDQogICAgLy8g5LiK5Lyg57G75Z6L77yMaW1hZ2XmiJZmaWxlDQogICAgdHlwZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ2ltYWdlJywNCiAgICB9LA0KICAgIC8vIOWbvueJh+WkmumAiemZkOWItuaVsOmHj++8jOm7mOiupOS4ujkNCiAgICBtYXhJbWFnZXNDb3VudDogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgZGVmYXVsdDogOSwNCiAgICB9LA0KICAgIC8vIOS4iuS8oOWJjeeahOagoemqjOaWueazlQ0KICAgIGJlZm9yZVJlYWQ6IHsNCiAgICAgIHR5cGU6IEZ1bmN0aW9uLA0KICAgICAgZGVmYXVsdDogZnVuY3Rpb24gKCkgew0KICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgfSwNCiAgICB9LA0KICAgIC8vIOWFgeiuuOmihOiniO+8jOm7mOiupOS4unRydWUNCiAgICBwcmV2aWV3RnVsbEltYWdlOiB7DQogICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgZGVmYXVsdDogdHJ1ZSwNCiAgICB9LA0KICAgIC8vIOaWh+S7tuS4iuS8oOaXtuagh+etvuWQjeensA0KICAgIHByZXZpZXdMYWJlbDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogJ+mZhOS7ticsDQogICAgfSwNCiAgICAvLyBoZWFkZXINCiAgICB3cGdIZWFkZXI6IHsNCiAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgIGRlZmF1bHQ6IHt9DQogICAgfSwNCiAgICB0b2tlbjonJywNCiAgfSwNCiAgZGF0YTogKCkgPT4gKHsNCiAgICBmaWxlTGlzdDogW10sDQogICAgZmlsZVRva2VuTGlzdDogW10sDQogICAgLy8g5piv5ZCm6ZyA6KaB6K+35rGC5paH5Lu26LWE5rqQDQogICAgbmVlZFRvR2V0RmlsZTogdHJ1ZSwNCiAgICBwZXJjZW50OiAwLA0KICB9KSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAvLyDlhYHorrjkuIrkvKDnmoTmlofku7bnsbvlnosNCiAgICBhY2NlcHQoKSB7DQogICAgICByZXR1cm4gdGhpcy50eXBlID09ICdpbWFnZScgPyAnaW1hZ2UvKicgOiAnKicNCiAgICB9LA0KICB9LA0KICB3YXRjaDogew0KICAgIHZhbHVlOiB7DQogICAgICBpbW1lZGlhdGU6IHRydWUsDQogICAgICBoYW5kbGVyKG5ld1ZhbCkgew0KICAgICAgICBpZiAoIW5ld1ZhbCkgew0KICAgICAgICAgIHRoaXMuZmlsZVRva2VuTGlzdCA9IFtdDQogICAgICAgICAgdGhpcy5maWxlTGlzdCA9IFtdDQogICAgICAgICAgcmV0dXJuDQogICAgICAgIH0gZWxzZSBpZiAodGhpcy5uZWVkVG9HZXRGaWxlKSB7DQogICAgICAgICAgbGV0IHBvc3REYXRhID0gew0KICAgICAgICAgICAgZzlzOiBbbmV3VmFsXSwNCiAgICAgICAgICB9DQogICAgICAgICAgZ2V0RmlsZVRva2VuKHBvc3REYXRhKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzKSB7DQogICAgICAgICAgICAgIGxldCBmaWxlVG9rZW5MaXN0ID0gcmVzLmRhdGENCiAgICAgICAgICAgICAgY29uc3QgZmlsZUxpc3QgPSBbXQ0KICAgICAgICAgICAgICBmaWxlVG9rZW5MaXN0LmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgICAgICAgICBsZXQgaXNJbWFnZVR5cGUgPSBpc0ltYWdlKGl0ZW0uZmlsZU5hbWUpDQogICAgICAgICAgICAgICAgbGV0IGZpbGVJdGVtID0gew0KICAgICAgICAgICAgICAgICAgZmlsZTogew0KICAgICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLmZpbGVOYW1lLA0KICAgICAgICAgICAgICAgICAgICBzaXplOiBpdGVtLnNpemUsDQogICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgcmVzcG9uc2U6IGl0ZW0sDQogICAgICAgICAgICAgICAgICBpc0ltYWdlOiBpc0ltYWdlVHlwZSwNCiAgICAgICAgICAgICAgICAgIGZpbGVUb2tlbjogaXRlbS5maWxlVG9rZW4sDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIC8vIOWxleekuuWbvueJhw0KICAgICAgICAgICAgICAgIGlmIChpc0ltYWdlVHlwZSkgew0KICAgICAgICAgICAgICAgICAgZmlsZUl0ZW0udXJsID0gYCR7cHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX1VSTH0vc3lzLXN0b3JhZ2UvZG93bmxvYWRfaW1hZ2U/ZjhzPSR7aXRlbS5maWxlVG9rZW59YA0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAvLyDlsZXnpLrmlofku7YNCiAgICAgICAgICAgICAgICAgIGZpbGVJdGVtLnVybCA9IGl0ZW0uZmlsZVRva2VuDQogICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgZmlsZUxpc3QucHVzaChmaWxlSXRlbSkNCiAgICAgICAgICAgICAgICB0aGlzLmZpbGVUb2tlbkxpc3QucHVzaChpdGVtLmZpbGVUb2tlbikNCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgdGhpcy5maWxlTGlzdCA9IGZpbGVMaXN0DQogICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZpbGVDaGFuZ2UnLCB7DQogICAgICAgICAgICAgICAgZmlsZTogbnVsbCwNCiAgICAgICAgICAgICAgICBmaWxlTGlzdCwNCiAgICAgICAgICAgICAgICBsZW5ndGg6IGZpbGVMaXN0Lmxlbmd0aCwNCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICB9LA0KICAgIH0sDQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIHNldEc5cygpIHsNCiAgICAgIGlmICh0aGlzLmZpbGVUb2tlbkxpc3QubGVuZ3RoKSB7DQogICAgICAgIGNvbnN0IGc5cyA9IHV1aWQoKQ0KICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGc5cykNCiAgICAgICAgLy/lsIblkITmlofku7bnmoRmaWxldG9rZW7lkIjlubbmiJBncm91cHRva2VuDQogICAgICAgIHJldHVybiBjaGFuZ2VGaWxlRzlzKGc5cywgdGhpcy5maWxlVG9rZW5MaXN0KQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCAnJykNCiAgICAgIH0NCiAgICB9LA0KICAgIGFmdGVyUmVhZChmaWxlKSB7DQogICAgICBpZiAodGhpcy5hdXRvVXBsb2FkKSB7DQogICAgICAgIC8vIOWkmumAieeahOaDheWGteS4iw0KICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShmaWxlKSkgew0KICAgICAgICAgIGZpbGUuZm9yRWFjaCgoZWwpID0+IHRoaXMudXBsb2FkRmlsZShlbCkpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy51cGxvYWRGaWxlKGZpbGUpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9LA0KICAgIHVwbG9hZEZpbGUoZmlsZSkgew0KICAgICAgLy/mlofku7bor7vlj5blrozmiJDlkI7nmoTlm57osIPlh73mlbANCiAgICAgIGZpbGUuc3RhdHVzID0gJ3VwbG9hZGluZycNCiAgICAgIGxldCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpDQoNCiAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIGZpbGUuZmlsZSkNCg0KICAgICAgLy8gZmlsZUlk55So5LqO5qCH6K6w5paH5Lu277yM5pa55L6/5ZCO57ut5Yig6Zmk5a6a5L2N5paH5Lu2DQogICAgICBjb25zdCBmaWxlSWQgPSB1dWlkKCkNCiAgICAgIGZpbGUuZmlsZUlkID0gZmlsZUlkDQoNCiAgICAgIC8v55Sf5oiQ5Y+W5raI6K+35rGC55qEdG9rZW4s5pa55L6/5ZyoaGFuZGxlUmVtb3Zl5Y+W5raI5LiK5Lyg5pe257uT5p2f6K+35rGCDQogICAgICBjb25zdCBDYW5jZWxUb2tlbiA9IGF4aW9zLkNhbmNlbFRva2VuDQogICAgICBjb25zdCBzb3VyY2UgPSBDYW5jZWxUb2tlbi5zb3VyY2UoKQ0KICAgICAgY2FuY2VsVG9rZW5PYmouc2V0KGZpbGVJZCwgc291cmNlKQ0KICAgICAgY29uc29sZS5sb2coInRoaXMud3BnSGVhZGVyIix0aGlzLndwZ0hlYWRlcikNCiAgICAgIGNvbnNvbGUubG9nKCJ0aGlzLnRva2VuIix0aGlzLnRva2VuKQ0KICAgICAgcmVxdWVzdCh7DQogICAgICAgIHVybDogd3BnVVJMKycvbWFpbi91c2VyQ2VudGVyQXBpL0ZpbGVNYW5hZ2VyL3VwbG9hZCcsIC8vb2sNCiAgICAgICAgbWV0aG9kOiAncG9zdCcsDQogICAgICAgIGhlYWRlcnM6ew0KICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScsDQogICAgICAgICAgIkF1dGhvcml6YXRpb24iOiAnQmVhcmVyICcgKyB0aGlzLnRva2VuLA0KICAgICAgICB9LA0KICAgICAgICBkYXRhOiBmb3JtRGF0YSwNCiAgICAgICAgdGltZW91dDogMCwNCiAgICAgICAgY2FuY2VsVG9rZW46IHNvdXJjZS50b2tlbiwNCiAgICAgICAgb25VcGxvYWRQcm9ncmVzczogKHByb2dyZXNzRXZlbnQpID0+IHsNCiAgICAgICAgICBsZXQgcGVyY2VudCA9ICgocHJvZ3Jlc3NFdmVudC5sb2FkZWQgLyBwcm9ncmVzc0V2ZW50LnRvdGFsKSAqIDEwMCkgfCAwDQogICAgICAgICAgLy/osIPnlKhvblByb2dyZXNz5pa55rOV5p2l5pi+56S66L+b5bqm5p2h77yM6ZyA6KaB5Lyg6YCS5Liq5a+56LGhIHBlcmNlbnTkuLrov5vluqblgLwNCiAgICAgICAgICAvLyBmaWxlLm9uUHJvZ3Jlc3MoeyBwZXJjZW50OiBwZXJjZW50IH0pOw0KICAgICAgICAgIGZpbGUubWVzc2FnZSA9IGDkuIrkvKDkuK0gJHtwZXJjZW50fSVgDQogICAgICAgIH0sDQogICAgICB9KQ0KICAgICAgICAudGhlbigocmVzKSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coJ1VwbG9hZGVy57uE5Lu255qE5LiK5Lyg5ZCO55qELXJlczogJywgcmVzKTsNCiAgICAgICAgICBpZiAocmVzLnN0YXR1cykgew0KICAgICAgICAgICAgZmlsZS5zdGF0dXMgPSAnc3VjY2VzcycNCiAgICAgICAgICAgIGZpbGUuZmlsZVRva2VuID0gcmVzPy5kYXRhPy5maWxlVG9rZW4NCiAgICAgICAgICAgIHRoaXMuZmlsZVRva2VuTGlzdC5wdXNoKHJlcz8uZGF0YT8uZmlsZVRva2VuKQ0KICAgICAgICAgICAgLy8gdGhpcy5zZXRHOXMoKSAvL3dlYuerr+S8oOS4jeS4iu+8nw0KICAgICAgICAgICAgLy8g6Kej5Yaz5LiK5Lyg57uT5p2f5ZCO6L+b5bqm5LuN54S25pi+56S66Zeu6aKYDQogICAgICAgICAgICB0aGlzLiRyZWZzLnJlbFVwbG9hZGVyLiRmb3JjZVVwZGF0ZSgpDQogICAgICAgICAgICAvLyDkuIrkvKDlkI7vvIzmi7/liLDkuIDkupvlhbPplK7kv6Hmga/vvIzov5vooYzlkI7nu63kuIrkvKDmnI3liqHlmajnrYkNCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2ZpbGVDaGFuZ2UnLCB7DQogICAgICAgICAgICAgIHJlczogcmVzLA0KICAgICAgICAgICAgICBmaWxlOiByZXMuZGF0YSwNCiAgICAgICAgICAgICAgZmlsZUxpc3Q6IHRoaXMuZmlsZUxpc3QsDQogICAgICAgICAgICAgIGxlbmd0aDogdGhpcy5maWxlTGlzdC5sZW5ndGgsDQogICAgICAgICAgICB9KQ0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICBUb2FzdChyZXMubWVzc2FnZSkNCiAgICAgICAgICAgIC8vIOWIoOmZpOS4iuS8oOWksei0peeahOaWh+S7tg0KICAgICAgICAgICAgdGhpcy5maWxlTGlzdC5zcGxpY2UoDQogICAgICAgICAgICAgIHRoaXMuZmlsZUxpc3QuZmluZEluZGV4KChlbCkgPT4gZWwuZmlsZUlkID09PSBmaWxlSWQpLA0KICAgICAgICAgICAgICAxDQogICAgICAgICAgICApDQogICAgICAgICAgfQ0KICAgICAgICAgIC8vIGZpbGUub25TdWNjZXNzKHJlcy5kYXRhKTsNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmVycm9yKGVycikNCiAgICAgICAgICBUb2FzdCgn5LiK5Lyg5aSx6LSlJykNCiAgICAgICAgICAvLyDliKDpmaTkuIrkvKDlpLHotKXnmoTmlofku7YNCiAgICAgICAgICB0aGlzLmZpbGVMaXN0LnNwbGljZSgNCiAgICAgICAgICAgIHRoaXMuZmlsZUxpc3QuZmluZEluZGV4KChlbCkgPT4gZWwuZmlsZUlkID09PSBmaWxlSWQpLA0KICAgICAgICAgICAgMQ0KICAgICAgICAgICkNCiAgICAgICAgfSkNCiAgICB9LA0KICAgIHJlbW92ZUZpbGUoZmlsZSkgew0KICAgICAgY29uc29sZS5sb2coJ2ZpbGU6ICcsIGZpbGUpOw0KICAgICAgY29uc3QgZmlsZUlkID0gZmlsZS5maWxlSWQNCiAgICAgIC8v5aaC5p6c5paH5Lu25Zyo5LiK5Lyg5Lit55qE6K+d77yM5YiZ5Y+W5raI5LiK5Lyg6K+35rGCDQogICAgICBjb25zdCBzb3VyY2UgPSBjYW5jZWxUb2tlbk9iai5nZXQoZmlsZUlkKQ0KICAgICAgc291cmNlICYmIHNvdXJjZS5jYW5jZWwoKQ0KICAgICAgLy8g5rKh5pyJ5LiK5Lyg5oiQ5Yqf77yM5oiW6Z2e5p+l55yL6aG16Z2i6aKE6KeI5pe277yM55u05o6lcmV0dXJuDQogICAgICBpZiAoZmlsZS5zdGF0dXMgIT09ICdzdWNjZXNzJyAmJiAhZmlsZS5yZXNwb25zZSkgew0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIHRoaXMuZmlsZVRva2VuTGlzdCA9IHRoaXMuZmlsZVRva2VuTGlzdC5maWx0ZXIoKGl0ZW0pID0+IHsNCiAgICAgICAgcmV0dXJuIGl0ZW0gIT09IGZpbGUuZmlsZVRva2VuDQogICAgICB9KQ0KDQogICAgICBpZiAoZmlsZUlkKSB7DQogICAgICAgIGNvbnNvbGUubG9nKCdmaWxlSWQ6ICcsIGZpbGVJZCk7DQogICAgICAgIHRoaXMuZmlsZUxpc3Quc3BsaWNlKA0KICAgICAgICAgIHRoaXMuZmlsZUxpc3QuZmluZEluZGV4KChlbCkgPT4gZWwuZmlsZUlkID09PSBmaWxlSWQpLA0KICAgICAgICAgIDENCiAgICAgICAgKQ0KICAgICAgICAvLyDku47lkI7lj7Dojrflj5bpmYTku7blkI7msqHmnIlmaWxlZElk5pe277yM5Yip55SodG9rZW7lrprkvY3mlofku7blgZrliKDpmaQNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnNvbGUubG9nKCfku47lkI7lj7Dojrflj5bpmYTku7blkI7msqHmnIlmaWxlZElk5pe277yM5Yip55SodG9rZW7lrprkvY3mlofku7blgZrliKDpmaQnKTsNCiAgICAgICAgdGhpcy5maWxlTGlzdC5zcGxpY2UoDQogICAgICAgICAgdGhpcy5maWxlTGlzdC5maW5kSW5kZXgoKGVsKSA9PiBlbC5maWxlVG9rZW4gPT09IGZpbGUuZmlsZVRva2VuKSwNCiAgICAgICAgICAxDQogICAgICAgICkNCiAgICAgIH0NCg0KICAgICAgLy/mtL7lj5Hmlofku7bliJfooajnirbmgIHlj5jljJbkuovku7YNCiAgICAgIHRoaXMuJGVtaXQoJ2ZpbGVDaGFuZ2UnLCB7DQogICAgICAgIGZpbGUsDQogICAgICAgIGZpbGVMaXN0OiB0aGlzLmZpbGVMaXN0LA0KICAgICAgICBsZW5ndGg6IHRoaXMuZmlsZUxpc3QubGVuZ3RoLA0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIOenu+WKqOerr+iuvuWkh+S4i+i9veaWh+S7tg0KICAgIGRvd25sb2FkKGZpbGUpIHsNCiAgICAgIGlmICgoZmlsZS5pc0ltYWdlICYmIHRoaXMudHlwZSA9PSAnaW1hZ2UnKSB8fCAhdGhpcy5kaXNhYmxlZCkgew0KICAgICAgICByZXR1cm4NCiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHl1YW5jaHUgIT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgbGV0IGFjY2Vzc1Rva2VuID0gdGhpcy4kc3RvcmFnZS5nZXQoJ2FjY2Vzc190b2tlbicpDQogICAgICAgIGxldCB1cmwgPQ0KICAgICAgICAgIHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9VUkwgKw0KICAgICAgICAgICcvc3lzLXN0b3JhZ2UvZG93bmxvYWQ/ZjhzPScgKw0KICAgICAgICAgIGZpbGUuZmlsZVRva2VuDQogICAgICAgIGxldCBuYW1lID0gZmlsZS5maWxlLm5hbWUNCiAgICAgICAgdGhpcy4kbG9hZGluZy5zaG93KHsgdGl0bGU6ICcnIH0pDQoNCiAgICAgICAgLy8g5LuO6K6+5aSH5bqU55So57yT5a2Y55uu5b2V5LiL6I635Y+W5paH5Lu257O757uf6Lev5b6EDQogICAgICAgIGxldCBmaWxlVXJsID0geXVhbmNodS5maWxlU3lzdGVtUGF0aHMuZmlsZS5jYWNoZURpcmVjdG9yeSArIG5hbWUNCg0KICAgICAgICAvLyDosIPnlKjljp/nlJ/moYbmnrbpmYTku7bkuIvovb3mj5Lku7bmmrTpnLLnmoTmjqXlj6MNCiAgICAgICAgbGV0IGZpbGVUcmFuc2ZlciA9IG5ldyB5dWFuY2h1LmZpbGVUcmFuc2ZlcigpDQogICAgICAgIGxldCB0aGF0ID0gdGhpcw0KICAgICAgICB0aGF0LmZpbGVUcmFuc2ZlciA9IGZpbGVUcmFuc2Zlcg0KICAgICAgICBmaWxlVHJhbnNmZXIub25wcm9ncmVzcyA9IChwcm9ncmVzc0V2ZW50KSA9PiB7DQogICAgICAgICAgaWYgKHByb2dyZXNzRXZlbnQpIHsNCiAgICAgICAgICAgIGlmIChmaWxlPy5yZXNwb25zZT8uc2l6ZSAhPSBwcm9ncmVzc0V2ZW50LnRvdGFsKSB7DQogICAgICAgICAgICAgIHRoYXQucGVyY2VudCA9IE1hdGgucm91bmQoDQogICAgICAgICAgICAgICAgKHByb2dyZXNzRXZlbnQubG9hZGVkICogMTAwKSAvIGZpbGU/LnJlc3BvbnNlPy5zaXplDQogICAgICAgICAgICAgICkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICBmaWxlVHJhbnNmZXIuZG93bmxvYWQoDQogICAgICAgICAgdXJsLA0KICAgICAgICAgIGZpbGVVcmwsDQogICAgICAgICAgKGVudHJ5KSA9PiB7DQogICAgICAgICAgICBlbnRyeS5maWxlKChkYXRhKSA9PiB7DQogICAgICAgICAgICAgIHl1YW5jaHUuZmlsZU9wZW5lcjIub3BlbihlbnRyeS50b1VSTCgpLCBkYXRhLnR5cGUsIHsNCiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICByZXR1cm4NCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7DQogICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycikNCiAgICAgICAgICAgICAgICAgIHRoaXMuJGxvYWRpbmcuaGlkZSgpDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICB0aGlzLiRsb2FkaW5nLmhpZGUoKQ0KICAgICAgICAgIH0sDQogICAgICAgICAgKCkgPT4gew0KICAgICAgICAgICAgdGhhdC5wZXJjZW50ID0gMA0KICAgICAgICAgICAgdGhpcy4kbG9hZGluZy5oaWRlKCkNCiAgICAgICAgICB9LA0KICAgICAgICAgIGZhbHNlLA0KICAgICAgICAgIHsNCiAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgJ0Zhd2tlcy1BdXRoJzogYWNjZXNzVG9rZW4sDQogICAgICAgICAgICB9LA0KICAgICAgICAgIH0NCiAgICAgICAgKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgZG93bmxvYWRGaWxlKGZpbGUuZmlsZVRva2VuKQ0KICAgICAgfQ0KICAgIH0sDQogICAgZGVsZXRlRmlsZShpbmRleCkgew0KICAgICAgdGhpcy4kcmVmcy5yZWxVcGxvYWRlci5vbkRlbGV0ZSh0aGlzLmZpbGVMaXN0W2luZGV4XSwgaW5kZXgpDQogICAgfSwNCiAgICBvbkNsaWNrVXBsb2FkKGV2ZW50KSB7DQogICAgICBpZiAodGhpcy50eXBlID09ICdpbWFnZScpIHsNCiAgICAgICAgLy8gdGhpcy50YWtlUGljdHVyZSgpDQogICAgICAgIC8vIOino+WGs+a1j+iniOWZqOiwg+ivleaXtuaOp+WItuaKpemUmemXrumimA0KICAgICAgICBpZiAodHlwZW9mIHl1YW5jaHUgIT0gJ3VuZGVmaW5lZCcpIHsNCiAgICAgICAgICB0aGlzLnRha2VQaWN0dXJlKCkNCiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpDQogICAgICAgIH0NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJHJlZnMucmVsVXBsb2FkZXIuJGVtaXQoJ2NsaWNrLXVwbG9hZCcsIGV2ZW50KQ0KICAgICAgfQ0KICAgIH0sDQogICAgdGFrZVBpY3R1cmUoKSB7DQogICAgICAvLyDosIPnlKjljp/nlJ/mj5Lku7bmi43nhafmiJbku47nm7jlhozpgInlj5YNCiAgICAgIHl1YW5jaHUuaW1hZ2VQaWNrZXIuZ2V0UGljdHVyZXModGhpcy5vblN1Y2Nlc3MsIHRoaXMub25GYWlsLCB7DQogICAgICAgIHF1YWxpdHk6IDUwLA0KICAgICAgICBtYXhpbXVtSW1hZ2VzQ291bnQ6IHRoaXMubWF4SW1hZ2VzQ291bnQsDQogICAgICAgIHdpZHRoOiAxOTIwLA0KICAgICAgICBoZWlnaHQ6IDE0NDAsDQogICAgICB9KQ0KICAgIH0sDQogICAgb25GYWlsKGVycm9yKSB7DQogICAgICBjb25zb2xlLmVycm9yKGVycm9yKQ0KICAgIH0sDQogICAgLy8g5ouN54Wn5oiW5LuO55u45YaM6YCJ5Y+W5Zu+54mH5oiQ5Yqf5ZCO5Zue6LCDDQogICAgb25TdWNjZXNzKG9iaikgew0KICAgICAgb2JqPy5pbWFnZXMuZm9yRWFjaCgodmFsKSA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKCd2YWw6ICcsIHZhbCk7DQogICAgICAgIC8vIHBsdXMuaW8ucmVzb2x2ZUxvY2FsRmlsZVN5c3RlbVVSTA0KICAgICAgICByZXNvbHZlTG9jYWxGaWxlU3lzdGVtVVJMKA0KICAgICAgICAgIHZhbC51cmksDQogICAgICAgICAgKGZpbGVFbnRyeSkgPT4gew0KICAgICAgICAgICAgLy/ojrflj5ZmaWxl5a+56LGh77yM5ZKManPljp/nlJ/nmoRmaWxl5LiN5LiA5qC377yM6ZyA6KaB5o+S5Lu25aSE55CGDQogICAgICAgICAgICBmaWxlRW50cnkuZmlsZSgNCiAgICAgICAgICAgICAgKGZpbGUpID0+IHsNCiAgICAgICAgICAgICAgICAvL+ivu+WPluaWh+S7tuWvueixoQ0KICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyB5dWFuY2h1LmZpbGVSZWFkZXIoKQ0KICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSAoZXZlbnQpID0+IHsNCiAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHt9DQogICAgICAgICAgICAgICAgICBjb25zdCB0aGlzRmlsZSA9IG5ldyBGaWxlKA0KICAgICAgICAgICAgICAgICAgICBbbmV3IEJsb2IoW2V2ZW50LnRhcmdldC5yZXN1bHRdLCB7IHR5cGU6IGZpbGUudHlwZSB9KV0sDQogICAgICAgICAgICAgICAgICAgIGZpbGUubmFtZQ0KICAgICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgICAgcmVzdWx0LnVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKA0KICAgICAgICAgICAgICAgICAgICBuZXcgQmxvYihbZXZlbnQudGFyZ2V0LnJlc3VsdF0pDQogICAgICAgICAgICAgICAgICApDQogICAgICAgICAgICAgICAgICByZXN1bHQuaXNJbWFnZSA9IHRydWUNCiAgICAgICAgICAgICAgICAgIHJlc3VsdC5maWxlID0gdGhpc0ZpbGUNCiAgICAgICAgICAgICAgICAgIC8vIOaPkuWFpeWIsGZpbGVMaXN05Lit5bm26LCD55So5LiK5Lyg5pa55rOVDQogICAgICAgICAgICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2gocmVzdWx0KQ0KICAgICAgICAgICAgICAgICAgdGhpcy5hZnRlclJlYWQocmVzdWx0KQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSkNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgZnVuY3Rpb24gKGVycm9yKSB7DQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignZXJyb3InLCBlcnJvcikNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgKQ0KICAgICAgICAgIH0sDQogICAgICAgICAgZnVuY3Rpb24gKGVycm9yKSB7DQogICAgICAgICAgICBjb25zb2xlLmVycm9yKCdlcnJvciByZXNvbHZlJywgZXJyb3IpDQogICAgICAgICAgfQ0KICAgICAgICApDQogICAgICB9KQ0KICAgIH0sDQogICAgY2xpY2tVcGxvYWQoKSB7DQogICAgICB0aGlzLiRyZWZzPy5yZWxVcGxvYWRlcj8uJHJlZnM/LmlucHV0LmNsaWNrKCkNCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["Uploader.vue"],"names":[],"mappings":";AAifile":"Uploader.vue","sourceRoot":"src/views/FlawsManagement/upload","sourcesContent":["<!--\r\n * @Author: xie_sm\r\n * @Date: 2022-02-28 16:07:02\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2022-06-22 08:50:15\r\n * @FilePath: \\mobile-template\\src\\components\\upload\\Uploader.vue\r\n * @Description: 参考凤翎web端form-upload组件，demo可查看src\\views\\CommonOne\\index.vue\r\n *\r\n-->\r\n<template>\r\n  <div>\r\n    <fm-field :name=\"name\" :label=\"label\" label-class=\"cus-label\" :class=\"[\r\n      'field-attachment',\r\n      type === 'file' && fileList.length == 0 && !disabled\r\n        ? 'no-upload-list'\r\n        : '',\r\n    ]\">\r\n      <template #label v-if=\"type == 'file'\">\r\n        <!-- 提供该组件label插槽，其中按照移动端设计规范设置默认样式 -->\r\n        <slot name=\"uploader-label\">\r\n          <div class=\"cus-label__div\">\r\n            <span>{{ previewLabel }}</span>\r\n            <!--  点击文本触发的原生input上传事件 -->\r\n            <div v-if=\"!disabled\" @click=\"clickUpload\">\r\n              <slot name=\"uploader-label-right\">\r\n                <span class=\"label-action\">点击添加</span>\r\n                <i class=\"fm-icon fm-icon-arrow\"></i>\r\n              </slot>\r\n            </div>\r\n          </div>\r\n        </slot>\r\n      </template>\r\n      <template #input>\r\n        <fm-uploader :after-read=\"afterRead\" :before-read=\"beforeRead\" v-model=\"fileList\" multiple :accept=\"accept\"\r\n          :before-delete=\"removeFile\" :disabled=\"disabled\" :deletable=\"deletable\" @click-preview=\"download\"\r\n          :show-upload=\"showUpload\" :onClickUpload=\"onClickUpload\" ref=\"relUploader\" class=\"uploader\"\r\n          :preview-full-image=\"previewFullImage\">\r\n          <!-- 提供修改上传区域的插槽 -->\r\n          <slot name=\"upload-area\" v-if=\"type == 'file'\">\r\n            <div></div>\r\n          </slot>\r\n          <span v-if=\"fileList.length == 0 && type === 'file' && disabled\">暂无附件</span>\r\n          <!-- 自定义预览列表样式 -->\r\n          <template #preview-list=\"previewFileList\" v-if=\"type === 'file'\">\r\n            <slot name=\"upload-list\" v-bind=\"fileList\">\r\n              <div v-for=\"(file, index) in previewFileList\" :key=\"file.fileToken || file.fileId\"\r\n                class=\"preview-list-item\" @click=\"download(file)\">\r\n                <img :src=\"file.file.name | getFileIcon\" class=\"file-icon\" />\r\n                <div class=\"file-info\">\r\n                  <span>{{ file.file.name }}</span>\r\n                  <span>{{ file.file.size | calculateFileSize }}</span>\r\n                </div>\r\n                <span class=\"delete-text\" @click=\"deleteFile(index)\" v-if=\"!disabled\">删除</span>\r\n              </div>\r\n            </slot>\r\n          </template>\r\n          <template #preview-list v-else-if=\"fileList.length == 0 && disabled\">\r\n            <span>暂无附件</span>\r\n          </template>\r\n        </fm-uploader>\r\n      </template>\r\n    </fm-field>\r\n  </div>\r\n</template>\r\n<script>\r\n/* eslint-disable no-undef */\r\n// 该组件需要和真机交互，会出现原生 API 未定义的情况，故全局应用屏蔽 no-undef 规则\r\n\r\nimport { Uploader, Toast, Button, Field } from 'fawkes-mobile-lib'\r\nimport { changeFileG9s, getFileToken } from '@/api/file'\r\nimport { uuid } from '@/utils/param'\r\nimport { isImage, downloadFile, calcFileSize } from '@/utils/file'\r\nimport request from '@/utils/request'\r\nimport axios from 'axios'\r\n\r\nconst cancelTokenObj = new Map()\r\nconst wpgURL=process.env.VUE_APP_THIRD_REQUEST_URL\r\nexport default {\r\n  name: 'Uploader',\r\n  components: {\r\n    [Uploader.name]: Uploader,\r\n    [Toast.name]: Toast,\r\n    [Button.name]: Button,\r\n    [Field.name]: Field,\r\n  },\r\n  filters: {\r\n    calculateFileSize: function (val) {\r\n      return calcFileSize(val)\r\n    },\r\n  },\r\n  props: {\r\n    // 文件groupToken\r\n    value: {\r\n      type: String,\r\n      required: true,\r\n      default: '',\r\n    },\r\n    // TODO: 文件上传数量限制，暂未使用\r\n    limit: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    // 图片上传时的标签名称\r\n    label: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n    // 名称，提交表单的标识符\r\n    name: {\r\n      type: String,\r\n      default: 'uploader',\r\n    },\r\n    // 开启自动上传\r\n    autoUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否展示删除按钮\r\n    deletable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否显示上传区域\r\n    showUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 上传类型，image或file\r\n    type: {\r\n      type: String,\r\n      default: 'image',\r\n    },\r\n    // 图片多选限制数量，默认为9\r\n    maxImagesCount: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n    // 上传前的校验方法\r\n    beforeRead: {\r\n      type: Function,\r\n      default: function () {\r\n        return true\r\n      },\r\n    },\r\n    // 允许预览，默认为true\r\n    previewFullImage: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 文件上传时标签名称\r\n    previewLabel: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n    // header\r\n    wpgHeader: {\r\n      type: Object,\r\n      default: {}\r\n    },\r\n    token:'',\r\n  },\r\n  data: () => ({\r\n    fileList: [],\r\n    fileTokenList: [],\r\n    // 是否需要请求文件资源\r\n    needToGetFile: true,\r\n    percent: 0,\r\n  }),\r\n  computed: {\r\n    // 允许上传的文件类型\r\n    accept() {\r\n      return this.type == 'image' ? 'image/*' : '*'\r\n    },\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (!newVal) {\r\n          this.fileTokenList = []\r\n          this.fileList = []\r\n          return\r\n        } else if (this.needToGetFile) {\r\n          let postData = {\r\n            g9s: [newVal],\r\n          }\r\n          getFileToken(postData).then((res) => {\r\n            if (res.status) {\r\n              let fileTokenList = res.data\r\n              const fileList = []\r\n              fileTokenList.forEach((item) => {\r\n                let isImageType = isImage(item.fileName)\r\n                let fileItem = {\r\n                  file: {\r\n                    name: item.fileName,\r\n                    size: item.size,\r\n                  },\r\n                  response: item,\r\n                  isImage: isImageType,\r\n                  fileToken: item.fileToken,\r\n                }\r\n                // 展示图片\r\n                if (isImageType) {\r\n                  fileItem.url = `${process.env.VUE_APP_BASE_URL}/sys-storage/download_image?f8s=${item.fileToken}`\r\n                } else {\r\n                  // 展示文件\r\n                  fileItem.url = item.fileToken\r\n                }\r\n\r\n                fileList.push(fileItem)\r\n                this.fileTokenList.push(item.fileToken)\r\n              })\r\n              this.fileList = fileList\r\n              this.$emit('fileChange', {\r\n                file: null,\r\n                fileList,\r\n                length: fileList.length,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setG9s() {\r\n      if (this.fileTokenList.length) {\r\n        const g9s = uuid()\r\n        this.$emit('input', g9s)\r\n        //将各文件的filetoken合并成grouptoken\r\n        return changeFileG9s(g9s, this.fileTokenList)\r\n      } else {\r\n        this.$emit('input', '')\r\n      }\r\n    },\r\n    afterRead(file) {\r\n      if (this.autoUpload) {\r\n        // 多选的情况下\r\n        if (Array.isArray(file)) {\r\n          file.forEach((el) => this.uploadFile(el))\r\n        } else {\r\n          this.uploadFile(file)\r\n        }\r\n      }\r\n    },\r\n    uploadFile(file) {\r\n      //文件读取完成后的回调函数\r\n      file.status = 'uploading'\r\n      let formData = new FormData()\r\n\r\n      formData.append('file', file.file)\r\n\r\n      // fileId用于标记文件，方便后续删除定位文件\r\n      const fileId = uuid()\r\n      file.fileId = fileId\r\n\r\n      //生成取消请求的token,方便在handleRemove取消上传时结束请求\r\n      const CancelToken = axios.CancelToken\r\n      const source = CancelToken.source()\r\n      cancelTokenObj.set(fileId, source)\r\n      console.log(\"this.wpgHeader\",this.wpgHeader)\r\n      console.log(\"this.token\",this.token)\r\n      request({\r\n        url: wpgURL+'/main/userCenterApi/FileManager/upload', //ok\r\n        method: 'post',\r\n        headers:{\r\n          'Content-Type': 'multipart/form-data',\r\n          \"Authorization\": 'Bearer ' + this.token,\r\n        },\r\n        data: formData,\r\n        timeout: 0,\r\n        cancelToken: source.token,\r\n        onUploadProgress: (progressEvent) => {\r\n          let percent = ((progressEvent.loaded / progressEvent.total) * 100) | 0\r\n          //调用onProgress方法来显示进度条，需要传递个对象 percent为进度值\r\n          // file.onProgress({ percent: percent });\r\n          file.message = `上传中 ${percent}%`\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log('Uploader组件的上传后的-res: ', res);\r\n          if (res.status) {\r\n            file.status = 'success'\r\n            file.fileToken = res?.data?.fileToken\r\n            this.fileTokenList.push(res?.data?.fileToken)\r\n            // this.setG9s() //web端传不上？\r\n            // 解决上传结束后进度仍然显示问题\r\n            this.$refs.relUploader.$forceUpdate()\r\n            // 上传后，拿到一些关键信息，进行后续上传服务器等\r\n            this.$emit('fileChange', {\r\n              res: res,\r\n              file: res.data,\r\n              fileList: this.fileList,\r\n              length: this.fileList.length,\r\n            })\r\n          } else {\r\n            Toast(res.message)\r\n            // 删除上传失败的文件\r\n            this.fileList.splice(\r\n              this.fileList.findIndex((el) => el.fileId === fileId),\r\n              1\r\n            )\r\n          }\r\n          // file.onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n          Toast('上传失败')\r\n          // 删除上传失败的文件\r\n          this.fileList.splice(\r\n            this.fileList.findIndex((el) => el.fileId === fileId),\r\n            1\r\n          )\r\n        })\r\n    },\r\n    removeFile(file) {\r\n      console.log('file: ', file);\r\n      const fileId = file.fileId\r\n      //如果文件在上传中的话，则取消上传请求\r\n      const source = cancelTokenObj.get(fileId)\r\n      source && source.cancel()\r\n      // 没有上传成功，或非查看页面预览时，直接return\r\n      if (file.status !== 'success' && !file.response) {\r\n        return\r\n      }\r\n      this.fileTokenList = this.fileTokenList.filter((item) => {\r\n        return item !== file.fileToken\r\n      })\r\n\r\n      if (fileId) {\r\n        console.log('fileId: ', fileId);\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileId === fileId),\r\n          1\r\n        )\r\n        // 从后台获取附件后没有filedId时，利用token定位文件做删除\r\n      } else {\r\n        console.log('从后台获取附件后没有filedId时，利用token定位文件做删除');\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileToken === file.fileToken),\r\n          1\r\n        )\r\n      }\r\n\r\n      //派发文件列表状态变化事件\r\n      this.$emit('fileChange', {\r\n        file,\r\n        fileList: this.fileList,\r\n        length: this.fileList.length,\r\n      })\r\n    },\r\n    // 移动端设备下载文件\r\n    download(file) {\r\n      if ((file.isImage && this.type == 'image') || !this.disabled) {\r\n        return\r\n      } else if (typeof yuanchu != 'undefined') {\r\n        let accessToken = this.$storage.get('access_token')\r\n        let url =\r\n          process.env.VUE_APP_BASE_URL +\r\n          '/sys-storage/download?f8s=' +\r\n          file.fileToken\r\n        let name = file.file.name\r\n        this.$loading.show({ title: '' })\r\n\r\n        // 从设备应用缓存目录下获取文件系统路径\r\n        let fileUrl = yuanchu.fileSystemPaths.file.cacheDirectory + name\r\n\r\n        // 调用原生框架附件下载插件暴露的接口\r\n        let fileTransfer = new yuanchu.fileTransfer()\r\n        let that = this\r\n        that.fileTransfer = fileTransfer\r\n        fileTransfer.onprogress = (progressEvent) => {\r\n          if (progressEvent) {\r\n            if (file?.response?.size != progressEvent.total) {\r\n              that.percent = Math.round(\r\n                (progressEvent.loaded * 100) / file?.response?.size\r\n              )\r\n            }\r\n          }\r\n        }\r\n\r\n        fileTransfer.download(\r\n          url,\r\n          fileUrl,\r\n          (entry) => {\r\n            entry.file((data) => {\r\n              yuanchu.fileOpener2.open(entry.toURL(), data.type, {\r\n                success: function () {\r\n                  return\r\n                },\r\n                error: function (err) {\r\n                  console.error(err)\r\n                  this.$loading.hide()\r\n                },\r\n              })\r\n            })\r\n            this.$loading.hide()\r\n          },\r\n          () => {\r\n            that.percent = 0\r\n            this.$loading.hide()\r\n          },\r\n          false,\r\n          {\r\n            headers: {\r\n              'Fawkes-Auth': accessToken,\r\n            },\r\n          }\r\n        )\r\n      } else {\r\n        downloadFile(file.fileToken)\r\n      }\r\n    },\r\n    deleteFile(index) {\r\n      this.$refs.relUploader.onDelete(this.fileList[index], index)\r\n    },\r\n    onClickUpload(event) {\r\n      if (this.type == 'image') {\r\n        // this.takePicture()\r\n        // 解决浏览器调试时控制报错问题\r\n        if (typeof yuanchu != 'undefined') {\r\n          this.takePicture()\r\n          event.preventDefault()\r\n        }\r\n      } else {\r\n        this.$refs.relUploader.$emit('click-upload', event)\r\n      }\r\n    },\r\n    takePicture() {\r\n      // 调用原生插件拍照或从相册选取\r\n      yuanchu.imagePicker.getPictures(this.onSuccess, this.onFail, {\r\n        quality: 50,\r\n        maximumImagesCount: this.maxImagesCount,\r\n        width: 1920,\r\n        height: 1440,\r\n      })\r\n    },\r\n    onFail(error) {\r\n      console.error(error)\r\n    },\r\n    // 拍照或从相册选取图片成功后回调\r\n    onSuccess(obj) {\r\n      obj?.images.forEach((val) => {\r\n        console.log('val: ', val);\r\n        // plus.io.resolveLocalFileSystemURL\r\n        resolveLocalFileSystemURL(\r\n          val.uri,\r\n          (fileEntry) => {\r\n            //获取file对象，和js原生的file不一样，需要插件处理\r\n            fileEntry.file(\r\n              (file) => {\r\n                //读取文件对象\r\n                const reader = new yuanchu.fileReader()\r\n                reader.onloadend = (event) => {\r\n                  const result = {}\r\n                  const thisFile = new File(\r\n                    [new Blob([event.target.result], { type: file.type })],\r\n                    file.name\r\n                  )\r\n                  result.url = window.URL.createObjectURL(\r\n                    new Blob([event.target.result])\r\n                  )\r\n                  result.isImage = true\r\n                  result.file = thisFile\r\n                  // 插入到fileList中并调用上传方法\r\n                  this.fileList.push(result)\r\n                  this.afterRead(result)\r\n                }\r\n                reader.readAsArrayBuffer(file)\r\n              },\r\n              function (error) {\r\n                console.error('error', error)\r\n              }\r\n            )\r\n          },\r\n          function (error) {\r\n            console.error('error resolve', error)\r\n          }\r\n        )\r\n      })\r\n    },\r\n    clickUpload() {\r\n      this.$refs?.relUploader?.$refs?.input.click()\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n// 自定义文件列表预览\r\n.custom-preview-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n\r\n// 自定义文件项\r\n.preview-list-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 12px;\r\n  padding-top: 16px;\r\n\r\n  .file-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 12px;\r\n    height: 3em;\r\n    justify-content: space-between;\r\n    flex: 1;\r\n    min-width: 0;\r\n\r\n    span {\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-align: left;\r\n    }\r\n\r\n    span+span {\r\n      font-size: 28px;\r\n      color: #999999;\r\n    }\r\n  }\r\n\r\n  .file-icon {\r\n    height: 53px;\r\n    width: 44px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  .delete-text {\r\n    color: #999999;\r\n  }\r\n}\r\n\r\n.field-attachment {\r\n  height: 100%;\r\n  flex-direction: column;\r\n\r\n  /deep/ .fm-field__control--right {\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n\r\n/deep/ .cus-label {\r\n  width: 100%;\r\n}\r\n\r\n.cus-label__div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  .label-action {\r\n    color: #027aff;\r\n  }\r\n}\r\n\r\n.uploder-attachment {\r\n  width: 100%;\r\n}\r\n\r\n.no-upload-list {\r\n  /deep/ .fm-field__control {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n"]}]}