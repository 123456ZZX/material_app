{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\inspectionManage\\emergency-task.vue?vue&type=style&index=0&id=60a5166d&lang=scss&scoped=true","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\inspectionManage\\emergency-task.vue","mtime":1705912800085},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFzay1tYXAgew0KICAudG9vbC1ib3ggew0KICAgIHBvc2l0aW9uOiBmaXhlZDsNCiAgICB3aWR0aDogNDBweDsNCiAgICBoZWlnaHQ6IDEwMHB4Ow0KICAgIHJpZ2h0OiAxNXB4Ow0KICAgIGJvdHRvbTogMTBweDsNCiAgICAubG9jYXRpb24gew0KICAgICAgd2lkdGg6IDQwcHg7DQogICAgICBoZWlnaHQ6IDQwcHg7DQogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgICAgei1pbmRleDogMzsNCiAgICAgIGJveC1zaGFkb3c6IDBweCA0cHggMTFweCAwcHggcmdiYSgwLDAsMCwwLjIpOw0KICAgICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgICAgJi1pbWFnZSB7DQogICAgICAgIG1hcmdpbjogOHB4Ow0KICAgICAgICB3aWR0aDogMjRweDsNCiAgICAgICAgaGVpZ2h0OiAyNHB4Ow0KICAgICAgfQ0KICAgIH0NCiAgfQ0KICAucG9wdXAtdmlldyB7DQogICAgaGVpZ2h0OiA0MyU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcG9zaXRpb246IGZpeGVkOw0KICAgIGJvdHRvbTogMHB4Ow0KICAgIHotaW5kZXg6IDEwOw0KICAgIHRyYW5zaXRpb246IGJvdHRvbSAzLjBzIGVhc2UtaW47DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsNCiAgICAucG9wdXAtY29udGFpbmVyIHsNCiAgICAgIHBhZGRpbmc6IDE1cHg7DQogICAgICAuaGVhZCB7DQogICAgICAgIHBhZGRpbmc6IDBweCA1cHg7DQogICAgICAgIGRpc3BsYXk6IGZsZXg7DQogICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgZm9udC1zaXplOiAxNXB4Ow0KICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICBjb2xvcjogIzMzMzMzMzsNCiAgICAgICAgLm9uLWNvbmZpcm0gew0KICAgICAgICAgIGNvbG9yOiAjMmE4M2U2Ow0KICAgICAgICB9DQogICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7DQogICAgICB9DQogICAgICAuc2Nyb2xsIHsNCiAgICAgICAgaGVpZ2h0OiAyMzBweDsNCiAgICAgICAgLnNpZ24tZm9ybSB7DQogICAgICAgICAgbWFyZ2luOiA4cHg7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogICAgLmNvbmZpcm0tcG9wIHsNCiAgICAgIC50aXRsZSB7DQogICAgICAgIGJvcmRlci1sZWZ0OiA0cHggc29saWQgIzJhODNlNjsNCiAgICAgICAgbWFyZ2luOiA1cHg7DQogICAgICAgIHBhZGRpbmctbGVmdDogMTBweDsNCiAgICAgIH0NCiAgICAgIC5jb250ZW50IHsNCiAgICAgICAgYm9yZGVyLXRvcDogMC41cHggc29saWQgcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjMyMik7DQogICAgICAgIHdpZHRoOiAyMTBweDsNCiAgICAgICAgcGFkZGluZzogMjRweDsNCiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgICAgICAmLXZpZXcgew0KICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsNCiAgICAgICAgfQ0KICAgICAgICAuY29uZmlybS1idG4gew0KICAgICAgICAgIG1hcmdpbi10b3A6IDQwcHg7DQogICAgICAgICAganVzdGlmeS1pdGVtczogY2VudGVyOw0KICAgICAgICAgIC5wb3B1cC1idG4gew0KICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7DQogICAgICAgICAgICB3aWR0aDogNjBweDsNCiAgICAgICAgICAgIGhlaWdodDogMzJweDsNCiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICAgICAgICAgICYtbHsNCiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICYtcnsNCiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQoNCiAgfQ0KDQp9DQo="},{"version":3,"sources":["emergency-task.vue"],"names":[],"mappings":";AAopBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"emergency-task.vue","sourceRoot":"src/views/inspectionManage","sourcesContent":["<!--\r\n * @Description: \r\n * @Author: wei_qx@hdec.com\r\n * @Date: 2021-04-23 08:49:00\r\n * @LastEditor: wei_qx@hdec.com\r\n * @LastEditTime: 2021-05-02 18:29:01\r\n-->\r\n<template>\r\n  <div class=\"task-map full-width\">\r\n    <!-- 地图 -->\r\n    <MapComp ref=\"mymap\" :ifInspection=\"true\" :inspBusinessType=\"inspBusinessType\" class=\"full-height\"></MapComp>\r\n    <!-- 定位 -->\r\n    <div class=\"tool-box\">\r\n      <div class=\"location\" @click=\"startLocation\">\r\n        <fm-image class=\"location-image\" src=\"@/static/img/inspection/location.png\"></fm-image>\r\n      </div>\r\n    </div>\r\n    <!-- 应急任务填报框 -->\r\n    <div v-if=\"signShow\" class=\"popup-view\">\r\n      <div class=\"popup-container\">\r\n        <div class=\"head\">\r\n          <text @click=\"onCancel\">取消</text>\r\n          <text>{{ feature.properties ?\r\n            feature.properties.taskDirectives ?\r\n             feature.properties.taskDirectives.inspItemName + \"，请核实\" \r\n             : \"事件，请核实\"\r\n             : \"事件，请核实\"\r\n            }}</text>\r\n          <text class=\"on-confirm\" @click=\"onConfirm\">确定</text>\r\n        </div>\r\n        <!-- <u-line color=\"#EEEEEE\"/> -->\r\n        <fm-list class=\"scroll\">\r\n          <fm-form :model=\"signForm\" ref=\"signForm\" class=\"sign-form\">\r\n            <fm-field label=\"巡检结果\" label-width=\"100px\" v-model=\"signForm.inspItemResult\" required />\r\n            <fm-field v-if=\"signForm.inspItemResult === 'false'\" v-model=\"signForm.eventType\" label=\"事件类型\" label-width=\"100px\" required right-icon=\"arrow-right\" prop=\"eventType\" />\r\n            <fm-field label=\"设施对象\" v-model=\"signForm.geoJson\" label-width=\"100px\" required  prop=\"geoJson\" right-icon=\"arrow-right\" />\r\n            <fm-field label=\"反馈描述\" v-model=\"signForm.remark.text\" label-width=\"100px\" />\r\n            <fm-field v-if=\"signForm.inspItemResult === 'false'\" v-model=\"signForm.inspTaskDetailDesc.text\" label=\"初步处理\" label-width=\"100px\" />\r\n            <fm-uploader label=\"多媒体附件\" label-width=\"100px\" label-position=\"top\" required prop=\"photoLength\" />\r\n          </fm-form>\r\n        </fm-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport bus from \"../../views/inspectMap/utils/Bus.js\";\r\nimport MapComp from \"../../views/inspectMap/index.vue\";\r\nimport request from '@/utils/request'\r\nimport { inspectionItem, inspectEvent, inspectionEventAll } from './api'\r\nimport * as turf from '@turf/turf'\r\nexport default {\r\n  name: \"emergency-task\",\r\n  components: {\r\n    MapComp,\r\n    // SunuiUpimg\r\n  },\r\n  data() {\r\n    return {\r\n      inspBusinessType: \"\",\r\n      currentPosition: null,\r\n      userInfo: {},\r\n      engInfoDTO: null,\r\n      ifRecording: false,\r\n      selectEventType: false,\r\n      selectInspObj: false,\r\n      eventTypeList: [],\r\n      geoJsonList: [],\r\n      signShow: false,\r\n      signForm: {\r\n        inspItemResult: \"\",\r\n        files: [],\r\n        eventType: null,\r\n        geoJson: null,\r\n        remark: {\r\n          text: \"\",\r\n          voice: {}\r\n        },\r\n        inspTaskDetailDesc: {\r\n          text: \"\",\r\n          voice: {}\r\n        }\r\n      },\r\n      taskDetail: {},\r\n      feature: {},\r\n      rangeList: [],\r\n      range: {},\r\n      isRunList: [\r\n        {\r\n          name: \"正常\",\r\n          value: \"true\"\r\n        }, {\r\n          name: \"异常\",\r\n          value: \"false\"\r\n        }\r\n      ],\r\n      rules: {\r\n        inspItemResult: [\r\n          {\r\n            required: true,\r\n            message: \"请选择巡检结果\",\r\n            trigger: [\"change\", \"blur\"]\r\n          }\r\n        ],\r\n        photoLength: [\r\n          {\r\n            required: true,\r\n            message: \"请上传附件\",\r\n            trigger: [\"change\", \"blur\"]\r\n          }\r\n        ]\r\n      },\r\n      previewURL: \"/sys-storage/download_image?f8s=\",\r\n      upimgPreview: [],\r\n      headers: {},\r\n      url: {\r\n        // 本页面使用到的url\r\n        uploadFile: \"sys-storage/upload\",\r\n        // findFile: \"ecidi-cmp/file/cmpFileGroup/findFilesByGroupId\",\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.headers = this.$storage.get('access_token')\r\n  },\r\n  activated() {\r\n    this.selectEventType= false;\r\n    this.signShow= false;\r\n    this.userInfo = localStorage.getItem(\"userInfo\");\r\n    // this.$refs.mymap.mapInstance && this.$refs.mymap.mapInstance.destoryMap();\r\n    // this.$refs.mymap.mapInstance = null;\r\n    // this.$refs.mymap.initMap();\r\n    this.refreshMap();\r\n    const that = this;\r\n    this.$nextTick(() => {\r\n      const id = this.$route.query.taskId || \"1382190161063841793\" // 应急供水\r\n      this.inspBusinessType = this.$route.query.inspBusinessType;\r\n      this.$refs.mymap.changePipeTileLayerByBusiness(this.inspBusinessType);\r\n      this.getTaskById(id);\r\n      //  监听事件\r\n      document.addEventListener(\"positioning\", function(event) {\r\n        const position = event.detail.currentPosition;\r\n        that.currentPosition = position;\r\n        if (!that.currentPosition) return;\r\n        const param = {\r\n          inspBusinessType: that.taskDetail.inspBusinessType,\r\n          pipeLevel: {\r\n            pipeMax: that.taskDetail.pipeLevelMax,\r\n            pipeMin: that.taskDetail.pipeLevelMin\r\n          },\r\n          ...that.currentPosition\r\n        }\r\n        that.$refs.mymap.setInspUserPosition(param);\r\n      }, false);\r\n    })\r\n    this.getEventTypeList();\r\n  },\r\n  mounted() {\r\n    this.userInfo = localStorage.getItem(\"userInfo\");\r\n    bus.$on(\"startEmeSignIn\", (feature) => {\r\n      this.startEmeSignIn(feature);\r\n    })\r\n    bus.$on(\"reportInspEvent\", (feature, isShow) => {\r\n      // 从地图中选择设施对象\r\n      if (isShow) {\r\n        const feat = feature;\r\n        const objLabel = feature.properties.pipetype+ feat.properties.gjz;\r\n        const objVal = feature.properties.gjz;\r\n        this.$set(this.signForm, \"geoJson\", objLabel);\r\n        this.$set(this.signForm, \"gjz\", objVal);\r\n        this.getEngPropertyVal(this.signForm.gjz);\r\n      } else {\r\n        this.$set(this.signForm, \"geoJson\", \"\");\r\n        this.$set(this.signForm, \"gjz\", \"\");\r\n        this.engInfoDTO = null;\r\n      }\r\n    })\r\n    const that = this;\r\n    this.$nextTick(() => {\r\n      const id = this.$route.query.taskId || \"1382190161063841793\" // 应急供水\r\n      this.inspBusinessType = this.$route.query.inspBusinessType;\r\n      this.getTaskById(id);\r\n      this.getEventTypeList();\r\n      //  监听事件\r\n      document.addEventListener(\"positioning\", function(event) {\r\n        const position = event.detail.currentPosition;\r\n        that.currentPosition = position;\r\n        if (!that.currentPosition) return;\r\n        const param = {\r\n          inspBusinessType: that.taskDetail.inspBusinessType,\r\n          pipeLevel: {\r\n            pipeMax: that.taskDetail.pipeLevelMax,\r\n            pipeMin: that.taskDetail.pipeLevelMin\r\n          },\r\n          ...that.currentPosition\r\n        }\r\n        that.$refs.mymap.setInspUserPosition(param);\r\n      }, false);\r\n    })\r\n  },\r\n  methods: {\r\n    // 刷新地图\r\n    refreshMap() {\r\n      try {\r\n        // 清空所有的popup\r\n        let classNames = document.getElementsByClassName(\"mapboxgl-popup-anchor-bottom\");\r\n        for (let i = classNames.length - 1; i >= 0; i--) {\r\n          if (classNames[i] != null) {\r\n            classNames[i].parentNode.removeChild(classNames[i]);\r\n          }\r\n        }\r\n        this.$refs.mymap.mapInstance && this.$refs.mymap.removeInspEmeMarkers(this.rangeList);\r\n        // 清空巡检范围图层\r\n        this.$refs.mymap.mapInstance.setSourceData('rangeSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        // 清空巡检管线图层\r\n        this.$refs.mymap.mapInstance.setSourceData('initInspLineSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        this.$refs.mymap.mapInstance.setSourceData('unInspLineSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        this.$refs.mymap.mapInstance.setSourceData('inspLineSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        this.$refs.mymap.mapInstance.setSourceData('curInspLineSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        this.$refs.mymap.mapInstance.setSourceData('inspUserLineSource', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        this.$refs.mymap.mapInstance.setSourceData('inspUser', {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        });\r\n        // 如果存在事件图层，就移除该图层\r\n        this.$refs.mymap.map.getLayer(\"eventPointsLayer\") && this.$refs.mymap.map.removeLayer(\"eventPointsLayer\");\r\n        this.$refs.mymap.map.getSource(\"eventPoints\") && this.$refs.mymap.map.removeSource(\"eventPoints\");\r\n        this.$refs.mymap.removeEventObjMarker();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    // 刷新任务\r\n    refreshTask() {\r\n      console.log(\"刷新应急任务！\");\r\n      this.$refs.mymap.mapInstance && this.$refs.mymap.removeInspEmeMarkers(this.rangeList);\r\n      this.$nextTick(() => {\r\n        const id = this.$route.query.taskId || \"1382190161063841793\";\r\n        this.getTaskById(id);\r\n      })\r\n    },\r\n    // 根据任务id获取任务\r\n    async getTaskById(id) {\r\n      const res = await request({\r\n        url: `ops-inspection/api/inspectionTask/${id}`\r\n      });\r\n      if (res.status) {\r\n        this.taskDetail = res.data.inspectionTask;\r\n        this.rangeList = res.data.rangeList.map(item => {\r\n          return {\r\n            restTime: this.getTaskRestTime(new Date(), new Date(this.taskDetail.planEndTime)) || 0,\r\n            inspBusinessType: this.taskDetail.inspBusinessType,\r\n            pipeLevel: {\r\n              pipeMax: this.taskDetail.pipeLevelMax,\r\n              pipeMin: this.taskDetail.pipeLevelMin\r\n            },\r\n            ...item\r\n          }\r\n        })\r\n        try {\r\n          const that = this;\r\n          var timer = setInterval(function() {\r\n            // 30s后取消\r\n            setTimeout(() => {\r\n              clearInterval(timer);\r\n            }, 30000);\r\n            if (that.$refs.mymap && that.$refs.mymap.isOnLoaded()) {\r\n              clearInterval(timer);\r\n              that.$refs.mymap.addRangeList(that.rangeList, true);\r\n              const params = {\r\n                taskId: id\r\n              }\r\n              that.getEventAll(params);\r\n              if (!that.currentPosition) return;\r\n              const param = {\r\n                inspBusinessType: that.taskDetail.inspBusinessType,\r\n                pipeLevel: {\r\n                  pipeMax: that.taskDetail.pipeLevelMax,\r\n                  pipeMin: that.taskDetail.pipeLevelMin\r\n                },\r\n                ...that.currentPosition\r\n              }\r\n              that.$refs.mymap.setInspUserPosition(param);\r\n            }\r\n          }, 500);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n    },\r\n    // 获取巡检事件\r\n    async getEventAll(params) {\r\n      const res = await inspectionEventAll(params);\r\n      if (res.status) {\r\n        let features = [];\r\n        res.data.forEach((item) => {\r\n          if (item.eventItemText) {\r\n            const geom = JSON.parse(item.eventItemText);\r\n            let feature = {\r\n              geometry: geom.type === \"Feature\" ? geom.geometry : geom,\r\n              properties: {}\r\n            };\r\n            this.$set(feature, \"geometry\", this.computeCenter2(feature.geometry));\r\n            this.$set(feature, \"id\", item.id);\r\n            this.$set(feature.properties, \"eventType\", item.eventType)\r\n            // this.$set(feature, \"eventType\", item.eventType);\r\n            // this.$refs.mymap.addInspEventMarker(feature);\r\n            features.push(feature);\r\n          }\r\n        });\r\n        this.$refs.mymap.addInspEventLayer(features);\r\n      }\r\n    },\r\n    // 获取事件类型\r\n    async getEventTypeList() {\r\n      const params = {\r\n        page: 1,\r\n        size: 9999\r\n      }\r\n      const res = await inspectionItem(params);\r\n      if (res.status) {\r\n        this.eventTypeList = res.data.list.map(item => {\r\n          return {\r\n            label: item.inspItemName,\r\n            value: item.inspItemId,\r\n            ...item\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 获取图片信息\r\n    getImageInfo(val) {\r\n      if (val && val[0].length > 0) {\r\n        this.signForm.files = val[0];\r\n        let photoList = [];\r\n        val[0].forEach((item, index) => {\r\n          photoList.push(item.fileToken);\r\n        });\r\n        let temp = photoList.length + \"\";\r\n        this.$set(this.signForm, \"photoLength\", temp);\r\n      } else {\r\n        this.$set(this.signForm, \"photoLength\", \"\");\r\n      }\r\n    },\r\n    // 开始定位\r\n    startLocation() {\r\n      const position = this.currentPosition;\r\n      if (!position) return;\r\n      const coord = [parseFloat(position.xCode), parseFloat(position.yCode)];\r\n      this.$refs.mymap.flyTo({ position: coord, zoom: 18});\r\n    },\r\n    // 计算剩余时间\r\n    getTaskRestTime(current, end) {\r\n      let curTime = new Date(current);\r\n      let endTime = new Date(end);\r\n      let diff = endTime.getTime() - curTime.getTime();\r\n      if (diff >= 0) {\r\n        let sec = diff / 1000;\r\n        return sec;\r\n      } else {\r\n        return 0;\r\n      }\r\n    },\r\n    // 确认\r\n    onConfirm() {\r\n      this.$refs.signForm.validate(valid => {\r\n        if (valid) {\r\n          console.log(\"验证通过\");\r\n          if (!this.engInfoDTO)  {\r\n            Toast({\r\n              message: \"设施对象数据不存在\",\r\n              duration: 3000\r\n            });\r\n            return;\r\n          }\r\n          // app端应急任务上报 /ops-inspection/api/inspectEvent\r\n          let copySignForm = this.deepClone(this.signForm);\r\n          if (this.signForm.inspItemResult === \"true\") {\r\n            const geom = this.computeCenter(this.feature);\r\n            copySignForm.inspTime = this.$moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n            copySignForm.remark = JSON.stringify(copySignForm.remark);\r\n            copySignForm.inspTaskDetailDesc = JSON.stringify(copySignForm.inspTaskDetailDesc);\r\n            this.$set(copySignForm, \"engId\", this.engInfoDTO.engId);\r\n            delete copySignForm.files;\r\n            let payload = {\r\n              engInfoDTO: this.engInfoDTO.infoDTO,\r\n              geoJson: this.engInfoDTO.infoDTO.engGeom,\r\n              files: this.signForm.files,\r\n              inspectionTaskDetail: copySignForm\r\n            }\r\n            inspectEvent(payload).then(res => {\r\n              if (res.status) {\r\n                Toast({\r\n                  message: \"填报成功\",\r\n                  duration: 3000\r\n                });\r\n                this.signShow = false;\r\n                this.refreshTask();\r\n              }\r\n            });\r\n          } else if (this.signForm.inspItemResult === \"false\") {\r\n            const geom = this.computeCenter(this.feature);\r\n            copySignForm.inspTime = this.$moment().format(\"YYYY-MM-DD HH:mm:ss\");\r\n            copySignForm.remark = JSON.stringify(copySignForm.remark);\r\n            copySignForm.inspTaskDetailDesc = JSON.stringify(copySignForm.inspTaskDetailDesc);\r\n            this.$set(copySignForm, \"engId\", this.engInfoDTO.engId);\r\n            delete copySignForm.files;\r\n            let payload = {\r\n              engInfoDTO: this.engInfoDTO.infoDTO,\r\n              geoJson: this.engInfoDTO.infoDTO.engGeom,\r\n              files: this.signForm.files,\r\n              inspectionTaskDetail: copySignForm\r\n            }\r\n            this.$api.postAction(\"/ops-inspection/api/inspectEvent\", payload).then(res => {\r\n              if (res.status) {\r\n                Toast({\r\n                  message: \"填报成功\",\r\n                  duration: 3000\r\n                });\r\n              }\r\n            });\r\n            // 巡检事件上报\r\n            // 事件描述文件json \"{\\\"dir\\\":\\\"2021-04/\\\",\\\"extName\\\":\\\"amr\\\",\\\"fileName\\\":\\\"20210413_111722.amr\\\",\\\"fileToken\\\":\\\"21fe7e24367f434a1cf36658f95cd47f\\\",\\\"objectName\\\":\\\"2021-04/21fe7e24367f434a1cf36658f95cd47f.amr\\\",\\\"size\\\":\\\"11472\\\",\\\"version\\\":\\\"0\\\"}\"\r\n            // const geom = this.computeCenter(this.feature);\r\n            // const geom = this.engInfoDTO.engGeom;\r\n            let uploadFiles = [];\r\n            if (this.signForm.inspTaskDetailDesc.voice.fileName) {\r\n              uploadFiles.push(this.signForm.inspTaskDetailDesc.voice);\r\n            }\r\n            uploadFiles = uploadFiles.concat(this.signForm.files);\r\n            const preliminaryHandleFile = JSON.stringify(uploadFiles);\r\n            const eventPayload = {\r\n              conclusion: copySignForm.eventType,\r\n              eventDescribe: this.signForm.remark.text,\r\n              eventSource: \"inspection_event_source_inspection\",\r\n              eventType: copySignForm.eventType,\r\n              eventTypeId: copySignForm.inspItemId,\r\n              inspBusinessType: this.taskDetail.inspBusinessType,\r\n              officeId: this.taskDetail.inspOrgId,\r\n              preliminaryHandle: this.signForm.inspTaskDetailDesc.text,\r\n              preliminaryHandleFile: preliminaryHandleFile,\r\n              eventDescribeFile: JSON.stringify(this.signForm.remark.voice),\r\n              regionItemText: this.engInfoDTO.infoDTO.engGeom,\r\n              // regionItemText: JSON.stringify(copySignForm.taskRangerGeom),\r\n              taskId: this.taskDetail.taskId,\r\n              engId: this.engInfoDTO ? this.engInfoDTO.engId : undefined, // 设施对象\r\n              eventItemText: this.engInfoDTO.infoDTO.engGeom,\r\n              // eventItemText: JSON.stringify(copySignForm.taskRangerGeom),\r\n              lng: geom.coordinates[0], // \r\n              lat: geom.coordinates[1], // 可能为polygon范围\r\n              reporterId: this.userInfo.id,\r\n              reporterName: this.userInfo.userFullname\r\n            }\r\n            this.$api.postAction(\"/yhsw-inspection/inspectionEvent/insert\", eventPayload).then(res => {\r\n              if (res.status) {\r\n                this.signShow = false;\r\n                this.refreshTask();\r\n              }\r\n            })\r\n          }\r\n        } else {\r\n          console.log(\"验证失败\");\r\n        }\r\n      })\r\n    },\r\n    // 取消\r\n    onCancel() {\r\n      this.signShow = false;\r\n    },\r\n    // 签到\r\n    startEmeSignIn(feature) {\r\n      this.feature = feature;\r\n      const geom = this.computeCenter(this.feature);\r\n      try {\r\n        if (this.feature.geometry.type === \"Polygon\") {\r\n          //如果是范围，定位当前巡检人员的位置附近的数据\r\n          if (this.currentPosition) {\r\n            const position = this.currentPosition;\r\n            const coord = [parseFloat(position.xCode), parseFloat(position.yCode)];\r\n            const point = turf.point(coord);\r\n            this.getInspDataInRange(point);\r\n          } else {\r\n            this.geoJsonList = [];\r\n            Toast({\r\n              message: \"获取不到巡检员位置\",\r\n              duration: 3000\r\n            })\r\n          }\r\n        } else {\r\n          console.log(\"this.feature==>\", this.feature);\r\n          // 查询当前签到位置范围内的数据\r\n          this.getInspDataInRange(geom);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      // 第一种寻找当前range,根据taskRangerName来匹配\r\n      // this.range = this.rangeList.find();\r\n      // 第二种，根据feature.id来匹配\r\n      this.rangeList.forEach(item => {\r\n        if (item.taskRangerGeom) {\r\n          const geom = JSON.parse(item.taskRangerGeom);\r\n          if (geom.id === feature.id) {\r\n            this.range = item;\r\n          }\r\n        }\r\n      })\r\n      this.signForm.inspTaskDetailDesc = {\r\n        text: \"\",\r\n        voice: {}\r\n      }\r\n      this.signForm.files = [];\r\n      this.signForm = this.deepClone(Object.assign(this.signForm, this.range));\r\n      this.signForm.remark = {\r\n        text: \"\",\r\n        voice: {}\r\n      }\r\n      this.signForm.taskRangerGeom = this.feature;\r\n      this.signForm.eventType = this.eventTypeList.find(item => item.value === this.signForm.inspItemId).label;\r\n      // 如果已经上报，且上报结果正常\r\n      if (this.signForm.inspItemResult === \"true\") {\r\n        this.signShow = false;\r\n        Toast({\r\n          message: \"结果已录入，无法再次提交\",\r\n          duration: 3000\r\n        })\r\n        return;\r\n      }\r\n      this.signShow = true;\r\n      this.$nextTick(() => {\r\n        this.$refs.signForm.setRules(this.rules);\r\n      })\r\n    },\r\n    // 事件类型选择确认\r\n    eventTypeConfirm(event) {\r\n      if (event && event.length > 0) {\r\n        this.$set(this.signForm, \"eventType\", event[0].label);\r\n        this.$set(this.signForm, \"inspItemId\", event[0].value);\r\n      }\r\n    },\r\n    // 巡检对象确定\r\n    inspObjConfirm(obj) {\r\n      if (obj && obj.length > 0) {\r\n        this.$set(this.signForm, \"geoJson\", obj[0].label);\r\n        this.$set(this.signForm, \"gjz\", obj[0].value);\r\n        this.getEngPropertyVal(this.signForm.gjz);\r\n      } else {\r\n        Toast({\r\n          message: \"暂无巡检对象\",\r\n          duration: 1500\r\n        })\r\n      }\r\n\r\n    },\r\n    // 深拷贝\r\n    deepClone(data) {\r\n      return JSON.parse(JSON.stringify(data));\r\n    },\r\n    // 计算中心点\r\n    computeCenter(feature) {\r\n      let position;\r\n      if (feature.geometry.type === 'Polygon') {\r\n        const center = turf.center(feature.geometry);\r\n        position = center.geometry;\r\n      } else if (feature.geometry.type === 'LineString') {\r\n        const center = turf.center(feature.geometry);\r\n        position = center.geometry;\r\n      } else if (feature.geometry.type === 'Point') {\r\n        position = feature.geometry;\r\n      }\r\n      return position;\r\n    },\r\n    // 计算中心点\r\n    computeCenter2(feature) {\r\n      let position;\r\n      if (feature.type === 'Polygon') {\r\n        const center = turf.center(feature);\r\n        position = center.geometry;\r\n      } else if (feature.type === 'LineString') {\r\n        const center = turf.center(feature);\r\n        position = center.geometry;\r\n      } else if (feature.type === 'Point') {\r\n        position = feature;\r\n      }\r\n      return position;\r\n    },\r\n    // 根据关键字查询\r\n    async getEngPropertyVal(gjz) {\r\n      const params = {\r\n        value: gjz\r\n      }\r\n      const res = await engPropertyValue(params);\r\n      if (res.status) {\r\n        console.log(\"res==>\", res);\r\n        if (!res.data) {\r\n          Toast({\r\n            message: res.message,\r\n            duration: 3000\r\n          })\r\n        }\r\n        this.engInfoDTO = res.data;\r\n      }\r\n    },\r\n    // 查询身边X米的工程对象\r\n    getInspDataInRange(position) {\r\n      const params = {\r\n        inspBusinessType: this.taskDetail.inspBusinessType,\r\n        pipeLevel: {\r\n          pipeMax: this.taskDetail.pipeLevelMax,\r\n          pipeMin: this.taskDetail.pipeLevelMin\r\n        },\r\n        ...position\r\n      }\r\n      this.$refs.mymap.getInspDataInRange(params).then(res => {\r\n        console.log(\"====>res\",res);\r\n        if (res) {\r\n          this.geoJsonList = res.map(item => {\r\n            return {\r\n              label: item.properties.pipetype + item.properties.gjz,\r\n              value: item.properties.gjz,\r\n              ...item\r\n            }\r\n          })\r\n          if (this.geoJsonList.length <= 0) {\r\n            Toast({\r\n              message: \"周围未找到设施对象\",\r\n              duration: 3000\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    bus.$off(\"startEmeSignIn\");\r\n  },\r\n  onNavigationBarButtonTap: function(e) {\r\n\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.task-map {\r\n  .tool-box {\r\n    position: fixed;\r\n    width: 40px;\r\n    height: 100px;\r\n    right: 15px;\r\n    bottom: 10px;\r\n    .location {\r\n      width: 40px;\r\n      height: 40px;\r\n      background-color: #fff;\r\n      z-index: 3;\r\n      box-shadow: 0px 4px 11px 0px rgba(0,0,0,0.2);\r\n      border-radius: 5px;\r\n      &-image {\r\n        margin: 8px;\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n    }\r\n  }\r\n  .popup-view {\r\n    height: 43%;\r\n    width: 100%;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    z-index: 10;\r\n    transition: bottom 3.0s ease-in;\r\n    background-color: #fff;\r\n    .popup-container {\r\n      padding: 15px;\r\n      .head {\r\n        padding: 0px 5px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        color: #333333;\r\n        .on-confirm {\r\n          color: #2a83e6;\r\n        }\r\n        margin-bottom: 10px;\r\n      }\r\n      .scroll {\r\n        height: 230px;\r\n        .sign-form {\r\n          margin: 8px;\r\n        }\r\n      }\r\n    }\r\n    .confirm-pop {\r\n      .title {\r\n        border-left: 4px solid #2a83e6;\r\n        margin: 5px;\r\n        padding-left: 10px;\r\n      }\r\n      .content {\r\n        border-top: 0.5px solid rgba(128, 128, 128, 0.322);\r\n        width: 210px;\r\n        padding: 24px;\r\n        text-align: center;\r\n        background-color: #fff;\r\n        &-view {\r\n          font-size: 16px;\r\n        }\r\n        .confirm-btn {\r\n          margin-top: 40px;\r\n          justify-items: center;\r\n          .popup-btn {\r\n            float: left;\r\n            width: 60px;\r\n            height: 32px;\r\n            border-radius: 5px;\r\n            &-l{\r\n              margin-left: 10px;\r\n              margin-right: 10px;\r\n            }\r\n            &-r{\r\n              margin-left: 10px;\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n</style>\r\n"]}]}