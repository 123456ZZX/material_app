{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\InspectionComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\InspectionComponent.vue","mtime":1708928163384},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InspectionComponent.vue"],"names":[],"mappingsfile":"InspectionComponent.vue","sourceRoot":"src/views/MaintenanceStatistics/components","sourcesContent":["<template>\r\n  <div class=\"commonComponents\">\r\n    <ChangeBizDate :dateType=\"dateType\" @dateChange=\"dateChange\" />\r\n    <div class=\"topCard\">\r\n      <div v-for=\"card in cardDataConfig\" :key=\"card.text\" class=\"cardItemContainer\">\r\n        <div class=\"cardItemTop\">\r\n          <span class=\"cardItemContentNum\">{{ card.contentNum }}</span>\r\n          <span class=\"cardItemContentUnit\">{{ card.unit }}</span>\r\n        </div>\r\n        <span class=\"cardItemText\">{{ card.text }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/carImg.png\" alt=\"\" />\r\n          <span>车巡统计</span>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n      <div id=\"inspection_chartId_1\" class=\"chartStyle\"></div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/mapImg.png\" alt=\"\" />\r\n          <span>关键点巡检</span>\r\n        </div>\r\n        <SelectComponent\r\n          :selectData=\"inspTypeList\"\r\n          :selValue=\"selValue\"\r\n          color=\"white\"\r\n          @getValue=\"getValue\"\r\n        >\r\n        </SelectComponent>\r\n      </div>\r\n      <div id=\"inspection_chartId_2\" class=\"chartStyle\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Api from '../api.js'\r\nimport ChangeBizDate from './ChangeBizDate.vue' // 日期选择组件\r\nimport SelectComponent from './SelectComponent.vue' // 下拉选择框\r\n// 图表\r\nimport * as echarts from 'echarts'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\nimport { chartOption } from './chartOption.js'\r\nexport default {\r\n  name: 'InspectionComponent',\r\n  components: {\r\n    ChangeBizDate,\r\n    SelectComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      dateType: '日',\r\n      netWorkDate: '',\r\n      inspData: [], // 巡检统计数据\r\n      cardDataConfig: [\r\n        {\r\n          text: '在线人数',\r\n          contentNum: '',\r\n          unit: '人',\r\n          field: 'AAAAAAAAAA',\r\n        },\r\n        {\r\n          text: '车巡里程',\r\n          contentNum: '',\r\n          unit: 'km',\r\n          field: 'BBBBBBBBBB',\r\n        },\r\n        {\r\n          text: '车巡覆盖率',\r\n          contentNum: '',\r\n          unit: '%',\r\n          field: 'CCCCCCCCCC',\r\n        },\r\n        {\r\n          text: '供水阀门',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'DDDDDDDDDD',\r\n        },\r\n        {\r\n          text: '雨水排放口',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'EEEEEEEEEE',\r\n        },\r\n        {\r\n          text: '污水接驳井',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'FFFFFFFFF',\r\n        },\r\n        {\r\n          text: '再生水排放口',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'GGGGGGGGGG',\r\n        },\r\n      ],\r\n      selValue: '供水阀门',\r\n      inspTypeList: [\r\n        { type: 1, name: '供水阀门', value: '供水阀门' },\r\n        { type: 1, name: '雨水排放口', value: '雨水排放口' },\r\n        { type: 1, name: '污水接驳井', value: '污水接驳井' },\r\n        { type: 1, name: '再生水排放口', value: '再生水排放口' },\r\n      ],\r\n      inspTypeData: {}, // 关键点巡检数据\r\n      myChart_1: null,\r\n      myChart_2: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.netWorkDate = this.$dayjs().format('YYYY-MM-DD')\r\n    this.allDataRequest() // 请求所有数据\r\n  },\r\n  methods: {\r\n    // 时间组件日期切换事件，用于控制本组件网络请求日期 netWorkDate 字段\r\n    dateChange(changeType) {\r\n      // console.log(changeType) // subtract or addition\r\n      if (changeType === 'subtract') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).subtract(1, 'day').format('YYYY-MM-DD')\r\n      } else if (changeType === 'addition') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).add(1, 'day').format('YYYY-MM-DD')\r\n      }\r\n      console.log('网络请求用的日期', this.netWorkDate)\r\n      this.allDataRequest() // 请求所有数据\r\n    },\r\n    // 请求所有数据\r\n    allDataRequest() {\r\n      let params = {\r\n        startTime: this.netWorkDate + ' 00:00:00',\r\n        endTime: this.netWorkDate + ' 23:59:59',\r\n      }\r\n      // 在线人数\r\n      Api.onlineNum(params).then((res) => {\r\n        if (res.status) {\r\n          console.log('在线人数', res)\r\n          this.cardDataConfig[0].contentNum =\r\n            (res?.data?.online || 0) + '/' + (res?.data?.total || 0)\r\n        }\r\n      })\r\n      // 巡检统计\r\n      Api.getInspDis(params).then((res) => {\r\n        if (res.status && res.data) {\r\n          console.log('巡检统计', res)\r\n          this.cardDataConfig[1].contentNum = res.data['车巡'].toFixed(2)\r\n          this.cardDataConfig[2].contentNum = res.data['车巡覆盖率'].toFixed(2)\r\n        }\r\n      })\r\n      // 组团巡检统计\r\n      Api.getTableData(params).then((res) => {\r\n        if (res.data.length > 0) {\r\n          console.log('组团巡检统计', res)\r\n          this.inspData = res.data\r\n          // 1.统计供水阀门、雨水排放口、污水接驳井、再生水排放口数量\r\n          // 统计各类设施数量\r\n          const facilityTypes = ['supplyNum', 'rainNum', 'pollutedNum', 'recycleNum']\r\n          const facilityCounts = facilityTypes.map((type) =>\r\n            this.inspData.reduce((acc, item) => acc + (item[type] || 0), 0)\r\n          )\r\n          // 更新卡片数据\r\n          for (let i = 0; i < facilityTypes.length; i++) {\r\n            this.cardDataConfig[i + 3].contentNum = facilityCounts[i]\r\n          }\r\n\r\n          // 2.1 车巡统计（里程（km）、覆盖率（%））\r\n          let cloneOption_1 = _cloneDeep(chartOption)\r\n          cloneOption_1.legend.data = ['里程', '覆盖率']\r\n          cloneOption_1.xAxis.data = this.inspData.map((item) => item.gridName)\r\n          cloneOption_1.yAxis[0].name = '里程(km)'\r\n          cloneOption_1.yAxis[1].name = '覆盖率(%)'\r\n          cloneOption_1.series[0].name = cloneOption_1.legend.data[0]\r\n          cloneOption_1.series[1].name = cloneOption_1.legend.data[1]\r\n          // series赋值\r\n          cloneOption_1.series[0].data = this.inspData.map((item) => {\r\n            let carInsp = []\r\n            carInsp = item.inspDistances.filter((item) => item.taskType === '车巡')\r\n            if (carInsp.length > 0) {\r\n              return carInsp[0].distance\r\n            } else {\r\n              return 0\r\n            }\r\n          })\r\n          cloneOption_1.series[1].data = this.inspData.map((item) => item.coverage)\r\n          this.initChartData(this.myChart_1, cloneOption_1, 'inspection_chartId_1')\r\n\r\n          // 2.2 关键点巡检（供水阀门、雨水排放口、污水接驳井、再生水排放口数量）\r\n          this.inspTypeList.forEach((item) => {\r\n            this.inspTypeData[item.value] = {\r\n              data: [],\r\n            }\r\n          })\r\n          this.inspTypeData['供水阀门'].data = this.inspData.map((item) => item.supplyNum || 0)\r\n          this.inspTypeData['雨水排放口'].data = this.inspData.map((item) => item.rainNum || 0)\r\n          this.inspTypeData['污水接驳井'].data = this.inspData.map((item) => item.pollutedNum || 0)\r\n          this.inspTypeData['再生水排放口'].data = this.inspData.map((item) => item.recycleNum || 0)\r\n          console.log('关键点巡检统计', _cloneDeep(this.inspTypeData))\r\n          this.renderChart() // 渲染关键点巡检图表\r\n        }\r\n      })\r\n    },\r\n    getValue(type, name, value) {\r\n      console.log(type, name, value)\r\n      this.selValue = value\r\n      this.renderChart() // 渲染关键点巡检图表\r\n    },\r\n    // 渲染关键点巡检图表\r\n    renderChart() {\r\n      let cloneOption_2 = _cloneDeep(chartOption)\r\n      cloneOption_2.legend.data = []\r\n      cloneOption_2.xAxis.data = this.inspData.map((item) => item.gridName)\r\n      cloneOption_2.yAxis[0].name = '数量(个)'\r\n      delete cloneOption_2.yAxis[1] // 删除第二个y轴\r\n      cloneOption_2.series[0].name = ''\r\n      delete cloneOption_2.series[1] // 删除第二个series\r\n      // series赋值\r\n      cloneOption_2.series[0].data = this.inspTypeData[this.selValue].data\r\n      console.log(this.inspTypeData[this.selValue].data)\r\n      this.initChartData(this.myChart_2, cloneOption_2, 'inspection_chartId_2')\r\n    },\r\n    // 初始化图表\r\n    initChartData(myChart, chartOption, ChartId) {\r\n      if (myChart) myChart.dispose()\r\n      let chartDom = document.getElementById(ChartId)\r\n      myChart = echarts.init(chartDom)\r\n      let option = _cloneDeep(chartOption)\r\n      option && myChart.setOption(option, true)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.commonComponents {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px 30px 100px;\r\n  overflow-y: scroll;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #f4f6f8;\r\n  transition: all 0.5s;\r\n\r\n  .topCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 300px;\r\n    overflow: scroll;\r\n    padding: 10px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .cardItemContainer {\r\n      width: calc(33% - 10px);\r\n      height: calc(50% - 10px);\r\n      margin: 5px;\r\n      border-radius: 16px;\r\n      background: #ffffff;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 20px;\r\n      box-sizing: border-box;\r\n\r\n      .cardItemTop {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: baseline;\r\n        font-size: 38px;\r\n        font-family: Helvetica-Bold, Helvetica;\r\n        font-weight: bold;\r\n        color: #1b67d8;\r\n\r\n        .cardItemContentUnit {\r\n          margin-left: 2px;\r\n          font-size: 28px;\r\n          font-weight: 400;\r\n        }\r\n      }\r\n\r\n      .cardItemText {\r\n        font-size: 28px;\r\n        font-family: PingFangSC-Regular, PingFang SC;\r\n        font-weight: 400;\r\n        color: #555555;\r\n      }\r\n    }\r\n  }\r\n\r\n  .centerAndBottomCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 470px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .topTitle {\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      margin-top: 40px;\r\n      padding: 0 30px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 34px;\r\n      font-family: PingFangSC-Semibold, PingFang SC;\r\n      font-weight: 600;\r\n      color: #191919;\r\n\r\n      .leftTitle {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        img {\r\n          width: 48px;\r\n          height: 48px;\r\n          margin-right: 16px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chartStyle {\r\n      width: 98%;\r\n      height: calc(100% - 100px);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}