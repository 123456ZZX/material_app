{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\NewsNotice\\index.vue?vue&type=style&index=0&id=76ecb688&lang=less&scoped=true","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\NewsNotice\\index.vue","mtime":1708928163397},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouTmV3c05vdGljZVN0eWxlIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY1ZDVkOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2Y5Ow0KDQogIC5jbGVhckltZ1N0eWxlIHsNCiAgICB3aWR0aDogNDBweDsNCiAgICBoZWlnaHQ6IDQwcHg7DQogIH0NCg0KICAubWFpbkNvbnRhaW5lciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNDBweCAtIDkycHgpOw0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICBvdmVyZmxvdzogc2Nyb2xsOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY3Zjk7DQoNCiAgICAudHlwZUNhcmRDb250YWluZXIgew0KICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogICAgICB3aWR0aDogY2FsYygxMDAlIC0gNjBweCk7DQogICAgICBoZWlnaHQ6IDE1NHB4Ow0KICAgICAgbWluLWhlaWdodDogMTU0cHg7DQogICAgICBtYXJnaW4tdG9wOiAyNnB4Ow0KICAgICAgYm9yZGVyLXJhZGl1czogMjRweDsNCiAgICAgIGJveC1zaGFkb3c6IDBweCA0cHggMTZweCAwcHggcmdiYSgxMDQsIDExNSwgMTI3LCAwLjA4KTsNCiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7DQoNCiAgICAgIC5sZWZ0SWNvblNpZGUgew0KICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICAgIHdpZHRoOiAyMCU7DQogICAgICAgIGhlaWdodDogMTAwJTsNCiAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQoNCiAgICAgICAgLnJlZE51bVBvaW50IHsNCiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgdG9wOiAyNnB4Ow0KICAgICAgICAgIHJpZ2h0OiAxNHB4Ow0KICAgICAgICAgIHdpZHRoOiAzMHB4Ow0KICAgICAgICAgIGhlaWdodDogMzBweDsNCiAgICAgICAgICBsaW5lLWhlaWdodDogMzBweDsNCiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgICAgICAgLy8gbWluLXdpZHRoOiAyNHB4Ow0KICAgICAgICAgIC8vIG1pbi1oZWlnaHQ6IDI0cHg7DQogICAgICAgICAgLy8gcGFkZGluZzogM3B4IDVweDsNCiAgICAgICAgICAvLyBib3JkZXItcmFkaXVzOiAyNHB4Ow0KICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZjdmN2Y3Ow0KICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjRiNGI7DQogICAgICAgICAgLy8gMTJweCA9IDAuMTZyZW0NCiAgICAgICAgICBmb250LXNpemU6IDE2cHg7DQogICAgICAgICAgZm9udC1mYW1pbHk6IFJvYm90by1SZWd1bGFyLCBSb2JvdG87DQogICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICBjb2xvcjogI2ZmZmZmZjsNCiAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsNCiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOw0KICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgICAgIH0NCg0KICAgICAgICAuaWNvblN0eWxlIHsNCiAgICAgICAgICB3aWR0aDogOTRweDsNCiAgICAgICAgICBoZWlnaHQ6IDk0cHg7DQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgLnJpZ2h0Q29udGVudFNpZGUgew0KICAgICAgICB3aWR0aDogODAlOw0KICAgICAgICBoZWlnaHQ6IDc2JTsNCiAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7DQoNCiAgICAgICAgLnRvcFRpdGxlQ29udGFpbmVyIHsNCiAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICBoZWlnaHQ6IGNhbGMoNTAlKTsNCiAgICAgICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KDQogICAgICAgICAgLnRvcFRpdGxlIHsNCiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjhweDsNCiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBQaW5nRmFuZ1NDLVNlbWlib2xkLCBQaW5nRmFuZyBTQzsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQogICAgICAgICAgICBjb2xvcjogIzE5MTkxOTsNCiAgICAgICAgICB9DQoNCiAgICAgICAgICAudG9wVGltZSB7DQogICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7DQogICAgICAgICAgICBmb250LXNpemU6IDI0cHg7DQogICAgICAgICAgICBmb250LWZhbWlseTogUGluZ0ZhbmdTQy1SZWd1bGFyLCBQaW5nRmFuZyBTQzsNCiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7DQogICAgICAgICAgICBjb2xvcjogIzk5OTk5OTsNCiAgICAgICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICAuYm90dG9tQ29udGVudCB7DQogICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgaGVpZ2h0OiBjYWxjKDUwJSk7DQogICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7DQogICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAgICBmb250LXNpemU6IDI0cHg7DQogICAgICAgICAgZm9udC1mYW1pbHk6IFBpbmdGYW5nU0MtUmVndWxhciwgUGluZ0ZhbmcgU0M7DQogICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICAgICAgICBjb2xvcjogIzMzMzMzMzsNCg0KICAgICAgICAgIC50ZXh0U3R5bGUgew0KICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDMwcHgpOw0KICAgICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7DQogICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmfile":"index.vue","sourceRoot":"src/views/NewsNotice","sourcesContent":["<template>\r\n  <div class=\"NewsNoticeStyle\">\r\n    <fm-nav-bar title=\"站内信\" left-arrow @click-left=\"onClickLeft\">\r\n      <template #left>\r\n        <i class=\"fm-icon fm-icon-arrow-left\" style=\"font-size: 18px; color: #000 !important\"></i>\r\n      </template>\r\n      <template v-if=\"this.nowCheckedBtn === '未读'\" #right>\r\n        <img @click=\"clearAllMessage\" class=\"clearImgStyle\" src=\"./imgs/清理扫把.png\" alt=\"\" />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <!-- 全部、未读切换按钮组件 -->\r\n    <ChangeButton btn1=\"全部\" btn2=\"未读\" @buttonChange=\"buttonChange\"></ChangeButton>\r\n    <div class=\"mainContainer\">\r\n      <div\r\n        @click=\"goToMessageList(item)\"\r\n        v-for=\"(item, index) in cardConfig\"\r\n        :key=\"index\"\r\n        class=\"typeCardContainer\"\r\n      >\r\n        <div class=\"leftIconSide\">\r\n          <!-- 显示全部未读消息 -->\r\n          <!-- <div class=\"redNumPoint\" v-if=\"item.newMessage > 0\">{{ item.newMessage }}</div> -->\r\n          <!-- 当未读消息大于99条时显示'···' -->\r\n          <div class=\"redNumPoint\" v-if=\"item.newMessage > 0\">\r\n            {{ item.newMessage > 99 ? '···' : item.newMessage }}\r\n          </div>\r\n          <img class=\"iconStyle\" :src=\"item.msgIcon\" alt=\"\" />\r\n        </div>\r\n        <div class=\"rightContentSide\">\r\n          <div class=\"topTitleContainer\">\r\n            <div class=\"topTitle\">{{ item.msgTitle }}</div>\r\n            <div class=\"topTime\">{{ item.msgTime }}</div>\r\n          </div>\r\n          <div class=\"bottomContent\">\r\n            <span\r\n              class=\"textStyle\"\r\n              :style=\"item.msgContent == '暂无消息' ? { color: '#999999' } : ''\"\r\n              >{{ item.msgContent }}</span\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as api from '@/views/Home/api.js'\r\nimport { updateBatchMsgStatus } from '@/api/message.js'\r\nimport ChangeButton from './ChangeButton.vue'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\nimport { Toast, Dialog } from 'fawkes-mobile-lib'\r\n\r\nexport default {\r\n  name: 'NewsNotice',\r\n  components: {\r\n    ChangeButton,\r\n    [Toast.name]: Toast,\r\n    [Dialog.name]: Dialog,\r\n  },\r\n  data: () => ({\r\n    nowCheckedBtn: '全部',\r\n    // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)\r\n    cardConfig: [\r\n      {\r\n        msgType: 100,\r\n        msgTitle: '公告',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/公告.png'),\r\n      },\r\n      {\r\n        msgType: 200,\r\n        msgTitle: '业务通知',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/业务通知.png'),\r\n      },\r\n      {\r\n        msgType: 201,\r\n        msgTitle: '告警',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/告警.png'),\r\n      },\r\n      {\r\n        msgType: 202,\r\n        msgTitle: '工单',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/工单.png'),\r\n      },\r\n      {\r\n        msgType: 203,\r\n        msgTitle: '事件',\r\n        msgContent: '',\r\n        msgTime: '',\r\n        newMessage: 0,\r\n        msgIcon: require('./imgs/事件.png'),\r\n      },\r\n    ],\r\n    // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)\r\n    typeList: [100, 200, 201, 202, 203],\r\n  }),\r\n  created() {\r\n    // 获取消息\r\n    this.getMsgList()\r\n  },\r\n  methods: {\r\n    // 全部、未读切换按钮\r\n    buttonChange(btn) {\r\n      console.log(btn)\r\n      this.nowCheckedBtn = btn\r\n      this.getMsgList()\r\n    },\r\n    // 获取消息\r\n    getMsgList() {\r\n      // params = {\r\n      //   currentPage: 1,\r\n      //   pageSize: 2000,\r\n      //   // status: -1, // 状态(0:已读，-1:未读)\r\n      //   searchValue: this.valueText, // 消息内容\r\n      //   startDate: '', // 开始日期\r\n      //   endDate: '', // 结束日期\r\n      //   // type: '' // 类型(100:公告，200:业务通知，201:告警，202:工单，203:事件，300:私信)(支持xxx,xxx格式)(支持xxx-xxx格式)\r\n      // }\r\n      this.typeList.forEach((item, index) => {\r\n        let params = {\r\n          currentPage: 1,\r\n          pageSize: 1,\r\n          // status: -1, // 状态(0:已读，-1:未读)\r\n          type: item,\r\n        }\r\n        if (this.nowCheckedBtn === '未读') {\r\n          params.status = -1\r\n        }\r\n        api.getMsgList(params).then((res) => {\r\n          let msgList = res?.data?.list || []\r\n          this.cardConfig.forEach((card) => {\r\n            if (card.msgType === item) {\r\n              // 如果有消息\r\n              if (msgList.length > 0) {\r\n                // 如果msgBody中含有html标签，则删除html标签\r\n                if (/<[^>]+>/g.test(msgList[0].msgBody)) {\r\n                  msgList[0].msgBody = msgList[0].msgBody.replace(/<[^>]+>/g, '')\r\n                }\r\n                card.msgContent = msgList[0].msgBody\r\n                card.msgTime = msgList[0].updateDate\r\n              } else {\r\n                // 如果没有消息，显示暂无消息\r\n                card.msgContent = '暂无消息'\r\n                card.msgTime = ''\r\n              }\r\n\r\n              if (this.nowCheckedBtn === '全部') {\r\n                // 全部消息，红点不显示\r\n                card.newMessage = 0\r\n              } else if (this.nowCheckedBtn === '未读') {\r\n                // 未读消息，红点显示\r\n                card.newMessage = res?.data?.total || 0\r\n              }\r\n            }\r\n          })\r\n          console.log(this.nowCheckedBtn, item, res.data.total, msgList, res.data)\r\n        })\r\n      })\r\n    },\r\n    // 批量更新站内信状态\r\n    clearAllMessage() {\r\n      Dialog.confirm({\r\n        title: '确认清空未读消息么',\r\n        message: '',\r\n      })\r\n        .then(() => {\r\n          let params = {\r\n            msgTypeList: this.typeList.toString(), // 站内信类型\r\n            status: 0, // 状态(0:已读,-1:未读,-2:删除)\r\n          }\r\n          updateBatchMsgStatus(params).then((res) => {\r\n            if (res.message === '成功') {\r\n              Toast('全部已读成功')\r\n              this.getMsgList()\r\n            }\r\n          })\r\n        })\r\n        .catch(() => {})\r\n    },\r\n    // 跳转到消息列表\r\n    goToMessageList(item) {\r\n      // console.log(_cloneDeep(item))\r\n      if (item.msgContent === '暂无消息') {\r\n        Toast('暂无消息')\r\n        return\r\n      }\r\n      item.nowCheckedBtn = this.nowCheckedBtn\r\n      this.$router.push({\r\n        path: '/newsInfo',\r\n        query: item,\r\n      })\r\n    },\r\n    // 返回上一页\r\n    onClickLeft() {\r\n      this.$router.go(-1)\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.NewsNoticeStyle {\r\n  height: 100%;\r\n  background-color: #ff5d5d;\r\n  background-color: #f5f7f9;\r\n\r\n  .clearImgStyle {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  .mainContainer {\r\n    width: 100%;\r\n    height: calc(100% - 140px - 92px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    overflow: scroll;\r\n    background-color: #f5f7f9;\r\n\r\n    .typeCardContainer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: calc(100% - 60px);\r\n      height: 154px;\r\n      min-height: 154px;\r\n      margin-top: 26px;\r\n      border-radius: 24px;\r\n      box-shadow: 0px 4px 16px 0px rgba(104, 115, 127, 0.08);\r\n      background: #ffffff;\r\n\r\n      .leftIconSide {\r\n        position: relative;\r\n        width: 20%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        .redNumPoint {\r\n          position: absolute;\r\n          top: 26px;\r\n          right: 14px;\r\n          width: 30px;\r\n          height: 30px;\r\n          line-height: 30px;\r\n          border-radius: 50%;\r\n          // min-width: 24px;\r\n          // min-height: 24px;\r\n          // padding: 3px 5px;\r\n          // border-radius: 24px;\r\n          text-align: center;\r\n          border: 1px solid #f7f7f7;\r\n          background-color: #ff4b4b;\r\n          // 12px = 0.16rem\r\n          font-size: 16px;\r\n          font-family: Roboto-Regular, Roboto;\r\n          font-weight: 400;\r\n          color: #ffffff;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .iconStyle {\r\n          width: 94px;\r\n          height: 94px;\r\n        }\r\n      }\r\n\r\n      .rightContentSide {\r\n        width: 80%;\r\n        height: 76%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        background-color: #ffffff;\r\n\r\n        .topTitleContainer {\r\n          width: 100%;\r\n          height: calc(50%);\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n\r\n          .topTitle {\r\n            font-size: 28px;\r\n            font-family: PingFangSC-Semibold, PingFang SC;\r\n            font-weight: 600;\r\n            color: #191919;\r\n          }\r\n\r\n          .topTime {\r\n            margin-right: 30px;\r\n            font-size: 24px;\r\n            font-family: PingFangSC-Regular, PingFang SC;\r\n            font-weight: 400;\r\n            color: #999999;\r\n          }\r\n        }\r\n\r\n        .bottomContent {\r\n          width: 100%;\r\n          height: calc(50%);\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          align-items: center;\r\n          font-size: 24px;\r\n          font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n          color: #333333;\r\n\r\n          .textStyle {\r\n            width: calc(100% - 30px);\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}