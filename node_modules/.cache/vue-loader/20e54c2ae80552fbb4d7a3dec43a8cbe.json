{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\PreView\\index.vue?vue&type=style&index=0&id=6e1fce6b&scoped=true&lang=css","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\PreView\\index.vue","mtime":1708928163325},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoub3dhX2NvbnRhaW5lciB7DQogIGRpc3BsYXk6IGJsb2NrOw0KICB3aWR0aDogMTAwJTsNCiAgbWFyZ2luOiAwOw0KICBoZWlnaHQ6IGNhbGMoMTAwJSk7DQogIGJvcmRlcjogbm9uZTsNCn0NCiNwZGZfZnJhbWUgew0KICBkaXNwbGF5OiBibG9jazsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogMTAwJTsNCiAgYm9yZGVyOiBub25lOw0KICBtYXJnaW46IDA7DQp9DQoucGljX2ZyYW1lIHsNCiAgZGlzcGxheTogYmxvY2s7DQogIHdpZHRoOiAxMDAlOw0KICBoZWlnaHQ6IDEwMCU7DQogIGJvcmRlcjogbm9uZTsNCiAgbWFyZ2luOiAwOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoucGljX2ltZyB7DQogIG1heC13aWR0aDogMTAwJTsNCiAgbWF4LWhlaWdodDogMTAwJTsNCiAgbWFyZ2luOiAwIGF1dG87DQp9DQouZWxzZV9pY29uIHsNCiAgd2lkdGg6IDEwMCU7DQogIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/PreView","sourcesContent":["<template>\r\n  <div class=\"owa_container\">\r\n    <div v-if=\"fileType == PIC_FILE\" ref=\"pic_frame\" class=\"pic_frame\">\r\n      <img ref=\"pic_img\" :src=\"picURL\" class=\"pic_img\" AutoSize:true />\r\n    </div>\r\n    <div v-if=\"fileType == PDF_FILE\" class=\"pdf_frame\" style=\"height: 100%\">\r\n      <iframe id=\"pdf_frame\" name=\"pdf_frame\" :src=\"pdfURL\" />\r\n    </div>\r\n    <div v-if=\"fileType == VIDEO_FILE\" class=\"video_frame\" style=\"height: 100%\">\r\n      <div v-if=\"fileType == VIDEO_FILE\" id=\"videoPlayer\" ref=\"player\" />\r\n    </div>\r\n    <!-- <div class=\"music_frame\" v-if=\"fileType == MUSIC_FILE\" style=\"height: 100%\">\r\n      <div id=\"musicPlayer\" v-if=\"fileType == MUSIC_FILE\" ref=\"player\"></div>\r\n    </div> -->\r\n    <div v-if=\"fileType == ELSE_FILE\" class=\"else_frame\" style=\"height: 100%\">\r\n      <svg-icon :icon-class=\"getFileIconByExtName(extName)\" class=\"else_icon\" />\r\n      <section style=\"text-align: center; min-height: 40px; line-height: 40px\">\r\n        {{ this.fileName }}\r\n      </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getFileIconByExtName } from '@/utils/file'\r\nimport { downloadImage, getFile } from '@/api/file'\r\nimport { getFileAsPdf } from './api'\r\nimport { getUrl } from '@/utils/request/sign.js'\r\nimport Player from 'xgplayer'\r\n\r\nexport default {\r\n  name: 'PreView',\r\n  props: {\r\n    fileToken: String,\r\n  },\r\n  data() {\r\n    return {\r\n      token: '',\r\n      file: {},\r\n      loading: false,\r\n      extName: '',\r\n      pdfSrc: '',\r\n      picSrc: '',\r\n      fileName: '',\r\n      fileType: -1,\r\n      downloadUrl: this.VUE_APP_BASE_API + '/sys-storage/download?',\r\n\r\n      musicPlayer: null,\r\n      videoPlayer: null,\r\n\r\n      extTypePdf: ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'],\r\n      extTypePic: ['jpg', 'jpeg', 'png'],\r\n      extTypeVideo: ['mp4', 'mkv', 'mp3'],\r\n      // extTypeMusic: ['mp3'],\r\n\r\n      NO_FILE: -1,\r\n      PIC_FILE: 0,\r\n      PDF_FILE: 1,\r\n      ELSE_FILE: 2,\r\n      VIDEO_FILE: 3,\r\n      MUSIC_FILE: 4,\r\n    }\r\n  },\r\n  computed: {\r\n    pdfURL() {\r\n      return `./static/pdfjs/viewer.html?file=${encodeURIComponent(this.pdfSrc)}`\r\n    },\r\n    picURL() {\r\n      return this.picSrc\r\n    },\r\n    current_fileType() {\r\n      return this.fileType\r\n    },\r\n  },\r\n  watch: {\r\n    fileToken: {\r\n      deep: true,\r\n      immediate: true,\r\n      handler: function () {\r\n        this.getFileData()\r\n      },\r\n    },\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    getFileData() {\r\n      this.loading = true\r\n      getFile({ f8s: [this.fileToken] })\r\n        .then((res) => {\r\n          if (res.data[0]) {\r\n            this.file = res.data[0]\r\n            this.initData()\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.loading = false\r\n        })\r\n    },\r\n    getFileIconByExtName(extName) {\r\n      return getFileIconByExtName(extName)\r\n    },\r\n    /**\r\n     * @description: 判断后缀类型\r\n     */\r\n    getFileType() {\r\n      this.extName = ''\r\n      //传入的文件可能没有extName,手动获取后缀\r\n      if (!this.file.extName) {\r\n        this.fileName = this.file.name\r\n        let first = this.file.name.lastIndexOf('.')\r\n        let namelength = this.file.name.length\r\n        this.extName = this.file.name.substring(first + 1, namelength)\r\n      } else {\r\n        this.extName = this.file.extName\r\n        this.fileName = this.file.fileName\r\n      }\r\n      if (this.extTypePdf.indexOf(this.extName) >= 0) {\r\n        return this.PDF_FILE\r\n      }\r\n      if (this.extTypePic.indexOf(this.extName) >= 0) {\r\n        return this.PIC_FILE\r\n      }\r\n      if (this.extTypeVideo.indexOf(this.extName) >= 0) {\r\n        return this.VIDEO_FILE\r\n      }\r\n      // if (this.extTypeMusic.indexOf(this.extName) >= 0) {\r\n      //   return this.MUSIC_FILE\r\n      // }\r\n      return this.ELSE_FILE\r\n    },\r\n\r\n    /**\r\n     * @description: 处理pdf/可转化为pdf的文件\r\n     * @param {String}token  文件的token\r\n     */\r\n    getPdfFile(token) {\r\n      this.loading = true\r\n      getFileAsPdf(token)\r\n        .then((res) => {\r\n          this.loading = false\r\n          if (res.status) {\r\n            let objecturl = window.URL.createObjectURL(res.data)\r\n            this.pdfSrc = objecturl\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.loading = false\r\n        })\r\n    },\r\n    /**\r\n     * @description: 处理图片\r\n     * @param {String}token  图片的token\r\n     */\r\n    getPicFile(token) {\r\n      this.loading = true\r\n      //获得图片的接口,更改picURL\r\n      downloadImage(token)\r\n        .then((res) => {\r\n          if (res.status) {\r\n            let objecturl = window.URL.createObjectURL(res.data)\r\n            this.picSrc = objecturl\r\n            this.loading = false\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.loading = false\r\n        })\r\n    },\r\n\r\n    mediaUrl(token) {\r\n      let url = getUrl({ f8s: token })\r\n      return this.downloadUrl + url\r\n    },\r\n\r\n    /**\r\n     * @description: 初始化播放器，已存在时改变资源地址\r\n     * @param {*} token\r\n     */\r\n    initVideoPlayer(token) {\r\n      if (this.videoPlayer) {\r\n        this.videoPlayer.src = this.mediaUrl(token)\r\n        return\r\n      }\r\n      this.videoPlayer = new Player({\r\n        id: 'videoPlayer',\r\n        url: this.mediaUrl(token),\r\n        lang: 'zh-cn',\r\n        height: '100%',\r\n        width: '100%',\r\n        playbackRate: [0.5, 0.75, 1, 1.5, 2],\r\n      })\r\n    },\r\n\r\n    // initMusicPlayer(token) {\r\n    //   this.videoPlayer = new Music({\r\n    //     id: 'musicPlayer',\r\n    //     url: [{ src: JSON.parse(JSON.stringify(this.mediaUrl(token))) }],\r\n    //     height: '100%',\r\n    //     width: '100%'\r\n    //   })\r\n    // },\r\n    clearPlayer() {\r\n      if (this.videoPlayer) {\r\n        this.videoPlayer.destroy()\r\n        this.videoPlayer = null\r\n      }\r\n    },\r\n\r\n    initState() {\r\n      this.fileType = this.NO_FILE\r\n    },\r\n\r\n    initData() {\r\n      this.initState()\r\n      if (this.file.fileToken) {\r\n        var token = this.file.fileToken\r\n        this.token = token\r\n        this.fileType = this.getFileType()\r\n        if (this.fileType == this.PIC_FILE) {\r\n          this.getPicFile(token)\r\n        }\r\n        if (this.fileType == this.PDF_FILE) {\r\n          this.getPdfFile(token)\r\n        }\r\n        if (this.fileType == this.VIDEO_FILE) {\r\n          this.$nextTick(() => {\r\n            this.initVideoPlayer(token)\r\n          })\r\n        }\r\n        // if (this.fileType == this.MUSIC_FILE) {\r\n        //   this.$nextTick(() => {\r\n        //     this.initMusicPlayer(token)\r\n        //   })\r\n        // }\r\n        if (this.fileType == this.ELSE_FILE) {\r\n          this.loading = false\r\n          //this.$message.warning('暂不支持该类型文件预览！')\r\n        }\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.owa_container {\r\n  display: block;\r\n  width: 100%;\r\n  margin: 0;\r\n  height: calc(100%);\r\n  border: none;\r\n}\r\n#pdf_frame {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  margin: 0;\r\n}\r\n.pic_frame {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  margin: 0;\r\n  text-align: center;\r\n}\r\n.pic_img {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  margin: 0 auto;\r\n}\r\n.else_icon {\r\n  width: 100%;\r\n  height: calc(100% - 40px);\r\n}\r\n</style>\r\n"]}]}