{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\OneMap\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\OneMap\\index.vue","mtime":1705912915806},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapTools","monitorList","addIconToMap","getAllEquipmentInformation","bbox","center","getCenter","_cloneDeep","defaltLegendList","PressureMonitorDetail","LineDetail","MapLegend","legendListImport","MapObj","map","viewer","popupItem","marker","monitorPopups","monitorPopupContent","name","components","data","selectedTab","popupShow","legendList","pressureMonitorShow","pipelineShow","pressureDataDetail","pipelineBaseInfo","layerID","legendConfig","icons","url","require","methods","legendClick","e","item","id","$notify","type","message","clickFlag","legendControlLayer","window","xaMap","getLayer","setLayoutProperty","filter","getFilter","toString","getLayoutProperty","setFilter","legendTitleNameClick","legendTitleName","forEach","label","titleStatus","options","smallItem","setTimeout","closePop","val","showMapLegend","changeType","title","getDefaultBaseLayers","layers","$refs","getBaseLayerObject","initScene","getPressurePoint","params","deviceType","arr","flowArr","supplyFlowArr","recycleFlowArr","pressureArr","supplyPressureArr","recyclePressureArr","then","res","length","belongSystem","addYourLayer","pointList","offlineImageId","warnImageId","visibility","sourceData","features","i","geometry","coordinates","lon","lat","properties","getSource","setData","addLayer","source","layout","minzoom","obj","push","on","handleMouseClick","feature","getCanvas","style","cursor","realtimeData","JSON","parse","handleLayerClick","queryRenderedFeatures","point","layer","highlightOnMap","lngLat","removeAllHighlightLayer","bound","$nextTick","includes","_features$0$layer$lay","iconName","iconsize","removeLayerSource","paint","$store","commit","color","legend","clickColor","removeLayer","removeSource","closePopup_pressure","closePopup_line"],"sources":["src/views/OneMap/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <fm-nav-bar>\r\n      <template #title>\r\n        <div class=\"top\">\r\n          <fm-tabs\r\n            v-model=\"selectedTab\"\r\n            @tab-click=\"changeType\"\r\n            type=\"card\"\r\n            color=\"#1B67D8\"\r\n          >\r\n            <fm-tab name=\"地图\" label=\"地图\"></fm-tab>\r\n            <fm-tab name=\"监测列表\" label=\"监测列表\"></fm-tab>\r\n          </fm-tabs>\r\n        </div>\r\n      </template>\r\n      <template #right>\r\n        <img\r\n          v-if=\"selectedTab == '地图'\"\r\n          style=\"height: 24px; position: absolute; right: 20px\"\r\n          :src=\"require('@/assets/img/map/right.png')\"\r\n          @click=\"showMapLegend\"\r\n        />\r\n      </template>\r\n    </fm-nav-bar>\r\n    <xa-map\r\n      v-show=\"selectedTab == '地图'\"\r\n      :create=\"initScene\"\r\n      :legendConfig=\"legendConfig\"\r\n      @getDefaultBaseLayers=\"getDefaultBaseLayers\"\r\n      @getBaseLayerObject=\"getBaseLayerObject\"\r\n      @handleLayerClick=\"handleLayerClick\"\r\n    ></xa-map>\r\n    <mapTools ref=\"mapTools\" v-show=\"selectedTab == '地图'\"></mapTools>\r\n    <monitorList\r\n      ref=\"monitorList\"\r\n      v-if=\"selectedTab == '监测列表'\"\r\n    ></monitorList>\r\n    <PressureMonitorDetail\r\n      v-if=\"pressureMonitorShow && selectedTab == '地图'\"\r\n      :pressureDataDetail=\"pressureDataDetail\"\r\n      @closePopup_pressure=\"closePopup_pressure\"\r\n    >\r\n    </PressureMonitorDetail>\r\n    <LineDetail\r\n      v-if=\"pipelineShow && selectedTab == '地图'\"\r\n      :pipelineBaseInfo=\"pipelineBaseInfo\"\r\n      @closePopup_line=\"closePopup_line\"\r\n    >\r\n    </LineDetail>\r\n    <map-legend\r\n      :popupShow=\"popupShow\"\r\n      shape=\"rectangle\"\r\n      :data-source=\"legendList\"\r\n      :click-func=\"legendClick\"\r\n      @closePop=\"closePop\"\r\n      @legendTitleNameClick=\"legendTitleNameClick\"\r\n    ></map-legend>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mapTools from './mapTools'\r\nimport monitorList from './monitorList'\r\nimport { addIconToMap } from '@/utils/mapUtils'\r\nimport { getAllEquipmentInformation } from './api'\r\nimport { bbox, center as getCenter } from '@turf/turf'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\n// 图例\r\nimport { defaltLegendList } from './defaltLegendList.js'\r\n// 压力监测点击弹窗\r\nimport PressureMonitorDetail from './components/PressureMonitorDetail.vue'\r\nimport LineDetail from './components/LineDetail.vue'\r\nimport MapLegend from './components/mapLegend.vue'\r\nimport { legendListImport } from './legendList'\r\n\r\nconst MapObj = {\r\n  map: null,\r\n  viewer: null,\r\n  popupItem: '', //mapbox气泡框\r\n  marker: '',\r\n  monitorPopups: [],\r\n  monitorPopupContent: [],\r\n}\r\nexport default {\r\n  name: 'OneMap',\r\n  components: {\r\n    mapTools,\r\n    monitorList,\r\n    PressureMonitorDetail,\r\n    LineDetail,\r\n    MapLegend,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedTab: '地图',\r\n      popupShow: false,\r\n      legendList: legendListImport,\r\n      pressureMonitorShow: false, // 压力监测详情面板显隐\r\n      pipelineShow: false, // 管线详情面板显隐\r\n      pressureDataDetail: {}, // 压力监测详情面板基础信息\r\n      pipelineBaseInfo: {}, // 管线详情面板基础信息\r\n      layerID: '',\r\n      legendConfig: [],\r\n      icons: [\r\n        {\r\n          name: '压力监测(供)*',\r\n          url: require('@/assets/img/map/压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线供',\r\n          url: require('@/assets/img/map/压力离线供地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警供',\r\n          url: require('@/assets/img/map/压力报警供地图.png'),\r\n        },\r\n        {\r\n          name: '泵站',\r\n          url: require('@/assets/img/map/pump.png'),\r\n        },\r\n        {\r\n          name: '再生水厂',\r\n          url: require('@/assets/img/map/再生水厂地图.png'),\r\n        },\r\n        {\r\n          name: '供水厂',\r\n          url: require('@/assets/img/map/供水厂地图.png'),\r\n        },\r\n        {\r\n          name: '给水加压泵站',\r\n          url: require('@/assets/img/map/给水加压泵站地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测(再生)*',\r\n          url: require('@/assets/img/map/再生水压力监测.png'),\r\n        },\r\n        {\r\n          name: '压力监测离线再生',\r\n          url: require('@/assets/img/map/压力离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '压力监测报警再生',\r\n          url: require('@/assets/img/map/压力报警再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(供)*',\r\n          url: require('@/assets/img/map/流量计地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线供',\r\n          url: require('@/assets/img/map/流量离线供地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警供',\r\n          url: require('@/assets/img/map/流量报警供地图.png'),\r\n        },\r\n        {\r\n          name: '流量计(再生)*',\r\n          url: require('@/assets/img/map/流量计再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量离线再生',\r\n          url: require('@/assets/img/map/流量离线再生地图.png'),\r\n        },\r\n        {\r\n          name: '流量报警再生',\r\n          url: require('@/assets/img/map/流量报警再生地图.png'),\r\n        },\r\n        // {\r\n        //   name: \"提标改造给水厂\",\r\n        //   url: require(\"@/assets/img/map/提标改造给水厂.png\"),\r\n        // },\r\n        // {\r\n        //   name: \"规划新建给水厂\",\r\n        //   url: require(\"@/assets/img/map/规划新建给水厂.png\"),\r\n        // },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    legendClick(e, item, id) {\r\n      if (typeof item.id == 'number') {\r\n        this.$notify({\r\n          type: 'warning',\r\n          message: '当前图层暂无数据！',\r\n        })\r\n        return\r\n      }\r\n      item.clickFlag = !item.clickFlag\r\n      this.legendControlLayer(item)\r\n    },\r\n    legendControlLayer(item) {\r\n      let map = window.xaMap\r\n      if (map.getLayer(item.id)) {\r\n        if (item.clickFlag) {\r\n          map.setLayoutProperty(item.id, 'visibility', 'none')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ws_big',\r\n                  'visibility'\r\n                ) == 'none'\r\n              ) {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            //雨水管线图层控制雨水井、雨水箭头、雨水较小层级图层显示\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'none')\r\n\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_big_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            //循环水（回水）管线控制循环水（回水）节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_circulating',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            //配水管线控制配水节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_distribute',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            //输水管线控制输水节点显示\r\n            map.setLayoutProperty(\r\n              'map_supply_node_delivery',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            //再生水管线控制再生水节点显示\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'none')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            //污水管线图层控制污水井、污水箭头、污水较小层级图层显示\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['all'].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ys_big',\r\n                  'visibility'\r\n                ) == 'none'\r\n              ) {\r\n                filter = ['in', 'manhole_type', '']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_big_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small',\r\n              'visibility',\r\n              'none'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small_direction',\r\n              'visibility',\r\n              'none'\r\n            )\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            //   \"压力监测-报警\",\r\n            //   \"visibility\",\r\n            //   \"none\"\r\n            // );\r\n          }\r\n        } else {\r\n          map.setLayoutProperty(item.id, 'visibility', 'visible')\r\n          if (item.id == 'rd_map_drainpipe_ys_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '污水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ws_big',\r\n                  'visibility'\r\n                ) != 'none'\r\n              ) {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '雨水']\r\n              }\r\n            }\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_comb', 'visibility', 'visible')\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_big_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ys_small_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_circulating') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_circulating',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_distribute') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_distribute',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_supply_pipe_delivery') {\r\n            map.setLayoutProperty(\r\n              'map_supply_node_delivery',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == 'map_recycle_pipe') {\r\n            map.setLayoutProperty('map_recycle_node', 'visibility', 'visible')\r\n          } else if (item.id == 'rd_map_drainpipe_ws_big') {\r\n            let filter = map.getFilter('rd_map_manhole')\r\n            if (\r\n              filter.toString() == ['in', 'manhole_type', ''].toString() ||\r\n              filter.toString() == ['in', 'manhole_type', '雨水'].toString()\r\n            ) {\r\n              if (\r\n                map.getLayoutProperty(\r\n                  'rd_map_drainpipe_ys_big',\r\n                  'visibility'\r\n                ) != 'none'\r\n              ) {\r\n                filter = ['all']\r\n              } else {\r\n                filter = ['in', 'manhole_type', '污水']\r\n              }\r\n            }\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_big_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setFilter('rd_map_manhole', filter)\r\n            map.setLayoutProperty('rd_map_manhole', 'visibility', 'visible')\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small_direction',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n            map.setLayoutProperty(\r\n              'rd_map_drainpipe_ws_small',\r\n              'visibility',\r\n              'visible'\r\n            )\r\n          } else if (item.id == '压力监测') {\r\n            // map.setLayoutProperty(\r\n            //   \"压力监测-报警\",\r\n            //   \"visibility\",\r\n            //   \"visible\"\r\n            // );\r\n          }\r\n        }\r\n      }\r\n    },\r\n    legendTitleNameClick(legendTitleName) {\r\n      this.legendList.forEach((item) => {\r\n        if (item.label === legendTitleName) {\r\n          item.titleStatus = !item.titleStatus\r\n          //\r\n          item.options.forEach((smallItem) => {\r\n            // 当该标题下图层内容为显示状态时才进入判断\r\n            if (item.titleStatus === true && typeof smallItem.id == 'number') {\r\n              setTimeout(() => {\r\n                this.$notify({\r\n                  type: 'warning',\r\n                  message: smallItem.label + '图层暂无数据！',\r\n                })\r\n              }, 0)\r\n              return\r\n            }\r\n            if (item.titleStatus === true) {\r\n              // 标题状态点亮时\r\n              smallItem.clickFlag = false // 图层均显示\r\n            } else {\r\n              smallItem.clickFlag = true // 图层均隐藏\r\n            }\r\n            this.legendControlLayer(smallItem)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    closePop(val) {\r\n      this.popupShow = val\r\n    },\r\n    showMapLegend() {\r\n      this.popupShow = true\r\n    },\r\n    // tab切换回调\r\n    changeType(name, title) {\r\n      // Toast.loading({\r\n      //   message: '加载中...',\r\n      //   forbidClick: true,\r\n      //   duration: 0\r\n      // })\r\n      this.selectedTab = name\r\n    },\r\n    getDefaultBaseLayers(layers) {\r\n      this.$refs.mapTools.getDefaultBaseLayers(layers)\r\n    },\r\n    getBaseLayerObject(layers) {\r\n      this.$refs.mapTools.getBaseLayerObject(layers)\r\n    },\r\n    /**初始化地图事件 */\r\n    async initScene() {\r\n      this.legendConfig = defaltLegendList\r\n      // this.rebuildLegendList = legendList\r\n      MapObj.map = window.xaMap\r\n      await addIconToMap(MapObj.map, this.icons)\r\n      // 添加压力监测设备点\r\n      this.getPressurePoint()\r\n    },\r\n    // 压力监测设备添加图标\r\n    async getPressurePoint() {\r\n      let params = {\r\n        deviceType: '',\r\n      }\r\n      let arr = []\r\n      let flowArr = [] //流量计\r\n      let supplyFlowArr = [] //供水流量计\r\n      let recycleFlowArr = [] //再生水流量计\r\n      let pressureArr = []\r\n      let supplyPressureArr = [] //供水压力计\r\n      let recyclePressureArr = [] //再生水压力\r\n      // 获取所有监测设备基础信息\r\n      await getAllEquipmentInformation(params).then((res) => {\r\n        if (res.data && res.data.length > 0) {\r\n          arr = res.data\r\n          flowArr = arr.filter((item) => {\r\n            return item.deviceType == 'Flowmeter'\r\n          })\r\n          supplyFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recycleFlowArr = flowArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          pressureArr = arr.filter((item) => {\r\n            return item.deviceType == 'IVTM'\r\n          })\r\n          supplyPressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '供水'\r\n          })\r\n          recyclePressureArr = pressureArr.filter((item) => {\r\n            return item.belongSystem == '再生水'\r\n          })\r\n          this.addYourLayer(\r\n            supplyFlowArr,\r\n            '流量计(供)*',\r\n            '流量离线供',\r\n            '流量报警供'\r\n          )\r\n          this.addYourLayer(\r\n            recycleFlowArr,\r\n            '流量计(再生)*',\r\n            '流量离线再生',\r\n            '流量报警再生'\r\n          )\r\n          this.addYourLayer(\r\n            supplyPressureArr,\r\n            '压力监测(供)*',\r\n            '压力监测离线供',\r\n            '压力监测报警供'\r\n          )\r\n          this.addYourLayer(\r\n            recyclePressureArr,\r\n            '压力监测(再生)*',\r\n            '压力监测离线再生',\r\n            '压力监测报警再生'\r\n          )\r\n        }\r\n      })\r\n      // let params1 = {\r\n      //   deviceType: \"ZJIVTM\",\r\n      // }\r\n      // await getAllEquipmentInformation(params1).then((res) => {\r\n      //   if (res.data && res.data.length > 0) {\r\n      //     arr = arr.concat(res.data)\r\n      //   }\r\n      // });\r\n      // this.addYourLayer(arr, \"压力监测\");\r\n    },\r\n    // 在地图上添加图标图层\r\n    addYourLayer(pointList, id, offlineImageId, warnImageId) {\r\n      let visibility = 'visible'\r\n      if (id == '压力监测(供)*') {\r\n        visibility = 'visible'\r\n      } else {\r\n        visibility = 'none'\r\n      }\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: pointList.map((i) => {\r\n          return {\r\n            type: 'Feature',\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: [i.lon, i.lat],\r\n            },\r\n            properties: i,\r\n          }\r\n        }),\r\n      }\r\n      if (window.xaMap.getSource(id)) {\r\n        window.xaMap.getSource(id).setData(sourceData)\r\n        return\r\n      }\r\n      window.xaMap.addLayer(\r\n        {\r\n          id: id,\r\n          type: 'symbol',\r\n          source: {\r\n            type: 'geojson',\r\n            data: sourceData,\r\n          },\r\n          layout: {\r\n            'icon-image': [\r\n              'case',\r\n              [\r\n                'all',\r\n                ['==', ['get', 'iotOnline'], '0'],\r\n                ['!=', ['get', 'isWarn'], '1'],\r\n              ],\r\n              id,\r\n              ['==', ['get', 'iotOnline'], '1'],\r\n              offlineImageId,\r\n              [\r\n                'all',\r\n                ['==', ['get', 'iotOnline'], '0'],\r\n                ['==', ['get', 'isWarn'], '1'],\r\n              ],\r\n              warnImageId,\r\n              id,\r\n            ],\r\n            'icon-size': 0.7,\r\n            // 图标强制全部显示\r\n            'icon-ignore-placement': true,\r\n            visibility: visibility,\r\n          },\r\n          minzoom: 13,\r\n        },\r\n        ''\r\n      )\r\n      let obj = {}\r\n      obj[id] = pointList\r\n      MapObj.monitorPopupContent.push(obj)\r\n      // window.xaMap.on(\"mouseenter\", id, this.handleMouseEnter);\r\n      // window.xaMap.on(\"mouseout\", id, this.handleMouseOut);\r\n      window.xaMap.on('click', id, this.handleMouseClick)\r\n      // window.xaMap.on(\"load\", () => {\r\n      //   window.xaMap.moveLayer(\"压力监测\", \"\");\r\n      // });\r\n    },\r\n    // 鼠标点击\r\n    handleMouseClick(e) {\r\n      const feature = e.features[0]\r\n      window.xaMap.getCanvas().style.cursor = 'pointer'\r\n      // 管线详情面板关闭\r\n      this.pipelineShow = false\r\n      // 赋值传递给详情面板PressureMonitor.vue\r\n      this.pressureDataDetail = _cloneDeep(feature.properties)\r\n      this.pressureDataDetail.realtimeData = JSON.parse(\r\n        feature.properties.realtimeData\r\n      )\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = true\r\n    },\r\n    // 管线...点击\r\n    handleLayerClick(e) {\r\n      window.xaMap.getCanvas().style.cursor = 'pointer'\r\n      const feature = window.xaMap.queryRenderedFeatures(e.point)[0]\r\n      this.layerID = feature.layer.id\r\n      // this.rebuildDetailInfo(feature);\r\n\r\n      const type = feature.geometry.type\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: [feature],\r\n      }\r\n      let center = getCenter(sourceData).geometry.coordinates\r\n      this.highlightOnMap(type, [feature], this.layerID, center)\r\n      if (\r\n        this.layerID === 'rd_map_drainpipe_ys_big' ||\r\n        this.layerID == 'rd_map_drainpipe_ys_small' ||\r\n        this.layerID === 'rd_map_drainpipe_ws_big' ||\r\n        this.layerID == 'rd_map_drainpipe_ws_small' ||\r\n        this.layerID == 'map_supply_pipe_distribute' ||\r\n        this.layerID == 'map_supply_pipe_circulating' ||\r\n        this.layerID == 'map_supply_pipe_delivery' ||\r\n        this.layerID == 'map_recycle_pipe'\r\n      ) {\r\n        // 压力监测详情面板关闭\r\n        this.pressureMonitorShow = false\r\n        // 管线弹窗打开\r\n        this.pipelineShow = true\r\n        this.pipelineBaseInfo = feature.properties\r\n      } else {\r\n        // 管线弹窗关闭\r\n        this.pipelineShow = false\r\n      }\r\n    },\r\n    /**\r\n     * 高亮选中的元素\r\n     */\r\n    highlightOnMap(type, features, layerID, lngLat) {\r\n      if (layerID) this.layerID = layerID\r\n      this.removeAllHighlightLayer()\r\n      const sourceData = {\r\n        type: 'FeatureCollection',\r\n        features: features,\r\n      }\r\n      const bound = bbox(sourceData)\r\n      const center = lngLat\r\n        ? lngLat\r\n        : getCenter(sourceData).geometry.coordinates\r\n      // window.xaMap.fitBounds(bound, { maxZoom: 12, padding: { right: 400 } });\r\n      // this.showPopup(center, features);\r\n      this.$nextTick(() => {\r\n        if (['Point', 'MultiPoint'].includes(type)) {\r\n          // 点\r\n          if (features[0].layer && features[0].layer.layout['icon-image']) {\r\n            const iconName =\r\n              features[0].layer.layout['icon-image']?.name ||\r\n              features[0].layer.layout['icon-image']\r\n            const iconsize = features[0].layer.layout['icon-size']\r\n            this.removeLayerSource('hightlightPoint')\r\n            // if(this.mouseEnterCallback) this.mouseEnterCallback(e.lngLat, [feature]);\r\n            window.xaMap.addLayer({\r\n              id: 'hightlightPoint',\r\n              type: 'symbol',\r\n              source: {\r\n                type: 'geojson',\r\n                data: features[0],\r\n              },\r\n              layout: {\r\n                'icon-size': iconsize * 1.4,\r\n                'icon-image': iconName,\r\n              },\r\n            })\r\n          } else {\r\n            window.xaMap.addLayer({\r\n              id: `hightlightPoint`,\r\n              type: 'circle',\r\n              source: {\r\n                type: 'geojson',\r\n                data: sourceData,\r\n              },\r\n              paint: {\r\n                'circle-color': 'red',\r\n                'circle-opacity': 0,\r\n                'circle-radius': 6,\r\n                'circle-stroke-color': '#1D75FF',\r\n                'circle-stroke-opacity': 1,\r\n                'circle-stroke-width': 3,\r\n              },\r\n              // layout: {\r\n              //   'icon-image': 'uncured-pulsing-dot',\r\n              //   'icon-ignore-placement': true,\r\n              //   'icon-allow-overlap': true\r\n              // },\r\n            })\r\n          }\r\n          this.$store.commit('SHOW_MAPRESERVOIR', false)\r\n        } else if (['LineString', 'MultiLineString'].includes(type)) {\r\n          let color = '#91510A'\r\n          if (layerID == 'rd_map_drainpipe_ys_small') {\r\n            color = '#399AEA'\r\n          } else if (layerID == 'rd_map_drainpipe_ws_small') {\r\n            color = '#91510A'\r\n          } else {\r\n            defaltLegendList.forEach((legend) => {\r\n              if (legend.id == layerID) {\r\n                color = legend.clickColor\r\n              }\r\n            })\r\n          }\r\n          // 线\r\n          window.xaMap.addLayer({\r\n            id: `hightlightLine`,\r\n            type: 'line',\r\n            source: {\r\n              type: 'geojson',\r\n              data: sourceData,\r\n            },\r\n            paint: {\r\n              'line-color': color,\r\n              'line-width': 8,\r\n            },\r\n            // layout: {\r\n            //   'icon-image': 'uncured-pulsing-dot',\r\n            //   'icon-ignore-placement': true,\r\n            //   'icon-allow-overlap': true\r\n            // },\r\n          })\r\n          // window.xaMap.fitBounds(bound, {maxZoom: 15, padding: {right: 400}});\r\n        } else if (['Polygon', 'MultiPolygon'].includes(type)) {\r\n          // 面\r\n          window.xaMap.addLayer({\r\n            id: `hightlightPolygon`,\r\n            type: 'fill',\r\n            source: {\r\n              type: 'geojson',\r\n              data: sourceData,\r\n            },\r\n            paint: {\r\n              'fill-color': 'rgba(255, 0, 0, 0.6)',\r\n            },\r\n            // layout: {\r\n            //   'icon-image': 'uncured-pulsing-dot',\r\n            //   'icon-ignore-placement': true,\r\n            //   'icon-allow-overlap': true\r\n            // },\r\n          })\r\n          // window.xaMap.fitBounds(bound, {maxZoom: 15, padding: {right: 400}});\r\n        }\r\n      })\r\n    },\r\n    removeAllHighlightLayer(e) {\r\n      this.removeLayerSource('hightlightPoint')\r\n      this.removeLayerSource('hightlightLine')\r\n      this.removeLayerSource('hightlightPolygon')\r\n    },\r\n    /**\r\n     * 清空临时的图层和源\r\n     */\r\n    removeLayerSource(name) {\r\n      if (window.xaMap.getLayer(`${name}`)) window.xaMap.removeLayer(`${name}`)\r\n      if (window.xaMap.getSource(`${name}`))\r\n        window.xaMap.removeSource(`${name}`)\r\n    },\r\n    // 压力监测详情面板PressureMonitor.vue关闭按钮回调\r\n    closePopup_pressure() {\r\n      // 压力监测详情面板\r\n      this.pressureMonitorShow = false\r\n    },\r\n    //关闭管线弹窗\r\n    closePopup_line() {\r\n      this.pipelineShow = false\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.main {\r\n  width: 100%;\r\n  height: calc(100% - 98px - env(safe-area-inset-bottom));\r\n  height: calc(100% - 98px - constant(safe-area-inset-bottom));\r\n  position: relative;\r\n  .top {\r\n    width: 100%;\r\n    height: 70px;\r\n    padding: 10px 0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    /deep/.fm-tabs__nav--card {\r\n      border-color: transparent !important;\r\n    }\r\n    /deep/.fm-tab {\r\n      color: #555555 !important;\r\n      width: 202px;\r\n      height: 56px;\r\n      box-shadow: 0px 8px 16px 0px rgba(104, 115, 127, 0.06);\r\n      border-radius: 32px;\r\n      border-right: none !important;\r\n      background-color: #f5f5f5;\r\n    }\r\n    /deep/.fm-tab--active {\r\n      color: #ffffff !important;\r\n      width: 202px;\r\n      height: 56px;\r\n      border-radius: 32px;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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"}]}