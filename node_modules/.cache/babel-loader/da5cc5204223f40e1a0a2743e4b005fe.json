{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\upload\\Uploader.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\upload\\Uploader.vue","mtime":1708928163330},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Uploader","Toast","Button","Field","changeFileG9s","getFileToken","uuid","isImage","downloadFile","calcFileSize","request","axios","cancelTokenObj","Map","name","components","filters","calculateFileSize","val","props","value","type","String","required","default","limit","Number","label","autoUpload","Boolean","disabled","deletable","showUpload","maxImagesCount","beforeRead","Function","previewFullImage","previewLabel","data","fileList","fileTokenList","needToGetFile","percent","computed","accept","watch","immediate","handler","newVal","postData","g9s","then","res","status","forEach","item","isImageType","fileName","fileItem","file","size","response","fileToken","url","process","env","VUE_APP_BASE_URL","push","$emit","length","methods","setG9s","afterRead","console","log","Array","isArray","el","compressImg","quality","Promise","all","from","map","e","resolve","reader","FileReader","onload","target","result","src","image","Image","canvas","document","createElement","width","height","getContext","drawImage","canvasURL","toDataURL","buffer","atob","split","bufferArray","Uint8Array","ArrayBuffer","charCodeAt","miniFile","File","origin","beforeSrc","afterSrc","beforeKB","toFixed","afterKB","readAsDataURL","uploadFile","formData","FormData","append","fileId","CancelToken","source","set","method","headers","timeout","cancelToken","token","onUploadProgress","progressEvent","loaded","total","message","_res$data","_res$data2","$refs","relUploader","$forceUpdate","splice","findIndex","catch","err","error","removeFile","get","cancel","filter","download","yuanchu","accessToken","$storage","$loading","show","title","fileUrl","fileSystemPaths","cacheDirectory","fileTransfer","that","onprogress","_file$response","_file$response2","Math","round","entry","fileOpener2","open","toURL","success","hide","deleteFile","index","onDelete","onClickUpload","event","takePicture","preventDefault","imagePicker","getPictures","onSuccess","onFail","maximumImagesCount","obj","images","resolveLocalFileSystemURL","uri","fileEntry","fileReader","onloadend","thisFile","Blob","window","URL","createObjectURL","readAsArrayBuffer","clickUpload","_this$$refs","input","click"],"sources":["src/components/upload/Uploader.vue"],"sourcesContent":["<!--\r\n * @Author: xie_sm\r\n * @Date: 2022-02-28 16:07:02\r\n * @LastEditors: Please set LastEditors\r\n * @LastEditTime: 2022-06-22 08:50:15\r\n * @FilePath: \\mobile-template\\src\\components\\upload\\Uploader.vue\r\n * @Description: 参考凤翎web端form-upload组件，demo可查看src\\views\\CommonOne\\index.vue\r\n *\r\n-->\r\n<template>\r\n  <div>\r\n    <fm-field\r\n      :name=\"name\"\r\n      :label=\"label\"\r\n      label-class=\"cus-label\"\r\n      :class=\"[\r\n        'field-attachment',\r\n        type === 'file' && fileList.length == 0 && !disabled\r\n          ? 'no-upload-list'\r\n          : '',\r\n      ]\"\r\n    >\r\n      <template #label v-if=\"type == 'file'\">\r\n        <!-- 提供该组件label插槽，其中按照移动端设计规范设置默认样式 -->\r\n        <slot name=\"uploader-label\">\r\n          <div class=\"cus-label__div\">\r\n            <span>{{ previewLabel }}</span>\r\n            <!--  点击文本触发的原生input上传事件 -->\r\n            <div v-if=\"!disabled\" @click=\"clickUpload\">\r\n              <span class=\"label-action\">点击添加</span>\r\n              <i class=\"fm-icon fm-icon-arrow\"></i>\r\n            </div>\r\n          </div>\r\n        </slot>\r\n      </template>\r\n      <template #input>\r\n        <fm-uploader\r\n          :after-read=\"afterRead\"\r\n          :before-read=\"beforeRead\"\r\n          v-model=\"fileList\"\r\n          :multiple=\"false\"\r\n          :accept=\"accept\"\r\n          :before-delete=\"removeFile\"\r\n          :disabled=\"disabled\"\r\n          :deletable=\"deletable\"\r\n          @click-preview=\"download\"\r\n          :show-upload=\"showUpload\"\r\n          :onClickUpload=\"onClickUpload\"\r\n          ref=\"relUploader\"\r\n          class=\"uploader\"\r\n          :preview-full-image=\"previewFullImage\"\r\n        >\r\n          <!-- 提供修改上传区域的插槽 -->\r\n          <slot name=\"upload-area\" v-if=\"type == 'file'\">\r\n            <div></div>\r\n          </slot>\r\n          <span v-if=\"fileList.length == 0 && type === 'file' && disabled\"\r\n            >暂无附件</span\r\n          >\r\n          <!-- 自定义预览列表样式 -->\r\n          <template #preview-list=\"previewFileList\" v-if=\"type === 'file'\">\r\n            <slot name=\"upload-list\" v-bind=\"fileList\">\r\n              <div\r\n                v-for=\"(file, index) in previewFileList\"\r\n                :key=\"file.fileToken || file.fileId\"\r\n                class=\"preview-list-item\"\r\n                @click=\"download(file)\"\r\n              >\r\n                <img :src=\"file.file.name | getFileIcon\" class=\"file-icon\" />\r\n                <div class=\"file-info\">\r\n                  <span>{{ file.file.name }}</span>\r\n                  <span>{{ file.file.size | calculateFileSize }}</span>\r\n                </div>\r\n                <span\r\n                  class=\"delete-text\"\r\n                  @click=\"deleteFile(index)\"\r\n                  v-if=\"!disabled\"\r\n                  >删除</span\r\n                >\r\n              </div>\r\n            </slot>\r\n          </template>\r\n          <template #preview-list v-else-if=\"fileList.length == 0 && disabled\">\r\n            <span>暂无附件</span>\r\n          </template>\r\n        </fm-uploader>\r\n      </template>\r\n    </fm-field>\r\n  </div>\r\n</template>\r\n<script>\r\n/* eslint-disable no-undef */\r\n// 该组件需要和真机交互，会出现原生 API 未定义的情况，故全局应用屏蔽 no-undef 规则\r\n\r\nimport { Uploader, Toast, Button, Field } from 'fawkes-mobile-lib'\r\nimport { changeFileG9s, getFileToken } from '@/api/file'\r\nimport { uuid } from '@/utils/param'\r\nimport { isImage, downloadFile, calcFileSize } from '@/utils/file'\r\nimport request from '@/utils/request'\r\nimport axios from 'axios'\r\n\r\nconst cancelTokenObj = new Map()\r\n\r\nexport default {\r\n  name: 'Uploader',\r\n  components: {\r\n    [Uploader.name]: Uploader,\r\n    [Toast.name]: Toast,\r\n    [Button.name]: Button,\r\n    [Field.name]: Field,\r\n  },\r\n  filters: {\r\n    calculateFileSize: function (val) {\r\n      return calcFileSize(val)\r\n    },\r\n  },\r\n  props: {\r\n    // 文件groupToken\r\n    value: {\r\n      type: String,\r\n      required: true,\r\n      default: '',\r\n    },\r\n    // TODO: 文件上传数量限制，暂未使用\r\n    limit: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    // 图片上传时的标签名称\r\n    label: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n    // 名称，提交表单的标识符\r\n    name: {\r\n      type: String,\r\n      default: 'uploader',\r\n    },\r\n    // 开启自动上传\r\n    autoUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否展示删除按钮\r\n    deletable: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否显示上传区域\r\n    showUpload: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 上传类型，image或file\r\n    type: {\r\n      type: String,\r\n      default: 'image',\r\n    },\r\n    // 图片多选限制数量，默认为9\r\n    maxImagesCount: {\r\n      type: Number,\r\n      default: 9,\r\n    },\r\n    // 上传前的校验方法\r\n    beforeRead: {\r\n      type: Function,\r\n      default: function () {\r\n        return true\r\n      },\r\n    },\r\n    // 允许预览，默认为true\r\n    previewFullImage: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 文件上传时标签名称\r\n    previewLabel: {\r\n      type: String,\r\n      default: '附件',\r\n    },\r\n  },\r\n  data: () => ({\r\n    fileList: [],\r\n    fileTokenList: [],\r\n    // 是否需要请求文件资源\r\n    needToGetFile: true,\r\n    percent: 0,\r\n  }),\r\n  computed: {\r\n    // 允许上传的文件类型\r\n    accept() {\r\n      return this.type == 'image' ? 'image/*' : '*'\r\n    },\r\n  },\r\n  watch: {\r\n    value: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (!newVal) {\r\n          this.fileTokenList = []\r\n          this.fileList = []\r\n          return\r\n        } else if (this.needToGetFile) {\r\n          let postData = {\r\n            g9s: [newVal],\r\n          }\r\n          getFileToken(postData).then((res) => {\r\n            if (res.status) {\r\n              let fileTokenList = res.data\r\n              const fileList = []\r\n              fileTokenList.forEach((item) => {\r\n                let isImageType = isImage(item.fileName)\r\n                let fileItem = {\r\n                  file: {\r\n                    name: item.fileName,\r\n                    size: item.size,\r\n                  },\r\n                  response: item,\r\n                  isImage: isImageType,\r\n                  fileToken: item.fileToken,\r\n                }\r\n                // 展示图片\r\n                if (isImageType) {\r\n                  fileItem.url = `${process.env.VUE_APP_BASE_URL}/sys-storage/download_image?f8s=${item.fileToken}`\r\n                } else {\r\n                  // 展示文件\r\n                  fileItem.url = item.fileToken\r\n                }\r\n\r\n                fileList.push(fileItem)\r\n                this.fileTokenList.push(item.fileToken)\r\n              })\r\n              this.fileList = fileList\r\n              this.$emit('fileChange', {\r\n                file: null,\r\n                fileList,\r\n                length: fileList.length,\r\n              })\r\n            }\r\n          })\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    setG9s() {\r\n      if (this.fileTokenList.length) {\r\n        const g9s = uuid()\r\n        //将各文件的filetoken合并成grouptoken\r\n        changeFileG9s(g9s, this.fileTokenList).then(() => {\r\n          this.$emit('input', g9s)\r\n        })\r\n      } else {\r\n        this.$emit('input', '')\r\n      }\r\n    },\r\n    async afterRead(file) { // 文件上传完毕后会触发 after-read 回调函数，获取到对应的 file 对象。\r\n      console.log('文件上传完毕', file);\r\n      // 多选的情况下\r\n      if (Array.isArray(file)) {\r\n        console.log(\"多选的情况下\", file);\r\n        file.forEach((el) => this.afterRead(el))\r\n        return;\r\n      } else {\r\n        console.log(\"单选的情况下\", file);\r\n        await compressImg(file.file, 0.2).then((res) => {\r\n          console.log(\"压缩后的file\", res);\r\n          file.file = res.file; // 替换原来的file\r\n        });\r\n      }\r\n      function compressImg(file, quality) {\r\n        if (file[0]) {\r\n          return Promise.all(Array.from(file).map(async (e) => await compressImg(e, quality))); // 如果是 file 数组返回 Promise 数组\r\n        } else {\r\n          return new Promise((resolve) => {\r\n            const reader = new FileReader(); // 创建 FileReader\r\n            reader.onload = ({ target: { result: src } }) => {\r\n              const image = new Image(); // 创建 img 元素\r\n              image.onload = async () => {\r\n                const canvas = document.createElement(\"canvas\"); // 创建 canvas 元素\r\n                canvas.width = image.width;\r\n                canvas.height = image.height;\r\n                canvas.getContext(\"2d\").drawImage(image, 0, 0, image.width, image.height); // 绘制 canvas\r\n                const canvasURL = canvas.toDataURL(\"image/jpeg\", quality);\r\n                const buffer = atob(canvasURL.split(\",\")[1]);\r\n                let length = buffer.length;\r\n                const bufferArray = new Uint8Array(new ArrayBuffer(length));\r\n                while (length--) {\r\n                  bufferArray[length] = buffer.charCodeAt(length);\r\n                }\r\n                const miniFile = new File([bufferArray], file.name, {\r\n                  type: \"image/jpeg\",\r\n                });\r\n                resolve({\r\n                  file: miniFile,\r\n                  origin: file,\r\n                  beforeSrc: src,\r\n                  afterSrc: canvasURL,\r\n                  beforeKB: Number((file.size / 1024).toFixed(2)),\r\n                  afterKB: Number((miniFile.size / 1024).toFixed(2)),\r\n                });\r\n              };\r\n              image.src = src;\r\n            };\r\n            reader.readAsDataURL(file);\r\n          });\r\n        }\r\n      }\r\n      console.log('-----------------------------------------------------------------------------------');\r\n      if (this.autoUpload) { // 如果是自动上传的情况下\r\n        // 多选的情况下\r\n        if (Array.isArray(file)) {\r\n          file.forEach((el) => this.uploadFile(el))\r\n        } else {\r\n          this.uploadFile(file)\r\n        }\r\n      }\r\n    },\r\n    uploadFile(file) {\r\n      console.log('进入上传文件函数');\r\n      //文件读取完成后的回调函数\r\n      file.status = 'uploading'\r\n      let formData = new FormData()\r\n\r\n      formData.append('file', file.file)\r\n\r\n      // fileId用于标记文件，方便后续删除定位文件\r\n      const fileId = uuid()\r\n      file.fileId = fileId\r\n\r\n      //生成取消请求的token,方便在handleRemove取消上传时结束请求\r\n      const CancelToken = axios.CancelToken\r\n      const source = CancelToken.source()\r\n      cancelTokenObj.set(fileId, source)\r\n      request({\r\n        url: '/sys-storage/upload',\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        data: formData,\r\n        timeout: 0,\r\n        cancelToken: source.token,\r\n        onUploadProgress: (progressEvent) => {\r\n          let percent = ((progressEvent.loaded / progressEvent.total) * 100) | 0\r\n          //调用onProgress方法来显示进度条，需要传递个对象 percent为进度值\r\n          // file.onProgress({ percent: percent });\r\n          file.message = `上传中 ${percent}%`\r\n        },\r\n      })\r\n        .then((res) => {\r\n          // console.log('/sys-storage/upload---res: ', res);\r\n          if (res.status) {\r\n            file.status = 'success'\r\n            file.fileToken = res?.data?.fileToken\r\n            this.fileTokenList.push(res?.data?.fileToken)\r\n            this.setG9s()\r\n            // 解决上传结束后进度仍然显示问题\r\n            this.$refs.relUploader.$forceUpdate()\r\n            // fileChangeGallery事件在管廊巡检模块生效\r\n            this.$emit('fileChangeGallery', {\r\n              file: res.data,\r\n              fileList: this.fileList,\r\n              length: this.fileList.length,\r\n            })\r\n          } else {\r\n            Toast(res.message)\r\n            // 删除上传失败的文件\r\n            this.fileList.splice(\r\n              this.fileList.findIndex((el) => el.fileId === fileId),\r\n              1\r\n            )\r\n          }\r\n          // file.onSuccess(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n          Toast('上传失败')\r\n          // 删除上传失败的文件\r\n          this.fileList.splice(\r\n            this.fileList.findIndex((el) => el.fileId === fileId),\r\n            1\r\n          )\r\n        })\r\n    },\r\n    removeFile(file) {\r\n      const fileId = file.fileId\r\n      //如果文件在上传中的话，则取消上传请求\r\n      const source = cancelTokenObj.get(fileId)\r\n      source && source.cancel()\r\n      // 没有上传成功，或非查看页面预览时，直接return\r\n      if (file.status !== 'success' && !file.response) {\r\n        return\r\n      }\r\n      this.fileTokenList = this.fileTokenList.filter((item) => {\r\n        return item !== file.fileToken\r\n      })\r\n\r\n      if (fileId) {\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileId === fileId),\r\n          1\r\n        )\r\n        // 从后台获取附件后没有filedId时，利用token定位文件做删除\r\n      } else {\r\n        this.fileList.splice(\r\n          this.fileList.findIndex((el) => el.fileToken === file.fileToken),\r\n          1\r\n        )\r\n      }\r\n\r\n      //派发文件列表状态变化事件\r\n      this.$emit('fileChange', {\r\n        file,\r\n        fileList: this.fileList,\r\n        length: this.fileList.length,\r\n      })\r\n    },\r\n    // 移动端设备下载文件\r\n    download(file) {\r\n      if ((file.isImage && this.type == 'image') || !this.disabled) {\r\n        return\r\n      } else if (typeof yuanchu != 'undefined') {\r\n        let accessToken = this.$storage.get('access_token')\r\n        let url =\r\n          process.env.VUE_APP_BASE_URL +\r\n          '/sys-storage/download?f8s=' +\r\n          file.fileToken\r\n        let name = file.file.name\r\n        this.$loading.show({ title: '' })\r\n\r\n        // 从设备应用缓存目录下获取文件系统路径\r\n        let fileUrl = yuanchu.fileSystemPaths.file.cacheDirectory + name\r\n\r\n        // 调用原生框架附件下载插件暴露的接口\r\n        let fileTransfer = new yuanchu.fileTransfer()\r\n        let that = this\r\n        that.fileTransfer = fileTransfer\r\n        fileTransfer.onprogress = (progressEvent) => {\r\n          if (progressEvent) {\r\n            if (file?.response?.size != progressEvent.total) {\r\n              that.percent = Math.round(\r\n                (progressEvent.loaded * 100) / file?.response?.size\r\n              )\r\n            }\r\n          }\r\n        }\r\n\r\n        fileTransfer.download(\r\n          url,\r\n          fileUrl,\r\n          (entry) => {\r\n            entry.file((data) => {\r\n              yuanchu.fileOpener2.open(entry.toURL(), data.type, {\r\n                success: function () {\r\n                  return\r\n                },\r\n                error: function (err) {\r\n                  console.error(err)\r\n                  this.$loading.hide()\r\n                },\r\n              })\r\n            })\r\n            this.$loading.hide()\r\n          },\r\n          () => {\r\n            that.percent = 0\r\n            this.$loading.hide()\r\n          },\r\n          false,\r\n          {\r\n            headers: {\r\n              'Fawkes-Auth': accessToken,\r\n            },\r\n          }\r\n        )\r\n      } else {\r\n        downloadFile(file.fileToken)\r\n      }\r\n    },\r\n    deleteFile(index) {\r\n      this.$refs.relUploader.onDelete(this.fileList[index], index)\r\n    },\r\n    onClickUpload(event) {\r\n      if (this.type == 'image') {\r\n        // 解决浏览器调试时控制报错问题\r\n        if (typeof yuanchu != 'undefined') {\r\n          this.takePicture()\r\n          event.preventDefault()\r\n        }\r\n      } else {\r\n        this.$refs.relUploader.$emit('click-upload', event)\r\n      }\r\n    },\r\n    takePicture() {\r\n      // 调用原生插件拍照或从相册选取\r\n      yuanchu.imagePicker.getPictures(this.onSuccess, this.onFail, {\r\n        quality: 50,\r\n        maximumImagesCount: this.maxImagesCount,\r\n        width: 1920,\r\n        height: 1440,\r\n      })\r\n    },\r\n    onFail(error) {\r\n      console.error(error)\r\n    },\r\n    // 拍照或从相册选取图片成功后回调\r\n    onSuccess(obj) {\r\n      obj?.images.forEach((val) => {\r\n        resolveLocalFileSystemURL(\r\n          val.uri,\r\n          (fileEntry) => {\r\n            //获取file对象，和js原生的file不一样，需要插件处理\r\n            fileEntry.file(\r\n              (file) => {\r\n                //读取文件对象\r\n                const reader = new yuanchu.fileReader()\r\n                reader.onloadend = (event) => {\r\n                  const result = {}\r\n                  const thisFile = new File(\r\n                    [new Blob([event.target.result], { type: file.type })],\r\n                    file.name\r\n                  )\r\n                  result.url = window.URL.createObjectURL(\r\n                    new Blob([event.target.result])\r\n                  )\r\n                  result.isImage = true\r\n                  result.file = thisFile\r\n                  // 插入到fileList中并调用上传方法\r\n                  this.fileList.push(result)\r\n                  this.afterRead(result)\r\n                }\r\n                reader.readAsArrayBuffer(file)\r\n              },\r\n              function (error) {\r\n                console.error('error', error)\r\n              }\r\n            )\r\n          },\r\n          function (error) {\r\n            console.error('error resolve', error)\r\n          }\r\n        )\r\n      })\r\n    },\r\n    clickUpload() {\r\n      this.$refs?.relUploader?.$refs?.input.click()\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n// 自定义文件列表预览\r\n.custom-preview-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n// 自定义文件项\r\n.preview-list-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-bottom: 12px;\r\n  padding-top: 16px;\r\n\r\n  .file-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 12px;\r\n    height: 3em;\r\n    justify-content: space-between;\r\n    flex: 1;\r\n    min-width: 0;\r\n\r\n    span {\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n      text-align: left;\r\n    }\r\n\r\n    span + span {\r\n      font-size: 28px;\r\n      color: #999999;\r\n    }\r\n  }\r\n\r\n  .file-icon {\r\n    height: 53px;\r\n    width: 44px;\r\n    margin-top: 24px;\r\n  }\r\n\r\n  .delete-text {\r\n    color: #999999;\r\n  }\r\n}\r\n.field-attachment {\r\n  height: 100%;\r\n  flex-direction: column;\r\n  /deep/ .fm-field__control--right {\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n/deep/ .cus-label {\r\n  width: 100%;\r\n}\r\n.cus-label__div {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  .label-action {\r\n    color: #027aff;\r\n  }\r\n}\r\n.uploder-attachment {\r\n  width: 100%;\r\n}\r\n\r\n.no-upload-list {\r\n  /deep/ .fm-field__control {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}