{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\xa-map\\mapInit.js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\components\\xa-map\\mapInit.js","mtime":1705912799964},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","Vue","mapboxgl","getArrayGeo","turf","type","Point","LineString","MultiPoint","MultiLineString","Polygon","MultiPlygon","MapInit","constructor","container","options","center","callBack","accessToken","window","xaMap","map","createMap","groups","clickState","continueVer","popup","Popup","closeButton","closeOnClick","on","changeCursor","nowFunction","layer2D","layer3D","markers","Map","Object","assign","preserveDrawingBuffer","doubleClickZoom","zoom","minZoom","maxZoom","hzT4549","X","Y","moveX","moveY","rotationAngle","scaleChange","newLon","Math","cos","sin","newLat","f4549THz","position","features","bbox","b","bboxPolygon","v2","LngLatBounds","geometry","coordinates","fitBounds","linear","drawFeatures","name","getSource","setData","showPop","event","info","getCanvas","style","cursor","setLngLat","lngLat","setHTML","addTo","hidePop","remove","getLayer","setLayer","layers","reflush","e","result","values","layer","mapStyleCollection","filters","forEach","item","keys","removeLightLayer","removeLayer","removeSource","marker","addLightLine","lineType","color","lineWidth","addLayer","id","source","data","properties","layout","paint","addLightPoint","circleRadius","home","makeLocation","addMulLightLine","console","log","mulArea","nameList","countList","feats","markersGemo","feature","line","lineString","push","index","dom","document","createElement","innerHTML","fontSize","fontWeight","option","element","anchor","Marker","reset","Array","length","pos1","pos2","multipolygon","multiPolygon","polygon","padding","top","bottom","left","right","flyTo","newMarker","addMarker","ele","centerCoord","configure","isAdd","pitchAlignment","rotationAlignment","addMarkerPlus","str","attrs","k","setAttribute","setPopup","getDirection","start","end","query","fetch","method","json","routes","route","geojson","getCenter","coord","addMarkerWithPopup","value","addImgToMap","imgSrc","imgName","img","Image","src","onload","addImage","addCommonLayer","url","iconName","removeBackground","isBasemap","visible","promise","Promise","resolve","res","get","mvtStyle","layerArr","addSource","sources","baseLayers","filter","layoutObj","visibility","metadata","isSMLayer","maxzoom","add3dLayer","paintObj","paintingRange","boldBorder","borderWidth","isRepaint","lineDasharray","multiLineString","polygonToLine","f","concat","addRangeLayer","layerId","removeRangeLayer","destoryMap","mapInit","iteration","targetArr","iterationName","targetNames","arr","fun","obj","targetName","addGroupLayer","findIndex","getGroupLayer","removeGroupLayer","setGroupLayer","superMapParams","superMapType","params","points","toXY","coords","x","y","deSuperMapParams"],"sources":["D:/Code/Project/WL/xasw-mobile/src/components/xa-map/mapInit.js"],"sourcesContent":["/* eslint-disable no-console, no-unused-vars */\r\nimport axios from \"axios\";\r\nimport Vue from \"vue\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { getArrayGeo } from \"@/utils/util.js\";\r\nimport * as turf from \"@turf/turf\";\r\nconst type = {\r\n  Point: \"POINT\",\r\n  LineString: \"LINE\",\r\n  MultiPoint: \"POINT\",\r\n  MultiLineString: \"LINE\",\r\n  Polygon: \"REGION\",\r\n  MultiPlygon: \"REGION\",\r\n};\r\nexport default class MapInit {\r\n  constructor({ container, options, center }, callBack) {\r\n    // access token\r\n    this.accessToken =\r\n      \"pk.eyJ1IjoiOTM0MDk0Mjg2IiwiYSI6ImNsMnNmdmVrZDBrZGMzZG50cHJudXJkbW8ifQ.C0wKhJgrToFJgL8GH5M8rg\";\r\n    window.xaMap = this.map = this.createMap({ container, options, center });\r\n    // 预设做图层管理\r\n    this.groups = {};\r\n    // 单机事件区分 全局 all 分析事件 analysis  //default \"all\"\r\n    this.clickState = \"all\";\r\n    //重新选择第二个对象执行时只能点击触发一次\r\n    this.continueVer = \"ok\";\r\n    this.popup = new mapboxgl.Popup({\r\n      closeButton: false,\r\n      closeOnClick: false,\r\n    });\r\n    callBack && this.map.on(\"load\", callBack(this));\r\n    this.changeCursor();\r\n    // this.getClickFeatures()\r\n\r\n    //分析功能部分记录当前执行功能的销毁函数，在切换功能时调用销毁\r\n    this.nowFunction = null;\r\n    //储存3D，2D图层\r\n    this.layer2D = [];\r\n    this.layer3D = [];\r\n\r\n    //划区域显示时各区域标记\r\n    this.markers = [];\r\n  }\r\n  createMap({ container, options, center }) {\r\n    mapboxgl.accessToken = this.accessToken;\r\n    const map = new mapboxgl.Map(\r\n      Object.assign(\r\n        {\r\n          container,\r\n          center: center,\r\n          preserveDrawingBuffer: true,\r\n          doubleClickZoom: false,\r\n          zoom: 13.570532360577655, // starting zoom\r\n          minZoom: 10,\r\n          maxZoom: 22,\r\n        },\r\n        options\r\n      )\r\n    );\r\n    return map;\r\n  }\r\n  hzT4549(X, Y) {\r\n    var moveX = 435542.834434922;\r\n    var moveY = 3267268.38850877;\r\n    var rotationAngle = 0.001343;\r\n    var scaleChange = 0.999991455270843;\r\n    var newLon =\r\n      X * scaleChange * Math.cos(rotationAngle) -\r\n      Y * scaleChange * Math.sin(rotationAngle) +\r\n      moveX;\r\n    var newLat =\r\n      X * scaleChange * Math.sin(rotationAngle) +\r\n      Y * scaleChange * Math.cos(rotationAngle) +\r\n      moveY;\r\n    return [newLon, newLat];\r\n  }\r\n  f4549THz(X, Y) {\r\n    var moveX = -439934.104062;\r\n    var moveY = -3266708.426255;\r\n    var rotationAngle = -0.001343;\r\n    var scaleChange = 1.000008544802;\r\n    var newLon =\r\n      X * scaleChange * Math.cos(rotationAngle) -\r\n      Y * scaleChange * Math.sin(rotationAngle) +\r\n      moveX;\r\n    var newLat =\r\n      X * scaleChange * Math.sin(rotationAngle) +\r\n      Y * scaleChange * Math.cos(rotationAngle) +\r\n      moveY;\r\n    return [newLon, newLat];\r\n  }\r\n  position(features) {\r\n    let bbox = turf.bbox({\r\n      type: \"FeatureCollection\",\r\n      features,\r\n    });\r\n    let b = turf.bboxPolygon(bbox);\r\n    let v2 = new mapboxgl.LngLatBounds(\r\n      b.geometry.coordinates[0][0],\r\n      b.geometry.coordinates[0][2]\r\n    );\r\n    this.map.fitBounds(v2, {\r\n      linear: false,\r\n    });\r\n  }\r\n  /**\r\n   * 绘制元素\r\n   * @param {Array} features 元素数组\r\n   */\r\n  drawFeatures(name, features) {\r\n    this.map.getSource(name).setData({\r\n      type: \"FeatureCollection\",\r\n      features,\r\n    });\r\n  }\r\n  /**\r\n   * 地图 pop\r\n   * @param {Object} params 参数\r\n   * @param {MapEvent} params.event 事件源\r\n   * @param {Object} params.info 待展示信息\r\n   */\r\n  showPop({ event, info }) {\r\n    this.map.getCanvas().style.cursor = \"pointer\";\r\n    this.popup.setLngLat(event.lngLat).setHTML(info).addTo(this.map);\r\n  }\r\n  /**\r\n   * 隐藏 pop\r\n   */\r\n  hidePop() {\r\n    this.changeCursor();\r\n    this.popup.remove();\r\n  }\r\n  /**\r\n   * 获取name图层\r\n   */\r\n  getLayer(name) {\r\n    return this.groups[name];\r\n  }\r\n  /**\r\n   * 设置name图层\r\n   * layers是数组\r\n   */\r\n  setLayer(name, layers) {\r\n    this.groups[name] = layers;\r\n  }\r\n  changeCursor(type = \"default\") {\r\n    this.map.getCanvas().style.cursor = type;\r\n  }\r\n  reflush() {\r\n    this.map.on(\"moveend\", (e) => {\r\n      let result = Object.values(this.groups).map((layer) => {\r\n        return layer.mapStyleCollection(layer.filters);\r\n      });\r\n      result.forEach((item) => {\r\n        Object.keys(item).forEach((name) => {\r\n          this.drawFeatures(name, item[name]);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  removeLightLayer() {\r\n    if (this.map.getLayer(\"lightPoint\")) this.map.removeLayer(\"lightPoint\");\r\n    if (this.map.getSource(\"lightPoint\")) this.map.removeSource(\"lightPoint\");\r\n    if (this.map.getLayer(\"lightLine\")) this.map.removeLayer(\"lightLine\");\r\n    if (this.map.getSource(\"lightLine\")) this.map.removeSource(\"lightLine\");\r\n    if (this.map.getLayer(\"mulLightLine\")) this.map.removeLayer(\"mulLightLine\");\r\n    if (this.map.getSource(\"mulLightLine\"))\r\n      this.map.removeSource(\"mulLightLine\");\r\n    this.markers.forEach((marker) => {\r\n      marker.remove();\r\n    });\r\n  }\r\n  /**\r\n   * position 数组类型\r\n   * 给搜索模块的定位进行使用\r\n   */\r\n  addLightLine(position, lineType, color = \"#ff4a4a\", lineWidth = 1.2) {\r\n    if (this.map.getLayer(\"lightLine\")) this.map.removeLayer(\"lightLine\");\r\n    if (this.map.getSource(\"lightLine\")) this.map.removeSource(\"lightLine\");\r\n    if (lineType == \"line\") {\r\n      this.map.addLayer({\r\n        id: \"lightLine\",\r\n        type: \"line\",\r\n        source: {\r\n          type: \"geojson\",\r\n          data: {\r\n            type: \"Feature\",\r\n            properties: {},\r\n            geometry: {\r\n              type: \"LineString\",\r\n              coordinates: position,\r\n            },\r\n          },\r\n        },\r\n        layout: {\r\n          \"line-join\": \"round\",\r\n          \"line-cap\": \"round\",\r\n        },\r\n        paint: {\r\n          \"line-color\": color,\r\n        },\r\n      });\r\n    } else {\r\n      this.map.addLayer({\r\n        id: \"lightLine\",\r\n        type: \"line\",\r\n        source: {\r\n          type: \"geojson\",\r\n          data: {\r\n            type: \"Feature\",\r\n            properties: {},\r\n            geometry: {\r\n              type: \"LineString\",\r\n              coordinates: position,\r\n            },\r\n          },\r\n        },\r\n        layout: {\r\n          \"line-join\": \"round\",\r\n          \"line-cap\": \"round\",\r\n        },\r\n        paint: {\r\n          \"line-color\": color,\r\n          \"line-width\": lineWidth,\r\n          \"line-dasharray\": [3, 4],\r\n        },\r\n      });\r\n    }\r\n  }\r\n  addLightPoint(position, color = \"rgb(153,153,153)\", circleRadius = 2) {\r\n    if (this.map.getLayer(\"lightPoint\")) this.map.removeLayer(\"lightPoint\");\r\n    if (this.map.getSource(\"lightPoint\")) this.map.removeSource(\"lightPoint\");\r\n    this.map.addLayer({\r\n      id: \"lightPoint\",\r\n      type: \"circle\",\r\n      source: {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"Feature\",\r\n          properties: {},\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: position,\r\n          },\r\n        },\r\n      },\r\n      paint: {\r\n        \"circle-color\": \"#ffffff\",\r\n        // \"circle-radius\": circleRadius,\r\n        \"circle-stroke-width\": circleRadius,\r\n        \"circle-stroke-color\": color,\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * position 点线面经纬度 一维数组 ||二维数组\r\n   * color 高亮元素颜色\r\n   * lineWidth 线属性宽度\r\n   * circleRadius 点属性半径\r\n   * noPaint 默认会绘制元素高亮\r\n   */\r\n  home(position, lineType, lineWidth = 3, color = \"#ff4a4a\", circleRadius = 2) {\r\n    let type = this.makeLocation(position);\r\n    if (type == \"point\") {\r\n      this.addLightPoint(position, color, circleRadius);\r\n    } else if (type == \"line\") {\r\n      this.addLightLine(position, lineType, color, lineWidth);\r\n    }\r\n    // if (position instanceof Array) {\r\n    //     if (position[0] instanceof Array) {\r\n    //         var line = turf.lineString(position);\r\n    //         var bbox = turf.bbox(line);\r\n    //         var bboxPolygon = turf.bboxPolygon(bbox);\r\n    //         var v2 = new mapboxgl.LngLatBounds(bboxPolygon.geometry.coordinates[0][0], bboxPolygon.geometry.coordinates[0][2])\r\n    //         this.map.fitBounds(v2,{\r\n    //             linear:false,\r\n    //             padding: {top:60, bottom:60, left:60, right:60}\r\n    //         });\r\n    //             this.addLightLine(position, lineType, color, lineWidth)\r\n    //     } else {\r\n    //         this.map.flyTo({ center: position });\r\n    //     }\r\n    // } else {\r\n    //     this.map.fitBounds([[120.38188484498045, 30.56868547578088], [119.51549097554295,30.178356987720612]],{\r\n    //         linear:false\r\n    //     });\r\n    // }\r\n  }\r\n  /**\r\n   * 多范围圈选，给公司定位使用\r\n   * @param {*} features\r\n   * @param {*} color\r\n   * @param {*} lineWidth\r\n   */\r\n  addMulLightLine(features, color = \"#ff4a4a\", lineWidth = 1.2) {\r\n    console.log(features);\r\n    if (this.map.getLayer(\"mulLightLine\")) this.map.removeLayer(\"mulLightLine\");\r\n    if (this.map.getSource(\"mulLightLine\"))\r\n      this.map.removeSource(\"mulLightLine\");\r\n    //https://docs.mapbox.com/mapbox-gl-js/style-spec/layers/\r\n    this.map.addLayer({\r\n      id: \"mulLightLine\",\r\n      type: \"line\",\r\n      source: {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"FeatureCollection\",\r\n          features: features,\r\n        },\r\n      },\r\n      layout: {\r\n        \"line-join\": \"round\",\r\n        \"line-cap\": \"round\",\r\n      },\r\n      paint: {\r\n        \"line-color\": color,\r\n        \"line-width\": lineWidth,\r\n        \"line-dasharray\": [4, 5],\r\n      },\r\n    });\r\n  }\r\n  /**\r\n   * features geojson集合\r\n   * color 高亮元素颜色\r\n   * lineWidth 线属性宽度\r\n   * circleRadius 点属性半径\r\n   *\r\n   */\r\n  mulArea(\r\n    position,\r\n    features,\r\n    nameList,\r\n    color = \"#ff4a4a\",\r\n    lineWidth = 3,\r\n    circleRadius = 2,\r\n    countList\r\n  ) {\r\n    this.makeLocation(position, false);\r\n    var feats = [];\r\n    var markersGemo = [];\r\n    features.forEach((feature) => {\r\n      let line = turf.lineString(feature[0]);\r\n      feats.push(line);\r\n      markersGemo.push(turf.center(line));\r\n    });\r\n    markersGemo.forEach((center, index) => {\r\n      let dom = document.createElement(\"div\");\r\n      dom.innerHTML = `${nameList[index]}`;\r\n      if (countList) {\r\n        dom.innerHTML += countList[nameList[index]];\r\n      }\r\n      dom.style.fontSize = 18 + \"px\";\r\n      dom.style.fontWeight = \"bold\";\r\n      dom.style.color = \"#495665\";\r\n      let option = {\r\n        element: dom,\r\n        anchor: \"center\",\r\n      };\r\n      this.markers.push(\r\n        new mapboxgl.Marker(option)\r\n          .setLngLat(center.geometry.coordinates)\r\n          .addTo(this.map)\r\n      );\r\n    });\r\n\r\n    this.addMulLightLine(feats);\r\n  }\r\n\r\n  /**\r\n   * li_x25封装\r\n   * wechat:13093037033\r\n   */\r\n\r\n  /**\r\n   * 点，多点，线，多线，面，多面定位\r\n   * @param {*} position 定位坐标\r\n   * @param {*} reset 若不传坐标，是否定位到初始位置\r\n   */\r\n  makeLocation(position, reset = true) {\r\n    let type = \"\";\r\n    if (position instanceof Array && position.length !== 0) {\r\n      if (position[0] instanceof Array) {\r\n        let pos1 = position[0];\r\n        var bbox = null;\r\n        let bboxPolygon = null;\r\n        if (pos1[0] instanceof Array) {\r\n          let pos2 = pos1[0];\r\n          if (pos2[0] instanceof Array) {\r\n            var multipolygon = turf.multiPolygon(position);\r\n            bbox = turf.bbox(multipolygon);\r\n            bboxPolygon = turf.bboxPolygon(bbox);\r\n            type = \"multipolygon\";\r\n          } else {\r\n            console.log(position);\r\n            var polygon = turf.polygon(position);\r\n            bbox = turf.bbox(polygon);\r\n            bboxPolygon = turf.bboxPolygon(bbox);\r\n            type = \"polygon\";\r\n          }\r\n        } else {\r\n          var line = turf.lineString(position);\r\n          bbox = turf.bbox(line);\r\n          bboxPolygon = turf.bboxPolygon(bbox);\r\n          type = \"line\";\r\n        }\r\n        var v2 = new mapboxgl.LngLatBounds(\r\n          bboxPolygon.geometry.coordinates[0][0],\r\n          bboxPolygon.geometry.coordinates[0][2]\r\n        );\r\n        this.map.fitBounds(v2, {\r\n          linear: false,\r\n          padding: { top: 60, bottom: 60, left: 60, right: 60 },\r\n        });\r\n      } else {\r\n        this.map.flyTo({ center: position, zoom: 15 });\r\n        type = \"point\";\r\n      }\r\n    } else if (reset) {\r\n      this.map.fitBounds(\r\n        [\r\n          [120.38188484498045, 30.56868547578088],\r\n          [119.51549097554295, 30.178356987720612],\r\n        ],\r\n        {\r\n          linear: false,\r\n        }\r\n      );\r\n      type = \"errPosition\";\r\n    }\r\n    return type;\r\n  }\r\n  newMarker(option){\r\n    return new mapboxgl.Marker(option || {})\r\n  }\r\n\r\n  /**\r\n   * 新增标记\r\n   * @param {*} ele 标签\r\n   * @param {*} centerCoord 坐标\r\n   */\r\n  addMarker(ele, centerCoord, configure = {}, isAdd = true) {\r\n    let option = {\r\n      element: ele,\r\n      anchor: \"center\",\r\n      pitchAlignment: \"map\",\r\n      rotationAlignment: \"map\",\r\n    };\r\n    if (centerCoord && centerCoord.length) {\r\n      let marker = new mapboxgl.Marker(\r\n        Object.assign(option, configure)\r\n      ).setLngLat(centerCoord);\r\n      isAdd && marker.addTo(this.map);\r\n      return marker;\r\n    }\r\n    return new mapboxgl.Marker(option);\r\n  }\r\n\r\n  /**\r\n   * 新增标记,with attribute\r\n   * @param {*} ele 标签\r\n   * @param {*} centerCoord 坐标\r\n   * @param {*} configure config Marker object\r\n   * @param {*} attrs set ele attrs\r\n   */\r\n  addMarkerPlus(ele, centerCoord, str = \"\", attrs = {}) {\r\n    let option = {\r\n      element: ele,\r\n      anchor: \"center\",\r\n    };\r\n    Object.keys(attrs).forEach((k) => {\r\n      ele.setAttribute(k, attrs[k]);\r\n    });\r\n    if (centerCoord.length) {\r\n      let marker = null;\r\n      marker = new mapboxgl.Marker(option).setLngLat(centerCoord);\r\n      marker.setPopup(\r\n        new mapboxgl.Popup({\r\n          closeButton: false,\r\n          closeOnClick: false,\r\n        }).setHTML(str)\r\n      );\r\n      marker.addTo(this.map);\r\n      return marker;\r\n    }\r\n    return \"error\";\r\n  }\r\n  /**\r\n   * generate direction\r\n   * @param {Array} start\r\n   * @param {Array} end\r\n   * @returns\r\n   */\r\n  async getDirection(start, end) {\r\n    const query = await fetch(\r\n      `https://api.mapbox.com/directions/v5/mapbox/cycling/${start[0]},${start[1]};${end[0]},${end[1]}?steps=true&geometries=geojson&access_token=${this.accessToken}`,\r\n      { method: \"GET\" }\r\n    );\r\n    const json = await query.json();\r\n    const data = json.routes[0];\r\n    const route = data.geometry.coordinates;\r\n    const geojson = {\r\n      type: \"Feature\",\r\n      properties: {},\r\n      geometry: {\r\n        type: \"LineString\",\r\n        coordinates: route,\r\n      },\r\n    };\r\n    return geojson;\r\n  }\r\n\r\n  /**\r\n   * 提供坐标数组，返回中心点,限线和面\r\n   * @param {*} position 坐标数组\r\n   */\r\n  getCenter(position) {\r\n    let coord = [];\r\n    let center;\r\n    if (position instanceof Array && position.length !== 0) {\r\n      let pos1 = position[0];\r\n      if (pos1 instanceof Array) {\r\n        let pos2 = pos1[0];\r\n        if (pos2 instanceof Array) {\r\n          center = turf.center(turf.polygon(position));\r\n        } else {\r\n          center = turf.center(turf.lineString(position));\r\n        }\r\n      }\r\n    }\r\n    if (center) {\r\n      coord = center.geometry.coordinates;\r\n    }\r\n    return coord;\r\n  }\r\n\r\n  /**\r\n   * 添加标记并显示浮窗\r\n   * @param {Object} ele 标签\r\n   * @param {Array} centerCoord 坐标\r\n   * @param {Array||String} nameList 弹窗要显示的内容，以name:\"\",value:\"\"对象数组的形式接受,或者以html字符串的格式接收\r\n   * 注：切换弹窗显隐执行返回值marker.togglePopup()\r\n   */\r\n  addMarkerWithPopup(ele, centerCoord, nameList) {\r\n    let option = {\r\n      element: ele,\r\n      anchor: \"center\",\r\n    };\r\n    let str = ``;\r\n    if (nameList instanceof Array) {\r\n      nameList &&\r\n        nameList.length !== 0 &&\r\n        nameList.forEach((item) => {\r\n          str += `\r\n                    <p>\r\n                        <span style=\"color:#999999\">${item.name}</span>\r\n                        <span style=\"color:#555555\">${item.value}</span>\r\n                    </p>\r\n                `;\r\n        });\r\n    } else if (typeof nameList === \"string\") {\r\n      str = nameList;\r\n    } else {\r\n      str = `<p>mapInit方法内容输入有误</p>`;\r\n    }\r\n    if (centerCoord.length) {\r\n      let marker = null;\r\n      marker = new mapboxgl.Marker(option).setLngLat(centerCoord);\r\n      if (str) {\r\n        marker.setPopup(\r\n          new mapboxgl.Popup({\r\n            closeButton: false,\r\n            closeOnClick: false,\r\n          }).setHTML(str)\r\n        );\r\n      }\r\n      marker.addTo(this.map);\r\n      return marker;\r\n    }\r\n    return \"error\";\r\n  }\r\n  /**\r\n   * 给地图添加可用图标\r\n   * @param {String} imgSrc 图片src\r\n   * @param {String} imgName 图片命名\r\n   */\r\n  addImgToMap(imgSrc, imgName) {\r\n    const img = new Image();\r\n    img.src = imgSrc;\r\n    img.onload = () => {\r\n      this.map.addImage(imgName, img);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 添加通用地图图层(该方法仅限超图返回图层),返回根据当前url添加的所有图层\r\n   * @param {String} url 超图提供的加在图层的服务链接\r\n   * @param {Boolean} removeBackground 是否去除背景板\r\n   * @param {Boolean} isBasemap 是否为底图图层，相对于专题图\r\n   * @param {Boolean} visible 图层是否显示\r\n   * @param {Object} 图标配置:\r\n   *      @param {Array} Obj.iconName 图标名称数组，若输入，则根据超图数据配置将点图层转换为相应图标\r\n   *      @param {Object} Obj.layout 图层布局，补充布局属性\r\n   *      @param {Object} Obj.paint 图层绘制，补充绘制属性\r\n   */\r\n  addCommonLayer(\r\n    url,\r\n    { iconName, layout, paint },\r\n    removeBackground = true,\r\n    isBasemap = false,\r\n    visible = true\r\n  ) {\r\n    let promise = new Promise(async (resolve) => {\r\n      let res = await axios.get(url);\r\n      let mvtStyle = res.data;\r\n      let layerArr = [];\r\n      if (this.map.getSource(mvtStyle.name)) return;\r\n      // mvtStyle.sources[mvtStyle.name].tiles[0] = gisDomain + '/iserver' + mvtStyle.sources[mvtStyle.name].tiles[0].split('iserver')[1];\r\n      this.map.addSource(mvtStyle.name, mvtStyle.sources[mvtStyle.name]);\r\n      let baseLayers = mvtStyle.layers;\r\n      if (removeBackground) {\r\n        baseLayers = mvtStyle.layers.filter(\r\n          (layer) => layer.id !== \"background\"\r\n        );\r\n      } else {\r\n        baseLayers = mvtStyle.layers.map((layer) => {\r\n          if (layer.type == \"background\") layer.source = mvtStyle.name;\r\n          return layer;\r\n        });\r\n      }\r\n      if (iconName && iconName.length) {\r\n        let layoutObj = {\r\n          \"icon-image\": iconName,\r\n          \"icon-size\": [\"interpolate\", [\"linear\"], [\"zoom\"], 12, 0.8, 22, 1.1],\r\n          \"icon-padding\": 5,\r\n          \"symbol-placement\": [\"step\", [\"zoom\"], \"point\", 10, \"point\"],\r\n          \"icon-optional\": true,\r\n        };\r\n        baseLayers.forEach((layer) => {\r\n          if (!layer.layout || layer.layout.visibility == \"visible\") {\r\n            if (layer.type == \"circle\") {\r\n              layer.type = \"symbol\";\r\n              layer.layout = layout\r\n                ? Object.assign(layoutObj, layout)\r\n                : layoutObj;\r\n              layer.paint = paint ? Object.assign({}, paint) : {};\r\n            }\r\n            layer.metadata = {\r\n              ...layer.metadata,\r\n              isSMLayer: true,\r\n              isBasemap: isBasemap, // 是否是底图图层\r\n            };\r\n            layer.layout.visibility = visible ? \"visible\" : \"none\";\r\n            delete layer.maxzoom;\r\n            this.map.addLayer(layer);\r\n            //储存2d图层，供图层切换使用\r\n            this.layer2D.push(layer);\r\n            layerArr.push(layer);\r\n          }\r\n        });\r\n      } else {\r\n        baseLayers.forEach((layer) => {\r\n          if (!layer.layout || layer.layout.visibility == \"visible\") {\r\n            layer.metadata = {\r\n              ...layer.metadata,\r\n              isSMLayer: true,\r\n              isBasemap: isBasemap, // 是否是底图图层\r\n            };\r\n            layer.layout.visibility = visible ? \"visible\" : \"none\";\r\n            delete layer.maxzoom;\r\n            this.map.addLayer(layer);\r\n            this.layer2D.push(layer);\r\n            layerArr.push(layer);\r\n          }\r\n        });\r\n      }\r\n      resolve(layerArr);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * 添加3d图层（仅限超图返回图层）,返回根据当前url添加的所有图层\r\n   * @param {String} url 超图提供的加在图层的服务链接\r\n   * @param {Boolean} removeBackground 是否去除背景板\r\n   * @param {Object} 图标配置:\r\n   *      @param {Array} Obj.iconName 图标名称数组，若输入，则根据超图数据配置将点图层转换为相应图标\r\n   *      @param {Object} Obj.layout 图层布局，补充布局属性\r\n   *      @param {Object} Obj.paint 图层绘制，补充绘制属性\r\n   */\r\n  add3dLayer(url, { iconName, layout, paint }, removeBackground = true) {\r\n    let promise = new Promise(async (resolve) => {\r\n      let res = await axios.get(url);\r\n      let mvtStyle = res.data;\r\n      let layerArr = [];\r\n      // mvtStyle.sources[mvtStyle.name].tiles[0] = gisDomain + '/iserver' + mvtStyle.sources[mvtStyle.name].tiles[0].split('iserver')[1];\r\n      this.map.addSource(mvtStyle.name, mvtStyle.sources[mvtStyle.name]);\r\n      let baseLayers = mvtStyle.layers;\r\n      if (removeBackground) {\r\n        baseLayers = mvtStyle.layers.filter(\r\n          (layer) => layer.id !== \"background\"\r\n        );\r\n      } else {\r\n        baseLayers = mvtStyle.layers.map((layer) => {\r\n          if (layer.type == \"background\") layer.source = mvtStyle.name;\r\n          return layer;\r\n        });\r\n      }\r\n      baseLayers.forEach((layer) => {\r\n        if (!layer.layout || layer.layout.visibility == \"visible\") {\r\n          if (layer.type == \"fill\") {\r\n            layer.type = \"fill-extrusion\";\r\n            let paintObj = {\r\n              \"fill-extrusion-color\": layer.paint[\"fill-color\"],\r\n              \"fill-extrusion-height\": [\r\n                \"interpolate\",\r\n                [\"linear\"],\r\n                [\"zoom\"],\r\n                14,\r\n                0,\r\n                14.5,\r\n                [\"get\", \"height\"],\r\n              ],\r\n              \"fill-extrusion-opacity\": 1,\r\n            };\r\n            let layoutObj = {};\r\n            layer.layout = layout\r\n              ? Object.assign(layoutObj, layout)\r\n              : layoutObj;\r\n            layer.paint = paint ? Object.assign(paintObj, paint) : paintObj;\r\n            this.map.addLayer(layer);\r\n            //储存3d图层，供图层切换使用\r\n            this.layer3D.push(layer);\r\n            layerArr.push(layer);\r\n          } else {\r\n            if (!layer.layout || layer.layout.visibility == \"visible\") {\r\n              this.map.addLayer(layer);\r\n              this.layer2D.push(layer);\r\n              layerArr.push(layer);\r\n            }\r\n          }\r\n        }\r\n      });\r\n      resolve(layerArr);\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * 定位圈范围/画点\r\n   * @param {Array} position 范围\r\n   * @param {String} color 颜色\r\n   * @param {Number} lineWidth 线粗\r\n   * @param {Number} circleRadius 半径\r\n   * @param {Array} boldBorder 加粗(只支持二维数组)\r\n   * @param {Number} borderWidth\r\n   * @param {Array} lineDasharray 虚线密度\r\n   * @param {Boolean} isRepaint 是否重画（暂未实现）\r\n   */\r\n  paintingRange({\r\n    position = [],\r\n    color = \"#ff4a4a\",\r\n    lineWidth = 3,\r\n    circleRadius = 3,\r\n    boldBorder,\r\n    borderWidth = 5,\r\n    isRepaint = true,\r\n    lineDasharray,\r\n  }) {\r\n    // this.makeLocation(position);\r\n    // if(isRepaint){\r\n    //     this.removeRangeLayer();\r\n    // }\r\n    let features = [];\r\n    if (position instanceof Array && position[0] instanceof Array) {\r\n      let pos1 = position[0];\r\n      if (pos1 instanceof Array) {\r\n        position.forEach((line) => {\r\n          let feature;\r\n          if (getArrayGeo(line) == 2) {\r\n            feature = turf.lineString(line);\r\n            features.push(feature);\r\n          } else if (getArrayGeo(line) == 3) {\r\n            feature = turf.multiLineString(line);\r\n            features.push(feature);\r\n          } else if (getArrayGeo(line) == 4) {\r\n            feature = turf.polygonToLine(turf.multiPolygon(line));\r\n            feature.features.forEach((f) => {\r\n              features.push(f);\r\n            });\r\n          }\r\n        });\r\n        if (boldBorder instanceof Array) {\r\n          features = features.concat(\r\n            turf.lineString(boldBorder, { name: \"boldBorder\" })\r\n          );\r\n          this.addRangeLayer({\r\n            features,\r\n            color,\r\n            lineWidth,\r\n            lineDasharray,\r\n            borderWidth,\r\n            isRepaint,\r\n          });\r\n        } else {\r\n          this.addRangeLayer({\r\n            features,\r\n            color,\r\n            lineWidth,\r\n            lineDasharray,\r\n            isRepaint,\r\n          });\r\n        }\r\n      } else {\r\n        let feature = turf.lineString(position);\r\n        features.push(feature);\r\n        this.addRangeLayer({\r\n          features,\r\n          color,\r\n          lineWidth,\r\n          lineDasharray,\r\n          isRepaint,\r\n        });\r\n      }\r\n    } else if (position instanceof Array && position.length !== 0) {\r\n      let feature = turf.Point(position);\r\n      features.push(feature);\r\n      this.addRangeLayer({ features, color, circleRadius, isRepaint });\r\n    } else {\r\n      this.addRangeLayer({ features, color, isRepaint });\r\n    }\r\n  }\r\n  addRangeLayer({\r\n    features,\r\n    color,\r\n    lineWidth,\r\n    lineDasharray,\r\n    circleRadius,\r\n    borderWidth,\r\n    isRepaint,\r\n  }) {\r\n    // let that = this;\r\n    let layerId = \"rangeLayer\";\r\n    // function makeId(id = \"rangeLayer\"){\r\n    //     if(that.map.getSource(id)){\r\n    //         makeId(id++)\r\n    //     }else{\r\n    //         layerId = id;\r\n    //     }\r\n    // }\r\n    // makeId();\r\n    if (isRepaint) {\r\n      this.removeRangeLayer();\r\n    }\r\n    this.map.addSource(layerId, {\r\n      type: \"geojson\",\r\n      data: {\r\n        type: \"FeatureCollection\",\r\n        features,\r\n      },\r\n    });\r\n    if (circleRadius) {\r\n      this.map.addLayer({\r\n        id: layerId,\r\n        source: layerId,\r\n        type: \"circle\",\r\n        paint: {\r\n          \"circle-radius\": circleRadius,\r\n          \"circle-color\": color,\r\n        },\r\n      });\r\n    } else if (lineWidth) {\r\n      this.map.addLayer({\r\n        id: layerId,\r\n        source: layerId,\r\n        type: \"line\",\r\n        paint: {\r\n          \"line-color\": color,\r\n          \"line-width\": [\r\n            \"case\",\r\n            [\"==\", [\"get\", \"name\"], \"boldBorder\"],\r\n            borderWidth || 0,\r\n            lineWidth,\r\n          ],\r\n          \"line-dasharray\": lineDasharray || [],\r\n        },\r\n      });\r\n    }\r\n  }\r\n  removeRangeLayer() {\r\n    if (this.map.getLayer(\"rangeLayer\")) this.map.removeLayer(\"rangeLayer\");\r\n    if (this.map.getSource(\"rangeLayer\")) this.map.removeSource(\"rangeLayer\");\r\n  }\r\n  /**\r\n   * 地图销毁\r\n   */\r\n  destoryMap() {\r\n    this.map.remove();\r\n    if (window.mapInit) {\r\n      window.mapInit = null;\r\n    }\r\n    this.map = null;\r\n  }\r\n\r\n  /**\r\n   * 树结构深度遍历\r\n   * @param {Array} targetArr 迭代目标\r\n   * @param {String} iterationName 迭代属性的字段名\r\n   * @param {Array} targetNames 需要获取的字段名\r\n   */\r\n  iteration(targetArr = [], iterationName = \"\", targetNames = []) {\r\n    let arr = [];\r\n    let fun = function (targetArr, iterationName, targetNames) {\r\n      targetArr.forEach((item) => {\r\n        let obj = {};\r\n        targetNames.forEach((targetName) => {\r\n          obj[targetName] = item[targetName];\r\n        });\r\n        arr.push(obj);\r\n        if (item[iterationName]) {\r\n          fun(item[iterationName], iterationName, targetNames);\r\n        }\r\n      });\r\n    };\r\n    fun(targetArr, iterationName, targetNames);\r\n    return arr;\r\n  }\r\n\r\n  /**\r\n   * 图层组管理地图,增删改查\r\n   * @param {String} name 图层组名称\r\n   * @param {Object} layer mapbox图层\r\n   * @param {String} layerId 目标图层id\r\n   */\r\n  addGroupLayer(name, layer) {\r\n    if (layer && name) {\r\n      let index = -1;\r\n      if (!this.groups[name]) {\r\n        this.groups[name] = [];\r\n      }\r\n      index = this.groups[name].findIndex((item) => {\r\n        return item.id == layer.id;\r\n      });\r\n      if (index == -1) {\r\n        this.groups[name].push(layer);\r\n        this.map.addLayer(layer);\r\n      } else {\r\n        console.log(\"该图层已存在\");\r\n      }\r\n    }\r\n  }\r\n  getGroupLayer(name) {\r\n    if (name) {\r\n      return this.groups[name] ? this.groups[name] : [];\r\n    }\r\n  }\r\n  removeGroupLayer(name) {\r\n    if (name && this.groups[name]) {\r\n      this.groups[name].forEach((layer) => {\r\n        if (this.map.getLayer(layer.id)) {\r\n          this.map.removeLayer(layer.id);\r\n        }\r\n      });\r\n      this.groups[name] = [];\r\n    }\r\n  }\r\n  setGroupLayer(name, layerId, layer) {\r\n    if (name && this.groups[name] && layerId) {\r\n      let index = -1;\r\n      index = this.groups[name].findIndex((item) => {\r\n        return layerId == item.id;\r\n      });\r\n      if (index !== -1) {\r\n        this.groups[name][index] = layer;\r\n      } else {\r\n        this.addGroupLayer(name, layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 超图对象构造器\r\n   */\r\n  superMapParams(geometry) {\r\n    let superMapType = type[geometry[\"type\"]];\r\n    let params = {\r\n      points: [],\r\n      type: superMapType,\r\n    };\r\n    toXY(geometry.coordinates);\r\n    function toXY(coords) {\r\n      if (coords instanceof Array && !(coords[0] instanceof Array)) {\r\n        params.points.push({ x: coords[0], y: coords[1] });\r\n      } else if (coords instanceof Array && coords[0] instanceof Array) {\r\n        coords.map((item) => {\r\n          return toXY(item);\r\n        });\r\n      } else {\r\n        return {};\r\n      }\r\n    }\r\n    return params;\r\n  }\r\n  /**\r\n   * 超图对象解析器\r\n   */\r\n  deSuperMapParams(geometry) {}\r\n}\r\n/* eslint-enable no-console, no-unused-vars */\r\n"],"mappings":"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"}]}