{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MeterReading\\TaskDetail.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\MeterReading\\TaskDetail.vue","mtime":1705912800042},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["NavBar","Cell","Form","Field","RadioGroup","Radio","Notify","Toast","queryTaskDetail","getDict","commitTask","name","components","data","copyStatus","bookCode","planCode","userInfo","meterCodeList","meterInfoList","curMeterCode","curMeterInfo","companyDict","businessCompanyDict","waterTypeDict","meterDict","meterBrandDict","computed","disableCommit","state","cv","curVal","cr","unusualReason","undefined","methods","getTaskDetail","guestNo","then","res","company","filterDict","businessCompany","waterMeterList","length","usingWaterType","waterMeterType","waterMeterBrand","meterNum","forEach","item","push","value","text","$set","getStagingDetail","savedTasks","localStorage","getItem","allTask","JSON","parse","curTask","filter","paramList","changeMeterCode","e","arr","changeMeterInfo","onSubmit","curTime","getCurTime","uid","readingType","registerNo","meterReading","meterTime","lastReadingIndex","meterIndex","lastReadingTime","readingTime","readingPerson","notAll","map","type","duration","message","status","all","otherTasks","removeItem","setItem","stringify","$router","replace","save","saved","bore","remoteModuleNo","connectingWellNo","installAddress","add","params","queryDict","dictType","Promise","resolve","reject","detail","dict","dictValue","dictLabel","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","activated","loading","forbidClick","$route","taskId","tId"],"sources":["src/views/MeterReading/TaskDetail.vue"],"sourcesContent":["<template>\r\n  <div id='TaskDetail'>\r\n    <fm-nav-bar title='用户详情' left-arrow @click-left=\"$router.replace('/TaskIndex')\">\r\n      <!--      <template #right>-->\r\n      <!--        <i class=\"fm-icon fm-icon-scan rightIcon\" @click=\"scan\"></i>-->\r\n      <!--      </template>-->\r\n    </fm-nav-bar>\r\n    <div class='mainContainer'>\r\n      <fm-form @submit='onSubmit'>\r\n        <fm-cell-group>\r\n          <fm-cell>\r\n            <fm-field v-model='userInfo.guestNo' name='客户号' label='客户号' :readonly='true' />\r\n            <fm-field v-model='userInfo.name' name='姓名' label='姓名' :readonly='true' />\r\n            <fm-field v-model='userInfo.phoneOne' name='电话' label='电话' :readonly='true' />\r\n            <fm-field v-model='userInfo.address' name='地址' label='地址' :readonly='true' />\r\n            <fm-field v-model='userInfo.company' name='分公司' label='分公司' :readonly='true' />\r\n            <fm-field v-model='userInfo.businessCompany' name='营业所' label='营业所' :readonly='true' />\r\n          </fm-cell>\r\n          <fm-cell>\r\n            <fm-field v-model='curMeterInfo.meterNum' name='表号' label='表号'>\r\n              <template #input>\r\n                <fm-dropdown-menu :modal='false'>\r\n                  <fm-dropdown-item v-model='curMeterCode' :options='meterCodeList' @change='changeMeterCode' />\r\n                </fm-dropdown-menu>\r\n              </template>\r\n            </fm-field>\r\n            <fm-field v-model='curMeterInfo.waterMeterBrand' name='品牌' label='品牌' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.bore' name='口径' label='口径' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.waterMeterType' name='类型' label='类型' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.usingWaterType' name='用水性质' label='用水性质' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.remoteModuleNo' name='远传模块号' label='远传模块号' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.connectingWellNo' name='接驳井编号' label='接驳井编号' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.meterIndex' name='上次读数' label='上次读数' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.readingTime' name='上次抄表时间' label='上次抄表时间' :readonly='true' />\r\n            <fm-field v-model='curMeterInfo.curVal' name='本次读数' label='本次读数' :autofocus='true' type='number' required\r\n                      placeholder='请输入读数' v-show='curMeterInfo.state == 0' />\r\n            <!-- <fm-field v-model=\"curMeterInfo.costVal\" name=\"用水量\" label=\"用水量\" :readonly=\"true\" /> -->\r\n            <fm-field name='是否异常' label='是否异常'>\r\n              <template #input>\r\n                <fm-radio-group v-model='curMeterInfo.state' direction='horizontal'>\r\n                  <fm-radio name='1'>是</fm-radio>\r\n                  <fm-radio name='0'>否</fm-radio>\r\n                </fm-radio-group>\r\n              </template>\r\n            </fm-field>\r\n            <fm-field v-model='curMeterInfo.unusualReason' name='异常原因' label='异常原因' required placeholder='请输入异常原因'\r\n                      v-show='curMeterInfo.state == 1' @change='changeMeterInfo' />\r\n          </fm-cell>\r\n        </fm-cell-group>\r\n        <div class='btn-group'>\r\n          <fm-button round block type='primary' native-type='submit' v-if='copyStatus != 2' :disabled='disableCommit'>\r\n            提交\r\n          </fm-button>\r\n          <fm-button round block type='primary' @click='save' v-if='copyStatus == 0'>暂存</fm-button>\r\n        </div>\r\n      </fm-form>\r\n    </div>\r\n    <!-- 增加按钮 -->\r\n    <!--    <div class=\"bottom\" @click=\"add\" v-if=\"curMeterInfo.state == 1\">-->\r\n    <!--      <i class=\"fm-icon fm-icon-plus\"></i>-->\r\n    <!--    </div>-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  NavBar,\r\n  Cell,\r\n  Form,\r\n  Field,\r\n  RadioGroup,\r\n  Radio,\r\n  Notify,\r\n  Toast\r\n} from 'fawkes-mobile-lib'\r\nimport { queryTaskDetail, getDict, commitTask } from './api'\r\n\r\nexport default {\r\n  name: 'RevenueTaskDetail',\r\n  components: {\r\n    [NavBar.name]: NavBar,\r\n    [Cell.name]: Cell,\r\n    [Form.name]: Form,\r\n    [Field.name]: Field,\r\n    [RadioGroup.name]: RadioGroup,\r\n    [Radio.name]: Radio,\r\n    [Notify.name]: Notify,\r\n    [Toast.name]: Toast\r\n  },\r\n  data() {\r\n    return {\r\n      copyStatus: '0',\r\n      bookCode: null,\r\n      planCode: null,\r\n      userInfo: {},\r\n      meterCodeList: [],\r\n      meterInfoList: [],\r\n      curMeterCode: '',\r\n      curMeterInfo: {},\r\n      //字典\r\n      companyDict: [],\r\n      businessCompanyDict: [],\r\n      waterTypeDict: [],\r\n      meterDict: [],\r\n      meterBrandDict: []\r\n    }\r\n  },\r\n  computed: {\r\n    disableCommit() {\r\n      let state = this.curMeterInfo.state\r\n      let cv = this.curMeterInfo.curVal\r\n      let cr = this.curMeterInfo.unusualReason\r\n      if (state == 0) {\r\n        if (cv == '' || cv == null || cv == undefined) {\r\n          return true\r\n        }\r\n      } else {\r\n        if (cr == '' || cr == null || cr == undefined) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //扫描条形码\r\n    // scan() {\r\n    //   if (typeof yuanchu != 'undefined') {\r\n    //     yuanchu.scanner.openScanner((res) => {\r\n    //       if (res) {\r\n    //         // 根据imei号查询户表信息\r\n    //         console.log(res)\r\n    //         // getTaskDetail(res.data.guestNo)\r\n    //       }\r\n    //     })\r\n    //   } else {\r\n    //   }\r\n    // },\r\n    getTaskDetail(guestNo) {\r\n      this.userInfo = {}\r\n      this.curMeterCode = ''\r\n      this.meterCodeList = []\r\n      this.curMeterInfo = {}\r\n      this.meterInfoList = []\r\n      queryTaskDetail({ guestNo }).then((res) => {\r\n        if (res.data) {\r\n          this.userInfo = res.data\r\n          this.userInfo.company = this.filterDict(\r\n            'revenue_company',\r\n            this.userInfo.company\r\n          )\r\n          this.userInfo.businessCompany = this.filterDict(\r\n            'place_of_business',\r\n            this.userInfo.businessCompany\r\n          )\r\n          let data = res.data.waterMeterList\r\n          if (data.length > 0) {\r\n            this.meterInfoList = data\r\n            this.curMeterInfo = data[0]\r\n            this.curMeterInfo.usingWaterType = this.filterDict(\r\n              'water_use_type',\r\n              this.curMeterInfo.usingWaterType\r\n            )\r\n            this.curMeterInfo.waterMeterType = this.filterDict(\r\n              'water_meter_type',\r\n              this.curMeterInfo.waterMeterType\r\n            )\r\n            this.curMeterInfo.waterMeterBrand = this.filterDict(\r\n              'water_meter_brand',\r\n              this.curMeterInfo.waterMeterBrand\r\n            )\r\n            this.curMeterCode = data[0].meterNum\r\n            data.forEach((item) => {\r\n              this.meterCodeList.push({\r\n                value: item.meterNum,\r\n                text: item.meterNum\r\n              })\r\n            })\r\n          }\r\n        }\r\n        this.$set(this.curMeterInfo, 'state', '0')\r\n        this.$set(this.curMeterInfo, 'unusualReason', '')\r\n      })\r\n    },\r\n    //暂存加载信息\r\n    getStagingDetail(guestNo) {\r\n      this.userInfo = {}\r\n      this.curMeterCode = ''\r\n      this.meterCodeList = []\r\n      this.curMeterInfo = {}\r\n      this.meterInfoList = []\r\n      queryTaskDetail({ guestNo }).then((res) => {\r\n        if (res.data) {\r\n          this.userInfo = res.data\r\n          this.userInfo.company = this.filterDict(\r\n            'revenue_company',\r\n            this.userInfo.company\r\n          )\r\n          this.userInfo.businessCompany = this.filterDict(\r\n            'place_of_business',\r\n            this.userInfo.businessCompany\r\n          )\r\n          let savedTasks = localStorage.getItem('savedTasks')\r\n          let allTask = savedTasks ? JSON.parse(savedTasks) : []\r\n          let curTask = allTask.filter((item) => {\r\n            return item.planCode == this.planCode\r\n          })\r\n          let data = curTask[0].paramList\r\n          if (data.length > 0) {\r\n            this.meterInfoList = data\r\n            this.curMeterInfo = data[0]\r\n            this.curMeterCode = data[0].meterNum\r\n            data.forEach((item) => {\r\n              this.meterCodeList.push({\r\n                value: item.meterNum,\r\n                text: item.meterNum\r\n              })\r\n            })\r\n          }\r\n        }\r\n\r\n      })\r\n    },\r\n    //点击水表编号切换水表\r\n    changeMeterCode(e) {\r\n      let arr = this.meterInfoList.filter((item) => {\r\n        return item.meterNum == this.curMeterCode\r\n      })\r\n      this.curMeterInfo = arr[0]\r\n      let state = this.curMeterInfo.state ? this.curMeterInfo.state : '0'\r\n      let unusualReason = this.curMeterInfo.unusualReason\r\n        ? this.curMeterInfo.unusualReason\r\n        : ''\r\n      this.$set(this.curMeterInfo, 'state', state)\r\n      this.$set(this.curMeterInfo, 'unusualReason', unusualReason)\r\n      this.curMeterInfo.usingWaterType = this.filterDict(\r\n        'water_use_type',\r\n        this.curMeterInfo.usingWaterType\r\n      )\r\n      this.curMeterInfo.waterMeterType = this.filterDict(\r\n        'water_meter_type',\r\n        this.curMeterInfo.waterMeterType\r\n      )\r\n      this.curMeterInfo.waterMeterBrand = this.filterDict(\r\n        'water_meter_brand',\r\n        this.curMeterInfo.waterMeterBrand\r\n      )\r\n    },\r\n    //输入本次读数后计算用水量\r\n    /* checkCostVal() {\r\n      let lastVal =\r\n        this.curMeterInfo.lastVal == ''\r\n          ? 0\r\n          : parseFloat(this.curMeterInfo.lastVal)\r\n      let curVal =\r\n        this.curMeterInfo.curVal == ''\r\n          ? 0\r\n          : parseFloat(this.curMeterInfo.curVal)\r\n      let coseVal = curVal - lastVal\r\n      this.curMeterInfo.costVal = coseVal\r\n      if (coseVal < 0) {\r\n        this.curMeterInfo.state = '1'\r\n      }\r\n      this.meterInfoList.forEach((item) => {\r\n        if (item.registerNo == this.curMeterCode) {\r\n          item = this.curMeterInfo\r\n        }\r\n      })\r\n    }, */\r\n    changeMeterInfo() {\r\n      this.meterInfoList.forEach((item) => {\r\n        if (item.meterNum == this.curMeterCode) {\r\n          item = this.curMeterInfo\r\n        }\r\n      })\r\n    },\r\n    onSubmit() {\r\n      let paramList = []\r\n      let curTime = this.getCurTime()\r\n      let uid = localStorage.getItem('cs_userId')\r\n      this.meterInfoList.forEach((item) => {\r\n        paramList.push({\r\n          readingType: 'CB',\r\n          registerNo: item.registerNo,\r\n          meterReading: item.state == '0' ? item.curVal : null,\r\n          meterTime: curTime,\r\n          planCode: this.planCode,\r\n          bookCode: this.bookCode,\r\n          lastReadingIndex: item.meterIndex,\r\n          lastReadingTime: item.readingTime,\r\n          state: item.state == '0' ? 'NORMAL' : 'ABNORMAL',\r\n          unusualReason: item.unusualReason,\r\n          readingPerson: uid\r\n        })\r\n      })\r\n      let notAll = false\r\n      this.meterInfoList.map((item) => {\r\n        if (!item.state) {\r\n          notAll = true\r\n          Notify({\r\n            type: 'warning',\r\n            duration: 1000,\r\n            message: '请完善所有水表信息'\r\n          })\r\n        } else {\r\n          if (\r\n            item.state == '0' &&\r\n            (item.curVal == '' ||\r\n              item.curVal == null ||\r\n              item.curVal == undefined)\r\n          ) {\r\n            notAll = true\r\n            Notify({\r\n              type: 'warning',\r\n              duration: 1000,\r\n              message: '请完善所有水表信息'\r\n            })\r\n          }\r\n          if (\r\n            item.state == '1' &&\r\n            (item.unusualReason == '' ||\r\n              item.unusualReason == null ||\r\n              item.unusualReason == undefined)\r\n          ) {\r\n            notAll = true\r\n            Notify({\r\n              type: 'warning',\r\n              duration: 1000,\r\n              message: '请填写异常原因'\r\n            })\r\n          }\r\n        }\r\n      })\r\n      if (!notAll) {\r\n        commitTask(paramList).then((res) => {\r\n          if (res.status) {\r\n            if (this.copyStatus == 0) {\r\n              let all = localStorage.getItem('myDownloadPlan')\r\n              let allTask = all ? JSON.parse(all) : []\r\n              let otherTasks = allTask.filter((item) => {\r\n                return item.planCode != this.planCode\r\n              })\r\n              localStorage.removeItem('myDownloadPlan')\r\n              localStorage.setItem('myDownloadPlan', JSON.stringify(otherTasks))\r\n            } else {\r\n              let all = localStorage.getItem('savedTasks')\r\n              let allTask = all ? JSON.parse(all) : []\r\n              let otherTasks = allTask.filter((item) => {\r\n                return item.planCode != this.planCode\r\n              })\r\n              localStorage.removeItem('savedTasks')\r\n              localStorage.setItem('savedTasks', JSON.stringify(otherTasks))\r\n            }\r\n            Notify({ type: 'success', duration: 500, message: '提交成功' })\r\n            this.$router.replace({\r\n              name: 'TaskIndex'\r\n            })\r\n          } else {\r\n            Notify({ type: 'error', duration: 500, message: '提交失败' })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    save() {\r\n      let all = localStorage.getItem('myDownloadPlan')\r\n      let saved = localStorage.getItem('savedTasks')\r\n      let allTask = all ? JSON.parse(all) : []\r\n      let savedTasks = saved ? JSON.parse(saved) : []\r\n      let curTask = allTask.filter((item) => {\r\n        return item.planCode == this.planCode\r\n      })\r\n      let otherTasks = allTask.filter((item) => {\r\n        return item.planCode != this.planCode\r\n      })\r\n      let paramList = []\r\n      this.meterInfoList.forEach((item) => {\r\n        paramList.push({\r\n          waterMeterBrand: item.waterMeterBrand,\r\n          bore: item.bore,\r\n          remoteModuleNo: item.remoteModuleNo,\r\n          meterIndex: item.meterIndex,\r\n          connectingWellNo: item.connectingWellNo,\r\n          usingWaterType: item.usingWaterType,\r\n          installAddress: item.installAddress,\r\n          waterMeterType: item.waterMeterType,\r\n          readingTime: item.readingTime,\r\n          meterNum: item.meterNum,\r\n          registerNo: item.registerNo,\r\n          curVal: item.curVal,\r\n          planCode: this.planCode,\r\n          bookCode: this.bookCode,\r\n          lastReadingIndex: item.meterIndex,\r\n          lastReadingTime: item.readingTime,\r\n          state: item.state,\r\n          unusualReason: item.unusualReason\r\n        })\r\n      })\r\n      curTask[0].paramList = paramList\r\n      savedTasks.push(...curTask)\r\n      localStorage.removeItem('myDownloadPlan')\r\n      localStorage.removeItem('savedTasks')\r\n      localStorage.setItem('myDownloadPlan', JSON.stringify(otherTasks))\r\n      localStorage.setItem('savedTasks', JSON.stringify(savedTasks))\r\n      Notify({ type: 'success', duration: 500, message: '暂存成功' })\r\n      this.$router.replace({\r\n        name: 'TaskIndex'\r\n      })\r\n    },\r\n    /*打开新增异常工单页面*/\r\n    add() {\r\n      this.$router.push({\r\n        name: 'CommonOneFormIndex',\r\n        params: { type: 'add' }\r\n      })\r\n    },\r\n    //获取类型所有字典\r\n    queryDict(dictType) {\r\n      return new Promise((resolve, reject) => {\r\n        getDict(dictType).then((res) => {\r\n          if (res.data) {\r\n            resolve(res.data)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    //过滤字典\r\n    filterDict(type, detail) {\r\n      if (detail !== null && detail !== '' && detail !== undefined) {\r\n        let dict = []\r\n        if (type == 'revenue_company') {\r\n          dict = this.companyDict\r\n        } else if (type == 'place_of_business') {\r\n          dict = this.businessCompanyDict\r\n        } else if (type == 'water_use_type') {\r\n          dict = this.waterTypeDict\r\n        } else if (type == 'water_meter_type') {\r\n          dict = this.meterDict\r\n        } else if (type == 'water_meter_brand') {\r\n          dict = this.meterBrandDict\r\n        } else {\r\n          dict = []\r\n        }\r\n        return dict.filter((item) => item.dictValue === detail)[0].dictLabel\r\n      }\r\n      return ''\r\n    },\r\n    //获取当前时间\r\n    getCurTime() {\r\n      let date = new Date()\r\n      let year = date.getFullYear()\r\n      let month = date.getMonth() + 1\r\n      let day = date.getDate()\r\n      let hour = date.getHours()\r\n      let minute = date.getMinutes()\r\n      let second = date.getSeconds()\r\n      let curTime =\r\n        year +\r\n        '-' +\r\n        (month >= 10 ? month : '0' + month) +\r\n        '-' +\r\n        (day >= 10 ? day : '0' + day) +\r\n        ' ' +\r\n        (hour >= 10 ? hour : '0' + hour) +\r\n        ':' +\r\n        (minute >= 10 ? minute : '0' + minute) +\r\n        ':' +\r\n        second\r\n      return curTime\r\n    }\r\n  },\r\n\r\n  async activated() {\r\n    Toast.loading({\r\n      message: '加载中...',\r\n      forbidClick: true\r\n    })\r\n    this.copyStatus = this.$route.params.type\r\n    this.planCode = this.$route.params.planCode\r\n    this.bookCode = this.$route.params.bookCode\r\n    let taskId = this.$route.params.tId\r\n    this.companyDict = await this.queryDict('revenue_company')\r\n    this.businessCompanyDict = await this.queryDict('place_of_business')\r\n    this.waterTypeDict = await this.queryDict('water_use_type')\r\n    this.meterDict = await this.queryDict('water_meter_type')\r\n    this.meterBrandDict = await this.queryDict('water_meter_brand')\r\n    if (this.copyStatus == 1) {\r\n      this.getStagingDetail(taskId)\r\n    } else {\r\n      this.getTaskDetail(taskId)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n#TaskDetail {\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: #ecf4ff !important;\r\n\r\n  /deep/ .fm-nav-bar__content {\r\n    background-color: #0676fd !important;\r\n    height: 1.8rem;\r\n  }\r\n\r\n  /deep/ .fm-nav-bar__title {\r\n    color: #ffffff !important;\r\n  }\r\n\r\n  /deep/ .fm-nav-bar .fm-icon {\r\n    color: #ffffff !important;\r\n  }\r\n\r\n  /deep/ .fm-cell {\r\n    background-color: #ecf4ff !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu {\r\n    width: 100% !important;\r\n    background-color: #ecf4ff !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu__bar {\r\n    background-color: #ecf4ff !important;\r\n    box-shadow: none !important;\r\n  }\r\n\r\n  /deep/ .fm-dropdown-menu__item {\r\n    align-items: flex-start;\r\n    justify-content: left !important;\r\n  }\r\n\r\n  .rightIcon {\r\n    color: #fff;\r\n    font-size: 55px;\r\n  }\r\n\r\n  .btn-group {\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    margin: 16px 16px 200px;\r\n  }\r\n\r\n  .bottom {\r\n    position: fixed;\r\n    bottom: 300px;\r\n    right: 44px;\r\n    background-color: #027aff;\r\n    width: 102px;\r\n    height: 102px;\r\n    line-height: 102px;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    z-index: 1000;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}