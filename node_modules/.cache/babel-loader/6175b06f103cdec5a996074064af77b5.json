{"remainingRequest":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\FormCenter\\components\\FlowApproval\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\src\\views\\FormCenter\\components\\FlowApproval\\index.vue","mtime":1705912800021},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Code\\Project\\WL\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CURRENT_ROW","REJECT_TASK_KEY","SET_REJECT_TASK_KEY","Cell","Dialog","Toast","CellGroup","Field","Button","getButtonInfo","comfirm","backDlg","getTaskKey","processAbandon","name","components","Component","props","submitURL","type","String","default","entityName","urlAndEntity","Object","formData","detailParamList","Array","modelKey","beforeSubmit","Function","checkRules","afterSubmit","aftereReject","isBeforeSubmit","Boolean","data","comment","isDisable","buttonList","show","rejectList","currentNode","currentKey","stageFlag","computed","row","$store","state","rejectTaskKey","watch","mounted","_this$row","taskId","commit","methods","then","res","_buttonInfo$taskButto","buttonInfo","JSON","parse","taskButtonList","length","sort","a","b","sortIcon","buttonType","item","clickHandler","confirmDlg","abandonTask","draftDlg","confirm","url","formProcessParam","bizId","formBizId","approval","formKey","processInstanceId","variable","entityObject","status","setTimeout","clear","$router","push","message","_item$targetNode","_item$targetNode2","targetNode","title","targetKey","toString","fail","catch","showRejectNodeList","replace","flowData","err","console","error","rejectNode","filter","task","includes","taskKey","finally","getRejectNode","getNode"],"sources":["src/views/FormCenter/components/FlowApproval/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"approve-textarea\">\r\n    <fm-cell-group label-width=\"100px\" :gutter=\"0\">\r\n      <fm-cell title=\"当前环节\" value-align=\"right\" class=\"approve-textarea__cell\">\r\n        <div class=\"black\">{{ row.taskName }}</div>\r\n      </fm-cell>\r\n\r\n      <div class=\"approve-title\"><span class=\"label-before\"></span>审批意见</div>\r\n      <fm-field\r\n        class=\"approve-textarea-entrust\"\r\n        type=\"textarea\"\r\n        placeholder=\"请输入审批意见\"\r\n        show-word-limit\r\n        :maxlength=\"300\"\r\n        v-model=\"comment\"\r\n      ></fm-field>\r\n      <div class=\"btn-area approve-btn-area\">\r\n        <fm-button\r\n          class=\"btn\"\r\n          v-for=\"(item, index) in buttonList\"\r\n          :key=\"index\"\r\n          :disabled=\"isDisable\"\r\n          :type=\"buttonType(item)\"\r\n          @click=\"clickHandler(item)\"\r\n        >\r\n          {{ item.text }}\r\n        </fm-button>\r\n      </div>\r\n      <fm-dialog :visible.sync=\"show\" title=\"选择退回节点\" show-cancel-button @confirm=\"getNode()\">\r\n        <div v-for=\"(item, index) in rejectList\" :key=\"index\" class=\"reject-node-item\">\r\n          <div\r\n            @click=\"getRejectNode(item)\"\r\n            :class=\"[rejectTaskKey == item.taskKey ? 'hover' : '', 'reject-node']\"\r\n          >\r\n            {{ item.taskName }}\r\n          </div>\r\n        </div>\r\n      </fm-dialog>\r\n    </fm-cell-group>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { CURRENT_ROW, REJECT_TASK_KEY } from '@/store/State/stateTypes'\r\nimport { SET_REJECT_TASK_KEY } from '@/store/Mutation/mutationTypes'\r\nimport { Cell, Dialog, Toast, CellGroup, Field, Button } from 'fawkes-mobile-lib'\r\nimport { getButtonInfo, comfirm, backDlg, getTaskKey, processAbandon } from './api'\r\nexport default {\r\n  name: 'FlowApproval',\r\n  components: {\r\n    [Cell.name]: Cell,\r\n    [CellGroup.name]: CellGroup,\r\n    [Toast.name]: Toast,\r\n    [Field.name]: Field,\r\n    [Dialog.Component.name]: Dialog.Component,\r\n    [Button.name]: Button,\r\n  },\r\n  props: {\r\n    submitURL: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    entityName: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    urlAndEntity: {\r\n      type: Object,\r\n      default() {},\r\n    },\r\n    formData: {\r\n      type: Object,\r\n      default() {},\r\n    },\r\n    detailParamList: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      },\r\n    },\r\n    modelKey: {\r\n      type: String,\r\n      default() {\r\n        return ''\r\n      },\r\n    },\r\n    beforeSubmit: {\r\n      type: Function,\r\n      default: function () {},\r\n    },\r\n    // 校验规则，默认不检查\r\n    checkRules: {\r\n      type: Function,\r\n      default: function () {\r\n        return true\r\n      },\r\n    },\r\n    afterSubmit: {\r\n      type: Function,\r\n      default: function () {},\r\n    },\r\n    aftereReject: {\r\n      type: Function,\r\n      default: function () {},\r\n    },\r\n    isBeforeSubmit: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      comment: '', // 审批意见\r\n      isDisable: false,\r\n      buttonList: [],\r\n      show: false,\r\n      rejectList: [], //流程退回的节点列表\r\n      currentNode: '',\r\n      currentKey: '',\r\n      stageFlag: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    row() {\r\n      // 页面中使用row来指代当前记录\r\n      return this.$store.state[CURRENT_ROW]\r\n    },\r\n    rejectTaskKey() {\r\n      return this.$store.state[REJECT_TASK_KEY]\r\n    },\r\n  },\r\n  watch: {},\r\n  mounted() {\r\n    if (this?.row?.taskId) {\r\n      this.getButtonInfo()\r\n    }\r\n\r\n    this.$store.commit(SET_REJECT_TASK_KEY, '')\r\n  },\r\n  methods: {\r\n    // 获取流程设计中的按钮信息\r\n    getButtonInfo() {\r\n      getButtonInfo({\r\n        taskId: this.row.taskId,\r\n      }).then((res) => {\r\n        if (res.data) {\r\n          let buttonInfo = JSON.parse(res.data.buttonList)\r\n          if (buttonInfo?.taskButtonList?.length) {\r\n            this.buttonList = buttonInfo.taskButtonList.sort(\r\n              (a, b) => this.sortIcon(b) - this.sortIcon(a)\r\n            )\r\n          } else {\r\n            this.buttonList = buttonInfo.sort((a, b) => this.sortIcon(b) - this.sortIcon(a))\r\n          }\r\n        }\r\n      })\r\n    },\r\n    buttonType(item) {\r\n      switch (item.type) {\r\n        case 'submit':\r\n          return 'primary'\r\n        case 'saveDraft':\r\n          return 'default'\r\n        case 'reject':\r\n          return 'default'\r\n        default:\r\n          return ''\r\n      }\r\n    },\r\n    sortIcon(item) {\r\n      switch (item.type) {\r\n        case 'submit':\r\n          return 1\r\n        case 'saveDraft':\r\n          return 2\r\n        case 'reject':\r\n          return 3\r\n        case 'abandon':\r\n          return 4\r\n        case 'addCountersignee':\r\n          return 5\r\n        case 'edit':\r\n          return 6\r\n        case 'circulate':\r\n          return 7\r\n        default:\r\n          return 8\r\n      }\r\n    },\r\n    clickHandler(item) {\r\n      if (item.type == 'submit') {\r\n        this.confirmDlg()\r\n      } else if (item.type == 'reject') {\r\n        this.backDlg(item)\r\n      } else if (item.type == 'abandon') {\r\n        this.abandonTask()\r\n      } else {\r\n        this.draftDlg()\r\n      }\r\n    },\r\n    // 流程的提交\r\n    confirmDlg() {\r\n      this.stageFlag = 0\r\n      // 表单提交前校验\r\n      if (this.checkRules()) {\r\n        this.beforeSubmit()\r\n        this.confirm()\r\n      }\r\n    },\r\n    // 表单提交方法\r\n    confirm() {\r\n      this.isDisable = true\r\n      let url = this.submitURL\r\n      let formProcessParam = {\r\n        taskId: this.row.taskId,\r\n        bizId: this.row.formBizId,\r\n        approval: '',\r\n        comment: this.comment,\r\n        stageFlag: this.stageFlag,\r\n        formKey: this.row.formKey,\r\n        modelKey: this.modelKey,\r\n        processInstanceId: this.row.processInstanceId,\r\n        variable: this.formData,\r\n      }\r\n      let data = {\r\n        detailParamList: this.detailParamList,\r\n        entityName: this.entityName,\r\n        entityObject: this.formData,\r\n        formProcessParam: formProcessParam,\r\n      }\r\n      comfirm(url, data).then((res) => {\r\n        if (res.status) {\r\n          if (this.stageFlag == 0) {\r\n            this.afterSubmit()\r\n            Toast('审批成功', 'middle')\r\n          } else {\r\n            Toast('暂存成功', 'middle')\r\n          }\r\n          setTimeout(() => {\r\n            Toast.clear()\r\n            this.$router.push('/todo?refresh=true')\r\n          }, 1000)\r\n        } else {\r\n          Toast(res.message, 'middle')\r\n        }\r\n      })\r\n    },\r\n    // 流程退回\r\n    backDlg(item) {\r\n      // 只有一个退回节点时，直接退回\r\n      if (item?.targetNode?.length == 1) {\r\n        Dialog.confirm({\r\n          // 组件除show外的属性\r\n          title: '提示',\r\n          message: '是否要执行退回操作?',\r\n        })\r\n          .then(() => {\r\n            this.isDisable = true\r\n            backDlg({\r\n              taskId: this.row.taskId,\r\n              bizId: '',\r\n              targetKey: this.targetNode.toString(), //目前的流程没有做回退任意节点，回退数组中只取第一个人\r\n              comment: this.comment || '退回',\r\n            }).then((res) => {\r\n              if (res.status) {\r\n                this.aftereReject(this.targetNode)\r\n                Toast('退回成功', 'middle')\r\n                setTimeout(() => {\r\n                  Toast.clear()\r\n                  this.$router.push('/todo?refresh=true')\r\n                }, 1000)\r\n              } else {\r\n                Toast.fail(res.message)\r\n              }\r\n              setTimeout(() => {}, 2000)\r\n            })\r\n          })\r\n          .catch(() => {})\r\n      } else if (item?.targetNode?.length > 1) {\r\n        this.showRejectNodeList(item.targetNode)\r\n        // 多个\r\n        // this.show = true\r\n      }\r\n    },\r\n    // 表单暂存\r\n    draftDlg() {\r\n      if (this.comment.replace(/\\s+/g, '').length == 0) {\r\n        this.comment = '暂存'\r\n      }\r\n      this.stageFlag = 1\r\n      this.beforeSubmit()\r\n      this.confirm()\r\n    },\r\n    abandonTask() {\r\n      Dialog.confirm({\r\n        // 组件除show外的属性\r\n        title: '提示',\r\n        message: '是否要执行废弃操作?',\r\n      })\r\n        .then(() => {\r\n          const flowData = {\r\n            taskId: this.row.taskId,\r\n            bizId: this.bizId,\r\n            comment: this.comment,\r\n            formKey: this.formKey,\r\n          }\r\n          processAbandon(flowData)\r\n            .then((res) => {\r\n              if (res.status) {\r\n                Toast('废弃成功', 'middle')\r\n                setTimeout(() => {\r\n                  Toast.clear()\r\n                  this.$router.push('/todo?refresh=true')\r\n                }, 1000)\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.error(err)\r\n            })\r\n        })\r\n        .catch(() => {})\r\n    },\r\n    showRejectNodeList(rejectNode) {\r\n      getTaskKey({\r\n        taskId: this.row.taskId,\r\n      })\r\n        .then((res) => {\r\n          if (res.status) {\r\n            this.rejectList = res.data.filter((task) => rejectNode.includes(task.taskKey))\r\n          }\r\n        })\r\n        .finally(() => {\r\n          this.show = true\r\n        })\r\n    },\r\n    getRejectNode(item) {\r\n      this.currentKey = item.taskKey\r\n      this.$store.commit(SET_REJECT_TASK_KEY, this.currentKey)\r\n      this.currentNode = item.taskKey\r\n    },\r\n    getNode() {\r\n      this.isDisable = true\r\n      backDlg({\r\n        taskId: this.row.taskId,\r\n        bizId: '',\r\n        targetKey: this.currentNode,\r\n        comment: this.comment || '退回',\r\n      }).then((res) => {\r\n        if (res.status) {\r\n          this.aftereReject(this.currentNode)\r\n          Toast('退回成功', 'middle')\r\n          setTimeout(() => {\r\n            Toast.clear()\r\n            this.$router.push('/todo?refresh=true')\r\n          }, 1000)\r\n        } else {\r\n          Toast.fail(res.message)\r\n        }\r\n        setTimeout(() => {}, 2000)\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n.black {\r\n  font-size: 28px;\r\n  font-family: PingFangSC-Regular, PingFang SC;\r\n  font-weight: 400;\r\n  /*color: rgba(38, 42, 52, 1);*/\r\n  color: #888;\r\n  word-break: break-all;\r\n}\r\n.approve-title {\r\n  font-size: 32px;\r\n  font-family: PingFangSC-Regular, PingFang SC;\r\n  font-weight: 400;\r\n  color: rgba(75, 75, 75, 1);\r\n  line-height: 60px;\r\n}\r\n.approve-textarea {\r\n  background-color: #fff;\r\n}\r\n.approve-textarea /deep/ .fm-cell {\r\n  // margin-top: 60px !important;\r\n  padding: 28px 16px !important;\r\n}\r\n.approve-textarea-entrust /deep/ .fm-cell__value {\r\n  /*background: #eeeeee;*/\r\n  border: 1px solid #bbbbbb;\r\n  opacity: 0.5;\r\n  padding: 20px 40px;\r\n  overflow-y: scroll !important;\r\n  max-height: 400px;\r\n}\r\n/deep/ .fm-field--min-height .fm-field__control {\r\n  min-height: 360px;\r\n}\r\n.approve-textarea /deep/ .fm-field__word-limit {\r\n  margin-top: 0px;\r\n}\r\n.btn-area {\r\n  position: relative;\r\n  width: 100%;\r\n  margin-top: 35%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.btn {\r\n  float: left;\r\n  font-size: 28px;\r\n  height: 90px;\r\n  line-height: 90px;\r\n  width: 280px;\r\n  text-align: center;\r\n  margin: 16px;\r\n}\r\n.general-btn {\r\n  font-size: 32px;\r\n  color: #ffffff;\r\n  background-color: #4d86ff;\r\n  border-radius: 4px;\r\n  font-family: PingFangSC-Medium;\r\n  font-weight: 500;\r\n  width: 100%;\r\n}\r\n.back-btn {\r\n  font-size: 28px;\r\n  border: 1px solid #fbc4c4;\r\n  border-radius: 2px;\r\n  color: #f56c6c;\r\n  background: #fef0f0;\r\n  width: 100%;\r\n}\r\n// ----- 退回节点对话框 start -----\r\n.reject-node-item:last-child {\r\n  margin-bottom: 32px;\r\n}\r\n.reject-node {\r\n  text-align: center;\r\n  padding-top: 48px;\r\n}\r\n.reject-node.hover {\r\n  color: #4d86ff;\r\n}\r\n// ----- 退回节点对话框 end -----\r\n</style>\r\n"],"mappings":"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"}]}