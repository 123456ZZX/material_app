{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\InspectionComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\MaintenanceStatistics\\components\\InspectionComponent.vue","mtime":1708928163384},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICogYXMgQXBpIGZyb20gJy4uL2FwaS5qcyc7CmltcG9ydCBDaGFuZ2VCaXpEYXRlIGZyb20gJy4vQ2hhbmdlQml6RGF0ZS52dWUnOyAvLyDml6XmnJ/pgInmi6nnu4Tku7YKaW1wb3J0IFNlbGVjdENvbXBvbmVudCBmcm9tICcuL1NlbGVjdENvbXBvbmVudC52dWUnOyAvLyDkuIvmi4npgInmi6nmoYYKLy8g5Zu+6KGoCmltcG9ydCAqIGFzIGVjaGFydHMgZnJvbSAnZWNoYXJ0cyc7CmltcG9ydCBfY2xvbmVEZWVwIGZyb20gJ2xvZGFzaC9jbG9uZURlZXAnOwppbXBvcnQgeyBjaGFydE9wdGlvbiB9IGZyb20gJy4vY2hhcnRPcHRpb24uanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0luc3BlY3Rpb25Db21wb25lbnQnLAogIGNvbXBvbmVudHM6IHsKICAgIENoYW5nZUJpekRhdGUsCiAgICBTZWxlY3RDb21wb25lbnQKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRlVHlwZTogJ+aXpScsCiAgICAgIG5ldFdvcmtEYXRlOiAnJywKICAgICAgaW5zcERhdGE6IFtdLAogICAgICAvLyDlt6Hmo4Dnu5/orqHmlbDmja4KICAgICAgY2FyZERhdGFDb25maWc6IFt7CiAgICAgICAgdGV4dDogJ+WcqOe6v+S6uuaVsCcsCiAgICAgICAgY29udGVudE51bTogJycsCiAgICAgICAgdW5pdDogJ+S6uicsCiAgICAgICAgZmllbGQ6ICdBQUFBQUFBQUFBJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+i9puW3oemHjOeoiycsCiAgICAgICAgY29udGVudE51bTogJycsCiAgICAgICAgdW5pdDogJ2ttJywKICAgICAgICBmaWVsZDogJ0JCQkJCQkJCQkInCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn6L2m5beh6KaG55uW546HJywKICAgICAgICBjb250ZW50TnVtOiAnJywKICAgICAgICB1bml0OiAnJScsCiAgICAgICAgZmllbGQ6ICdDQ0NDQ0NDQ0NDJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+S+m+awtOmYgOmXqCcsCiAgICAgICAgY29udGVudE51bTogJycsCiAgICAgICAgdW5pdDogJ+S4qicsCiAgICAgICAgZmllbGQ6ICdEREREREREREREJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+mbqOawtOaOkuaUvuWPoycsCiAgICAgICAgY29udGVudE51bTogJycsCiAgICAgICAgdW5pdDogJ+S4qicsCiAgICAgICAgZmllbGQ6ICdFRUVFRUVFRUVFJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ+axoeawtOaOpemps+S6lScsCiAgICAgICAgY29udGVudE51bTogJycsCiAgICAgICAgdW5pdDogJ+S4qicsCiAgICAgICAgZmllbGQ6ICdGRkZGRkZGRkYnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAn5YaN55Sf5rC05o6S5pS+5Y+jJywKICAgICAgICBjb250ZW50TnVtOiAnJywKICAgICAgICB1bml0OiAn5LiqJywKICAgICAgICBmaWVsZDogJ0dHR0dHR0dHR0cnCiAgICAgIH1dLAogICAgICBzZWxWYWx1ZTogJ+S+m+awtOmYgOmXqCcsCiAgICAgIGluc3BUeXBlTGlzdDogW3sKICAgICAgICB0eXBlOiAxLAogICAgICAgIG5hbWU6ICfkvpvmsLTpmIDpl6gnLAogICAgICAgIHZhbHVlOiAn5L6b5rC06ZiA6ZeoJwogICAgICB9LCB7CiAgICAgICAgdHlwZTogMSwKICAgICAgICBuYW1lOiAn6Zuo5rC05o6S5pS+5Y+jJywKICAgICAgICB2YWx1ZTogJ+mbqOawtOaOkuaUvuWPoycKICAgICAgfSwgewogICAgICAgIHR5cGU6IDEsCiAgICAgICAgbmFtZTogJ+axoeawtOaOpemps+S6lScsCiAgICAgICAgdmFsdWU6ICfmsaHmsLTmjqXpqbPkupUnCiAgICAgIH0sIHsKICAgICAgICB0eXBlOiAxLAogICAgICAgIG5hbWU6ICflho3nlJ/msLTmjpLmlL7lj6MnLAogICAgICAgIHZhbHVlOiAn5YaN55Sf5rC05o6S5pS+5Y+jJwogICAgICB9XSwKICAgICAgaW5zcFR5cGVEYXRhOiB7fSwKICAgICAgLy8g5YWz6ZSu54K55beh5qOA5pWw5o2uCiAgICAgIG15Q2hhcnRfMTogbnVsbCwKICAgICAgbXlDaGFydF8yOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMubmV0V29ya0RhdGUgPSB0aGlzLiRkYXlqcygpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgdGhpcy5hbGxEYXRhUmVxdWVzdCgpOyAvLyDor7fmsYLmiYDmnInmlbDmja4KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOaXtumXtOe7hOS7tuaXpeacn+WIh+aNouS6i+S7tu+8jOeUqOS6juaOp+WItuacrOe7hOS7tue9kee7nOivt+axguaXpeacnyBuZXRXb3JrRGF0ZSDlrZfmrrUKICAgIGRhdGVDaGFuZ2UoY2hhbmdlVHlwZSkgewogICAgICAvLyBjb25zb2xlLmxvZyhjaGFuZ2VUeXBlKSAvLyBzdWJ0cmFjdCBvciBhZGRpdGlvbgogICAgICBpZiAoY2hhbmdlVHlwZSA9PT0gJ3N1YnRyYWN0JykgewogICAgICAgIHRoaXMubmV0V29ya0RhdGUgPSB0aGlzLiRkYXlqcyh0aGlzLm5ldFdvcmtEYXRlKS5zdWJ0cmFjdCgxLCAnZGF5JykuZm9ybWF0KCdZWVlZLU1NLUREJyk7CiAgICAgIH0gZWxzZSBpZiAoY2hhbmdlVHlwZSA9PT0gJ2FkZGl0aW9uJykgewogICAgICAgIHRoaXMubmV0V29ya0RhdGUgPSB0aGlzLiRkYXlqcyh0aGlzLm5ldFdvcmtEYXRlKS5hZGQoMSwgJ2RheScpLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCfnvZHnu5zor7fmsYLnlKjnmoTml6XmnJ8nLCB0aGlzLm5ldFdvcmtEYXRlKTsKICAgICAgdGhpcy5hbGxEYXRhUmVxdWVzdCgpOyAvLyDor7fmsYLmiYDmnInmlbDmja4KICAgIH0sCiAgICAvLyDor7fmsYLmiYDmnInmlbDmja4KICAgIGFsbERhdGFSZXF1ZXN0KCkgewogICAgICBsZXQgcGFyYW1zID0gewogICAgICAgIHN0YXJ0VGltZTogdGhpcy5uZXRXb3JrRGF0ZSArICcgMDA6MDA6MDAnLAogICAgICAgIGVuZFRpbWU6IHRoaXMubmV0V29ya0RhdGUgKyAnIDIzOjU5OjU5JwogICAgICB9OwogICAgICAvLyDlnKjnur/kurrmlbAKICAgICAgQXBpLm9ubGluZU51bShwYXJhbXMpLnRoZW4ocmVzID0+IHsKICAgICAgICBpZiAocmVzLnN0YXR1cykgewogICAgICAgICAgdmFyIF9yZXMkZGF0YSwgX3JlcyRkYXRhMjsKICAgICAgICAgIGNvbnNvbGUubG9nKCflnKjnur/kurrmlbAnLCByZXMpOwogICAgICAgICAgdGhpcy5jYXJkRGF0YUNvbmZpZ1swXS5jb250ZW50TnVtID0gKChyZXMgPT09IG51bGwgfHwgcmVzID09PSB2b2lkIDAgfHwgKF9yZXMkZGF0YSA9IHJlcy5kYXRhKSA9PT0gbnVsbCB8fCBfcmVzJGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkZGF0YS5vbmxpbmUpIHx8IDApICsgJy8nICsgKChyZXMgPT09IG51bGwgfHwgcmVzID09PSB2b2lkIDAgfHwgKF9yZXMkZGF0YTIgPSByZXMuZGF0YSkgPT09IG51bGwgfHwgX3JlcyRkYXRhMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcyRkYXRhMi50b3RhbCkgfHwgMCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgLy8g5beh5qOA57uf6K6hCiAgICAgIEFwaS5nZXRJbnNwRGlzKHBhcmFtcykudGhlbihyZXMgPT4gewogICAgICAgIGlmIChyZXMuc3RhdHVzICYmIHJlcy5kYXRhKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygn5beh5qOA57uf6K6hJywgcmVzKTsKICAgICAgICAgIHRoaXMuY2FyZERhdGFDb25maWdbMV0uY29udGVudE51bSA9IHJlcy5kYXRhWyfovablt6EnXS50b0ZpeGVkKDIpOwogICAgICAgICAgdGhpcy5jYXJkRGF0YUNvbmZpZ1syXS5jb250ZW50TnVtID0gcmVzLmRhdGFbJ+i9puW3oeimhueblueOhyddLnRvRml4ZWQoMik7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgLy8g57uE5Zui5beh5qOA57uf6K6hCiAgICAgIEFwaS5nZXRUYWJsZURhdGEocGFyYW1zKS50aGVuKHJlcyA9PiB7CiAgICAgICAgaWYgKHJlcy5kYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCfnu4Tlm6Llt6Hmo4Dnu5/orqEnLCByZXMpOwogICAgICAgICAgdGhpcy5pbnNwRGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgLy8gMS7nu5/orqHkvpvmsLTpmIDpl6jjgIHpm6jmsLTmjpLmlL7lj6PjgIHmsaHmsLTmjqXpqbPkupXjgIHlho3nlJ/msLTmjpLmlL7lj6PmlbDph48KICAgICAgICAgIC8vIOe7n+iuoeWQhOexu+iuvuaWveaVsOmHjwogICAgICAgICAgY29uc3QgZmFjaWxpdHlUeXBlcyA9IFsnc3VwcGx5TnVtJywgJ3JhaW5OdW0nLCAncG9sbHV0ZWROdW0nLCAncmVjeWNsZU51bSddOwogICAgICAgICAgY29uc3QgZmFjaWxpdHlDb3VudHMgPSBmYWNpbGl0eVR5cGVzLm1hcCh0eXBlID0+IHRoaXMuaW5zcERhdGEucmVkdWNlKChhY2MsIGl0ZW0pID0+IGFjYyArIChpdGVtW3R5cGVdIHx8IDApLCAwKSk7CiAgICAgICAgICAvLyDmm7TmlrDljaHniYfmlbDmja4KICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmFjaWxpdHlUeXBlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICB0aGlzLmNhcmREYXRhQ29uZmlnW2kgKyAzXS5jb250ZW50TnVtID0gZmFjaWxpdHlDb3VudHNbaV07CiAgICAgICAgICB9CgogICAgICAgICAgLy8gMi4xIOi9puW3oee7n+iuoe+8iOmHjOeoi++8iGtt77yJ44CB6KaG55uW546H77yIJe+8ie+8iQogICAgICAgICAgbGV0IGNsb25lT3B0aW9uXzEgPSBfY2xvbmVEZWVwKGNoYXJ0T3B0aW9uKTsKICAgICAgICAgIGNsb25lT3B0aW9uXzEubGVnZW5kLmRhdGEgPSBbJ+mHjOeoiycsICfopobnm5bnjocnXTsKICAgICAgICAgIGNsb25lT3B0aW9uXzEueEF4aXMuZGF0YSA9IHRoaXMuaW5zcERhdGEubWFwKGl0ZW0gPT4gaXRlbS5ncmlkTmFtZSk7CiAgICAgICAgICBjbG9uZU9wdGlvbl8xLnlBeGlzWzBdLm5hbWUgPSAn6YeM56iLKGttKSc7CiAgICAgICAgICBjbG9uZU9wdGlvbl8xLnlBeGlzWzFdLm5hbWUgPSAn6KaG55uW546HKCUpJzsKICAgICAgICAgIGNsb25lT3B0aW9uXzEuc2VyaWVzWzBdLm5hbWUgPSBjbG9uZU9wdGlvbl8xLmxlZ2VuZC5kYXRhWzBdOwogICAgICAgICAgY2xvbmVPcHRpb25fMS5zZXJpZXNbMV0ubmFtZSA9IGNsb25lT3B0aW9uXzEubGVnZW5kLmRhdGFbMV07CiAgICAgICAgICAvLyBzZXJpZXPotYvlgLwKICAgICAgICAgIGNsb25lT3B0aW9uXzEuc2VyaWVzWzBdLmRhdGEgPSB0aGlzLmluc3BEYXRhLm1hcChpdGVtID0+IHsKICAgICAgICAgICAgbGV0IGNhckluc3AgPSBbXTsKICAgICAgICAgICAgY2FySW5zcCA9IGl0ZW0uaW5zcERpc3RhbmNlcy5maWx0ZXIoaXRlbSA9PiBpdGVtLnRhc2tUeXBlID09PSAn6L2m5behJyk7CiAgICAgICAgICAgIGlmIChjYXJJbnNwLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICByZXR1cm4gY2FySW5zcFswXS5kaXN0YW5jZTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBjbG9uZU9wdGlvbl8xLnNlcmllc1sxXS5kYXRhID0gdGhpcy5pbnNwRGF0YS5tYXAoaXRlbSA9PiBpdGVtLmNvdmVyYWdlKTsKICAgICAgICAgIHRoaXMuaW5pdENoYXJ0RGF0YSh0aGlzLm15Q2hhcnRfMSwgY2xvbmVPcHRpb25fMSwgJ2luc3BlY3Rpb25fY2hhcnRJZF8xJyk7CgogICAgICAgICAgLy8gMi4yIOWFs+mUrueCueW3oeajgO+8iOS+m+awtOmYgOmXqOOAgembqOawtOaOkuaUvuWPo+OAgeaxoeawtOaOpemps+S6leOAgeWGjeeUn+awtOaOkuaUvuWPo+aVsOmHj++8iQogICAgICAgICAgdGhpcy5pbnNwVHlwZUxpc3QuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgICAgdGhpcy5pbnNwVHlwZURhdGFbaXRlbS52YWx1ZV0gPSB7CiAgICAgICAgICAgICAgZGF0YTogW10KICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5pbnNwVHlwZURhdGFbJ+S+m+awtOmYgOmXqCddLmRhdGEgPSB0aGlzLmluc3BEYXRhLm1hcChpdGVtID0+IGl0ZW0uc3VwcGx5TnVtIHx8IDApOwogICAgICAgICAgdGhpcy5pbnNwVHlwZURhdGFbJ+mbqOawtOaOkuaUvuWPoyddLmRhdGEgPSB0aGlzLmluc3BEYXRhLm1hcChpdGVtID0+IGl0ZW0ucmFpbk51bSB8fCAwKTsKICAgICAgICAgIHRoaXMuaW5zcFR5cGVEYXRhWyfmsaHmsLTmjqXpqbPkupUnXS5kYXRhID0gdGhpcy5pbnNwRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnBvbGx1dGVkTnVtIHx8IDApOwogICAgICAgICAgdGhpcy5pbnNwVHlwZURhdGFbJ+WGjeeUn+awtOaOkuaUvuWPoyddLmRhdGEgPSB0aGlzLmluc3BEYXRhLm1hcChpdGVtID0+IGl0ZW0ucmVjeWNsZU51bSB8fCAwKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCflhbPplK7ngrnlt6Hmo4Dnu5/orqEnLCBfY2xvbmVEZWVwKHRoaXMuaW5zcFR5cGVEYXRhKSk7CiAgICAgICAgICB0aGlzLnJlbmRlckNoYXJ0KCk7IC8vIOa4suafk+WFs+mUrueCueW3oeajgOWbvuihqAogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0VmFsdWUodHlwZSwgbmFtZSwgdmFsdWUpIHsKICAgICAgY29uc29sZS5sb2codHlwZSwgbmFtZSwgdmFsdWUpOwogICAgICB0aGlzLnNlbFZhbHVlID0gdmFsdWU7CiAgICAgIHRoaXMucmVuZGVyQ2hhcnQoKTsgLy8g5riy5p+T5YWz6ZSu54K55beh5qOA5Zu+6KGoCiAgICB9LAogICAgLy8g5riy5p+T5YWz6ZSu54K55beh5qOA5Zu+6KGoCiAgICByZW5kZXJDaGFydCgpIHsKICAgICAgbGV0IGNsb25lT3B0aW9uXzIgPSBfY2xvbmVEZWVwKGNoYXJ0T3B0aW9uKTsKICAgICAgY2xvbmVPcHRpb25fMi5sZWdlbmQuZGF0YSA9IFtdOwogICAgICBjbG9uZU9wdGlvbl8yLnhBeGlzLmRhdGEgPSB0aGlzLmluc3BEYXRhLm1hcChpdGVtID0+IGl0ZW0uZ3JpZE5hbWUpOwogICAgICBjbG9uZU9wdGlvbl8yLnlBeGlzWzBdLm5hbWUgPSAn5pWw6YePKOS4qiknOwogICAgICBkZWxldGUgY2xvbmVPcHRpb25fMi55QXhpc1sxXTsgLy8g5Yig6Zmk56ys5LqM5Liqeei9tAogICAgICBjbG9uZU9wdGlvbl8yLnNlcmllc1swXS5uYW1lID0gJyc7CiAgICAgIGRlbGV0ZSBjbG9uZU9wdGlvbl8yLnNlcmllc1sxXTsgLy8g5Yig6Zmk56ys5LqM5Liqc2VyaWVzCiAgICAgIC8vIHNlcmllc+i1i+WAvAogICAgICBjbG9uZU9wdGlvbl8yLnNlcmllc1swXS5kYXRhID0gdGhpcy5pbnNwVHlwZURhdGFbdGhpcy5zZWxWYWx1ZV0uZGF0YTsKICAgICAgY29uc29sZS5sb2codGhpcy5pbnNwVHlwZURhdGFbdGhpcy5zZWxWYWx1ZV0uZGF0YSk7CiAgICAgIHRoaXMuaW5pdENoYXJ0RGF0YSh0aGlzLm15Q2hhcnRfMiwgY2xvbmVPcHRpb25fMiwgJ2luc3BlY3Rpb25fY2hhcnRJZF8yJyk7CiAgICB9LAogICAgLy8g5Yid5aeL5YyW5Zu+6KGoCiAgICBpbml0Q2hhcnREYXRhKG15Q2hhcnQsIGNoYXJ0T3B0aW9uLCBDaGFydElkKSB7CiAgICAgIGlmIChteUNoYXJ0KSBteUNoYXJ0LmRpc3Bvc2UoKTsKICAgICAgbGV0IGNoYXJ0RG9tID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoQ2hhcnRJZCk7CiAgICAgIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoY2hhcnREb20pOwogICAgICBsZXQgb3B0aW9uID0gX2Nsb25lRGVlcChjaGFydE9wdGlvbik7CiAgICAgIG9wdGlvbiAmJiBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24sIHRydWUpOwogICAgfQogIH0KfTs="},{"version":3,"names":["Api","ChangeBizDate","SelectComponent","echarts","_cloneDeep","chartOption","name","components","data","dateType","netWorkDate","inspData","cardDataConfig","text","contentNum","unit","field","selValue","inspTypeList","type","value","inspTypeData","myChart_1","myChart_2","mounted","$dayjs","format","allDataRequest","methods","dateChange","changeType","subtract","add","console","log","params","startTime","endTime","onlineNum","then","res","status","_res$data","_res$data2","online","total","getInspDis","toFixed","getTableData","length","facilityTypes","facilityCounts","map","reduce","acc","item","i","cloneOption_1","legend","xAxis","gridName","yAxis","series","carInsp","inspDistances","filter","taskType","distance","coverage","initChartData","forEach","supplyNum","rainNum","pollutedNum","recycleNum","renderChart","getValue","cloneOption_2","myChart","ChartId","dispose","chartDom","document","getElementById","init","option","setOption"],"sources":["src/views/MaintenanceStatistics/components/InspectionComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"commonComponents\">\r\n    <ChangeBizDate :dateType=\"dateType\" @dateChange=\"dateChange\" />\r\n    <div class=\"topCard\">\r\n      <div v-for=\"card in cardDataConfig\" :key=\"card.text\" class=\"cardItemContainer\">\r\n        <div class=\"cardItemTop\">\r\n          <span class=\"cardItemContentNum\">{{ card.contentNum }}</span>\r\n          <span class=\"cardItemContentUnit\">{{ card.unit }}</span>\r\n        </div>\r\n        <span class=\"cardItemText\">{{ card.text }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/carImg.png\" alt=\"\" />\r\n          <span>车巡统计</span>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n      <div id=\"inspection_chartId_1\" class=\"chartStyle\"></div>\r\n    </div>\r\n    <div class=\"centerAndBottomCard\">\r\n      <div class=\"topTitle\">\r\n        <div class=\"leftTitle\">\r\n          <img src=\"../imgs/mapImg.png\" alt=\"\" />\r\n          <span>关键点巡检</span>\r\n        </div>\r\n        <SelectComponent\r\n          :selectData=\"inspTypeList\"\r\n          :selValue=\"selValue\"\r\n          color=\"white\"\r\n          @getValue=\"getValue\"\r\n        >\r\n        </SelectComponent>\r\n      </div>\r\n      <div id=\"inspection_chartId_2\" class=\"chartStyle\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as Api from '../api.js'\r\nimport ChangeBizDate from './ChangeBizDate.vue' // 日期选择组件\r\nimport SelectComponent from './SelectComponent.vue' // 下拉选择框\r\n// 图表\r\nimport * as echarts from 'echarts'\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\nimport { chartOption } from './chartOption.js'\r\nexport default {\r\n  name: 'InspectionComponent',\r\n  components: {\r\n    ChangeBizDate,\r\n    SelectComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      dateType: '日',\r\n      netWorkDate: '',\r\n      inspData: [], // 巡检统计数据\r\n      cardDataConfig: [\r\n        {\r\n          text: '在线人数',\r\n          contentNum: '',\r\n          unit: '人',\r\n          field: 'AAAAAAAAAA',\r\n        },\r\n        {\r\n          text: '车巡里程',\r\n          contentNum: '',\r\n          unit: 'km',\r\n          field: 'BBBBBBBBBB',\r\n        },\r\n        {\r\n          text: '车巡覆盖率',\r\n          contentNum: '',\r\n          unit: '%',\r\n          field: 'CCCCCCCCCC',\r\n        },\r\n        {\r\n          text: '供水阀门',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'DDDDDDDDDD',\r\n        },\r\n        {\r\n          text: '雨水排放口',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'EEEEEEEEEE',\r\n        },\r\n        {\r\n          text: '污水接驳井',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'FFFFFFFFF',\r\n        },\r\n        {\r\n          text: '再生水排放口',\r\n          contentNum: '',\r\n          unit: '个',\r\n          field: 'GGGGGGGGGG',\r\n        },\r\n      ],\r\n      selValue: '供水阀门',\r\n      inspTypeList: [\r\n        { type: 1, name: '供水阀门', value: '供水阀门' },\r\n        { type: 1, name: '雨水排放口', value: '雨水排放口' },\r\n        { type: 1, name: '污水接驳井', value: '污水接驳井' },\r\n        { type: 1, name: '再生水排放口', value: '再生水排放口' },\r\n      ],\r\n      inspTypeData: {}, // 关键点巡检数据\r\n      myChart_1: null,\r\n      myChart_2: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    this.netWorkDate = this.$dayjs().format('YYYY-MM-DD')\r\n    this.allDataRequest() // 请求所有数据\r\n  },\r\n  methods: {\r\n    // 时间组件日期切换事件，用于控制本组件网络请求日期 netWorkDate 字段\r\n    dateChange(changeType) {\r\n      // console.log(changeType) // subtract or addition\r\n      if (changeType === 'subtract') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).subtract(1, 'day').format('YYYY-MM-DD')\r\n      } else if (changeType === 'addition') {\r\n        this.netWorkDate = this.$dayjs(this.netWorkDate).add(1, 'day').format('YYYY-MM-DD')\r\n      }\r\n      console.log('网络请求用的日期', this.netWorkDate)\r\n      this.allDataRequest() // 请求所有数据\r\n    },\r\n    // 请求所有数据\r\n    allDataRequest() {\r\n      let params = {\r\n        startTime: this.netWorkDate + ' 00:00:00',\r\n        endTime: this.netWorkDate + ' 23:59:59',\r\n      }\r\n      // 在线人数\r\n      Api.onlineNum(params).then((res) => {\r\n        if (res.status) {\r\n          console.log('在线人数', res)\r\n          this.cardDataConfig[0].contentNum =\r\n            (res?.data?.online || 0) + '/' + (res?.data?.total || 0)\r\n        }\r\n      })\r\n      // 巡检统计\r\n      Api.getInspDis(params).then((res) => {\r\n        if (res.status && res.data) {\r\n          console.log('巡检统计', res)\r\n          this.cardDataConfig[1].contentNum = res.data['车巡'].toFixed(2)\r\n          this.cardDataConfig[2].contentNum = res.data['车巡覆盖率'].toFixed(2)\r\n        }\r\n      })\r\n      // 组团巡检统计\r\n      Api.getTableData(params).then((res) => {\r\n        if (res.data.length > 0) {\r\n          console.log('组团巡检统计', res)\r\n          this.inspData = res.data\r\n          // 1.统计供水阀门、雨水排放口、污水接驳井、再生水排放口数量\r\n          // 统计各类设施数量\r\n          const facilityTypes = ['supplyNum', 'rainNum', 'pollutedNum', 'recycleNum']\r\n          const facilityCounts = facilityTypes.map((type) =>\r\n            this.inspData.reduce((acc, item) => acc + (item[type] || 0), 0)\r\n          )\r\n          // 更新卡片数据\r\n          for (let i = 0; i < facilityTypes.length; i++) {\r\n            this.cardDataConfig[i + 3].contentNum = facilityCounts[i]\r\n          }\r\n\r\n          // 2.1 车巡统计（里程（km）、覆盖率（%））\r\n          let cloneOption_1 = _cloneDeep(chartOption)\r\n          cloneOption_1.legend.data = ['里程', '覆盖率']\r\n          cloneOption_1.xAxis.data = this.inspData.map((item) => item.gridName)\r\n          cloneOption_1.yAxis[0].name = '里程(km)'\r\n          cloneOption_1.yAxis[1].name = '覆盖率(%)'\r\n          cloneOption_1.series[0].name = cloneOption_1.legend.data[0]\r\n          cloneOption_1.series[1].name = cloneOption_1.legend.data[1]\r\n          // series赋值\r\n          cloneOption_1.series[0].data = this.inspData.map((item) => {\r\n            let carInsp = []\r\n            carInsp = item.inspDistances.filter((item) => item.taskType === '车巡')\r\n            if (carInsp.length > 0) {\r\n              return carInsp[0].distance\r\n            } else {\r\n              return 0\r\n            }\r\n          })\r\n          cloneOption_1.series[1].data = this.inspData.map((item) => item.coverage)\r\n          this.initChartData(this.myChart_1, cloneOption_1, 'inspection_chartId_1')\r\n\r\n          // 2.2 关键点巡检（供水阀门、雨水排放口、污水接驳井、再生水排放口数量）\r\n          this.inspTypeList.forEach((item) => {\r\n            this.inspTypeData[item.value] = {\r\n              data: [],\r\n            }\r\n          })\r\n          this.inspTypeData['供水阀门'].data = this.inspData.map((item) => item.supplyNum || 0)\r\n          this.inspTypeData['雨水排放口'].data = this.inspData.map((item) => item.rainNum || 0)\r\n          this.inspTypeData['污水接驳井'].data = this.inspData.map((item) => item.pollutedNum || 0)\r\n          this.inspTypeData['再生水排放口'].data = this.inspData.map((item) => item.recycleNum || 0)\r\n          console.log('关键点巡检统计', _cloneDeep(this.inspTypeData))\r\n          this.renderChart() // 渲染关键点巡检图表\r\n        }\r\n      })\r\n    },\r\n    getValue(type, name, value) {\r\n      console.log(type, name, value)\r\n      this.selValue = value\r\n      this.renderChart() // 渲染关键点巡检图表\r\n    },\r\n    // 渲染关键点巡检图表\r\n    renderChart() {\r\n      let cloneOption_2 = _cloneDeep(chartOption)\r\n      cloneOption_2.legend.data = []\r\n      cloneOption_2.xAxis.data = this.inspData.map((item) => item.gridName)\r\n      cloneOption_2.yAxis[0].name = '数量(个)'\r\n      delete cloneOption_2.yAxis[1] // 删除第二个y轴\r\n      cloneOption_2.series[0].name = ''\r\n      delete cloneOption_2.series[1] // 删除第二个series\r\n      // series赋值\r\n      cloneOption_2.series[0].data = this.inspTypeData[this.selValue].data\r\n      console.log(this.inspTypeData[this.selValue].data)\r\n      this.initChartData(this.myChart_2, cloneOption_2, 'inspection_chartId_2')\r\n    },\r\n    // 初始化图表\r\n    initChartData(myChart, chartOption, ChartId) {\r\n      if (myChart) myChart.dispose()\r\n      let chartDom = document.getElementById(ChartId)\r\n      myChart = echarts.init(chartDom)\r\n      let option = _cloneDeep(chartOption)\r\n      option && myChart.setOption(option, true)\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.commonComponents {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 24px 30px 100px;\r\n  overflow-y: scroll;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: #f4f6f8;\r\n  transition: all 0.5s;\r\n\r\n  .topCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 300px;\r\n    overflow: scroll;\r\n    padding: 10px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .cardItemContainer {\r\n      width: calc(33% - 10px);\r\n      height: calc(50% - 10px);\r\n      margin: 5px;\r\n      border-radius: 16px;\r\n      background: #ffffff;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 20px;\r\n      box-sizing: border-box;\r\n\r\n      .cardItemTop {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: baseline;\r\n        font-size: 38px;\r\n        font-family: Helvetica-Bold, Helvetica;\r\n        font-weight: bold;\r\n        color: #1b67d8;\r\n\r\n        .cardItemContentUnit {\r\n          margin-left: 2px;\r\n          font-size: 28px;\r\n          font-weight: 400;\r\n        }\r\n      }\r\n\r\n      .cardItemText {\r\n        font-size: 28px;\r\n        font-family: PingFangSC-Regular, PingFang SC;\r\n        font-weight: 400;\r\n        color: #555555;\r\n      }\r\n    }\r\n  }\r\n\r\n  .centerAndBottomCard {\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 24px;\r\n    width: 100%;\r\n    height: 470px;\r\n    border-radius: 16px;\r\n    background: #ffffff;\r\n\r\n    .topTitle {\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      margin-top: 40px;\r\n      padding: 0 30px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 34px;\r\n      font-family: PingFangSC-Semibold, PingFang SC;\r\n      font-weight: 600;\r\n      color: #191919;\r\n\r\n      .leftTitle {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        img {\r\n          width: 48px;\r\n          height: 48px;\r\n          margin-right: 16px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chartStyle {\r\n      width: 98%;\r\n      height: calc(100% - 100px);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}