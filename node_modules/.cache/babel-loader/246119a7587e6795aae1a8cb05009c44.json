{"remainingRequest":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\inspectionManage\\add-event.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\src\\views\\inspectionManage\\add-event.vue","mtime":1705912800083},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\babel.config.js","mtime":1705912799600},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ty_project\\xasw-yy\\revenue\\xasw-mobile\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["MapComp","bus","_","axios","url","turf","engPropertyValue","tree","insert","getAllPointOrLineGeomInsp","Toast","mapObj","map","mapInstance","superMapUrl","gisDomain","datasets","name","components","data","dictionary","WATER_SUPPLY","RAI_WATER","POLLUTED_WATER","locationName","position","curEng","curFeature","engList","filteredList","initTop","keyword","userInfo","feature","popupShow","eventForm","eventType","files","inspTaskDetailDesc","text","voice","remark","eventTypeList","rangeList","taskDetail","engInfoDTO","selectEventType","rules","required","message","photoLength","trigger","previewURL","upimgPreview","headers","uploadFile","showVisible","computed","eventTypeListNewFiltered","temp","find","item","label","inspBusinessType","children","created","activated","setLocationName","uni","setStorageSync","$nextTick","refreshReportEvent","getEventTypeList","mounted","localStorage","setItem","getItem","$on","pos","getEngData","methods","mapLoaded","$route","query","mapOnLoad","addReportEventMarker","addRangeList","flyTo","zoom","then","res","sons","value","code","catch","getImageInfo","val","length","photoList","forEach","index","push","fileToken","$set","eventTypeConfirm","event","pickPosition","savePath","setTimeout","setLineGeoSource","onCancel","onConfirm","superMapParamsToFeature","geometry","coord","type","points","x","y","point","coordinates","featureToObject","names","values","obj","geom","buffer","unit","JSON","parse","stringify","method","getFeatureMode","datasetNames","attributeFilter","spatialQueryMode","totalCount","arr","features","properties","fieldNames","fieldValues","tempData","ADRESS","replace","NAME","submit","$refs","validate","valid","copyEventForm","deepClone","uploadFiles","concat","preliminaryHandleFile","inspOrg","eventPayload","address","conclusion","eventDescribe","eventSource","inspItemCode","officeId","inspOrgId","office","company","companyId","preliminaryHandle","eventDescribeFile","regionItemText","taskId","engId","undefined","eventItemText","lng","lat","reporterId","id","reporterName","userFullname","status","duration","$router","go","computeCenter","center","getEngPropertyVal","guid","params","debounce","getEngList","filterEngList","filter","deviceid","search","radius","loading","pipeType","geomPoint","pipetype","chooseEng","_value$detail","detail","st_asgeojson","watch","handler","to","from","next","path","onBackPress","options","Dialog","confirm","title","destoryMap","reportEvent","beforeDestroy","$off"],"sources":["src/views/inspectionManage/add-event.vue"],"sourcesContent":["<!--\r\n * @Description: \r\n * @Author: wei_qx@hdec.com\r\n * @Date: 2021-04-23 08:52:00\r\n * @LastEditor: wei_qx@hdec.com\r\n * @LastEditTime: 2021-09-23 17:04:57\r\n-->\r\n<template>\r\n  <div class=\"popup-container\">\r\n    <fm-popup \r\n      :visible.sync=\"popupShow\"\r\n      position=\"bottom\"\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      :modal=\"false\"\r\n      :close-on-click-modal=\"false\"\r\n      class=\"popup\"\r\n    >\r\n      <div class=\"head\">\r\n        <i class=\"fm-icon fm-icon-arrow-left\" width=\"24\" height=\"24\" @click=\"onCancel\"></i>\r\n        <text style=\"font-weight: 600;\">{{\"请选位置\"}}</text>\r\n        <text class=\"on-confirm\" @click=\"onConfirm\">确定</text>\r\n      </div>\r\n      <MapComp ref=\"mymap\" :ifInspection=\"true\" :inspBusinessType=\"taskDetail.inspBusinessType\" @mapLoaded=\"mapLoaded\" ></MapComp>\r\n      <fm-list class=\"emergency-pull-bar\" v-if=\"popupShow\">\r\n        <div class=\"content\">\r\n          <fm-search placeholder=\"请输入设备编号\" shape=\"square\" v-model=\"keyword\" :show-action=\"false\" @change=\"filterEngList\"></fm-search>\r\n          <!-- <uni-data-checkbox class=\"checkbox\" mode=\"list\" icon=\"right\" v-model=\"curEng\" :localdata=\"filteredList\" @change=\"chooseEng\"></uni-data-checkbox> -->\r\n          <fm-empty\r\n            v-if=\"!filteredList.length\"\r\n            description=\"暂无数据\"\r\n          />\r\n        </div>\r\n      </fm-list>\r\n    </fm-popup>\r\n    <fm-nav-bar title=\"事件上报\" left-arrow @click-left=\"$router.go(-1)\">\r\n    </fm-nav-bar>\r\n    <fm-list v-if=\"!popupShow\" class=\"scroll\">\r\n      <fm-form :model=\"eventForm\" ref=\"eventForm\" class=\"event-form\">\r\n        <fm-field label=\"事件类型\" label-width=\"4.44rem\" required v-model=\"eventForm.eventType\">\r\n        </fm-field>\r\n        <!-- <fm-picker\r\n          v-model=\"selectEventType\"\r\n          :columns=\"eventTypeListNewFiltered\"\r\n          @confirm=\"eventTypeConfirm\"\r\n          title=\"事件类型\"\r\n          confirm-button-text=\"确定\"\r\n          cancel-button-text=\"返回\"\r\n        ></fm-picker> -->\r\n        <fm-field label=\"现场描述\" v-model=\"eventForm.remark.text\" label-width=\"4.44rem\" />\r\n        <fm-field label=\"初步处理\" v-model=\"eventForm.inspTaskDetailDesc.text\" label-width=\"4.44rem\" />\r\n        <!-- <u-gap height=\"8\" bg-color=\"#F5F7F9\"></u-gap> -->\r\n        <fm-field label=\"多媒体附件\" label-width=\"4.44rem\" label-position=\"top\" required>\r\n          <div>\r\n            <fm-uploader\r\n            />\r\n          </div>\r\n          <fm-field style=\"width: 0.55rem;visibility:hidden;\" v-model=\"eventForm.photoLength\"  placeholder=\"\" disabled />\r\n        </fm-field>\r\n        <!-- <u-gap height=\"8\" bg-color=\"#F5F7F9\"></u-gap> -->\r\n        <div class=\"position\">\r\n          <MapComp style=\"height: 7.77rem;\" ref=\"mymap\" :ifInspection=\"true\" :inspBusinessType=\"taskDetail.inspBusinessType\" ></MapComp>\r\n          <fm-field label=\"位置\" v-model=\"locationName\" label-width=\"3.33rem\" @click-suffix-icon=\"pickPosition\" suffix-icon=\"location-o\">\r\n          </fm-field>\r\n        </div>\r\n      </fm-form>\r\n    </fm-list>\r\n    <div class=\"submit-event\">\r\n      <fm-button style=\"width: 100%;\" type=\"primary\" @click=\"submit\">提交</fm-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport MapComp from \"../inspectMap/index.vue\";\r\n// import SunuiUpimg from '../../components/sunui-upimg/sunui-upimg.vue';\r\nimport bus from \"../../views/inspectMap/utils/Bus.js\";\r\n// import PullupBar from \"@comp/pullup-bar/index2.vue\";\r\n// import UniDataCheckbox from '../../components/uni-data-checkbox/uni-data-checkbox.vue';\r\nimport _ from \"lodash\";\r\nimport axios from \"axios\";\r\nimport url from \"@common/config.js\";\r\nimport * as turf from '@turf/turf'\r\nimport { engPropertyValue, tree, insert, getAllPointOrLineGeomInsp } from './api'\r\nimport { Toast } from 'fawkes-mobile-lib';\r\nconst mapObj = {\r\n  map: null,\r\n  mapInstance: null\r\n}\r\nconst superMapUrl = {\r\n  'POI': {\r\n    url:\r\n      url.gisDomain +\r\n      \"/iserver/services/data-LuWangYuPOI/rest/data/featureResults.rjson?returnContent=true\",\r\n    datasets: [\"POI:POI\"],\r\n  },\r\n  '道路名': {\r\n    url:\r\n      url.gisDomain +\r\n      \"/iserver/services/data-LuWangYuPOI/rest/data/featureResults.rjson?returnContent=true\",\r\n    datasets: [\"POI:余杭区矢量路网\"],\r\n  },\r\n};\r\nexport default {\r\n  name: \"add-event\",\r\n  components: {\r\n    MapComp,\r\n    // SunuiUpimg,\r\n    // PullupBar,\r\n    // UniDataCheckbox\r\n  },\r\n  data() {\r\n    return {\r\n      dictionary: {\r\n        WATER_SUPPLY: '供水',\r\n        RAI_WATER: '雨水',\r\n        POLLUTED_WATER: '污水'\r\n      },\r\n\r\n      locationName: \"位置描述信息\",\r\n      position: [0, 0],\r\n      curEng: null,\r\n      curFeature: null,\r\n      engList: [],\r\n      filteredList: [],\r\n      initTop: \"70%\",\r\n      keyword: \"\",\r\n      userInfo: {},\r\n      feature: {},\r\n      popupShow: false,\r\n      eventForm: {\r\n        eventType: \"\",\r\n        files: [],\r\n        inspTaskDetailDesc: {\r\n          text: \"\",\r\n          voice: {}\r\n        },\r\n        remark: {\r\n          text: \"\",\r\n          voice: {}\r\n        }\r\n      },\r\n      eventTypeList: [],\r\n      rangeList: [],\r\n      taskDetail: {},\r\n      engInfoDTO: null,\r\n      selectEventType: false,\r\n      rules: {\r\n        eventType: [\r\n          {\r\n            required: true,\r\n            message: \"请选择事件类型\"\r\n          }\r\n        ],\r\n        photoLength: [\r\n          {\r\n            required: true,\r\n            message: \"请上传附件\",\r\n            trigger: [\"change\", \"blur\"]\r\n          }\r\n        ]\r\n      },\r\n      previewURL: \"/sys-storage/download_image?f8s=\",\r\n      upimgPreview: [],\r\n      headers: {},\r\n      url: {\r\n        // 本页面使用到的url\r\n        uploadFile: \"sys-storage/upload\",\r\n        // findFile: \"ecidi-cmp/file/cmpFileGroup/findFilesByGroupId\",\r\n      },\r\n      showVisible: false\r\n    }\r\n  },\r\n  computed: {\r\n    eventTypeListNewFiltered() {\r\n      const { dictionary, eventTypeList, taskDetail } = this;\r\n      let temp = eventTypeList.find(item => {\r\n        return item.label === dictionary[taskDetail.inspBusinessType];\r\n      });\r\n      if (temp) {\r\n        return temp.children;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.headers = {\r\n      // \"Fawkes-Auth\": uni.getStorageSync(\"Fawkes-Auth\"),\r\n    };\r\n  },\r\n  activated() {\r\n    this.setLocationName();\r\n    uni.setStorageSync(\"isReportEvent\", true);\r\n    if (!this.showVisible) {\r\n      this.$nextTick(() => {\r\n        this.refreshReportEvent();\r\n      })\r\n      this.getEventTypeList();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setLocationName();\r\n    localStorage.setItem(\"isReportEvent\", true);\r\n    this.userInfo = localStorage.getItem(\"userInfo\");\r\n    bus.$on(\"eventMarkerPosition\", (pos) => {\r\n      this.position = pos;\r\n      this.getEngData();\r\n    })\r\n    this.$nextTick(() => {\r\n      this.refreshReportEvent();\r\n    })\r\n    this.getEventTypeList();\r\n  },\r\n  methods: {\r\n    mapLoaded(mapInstance) {\r\n      mapObj.mapInstance = mapInstance\r\n      mapObj.map = mapInstance.map\r\n    },\r\n    // 刷新\r\n    refreshReportEvent() {\r\n      this.position= [0, 0];\r\n      this.curEng= null;\r\n      this.curFeature = null;\r\n      this.engList= [];\r\n      this.filteredList= [];\r\n      this.locationName = \"位置描述信息\";\r\n      this.initTop= \"70%\";\r\n      this.keyword= \"\";\r\n      this.eventForm = {\r\n        eventType: \"\",\r\n        files: [],\r\n        inspTaskDetailDesc: {\r\n          text: \"\",\r\n          voice: {}\r\n        },\r\n        remark: {\r\n          text: \"\",\r\n          voice: {}\r\n        }\r\n      };\r\n      this.upimgPreview = [];\r\n      if (this.$route.query.position) {\r\n        // this.feature = this.$route.query.feature;\r\n        this.rangeList = this.$route.query.rangeList;\r\n        this.taskDetail = this.$route.query.taskDetail;\r\n        this.position = this.$route.query.position;\r\n      }\r\n      mapObj.map.mapOnLoad(() => {\r\n        if (this.position) {\r\n          mapObj.map.addReportEventMarker(this.position);\r\n          mapObj.map.addRangeList(this.rangeList);\r\n          mapObj.map.flyTo({ position: this.position, zoom: 18});\r\n        } \r\n        \r\n      })\r\n      // this.$refs.eventForm.setRules(this.rules);\r\n    },\r\n    // 获取事件类型\r\n    getEventTypeList() {\r\n      tree().then(res => {\r\n        this.eventTypeList = res.data.sons.map(item => {\r\n          return {\r\n            value: item.code,\r\n            label: item.name,\r\n            children: item.sons.map(item => {\r\n              return {\r\n                value: item.code,\r\n                label: item.name,\r\n                children: item.sons.map(item => {\r\n                  return {\r\n                    value: item.code,\r\n                    label: item.name\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        Toast({\r\n          message: \"字典加载失败\",\r\n        });\r\n      })\r\n    },\r\n    // 获取图片信息\r\n    getImageInfo(val) {\r\n      if (val && val[0].length > 0) {\r\n        this.eventForm.files = val[0];\r\n        let photoList = [];\r\n        val[0].forEach((item, index) => {\r\n          photoList.push(item.fileToken);\r\n        });\r\n        let temp = photoList.length + \"\";\r\n        this.$set(this.eventForm, \"photoLength\", temp);\r\n      } else {\r\n        this.$set(this.eventForm, \"photoLength\", \"\");\r\n      }\r\n    },\r\n    // 事件类型选择确认\r\n    eventTypeConfirm(event) {\r\n      this.$set(this.eventForm, \"eventType\", event[1].label);\r\n      this.$set(this.eventForm, \"inspItemCode\", event[1].value);\r\n    },\r\n    // 选择位置\r\n    pickPosition() {\r\n      // 上传组件回显\r\n      this.upimgPreview = this.eventForm.files.map((item) => {\r\n        return {\r\n          uploadFile: {\r\n            savePath: item.fileToken,\r\n          },\r\n          ...item\r\n        };\r\n      });\r\n      this.popupShow = true;\r\n      this.locationName = \"位置描述信息\";\r\n      this.$nextTick(() => {\r\n        mapObj.map.mapOnLoad(() => {\r\n          mapObj.map.addReportEventMarker(this.position);\r\n          if (this.position) {\r\n            mapObj.map.addRangeList(this.rangeList);\r\n            mapObj.map.flyTo({ position: this.position, zoom: 18});\r\n            setTimeout(() => {\r\n              this.curFeature && mapObj.map.setLineGeoSource([this.curFeature], \"curInspLineSource\");\r\n            }, 1500)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 取消选择位置\r\n    onCancel() {\r\n      this.popupShow = false;\r\n      this.$nextTick(() => {\r\n        mapObj.map.mapOnLoad(() => {\r\n          mapObj.map.addReportEventMarker(this.position);\r\n          if (this.position) {\r\n            mapObj.map.addRangeList(this.rangeList);\r\n            mapObj.map.flyTo({ position: this.position, zoom: 18});\r\n            setTimeout(() => {\r\n              this.curFeature && mapObj.map.setLineGeoSource([this.curFeature], \"curInspLineSource\");\r\n            }, 1500)\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 确认选择位置\r\n    onConfirm() {\r\n      if (!this.position) return;\r\n      this.popupShow = false;\r\n      this.$nextTick(() => {\r\n        mapObj.map.mapOnLoad(() => {\r\n          mapObj.map.addReportEventMarker(this.position);\r\n          if (this.position) {\r\n            mapObj.map.addRangeList(this.rangeList);\r\n            mapObj.map.flyTo({ position: this.position, zoom: 18});\r\n            setTimeout(() => {\r\n              this.curFeature && mapObj.map.setLineGeoSource([this.curFeature], \"curInspLineSource\");\r\n            }, 1500)\r\n          }\r\n          /* 注释高德api调用\r\n          var cordForLoc_start =\r\n            this.position[0].toString() +\r\n            \",\" +\r\n            this.position[1].toString();\r\n          var GaoDeUrl_start =\r\n            \"https://restapi.amap.com/v3/geocode/regeo?location=\" +\r\n            cordForLoc_start +\r\n            \"&key=75046c1d669799e3bec6503efbc94c3e\" +\r\n            \"&radius=50\";\r\n            axios\r\n            .get(GaoDeUrl_start)\r\n            .then((res) => {\r\n              this.locationName = res.data.regeocode.formatted_address.split(\r\n                \"市\"\r\n              )[res.data.regeocode.formatted_address.split(\"市\").length - 1];\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"地理编码报错：\" + err);\r\n            });\r\n            */\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 超图坐标转换为feature\r\n     */\r\n    superMapParamsToFeature(geometry) {\r\n      let coord;\r\n      let type;\r\n      switch (geometry.type) {\r\n        case \"POINT\":\r\n          type = \"Point\";\r\n          coord = [geometry.points[0].x, geometry.points[0].y];\r\n          break;\r\n        case \"LINE\":\r\n          type = \"LineString\";\r\n          coord = geometry.points.map((point) => [point.x, point.y]);\r\n          break;\r\n        case \"REGION\":\r\n          type = \"Polygon\";\r\n          coord = [geometry.points.map((point) => [point.x, point.y])];\r\n          break;\r\n      }\r\n      return {\r\n        type: \"Feature\",\r\n        geometry: {\r\n          type,\r\n          coordinates: coord,\r\n        },\r\n      };\r\n    },\r\n    featureToObject(names, values) {\r\n      let obj = {};\r\n      names.forEach((name, index) => {\r\n        obj[name] = values[index];\r\n      });\r\n      return obj;\r\n    },\r\n    // 通过超图查询设置locationName\r\n    async setLocationName(type = \"POI\") {\r\n      if (this.position) {\r\n        // 生成50m缓冲区进行查询\r\n        let geom = turf.buffer(turf.point(this.position), 0.05, {unit: 'kilometers'});\r\n        let geometry = JSON.parse(JSON.stringify(geom.geometry));\r\n        let coordinates = geometry.coordinates[0].map((item) => {\r\n          return {\r\n            x: item[0],\r\n            y: item[1],\r\n          };\r\n        });\r\n        geometry.points = coordinates;\r\n        geometry.type = \"REGION\";\r\n        delete geometry.coordinates;\r\n        let { data } = await axios({\r\n          method: \"post\",\r\n          url: superMapUrl[type].url,\r\n          data: JSON.stringify({\r\n            getFeatureMode: \"SPATIAL_ATTRIBUTEFILTER\",\r\n            datasetNames: superMapUrl[type].datasets,\r\n            attributeFilter: '',\r\n            geometry,\r\n            spatialQueryMode: \"CONTAIN\",\r\n          }),\r\n        });\r\n        if (data.totalCount) {\r\n          let arr = [];\r\n          data.features &&\r\n            data.features.forEach((item) => {\r\n              let properties = this.featureToObject(\r\n                item.fieldNames,\r\n                item.fieldValues\r\n              );\r\n              let coord = this.superMapParamsToFeature(item.geometry);\r\n              arr.push({\r\n                ...properties,\r\n                coord,\r\n              });\r\n            });\r\n          const tempData = arr.map((item) => {\r\n            item.ADRESS = item.ADRESS ? item.ADRESS.replace(\"浙江省\", \"\") : item.NAME.replace(\"浙江省\", \"\");\r\n            item.ADRESS = item.ADRESS ? item.ADRESS.replace(\"杭州市\", \"\") : item.NAME.replace(\"杭州市\", \"\");\r\n            return item;\r\n          });\r\n          if (tempData.length > 0) {\r\n            this.locationName = tempData[0].ADRESS;\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      this.locationName = '';\r\n    },\r\n    // 提交\r\n    submit() {\r\n      this.$refs.eventForm.validate(valid => {\r\n        if (valid) {\r\n          // if (!this.engInfoDTO)  {\r\n          //   uni.showToast({\r\n          //     title: \"数据不存在\",\r\n          //     duration: 3000\r\n          //   });\r\n          //   return;\r\n          // }\r\n          let copyEventForm = this.deepClone(this.eventForm);\r\n          // 上报位置\r\n          // const geom = this.computeCenter(this.feature);\r\n          const geom = {\r\n            type: \"Point\",\r\n            coordinates: this.position\r\n          }\r\n          let uploadFiles = [];\r\n          if (this.eventForm.inspTaskDetailDesc.voice.fileToken) {\r\n            uploadFiles.push(this.eventForm.inspTaskDetailDesc.voice);\r\n          }\r\n          uploadFiles = uploadFiles.concat(this.eventForm.files);\r\n          const preliminaryHandleFile = JSON.stringify(uploadFiles);\r\n          const inspOrg = JSON.parse(this.taskDetail.inspOrg);\r\n          const eventPayload = {\r\n            address: this.locationName,\r\n            conclusion: copyEventForm.eventType,\r\n            eventDescribe: this.eventForm.remark.text,\r\n            eventSource: \"inspection_event_source_inspection\",\r\n            eventType: copyEventForm.inspItemCode,\r\n            inspBusinessType: this.taskDetail.inspBusinessType,\r\n            officeId: this.taskDetail.inspOrgId,\r\n            office: inspOrg.office,\r\n            company: inspOrg.company,\r\n            companyId: inspOrg.companyId,\r\n            preliminaryHandle: this.eventForm.inspTaskDetailDesc.text,\r\n            preliminaryHandleFile: preliminaryHandleFile,\r\n            eventDescribeFile:  this.eventForm.remark.voice.fileToken ? JSON.stringify(this.eventForm.remark.voice) : \"\",\r\n            // 保存上报事件位置\r\n            regionItemText: JSON.stringify(geom),\r\n            // regionItemText: this.engInfoDTO.infoDTO.engGeom,\r\n            taskId: this.taskDetail.taskId,\r\n            // \r\n            engId: this.engInfoDTO ? this.engInfoDTO.engId : undefined,\r\n            eventItemText: JSON.stringify(geom),\r\n            // eventItemText: this.engInfoDTO.infoDTO.engGeom,\r\n\r\n            lng: geom.coordinates[0],\r\n            lat: geom.coordinates[1],\r\n            reporterId: this.userInfo.id,\r\n            reporterName: this.userInfo.userFullname\r\n          }\r\n          insert(eventPayload).then(res => {\r\n            if (res.status) {\r\n              Toast({\r\n                message: \"上报事件成功\",\r\n                duration: 3000\r\n              });\r\n              this.$router.go(-1);\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 深拷贝\r\n    deepClone(data) {\r\n      return JSON.parse(JSON.stringify(data));\r\n    },\r\n    // 计算中心点\r\n    computeCenter(feature) {\r\n      let position;\r\n      if (feature.geometry.type === 'Polygon' || feature.geometry.type === 'MultiPolygon') {\r\n        const center = turf.center(feature.geometry);\r\n        position = center.geometry;\r\n      } else if (feature.geometry.type === 'LineString') {\r\n        const center = turf.center(feature.geometry);\r\n        position = center.geometry;\r\n      } else if (feature.geometry.type === 'Point') {\r\n        position = feature.geometry;\r\n      }\r\n      return position;\r\n    },\r\n    // 根据关键字查询\r\n    async getEngPropertyVal(guid) {\r\n      const params = {\r\n        value: guid\r\n      }\r\n      const res = await engPropertyValue(params);\r\n      if (res.status) {\r\n        this.engInfoDTO = res.data;\r\n      } else {\r\n        this.engInfoDTO = null;\r\n      }\r\n    },\r\n    getEngData: _.debounce(function() {\r\n      const params = {\r\n        inspBusinessType: this.taskDetail.inspBusinessType,\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: this.position\r\n        }\r\n      }\r\n      this.setLocationName();\r\n      this.getEngList(params);\r\n    }, 500),\r\n    filterEngList(keyword) {\r\n      if (keyword) {\r\n        this.filteredList = this.engList.filter(item => item.deviceid.search(keyword) != -1);\r\n      } else {\r\n        this.filteredList = this.engList;\r\n      }\r\n    },\r\n    // 返回radius为半径范围的工程对象数据\r\n    async getEngList(position, radius = 35) {\r\n      Toast.loading({\r\n        message: \"获取25m内设施数据...\"\r\n      })\r\n      let pipeType;\r\n      switch (position.inspBusinessType) {\r\n        case \"WATER_SUPPLY\":\r\n          pipeType = \"供水管线\";\r\n          break;\r\n        case \"RAI_WATER\":\r\n          pipeType = \"雨水管线\";\r\n          break;\r\n        case \"POLLUTED_WATER\":\r\n          pipeType = \"污水管线\";\r\n          break;\r\n        case \"ORIGIN_WATER\":\r\n          pipeType = \"源水管线\";\r\n          break;\r\n        case \"RIVER_WATER\":\r\n          pipeType = \"排江管\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      const params = {\r\n        geomPoint: position.geometry,\r\n        pipeType: pipeType,\r\n        radius: radius,\r\n        type: '全部'\r\n      }\r\n      const res = await getAllPointOrLineGeomInsp(params);\r\n      // console.log(\"get all Point or Line geom==>\", res.data);\r\n      if (res && res.status) {\r\n        this.engList = res.data.map(item => {\r\n          return {\r\n            ...item,\r\n            text: item.deviceid + \" | \" + (item.pipetype || item.type),\r\n            value: item.deviceid\r\n          }\r\n        });\r\n        this.filteredList = this.engList;\r\n      }\r\n    },\r\n    chooseEng(value) {\r\n      const data = value?.detail?.data;\r\n      if (!data) return;\r\n      this.getEngPropertyVal(data.guid);\r\n      const geom = data.st_asgeojson || data.geom;\r\n      if (!geom) return;\r\n      const feature = {\r\n        id: data.id,\r\n        properties: {\r\n          ...data\r\n        },\r\n        geometry: JSON.parse(geom),\r\n        type: 'feature'\r\n      }\r\n      this.curFeature = feature;\r\n      mapObj.map.setLineGeoSource([feature], \"curInspLineSource\");\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler(to, from, next) {\r\n        if (from.path === \"/preview-image\") {\r\n          this.showVisible = true;\r\n        } else {\r\n          this.showVisible = false;\r\n        }\r\n      },\r\n    },\r\n  },\r\n  // 返回到列表页面\r\n  onBackPress(options) {\r\n    if (options.from === 'backbutton') {  \r\n      Dialog.confirm({  \r\n        title: '提示',  \r\n        message: '确定退出上报事件吗？',  \r\n      }).then((res) => {  \r\n          if (res.confirm) {  \r\n            mapObj.map.mapInstance && mapObj.map.mapInstance.destoryMap();\r\n            mapObj.map.mapInstance = null;\r\n            this.$router.push({\r\n              name: 'InspectionManage',\r\n              params: {\r\n                name: '执行',\r\n                taskId: this.taskDetail.taskId,\r\n                inspBusinessType: this.taskDetail.inspBusinessType,\r\n                reportEvent: true\r\n              }\r\n            })\r\n          }  \r\n        })\r\n      // 禁止默认返回  \r\n      return true  \r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    bus.$off(\"eventMarkerPosition\");\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.popup-container {\r\n  width: 100%;\r\n  .popup {\r\n    .head {\r\n      padding: 0.55rem 0.55rem;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      font-size: 1rem;\r\n      font-weight: 400;\r\n      color: #333333;\r\n      .on-confirm {\r\n        color: #2a83e6;\r\n      }\r\n    }\r\n  }\r\n\r\n  .scroll {\r\n    height: 33.34rem;\r\n    .event-form {\r\n      margin: 0.44rem;\r\n      .position {\r\n        width: 100%;\r\n        height: 4.44rem;\r\n      }\r\n    }\r\n  }\r\n  .submit-event {\r\n    width: 90%;\r\n    background-color: #fff;\r\n    z-index: 3;\r\n    left: 5%;\r\n    bottom: 0.3rem;\r\n    position: fixed;\r\n  }\r\n  .emergency-pull-bar {\r\n    .content {\r\n      background-color: #ffffff;\r\n      margin: 0.55rem 0.55rem;\r\n      .checkbox {\r\n        margin: 0.27rem 0.55rem;\r\n        height: 17.77rem;\r\n        overflow-y: scroll;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":"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"}]}