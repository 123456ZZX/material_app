import Vue, { PluginObject } from 'vue'
import { FawkesLibComponent, FawkesLibComponentSize, FawkesLibHorizontalAlignment } from './component'

import { FksAlert } from './alert'
import { FksAside } from './aside'
import { FksAutocomplete } from './autocomplete'
import { FksBadge } from './badge'
import { FksBreadcrumb } from './breadcrumb'
import { FksBreadcrumbItem } from './breadcrumb-item'
import { FksButton } from './button'
import { FksButtonGroup } from './button-group'
import { FksCard } from './card'
import { FksCarousel } from './carousel'
import { FksCarouselItem } from './carousel-item'
import { FksCascader } from './cascader'
import { FksCheckbox } from './checkbox'
import { FksCheckboxButton } from './checkbox-button'
import { FksCheckboxGroup } from './checkbox-group'
import { FksCol } from './col'
import { FksCollapse } from './collapse'
import { FksCollapseItem } from './collapse-item'
import { FksColorPicker } from './color-picker'
import { FksContainer } from './container'
import { FksDatePicker } from './date-picker'
import { FksDialog } from './dialog'
import { FksDropdown } from './dropdown'
import { FksDropdownItem } from './dropdown-item'
import { FksDropdownMenu } from './dropdown-menu'
import { FksFooter } from './footer'
import { FksForm } from './form'
import { FksFormItem } from './form-item'
import { FksHeader } from './header'
import { FksInput } from './input'
import { FksInputNumber } from './input-number'
import { FksLoading } from './loading'
import { FksMain } from './main'
import { FksMenu } from './menu'
import { FksMenuItem } from './menu-item'
import { FksMenuItemGroup } from './menu-item-group'
import { FksMessage } from './message'
import { FksMessageBox } from './message-box'
import { FksNotification } from './notification'
import { FksOption } from './option'
import { FksOptionGroup } from './option-group'
import { FksPagination } from './pagination'
import { FksPopover } from './popover'
import { FksProgress } from './progress'
import { FksRate } from './rate'
import { FksRadio } from './radio'
import { FksRadioButton } from './radio-button'
import { FksRadioGroup } from './radio-group'
import { FksRow } from './row'
import { FksSelect } from './select'
import { FksSlider } from './slider'
import { FksStep } from './step'
import { FksSteps } from './steps'
import { FksSubmenu } from './submenu'
import { FksSwitch } from './switch'
import { FksTable } from './table'
import { FksTableColumn } from './table-column'
import { FksTag } from './tag'
import { FksTabs } from './tabs'
import { FksTabPane } from './tab-pane'
import { FksTimeline } from './timeline'
import { FksTimelineItem } from './timeline-item'
import { FksTimePicker } from './time-picker'
import { FksTimeSelect } from './time-select'
import { FksTooltip } from './tooltip'
import { FksTransfer } from './transfer'
import { FksTree, TreeData } from './tree'
import { FksUpload } from './upload'
import { FksLink } from './link'
import { FksDivider } from './divider'
import { FksIcon } from './icon'
import { FksCalendar } from './calendar'
import { FksImage } from './image'
import { FksBacktop } from './backtop'
import { FksInfiniteScroll } from './infinite-scroll'
import { FksPageHeader } from './page-header'
import { FksAvatar } from './avatar'
import { FksDrawer } from './drawer'
import { FksPopconfirm } from './popconfirm'

export interface InstallationOptions {
  locale: any,
  i18n: any,
  size: string
}

/** The version of fawkes-lib */
export const version: string

/**
 * Install all fawkes-lib components into Vue.
 * Please do not invoke this method directly.
 * Call `Vue.use(FawkesLib)` to install.
 */
export function install(vue: typeof Vue, options: InstallationOptions): void

/** FawkesLib component common definition */
export type Component = FawkesLibComponent

/** Component size definition for button, input, etc */
export type ComponentSize = FawkesLibComponentSize

/** Horizontal alignment */
export type HorizontalAlignment = FawkesLibHorizontalAlignment

/** Show animation while loading data */
export const Loading: FksLoading

/** Used to show feedback after an activity. The difference with Notification is that the latter is often used to show a system level passive notification. */
export const Message: FksMessage

/** A set of modal boxes simulating system message box, mainly for message prompt, success tips, error messages and query information */
export const MessageBox: FksMessageBox

/** Displays a global notification message at the upper right corner of the page */
export const Notification: FksNotification

// TS cannot merge imported class with namespace, so declare subclasses instead

/** Alert Component */
export class Alert extends FksAlert { }

/** Aside Component */
export class Aside extends FksAside { }

/** Autocomplete Component */
export class Autocomplete extends FksAutocomplete { }

/** Bagde Component */
export class Badge extends FksBadge { }

/** Breadcrumb Component */
export class Breadcrumb extends FksBreadcrumb { }

/** Breadcrumb Item Component */
export class BreadcrumbItem extends FksBreadcrumbItem { }

/** Button Component */
export class Button extends FksButton { }

/** Button Group Component */
export class ButtonGroup extends FksButtonGroup { }

/** Card Component */
export class Card extends FksCard { }

/** Cascader Component */
export class Cascader extends FksCascader { }

/** Carousel Component */
export class Carousel extends FksCarousel { }

/** Carousel Item Component */
export class CarouselItem extends FksCarouselItem { }

/** Checkbox Component */
export class Checkbox extends FksCheckbox { }

/** Checkbox Button Component */
export class CheckboxButton extends FksCheckboxButton { }

/** Checkbox Group Component */
export class CheckboxGroup extends FksCheckboxGroup { }

/** Colunm Layout Component */
export class Col extends FksCol { }

/** Collapse Component */
export class Collapse extends FksCollapse { }

/** Collapse Item Component */
export class CollapseItem extends FksCollapseItem { }

/** Color Picker Component */
export class ColorPicker extends FksColorPicker { }

/** Container Component */
export class Container extends FksContainer { }

/** Date Picker Component */
export class DatePicker extends FksDatePicker { }

/** Dialog Component */
export class Dialog extends FksDialog { }

/** Dropdown Component */
export class Dropdown extends FksDropdown { }

/** Dropdown Item Component */
export class DropdownItem extends FksDropdownItem { }

/** Dropdown Menu Component */
export class DropdownMenu extends FksDropdownMenu { }

/** Footer Component */
export class Footer extends FksFooter { }

/** Form Component */
export class Form extends FksForm { }

/** Form Item Component */
export class FormItem extends FksFormItem { }

/** Header Component */
export class Header extends FksHeader { }

/** Input Component */
export class Input extends FksInput { }

/** Input Number Component */
export class InputNumber extends FksInputNumber { }

/** Main Component */
export class Main extends FksMain { }

/** Menu that provides navigation for your website */
export class Menu extends FksMenu { }

/** Menu Item Component */
export class MenuItem extends FksMenuItem { }

/** Menu Item Group Component */
export class MenuItemGroup extends FksMenuItemGroup { }

/** Dropdown Select Option Component */
export class Option extends FksOption { }

/** Dropdown Select Option Group Component */
export class OptionGroup extends FksOptionGroup { }

/** Pagination Component */
export class Pagination extends FksPagination { }

/** Popover Component */
export class Popover extends FksPopover { }

/** Progress Component */
export class Progress extends FksProgress { }

/** Rate Component */
export class Rate extends FksRate { }

/** Radio Component */
export class Radio extends FksRadio { }

/** Radio Button Component */
export class RadioButton extends FksRadioButton { }

/** Radio Group Component */
export class RadioGroup extends FksRadioGroup { }

/** Row Layout Component */
export class Row extends FksRow { }

/** Dropdown Select Component */
export class Select extends FksSelect { }

/** Slider Component */
export class Slider extends FksSlider { }

/** Step Component */
export class Step extends FksStep { }

/** Steps Component */
export class Steps extends FksSteps { }

/** Submenu Component */
export class Submenu extends FksSubmenu { }

/** Switch Component */
export class Switch extends FksSwitch { }

/** Table Component */
export class Table extends FksTable { }

/** Table Column Component */
export class TableColumn extends FksTableColumn { }

/** Tabs Component */
export class Tabs extends FksTabs { }

/** Tab Pane Component */
export class TabPane extends FksTabPane { }

/** Tag Component */
export class Tag extends FksTag { }

/** Timeline Component */
export class Timeline extends FksTimeline { }

/** Timeline Item Component */
export class TimelineItem extends FksTimelineItem { }

/** TimePicker Component */
export class TimePicker extends FksTimePicker { }

/** TimeSelect Component */
export class TimeSelect extends FksTimeSelect { }

/** Tooltip Component */
export class Tooltip extends FksTooltip { }

/** Transfer Component */
export class Transfer extends FksTransfer { }

/** Tree Component */
export class Tree<K = any, D = TreeData> extends FksTree<K, D> { }

/** Upload Component */
export class Upload extends FksUpload { }

/** Divider Component */
export class Divider extends FksDivider { }

/** Link Component */
export class Link extends FksLink { }

/** Image Component */
export class Image extends FksImage { }

/** Icon Component */
export class Icon extends FksIcon { }

/** Calendar Component */
export class Calendar extends FksCalendar { }

/** Backtop Component */
export class Backtop extends FksBacktop { }

/** InfiniteScroll Directive */
export const InfiniteScroll: PluginObject<ElInfiniteScroll>

/** PageHeader Component */
export class PageHeader extends FksPageHeader { }

/** Avatar Component */
export class Avatar extends FksAvatar { }

/** Drawer Component */
export class Drawer extends FksDrawer { }

/** Popconfirm Component */
export class Popconfirm extends FksPopconfirm { }
