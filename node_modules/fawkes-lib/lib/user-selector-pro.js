module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 113);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent(
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */,
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options =
    typeof scriptExports === 'function' ? scriptExports.options : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) {
    // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
          injectStyles.call(
            this,
            (options.functional ? this.parent : this).$root.$options.shadowRoot
          )
        }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 113:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector.vue?vue&type=template&id=f1ec1ecc&
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-user-selector-pro-page", style: { width: _vm.width } },
    [
      _c("span", { on: { click: _vm.open } }, [_vm._t("reference")], 2),
      !_vm.reference
        ? _c(
            "div",
            { staticClass: "fks-user-selector-input", on: { click: _vm.open } },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "fks-user-selector-input__tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                    "is-disabled": _vm.uploadReadOnly || _vm.forbidden,
                  },
                },
                [
                  _vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.sureList.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  class: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                  },
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.sureList[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.sureList[0].userFullname)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.sureList.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        "+ " + _vm._s(_vm.sureList.length - 1)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        _vm._l(_vm.sureList, function (tag, index) {
                          return _c(
                            "fks-tag",
                            {
                              key: index,
                              class: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                              },
                              attrs: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                                size: _vm.size,
                                "disable-transitions": "",
                                type: "info",
                              },
                              on: {
                                close: function ($event) {
                                  return _vm.deleteOne(tag)
                                },
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v(_vm._s(tag.userFullname))]
                              ),
                            ]
                          )
                        }),
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "div",
                [
                  _c(
                    "fks-input",
                    {
                      ref: "input",
                      staticClass: "fks-user-out-input",
                      attrs: {
                        readonly: "",
                        disabled: _vm.forbidden,
                        value: _vm.username,
                        size: _vm.size,
                        placeholder:
                          _vm.sureList.length > 0
                            ? ""
                            : _vm.placeholder
                            ? _vm.placeholder
                            : _vm.t("fks.user.placeholder"),
                      },
                    },
                    [
                      !_vm.uploadReadOnly && !_vm.forbidden
                        ? _c("template", { slot: "suffix" }, [
                            _c("i", {
                              staticClass:
                                "fks-icon-circle-plus-outline fks-input__icon",
                              staticStyle: { cursor: "pointer" },
                              on: { click: _vm.open },
                            }),
                          ])
                        : _vm._e(),
                    ],
                    2
                  ),
                ],
                1
              ),
            ]
          )
        : _vm._e(),
      _c(
        "user-selector-dialog",
        _vm._b(
          {
            attrs: {
              multiple: _vm.multiple,
              showAllUser: _vm.showAllUser,
              multipleLimit: _vm.multipleLimit,
              visual: _vm.visible,
              userSureList: _vm.sureList,
              params: _vm.params,
              url: _vm.url,
              headers: _vm.headers,
            },
            on: {
              "update:visual": function ($event) {
                _vm.visible = $event
              },
              "update:userSureList": function ($event) {
                _vm.sureList = $event
              },
              "update:user-sure-list": function ($event) {
                _vm.sureList = $event
              },
            },
          },
          "user-selector-dialog",
          _vm.$attrs,
          false
        )
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue?vue&type=template&id=f1ec1ecc&

// EXTERNAL MODULE: ./src/mixins/selector.js
var selector = __webpack_require__(24);

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/locale"
var locale_ = __webpack_require__(4);
var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=template&id=4bbe1823&
var user_selector_dialogvue_type_template_id_4bbe1823_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-dialog",
    {
      attrs: {
        visible: _vm.visual,
        width: "1200px",
        top: "8vh",
        "append-to-body": "",
        "custom-class": "fks-user-transfer-pro-dialog " + _vm.customClass,
        "before-close": _vm.closeDialog,
      },
    },
    [
      _c("template", { slot: "title" }, [
        _c("i", { staticClass: "fks-icon-user" }),
        _c("span", [_vm._v(_vm._s(_vm.t("fks.user.selectmember")))]),
      ]),
      _c(
        "fks-row",
        { staticClass: "fks-user-transfer-container", attrs: { gutter: 68 } },
        [
          _c(
            "fks-col",
            { attrs: { span: 16 } },
            [
              _c(
                "div",
                { staticClass: "fks-user-selector-bar" },
                [
                  _c("span", { staticClass: "bolder" }, [
                    _vm._v(_vm._s(_vm.t("fks.selectorPro.select"))),
                  ]),
                  _vm.multiPortal
                    ? [
                        _c(
                          "fks-popover",
                          {
                            staticClass: "fks-selector-page",
                            attrs: {
                              "popper-class": "fks-popover-portal-tree",
                            },
                            model: {
                              value: _vm.portalTreeVisible,
                              callback: function ($$v) {
                                _vm.portalTreeVisible = $$v
                              },
                              expression: "portalTreeVisible",
                            },
                          },
                          [
                            _c("PortalTree", {
                              attrs: {
                                portalId: _vm.portalId,
                                portal: _vm.activePortal,
                                portalFilter: _vm.portalFilter,
                              },
                              on: {
                                "update:portalId": function ($event) {
                                  _vm.portalId = $event
                                },
                                "update:portal-id": function ($event) {
                                  _vm.portalId = $event
                                },
                                "update:portal": function ($event) {
                                  _vm.activePortal = $event
                                },
                              },
                            }),
                            _c(
                              "span",
                              {
                                class: [
                                  "fks-popover__reference",
                                  !_vm.activePortal && "lighter",
                                ],
                                attrs: { slot: "reference" },
                                slot: "reference",
                              },
                              [
                                _c("span", { staticClass: "reference-title" }, [
                                  _vm._v(
                                    _vm._s(
                                      (_vm.activePortal &&
                                        _vm.activePortal.name) ||
                                        _vm.t(
                                          "fks.selectorPro.placeSelectPortal"
                                        )
                                    )
                                  ),
                                ]),
                                _c("i", {
                                  directives: [
                                    {
                                      name: "show",
                                      rawName: "v-show",
                                      value: _vm.portalId,
                                      expression: "portalId",
                                    },
                                  ],
                                  staticClass:
                                    "fks-icon-circle-close hover-icon",
                                  on: {
                                    click: function ($event) {
                                      $event.stopPropagation()
                                      _vm.portalId = ""
                                    },
                                  },
                                }),
                                _c("i", {
                                  class:
                                    "fks-icon-arrow-" +
                                    (_vm.portalTreeVisible ? "up" : "down"),
                                }),
                              ]
                            ),
                          ],
                          1
                        ),
                      ]
                    : _vm._e(),
                  _c(
                    "fks-org-selector-pro",
                    _vm._b(
                      {
                        ref: "orgSel",
                        attrs: {
                          width: "120px",
                          showAllUser: _vm.showAllUser,
                          deptId: _vm.deptid,
                          params: _vm.orgParams,
                        },
                        on: {
                          "update:deptId": function ($event) {
                            _vm.deptid = $event
                          },
                          "update:dept-id": function ($event) {
                            _vm.deptid = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "reference",
                            fn: function (ref) {
                              var popflag = ref.popflag
                              var selectedArray = ref.selectedArray
                              return [
                                _c(
                                  "span",
                                  {
                                    class: [
                                      "fks-popover__reference",
                                      _vm.deptid || "lighter",
                                    ],
                                  },
                                  [
                                    _c(
                                      "span",
                                      { staticClass: "reference-title" },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.getSelectorStr(selectedArray) ||
                                              _vm.orgSelectorProps
                                                .placeholder ||
                                              _vm.t("fks.org.selectbranch")
                                          )
                                        ),
                                      ]
                                    ),
                                    _c("i", {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.deptid,
                                          expression: "deptid",
                                        },
                                      ],
                                      staticClass:
                                        "fks-icon-circle-close hover-icon",
                                      on: {
                                        click: function ($event) {
                                          $event.stopPropagation()
                                          _vm.deptid = ""
                                        },
                                      },
                                    }),
                                    _c("i", {
                                      class:
                                        "fks-icon-arrow-" +
                                        (popflag ? "up" : "down"),
                                    }),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      },
                      "fks-org-selector-pro",
                      _vm.orgProps,
                      false
                    )
                  ),
                  _c(
                    "fks-post-selector-pro",
                    _vm._b(
                      {
                        ref: "postSel",
                        attrs: {
                          width: "120px",
                          showAllUser: _vm.showAllUser,
                          params: _vm.postParams,
                          postId: _vm.postId,
                        },
                        on: {
                          "update:postId": function ($event) {
                            _vm.postId = $event
                          },
                          "update:post-id": function ($event) {
                            _vm.postId = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "reference",
                            fn: function (ref) {
                              var popflag = ref.popflag
                              var selectedArray = ref.selectedArray
                              return [
                                _c(
                                  "span",
                                  {
                                    class: [
                                      "fks-popover__reference",
                                      _vm.postId || "lighter",
                                    ],
                                  },
                                  [
                                    _c(
                                      "span",
                                      { staticClass: "reference-title" },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.getSelectorStr(selectedArray) ||
                                              _vm.postSelectorProps
                                                .placeholder ||
                                              _vm.t("fks.post.selectpost")
                                          )
                                        ),
                                      ]
                                    ),
                                    _c("i", {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.postId,
                                          expression: "postId",
                                        },
                                      ],
                                      staticClass:
                                        "fks-icon-circle-close hover-icon",
                                      on: {
                                        click: function ($event) {
                                          $event.stopPropagation()
                                          _vm.postId = ""
                                        },
                                      },
                                    }),
                                    _c("i", {
                                      class:
                                        "fks-icon-arrow-" +
                                        (popflag ? "up" : "down"),
                                    }),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      },
                      "fks-post-selector-pro",
                      _vm.postProps,
                      false
                    )
                  ),
                  _c(
                    "fks-input",
                    {
                      attrs: {
                        placeholder: _vm.t("fks.user.searchname"),
                        maxlength: 50,
                        size: "medium",
                      },
                      nativeOn: {
                        keyup: function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          return _vm.searchUser.apply(null, arguments)
                        },
                      },
                      model: {
                        value: _vm.searchKey,
                        callback: function ($$v) {
                          _vm.searchKey = $$v
                        },
                        expression: "searchKey",
                      },
                    },
                    [
                      _c("i", {
                        staticClass: "fks-input__icon fks-icon-search",
                        attrs: { slot: "suffix" },
                        on: {
                          click: function ($event) {
                            $event.stopPropagation()
                            return _vm.searchUser.apply(null, arguments)
                          },
                        },
                        slot: "suffix",
                      }),
                    ]
                  ),
                ],
                2
              ),
              _c(
                "fks-table",
                {
                  directives: [
                    {
                      name: "loading",
                      rawName: "v-loading",
                      value: _vm.loading,
                      expression: "loading",
                    },
                  ],
                  ref: "table",
                  staticStyle: { width: "100%" },
                  attrs: {
                    data: _vm.tableList,
                    "row-key": "userName",
                    "highlight-current-row": "",
                    height: "400px",
                    border: "",
                  },
                  on: {
                    "sort-change": _vm.sortHandler,
                    "row-click": _vm.handleClickRow,
                    "current-change": _vm.handleCurrentSelectionChange,
                    select: _vm.handleSelectionChange,
                    "select-all": _vm.selectAll,
                  },
                },
                [
                  _vm.multiple
                    ? _c("fks-table-column", {
                        attrs: {
                          selectable: _vm.selectable,
                          type: "selection",
                          width: "55",
                        },
                      })
                    : _vm._e(),
                  _c("fks-table-column", {
                    attrs: {
                      prop: "userFullname",
                      label: _vm.t("fks.user.name"),
                      width: "120",
                      sortable: "custom",
                    },
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      prop: "userName",
                      label: _vm.t("fks.user.username"),
                      width: "120",
                    },
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      label: _vm.t("fks.user.belongbranch"),
                      "show-overflow-tooltip": "",
                      "min-width": "35%",
                      "class-name": "my-table-tc1",
                      align: "left",
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (scope) {
                          return [_vm._v(_vm._s(_vm.getOrgStr(scope.row)))]
                        },
                      },
                    ]),
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      label: _vm.t("fks.user.belongpost"),
                      "show-overflow-tooltip": "",
                      "min-width": "35%",
                      "class-name": "my-table-tc1",
                      align: "left",
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (scope) {
                          return [_vm._v(_vm._s(_vm.getPostStr(scope.row)))]
                        },
                      },
                    ]),
                  }),
                ],
                1
              ),
              _c(
                "div",
                { staticClass: "fks-user-left-page" },
                [
                  _c("fks-pagination", {
                    attrs: {
                      "pager-count": 5,
                      "page-sizes": [25, 50, 100, 200],
                      "page-size": _vm.pageSize,
                      total: _vm.totalCount,
                      layout: "prev, pager, next,total, sizes",
                    },
                    on: {
                      "size-change": _vm.handleSizeChange,
                      "current-change": _vm.handleCurrentChange,
                    },
                  }),
                ],
                1
              ),
            ],
            1
          ),
          _c("fks-col", { attrs: { span: 8 } }, [
            _c(
              "div",
              { staticClass: "right-button" },
              [
                _c(
                  "fks-button",
                  {
                    staticClass: "second-button",
                    attrs: { size: "small", plain: "" },
                    on: { click: _vm.clearChosed },
                  },
                  [
                    _c("i", { staticClass: "fks-icon-reset" }),
                    _vm._v(_vm._s(_vm.t("fks.clear"))),
                  ]
                ),
              ],
              1
            ),
            _c("div", { staticClass: "fks-user-right-transfer" }, [
              _c("div", { staticClass: "fks-user-right-transfer__title" }, [
                _vm._v(
                  "\n          " +
                    _vm._s(
                      _vm.t("fks.user.selectedmember") +
                        "（" +
                        _vm.chosedList.length +
                        "）"
                    ) +
                    "\n        "
                ),
              ]),
              _c(
                "div",
                { staticClass: "fks-user-right-transfer__content" },
                [
                  _c(
                    "fks-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        data: _vm.chosedList,
                        height: "436px",
                        "header-row-class-name": "my-table-head",
                        "row-class-name": "my-table-row",
                        border: "",
                      },
                      on: { "row-click": _vm.deletPerson },
                    },
                    [
                      _c("fks-table-column", {
                        attrs: {
                          prop: "userFullname",
                          label: _vm.t("fks.user.name"),
                          "min-width": "20%",
                        },
                      }),
                      _c("fks-table-column", {
                        attrs: {
                          prop: "userName",
                          label: _vm.t("fks.user.username"),
                          "min-width": "25%",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ]),
          ]),
        ],
        1
      ),
      _c(
        "div",
        {
          staticClass: "fks-user-transfer-footer",
          attrs: { slot: "footer" },
          slot: "footer",
        },
        [
          _c(
            "fks-row",
            [
              _c(
                "fks-button",
                {
                  attrs: { icon: "fks-icon-check", type: "primary" },
                  on: { click: _vm.subUser },
                },
                [_vm._v(_vm._s(_vm.t("fks.confirm")))]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    2
  )
}
var user_selector_dialogvue_type_template_id_4bbe1823_staticRenderFns = []
user_selector_dialogvue_type_template_id_4bbe1823_render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=template&id=4bbe1823&

// EXTERNAL MODULE: external "throttle-debounce/debounce"
var debounce_ = __webpack_require__(20);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

// EXTERNAL MODULE: ./src/utils/request.js + 2 modules
var request = __webpack_require__(13);

// EXTERNAL MODULE: ./packages/selector-component/portalTree.vue + 4 modules
var portalTree = __webpack_require__(29);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var user_selector_dialogvue_type_script_lang_js_ = ({
  name: 'UserSelectorDialog',
  components: { PortalTree: portalTree["a" /* default */] },
  mixins: [selector["a" /* default */], locale_default.a],
  props: {

    customClass: {
      type: String,
      default: ''
    },
    filterLogout: {
      type: Boolean,
      default: true
    },
    multiPortal: {
      type: Boolean,
      default: false
    },
    multiple: {
      type: Boolean,
      defalut: false
    },
    userSureList: {
      type: Array
    },
    visual: {
      type: Boolean,
      defalut: false
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    urlParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {},
    url: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/v2/users/page'
    },
    multipleLimit: {
      type: Number,
      default: 0
    },
    portalFilter: { // 门户筛选
      type: Object,
      default: function _default(data) {
        return data;
      }
    },
    postSelectorProps: { // 岗位选择器props
      type: Object,
      default: function _default() {
        return {};
      }
    },
    orgSelectorProps: { // 部门选择器props
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    var portal = JSON.parse(this.$storage.get('portal') || null) || {};
    return {
      sort: '',
      roleReadonly: false,
      visible: false,
      roleValue: '', // 角色选择器value
      ifDataRender: false, // 初次打开时部门选择器数据是否渲染完成
      ifChooseFirst: false, // 是否是打开时初始化部门选择器动作（防止触发handleDeptChange
      searchKey: '',
      // table data relative
      loading: false,
      tableList: [],
      chosedList: [],
      // 分页相关
      pageSize: 25,
      totalCount: 0,
      currentPage: 1,
      totalPage: 1,
      deptid: '',
      postId: '',
      portalId: portal.id || '',
      activePortal: {},
      portalTreeVisible: false,
      postTemp: {
        id: '',
        name: this.t('fks.selectorPro.all')
      },
      orgTemp: {
        id: '',
        name: this.t('fks.selectorPro.all')
      },
      orgProps: this.orgSelectorProps,
      postProps: this.postSelectorProps,
      enterFirst: true // 是否组件渲染后初次打开（涉及最近添加页逻辑
    };
  },

  computed: {
    usersParams: function usersParams() {
      var temp = {
        portalId: this.portalId,
        orgNo: this.deptid,
        postId: this.postId,
        searchValue: this.searchKey.trim(),
        pageSize: this.pageSize,
        pageNo: this.currentPage,
        sort: this.sort,
        accountStatus: this.filterLogout ? '1' : ''
      };
      if (this.showAllUser) {
        temp.portalId = '';
      }
      return temp;
    },
    orgParams: function orgParams() {
      var params = {};
      this.params.orgNo && (params.id = this.params.orgNo);
      params.portalId = this.portalId;

      return params;
    },
    postParams: function postParams() {
      var params = {};
      this.orgParams.id && (params.orgNo = this.orgParams.id);
      params.portalId = this.portalId;

      return params;
    }
  },
  watch: {
    showAllUser: function showAllUser(val) {
      if (val) {
        this.orgProps = Object.assign({}, this.orgProps, { multiPortal: false });
        this.postprops = Object.assign({}, this.postprops, { multiPortal: false });
      }
    },

    params: {
      handler: function handler(val) {
        var orgNo = val.orgNo,
            postId = val.postId,
            portalId = val.portalId;

        portalId !== undefined && (this.portalId = portalId);
        orgNo !== undefined && (this.deptid = orgNo);
        postId !== undefined && (this.postId = postId);
      },

      deep: true,
      immediate: true
    },
    // 请求user接口
    usersParams: {
      handler: function handler(val) {
        this.getUserDebounce();
      },

      deep: true
    },
    portalId: function portalId() {
      this.deptid = '';
      this.postId = '';
      this.portalTreeVisible = false;
    },

    // 关闭pop框
    deptid: function deptid() {
      if (this.orgSelectorProps.multiple) return;
      this.$refs.orgSel.popflag = false;
      this.currentPage = 1;
    },
    postId: function postId() {
      if (this.postSelectorProps.multiple) return;
      this.$refs.postSel.popflag = false;
      this.currentPage = 1;
    },
    userSureList: function userSureList(val) {
      this.chosedList = [].concat(val);
      this.initSelection();
    },

    // 无数据时打开弹窗请求数据、适用于首次打开弹窗
    visual: function visual(val) {
      val && !this.tableList.length && this.getUserDebounce();
    }
  },
  methods: {
    getOrgStr: function getOrgStr(row) {
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};
      if (this.showAllUser && portal.id) {
        return row.orgList ? row.orgList.length ? row.orgList.map(function (item) {
          return item.portalId !== portal.id ? '' : item.name;
        }).filter(function (item) {
          return item !== '';
        }).toString() : '' : '';
      }
      return row.orgList ? row.orgList.length ? row.orgList.map(function (item) {
        return item.name;
      }).toString() : '' : '';
    },
    getPostStr: function getPostStr(row) {
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};

      if (this.showAllUser && portal.id) {
        return row.postList ? row.postList.length ? row.postList.map(function (item) {
          return item.portalId !== portal.id ? '' : item.postName;
        }).filter(function (item) {
          return item !== '';
        }).toString() : '' : '';
      }
      return row.postList ? row.postList.length ? row.postList.map(function (item) {
        return item.postName;
      }).toString() : '' : '';
    },
    getSelectorStr: function getSelectorStr(selectedArray) {
      return selectedArray.length && selectedArray.map(function (item) {
        return item.name;
      }).toString();
    },

    // 点击触发
    handleClickRow: function handleClickRow(row) {
      if (!this.multiple) return;
      if (!this.selectable(row)) return;
      this.$refs.table.toggleRowSelection(row);
      var index = this.chosedList.findIndex(function (item) {
        return item.userName === row.userName;
      });
      if (index >= 0) {
        this.chosedList.splice(index, 1);
      } else {
        this.chosedList.unshift(row);
      }
    },

    // 判断是否可选择
    selectable: function selectable(row) {
      if (this.multipleLimit <= 0 || this.multipleLimit > this.chosedList.length) return true;
      if (this.$refs.table.selection.includes(row)) return true;
      return false;
    },

    // closedList修改后修正table中的selection
    initSelection: function initSelection() {
      var _this = this;

      if (!this.$refs.table) return;
      this.$refs.table.clearSelection();
      this.chosedList.forEach(function (item) {
        var row = _this.tableList.find(function (row) {
          return row.userName === item.userName;
        });
        row && _this.$refs.table.toggleRowSelection(row);
      });
    },
    sortHandler: function sortHandler(data) {
      this.sort = data.order == 'ascending' ? 'asc' : 'desc';
    },
    initParams: function initParams() {
      this.deptid = this.params.orgNo || '';
      this.postId = this.params.postId || '';
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};
      this.portalId = this.params.portalId !== undefined ? this.params.portalId : portal.id;
      this.searchKey = '';
    },

    // 直接关闭弹窗还原chosedList
    closeDialog: function closeDialog() {
      this.initParams();
      this.chosedList = [].concat(this.userSureList);
      this.initSelection();
      this.$emit('update:visual', false);
    },

    // @select事件触发、删除或添加
    handleSelectionChange: function handleSelectionChange(selection, row) {
      if (selection.includes(row)) {
        this.chosedList.unshift(row);
      } else {
        var index = this.chosedList.findIndex(function (item) {
          return item.userName === row.userName;
        });
        index >= 0 && this.chosedList.splice(index, 1);
      }
    },

    // 单选通过@current-change触发
    handleCurrentSelectionChange: function handleCurrentSelectionChange(row) {
      if (this.multiple) return;
      this.chosedList = [row];
    },
    deletPerson: function deletPerson(row, column, event) {
      // 左右穿梭框数据的删除
      this.chosedList.splice(this.chosedList.indexOf(row), 1);
      var tRow = this.tableList.find(function (item) {
        return row.userName === item.userName;
      });
      tRow && this.$refs.table.toggleRowSelection(tRow);
    },

    // 全选
    selectAll: function selectAll(selection, checked) {
      var _this2 = this;

      if (checked) {
        var nobj = {};
        this.chosedList = [].concat(this.chosedList, selection).reduce(function (tal, val) {
          if (_this2.multipleLimit > 0 && tal.length >= _this2.multipleLimit) return tal;
          nobj[val.userName] ? '' : nobj[val.userName] = tal.push(val);
          return tal;
        }, []);
      } else {
        var ids = this.tableList.map(function (item) {
          return item.userName;
        });
        this.chosedList = this.chosedList.flatMap(function (item) {
          return ids.includes(item.userName) ? [] : [item];
        });
      }
      this.initSelection();
    },
    clearChosed: function clearChosed() {
      // 清空已选
      this.chosedList = [];
      this.$refs.table.clearSelection();
    },
    searchUser: function searchUser() {
      // 按人员搜索，触发条件是onchange,每次搜索都要重新请求数据，并不是在已有的数据下进行过滤
      this.getUserDebounce();
    },
    clearSearchKey: function clearSearchKey() {
      // 清空按账号或姓名搜索框
      this.searchKey = '';
    },
    handleSizeChange: function handleSizeChange(val) {
      // 更改每页条数需要重新请求数据
      this.pageSize = val;
      this.currentPage = 1;
    },
    handleCurrentChange: function handleCurrentChange(val) {
      // 切换当前页需要重新请求数据
      this.currentPage = val;
    },
    jumpPage: function jumpPage(val) {
      if (val === 'first') {
        this.currentPage = 1;
      } else {
        this.currentPage = this.totalPage;
      }
    },
    getUserList: function getUserList() {
      var _this3 = this;

      this.loading = true;
      var params = Object.assign({}, this.usersParams, this.urlParams);
      var r = this.$axios || request["a" /* default */];
      var tempURL = this.url + this.urlPath;
      r({
        method: 'get',
        url: tempURL,
        params: params,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          // 排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this3.tableList = response.data.content || response.data.list;
          // 将其他门户下的岗位和部门数据处理为空格

          _this3.totalCount = response.data.totalElements || response.data.total;
          _this3.totalPage = response.data.totalPages || response.data.pages;
          _this3.loading = false;
          _this3.$nextTick(function () {
            _this3.initSelection();
          });
        } else {
          _this3.loading = false;
        }
      }).catch(function (err) {
        _this3.loading = false;
        console.log(err);
      });
    },
    subUser: function subUser() {
      this.$emit('update:userSureList', this.chosedList.concat());
      // 提交时不清空已选
      this.initParams();
      this.$emit('update:visual', false);
    }
  },
  mounted: function mounted() {
    // 防抖
    this.getUserDebounce = debounce_default()(500, this.getUserList);
  }
});
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_user_selector_dialogvue_type_script_lang_js_ = (user_selector_dialogvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(0);

// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_user_selector_dialogvue_type_script_lang_js_,
  user_selector_dialogvue_type_template_id_4bbe1823_render,
  user_selector_dialogvue_type_template_id_4bbe1823_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var user_selector_dialog = (component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var user_selectorvue_type_script_lang_js_ = ({
  name: 'FksUserSelectorPro',
  mixins: [selector["a" /* default */], locale_default.a],
  components: { UserSelectorDialog: user_selector_dialog },
  props: {

    placeholder: {
      type: String,
      default: ''
    },
    username: {
      type: String,
      default: ''
    },
    userfullname: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    return {
      visible: false,
      reference: '', // slot对应
      sureList: [] // 显示tags用
    };
  },

  watch: {
    username: function username(val, oval) {
      if (val !== oval) {
        this.initialList();
      }
    },
    sureList: function sureList(val) {
      this.updateProps(val);
    }
  },
  methods: {
    clearData: function clearData() {
      this.sureList = [];
    },
    updateProps: function updateProps(val) {
      var usernameStr = '';
      var userfullnameStr = '';
      if (val.length == 0) {
        this.$emit('update:username', '');
        this.$emit('update:userfullname', '');
        this.$emit('change', val);
      } else {
        val.forEach(function (item) {
          usernameStr += item.userName + ',';
          userfullnameStr += item.userFullname + ',';
        });
        this.$emit('update:username', usernameStr.substring(0, usernameStr.length - 1));
        this.$emit('update:userfullname', userfullnameStr.substring(0, userfullnameStr.length - 1));
        this.$emit('change', val);
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    // 根据username初始化tag输入框
    initialList: function initialList() {
      var _this = this;

      var userfullnameArr = this.userfullname ? this.userfullname.split(',') : [];
      var usernameArr = this.username ? this.username.split(',') : [];
      var len = userfullnameArr.length;
      var len2 = usernameArr.length;

      if (this.userfullname && this.username) {
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u4EBA\u5458\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u4EBA\u5458\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          this.sureList = [];
          usernameArr.forEach(function (e, index) {
            var obj = {
              userFullname: userfullnameArr[index],
              userName: e
            };
            _this.sureList.push(obj);
          });
        }
      } else if (!this.userfullname && !this.username) {
        this.sureList = [];
      } else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u4EBA\u5458\u6570\u636E,\u4EBA\u5458id\u548C\u4EBA\u5458\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 打开选人面板
     * @param {}
     * @return:
     */
    open: function open() {
      if (this.uploadReadOnly || this.forbidden) {
        return false;
      }
      this.visible = true;
    },
    deleteOne: function deleteOne(tag) {
      // 删除标签中的人员
      this.sureList.splice(this.sureList.findIndex(function (item) {
        return item.userName == tag.userName;
      }), 1);
    }
  },
  mounted: function mounted() {
    /** 获取slot内容，判断显示内容 */
    this.reference = '';
    if (this.$slots.reference && this.$slots.reference[0]) {
      this.reference = this.$slots.reference[0].elm;
    }
    this.initialList();
  }
});
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_user_selectorvue_type_script_lang_js_ = (user_selectorvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue





/* normalize component */

var user_selector_component = Object(componentNormalizer["a" /* default */])(
  src_user_selectorvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var user_selector = (user_selector_component.exports);
// CONCATENATED MODULE: ./packages/user-selector-pro/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
user_selector.install = function (Vue) {
  Vue.component(user_selector.name, user_selector);
};

// 默认导出组件
/* harmony default export */ var user_selector_pro = __webpack_exports__["default"] = (user_selector);

/***/ }),

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "axios"
var external_axios_ = __webpack_require__(16);
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_);

// EXTERNAL MODULE: external "qs"
var external_qs_ = __webpack_require__(25);
var external_qs_default = /*#__PURE__*/__webpack_require__.n(external_qs_);

// EXTERNAL MODULE: external "crypto-js/hmac-sha1"
var hmac_sha1_ = __webpack_require__(18);
var hmac_sha1_default = /*#__PURE__*/__webpack_require__.n(hmac_sha1_);

// EXTERNAL MODULE: external "crypto-js/enc-base64"
var enc_base64_ = __webpack_require__(19);
var enc_base64_default = /*#__PURE__*/__webpack_require__.n(enc_base64_);

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(5);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/types"
var types_ = __webpack_require__(8);

// CONCATENATED MODULE: ./src/utils/util.js
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}
/**
 * @description 生成UUID
 * @param {Integer} len uuid长度
 * @param {Integer} radix uuid基数
 * @returns {String} UUID
 */
function uuid(len, radix) {
  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
  var uuid = [],
      i = void 0;
  radix = radix || chars.length;

  if (len) {
    // Compact form
    for (i = 0; i < len; i++) {
      uuid[i] = chars[0 | Math.random() * radix];
    }
  } else {
    // rfc4122, version 4 form
    var r = void 0;
    // rfc4122 requires these characters
    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
    uuid[14] = '4';
    // Fill in random data.  At i==19 set the high bits of clock sequence as
    // per rfc4122, sec. 4.1.5
    for (i = 0; i < 36; i++) {
      if (!uuid[i]) {
        r = 0 | Math.random() * 16;
        uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];
      }
    }
  }
  return uuid.join('');
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || '';
  var paths = prop.split('.');
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, '.$1');
  path = path.replace(/^\./, '');

  var keyArr = path.split('.');
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error('please transfer a valid prop path to form item!');
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};
var treeFind = function treeFind(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return arr[i];
    } else if (Array.isArray(arr[i].children) && arr[i].children.length > 0) {
      var res = treeFind(arr[i].children, pred);
      if (res) return res;
    }
  }
  return undefined;
};
// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf('Edge') > -1;
};

var util_isFirefox = function isFirefox() {
  return !external_vue_default.a.prototype.$isServer && !!window.navigator.userAgent.match(/firefox/i);
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === 'undefined' ? 'undefined' : _typeof(style)) !== 'object') return style;
  var rules = ['transform', 'transition', 'animation'];
  var prefixes = ['ms-', 'webkit-'];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!Object(types_["isString"])(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = Object(types_["isObject"])(a);
  var isObjectB = Object(types_["isObject"])(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === 'boolean') return false;

  if (typeof val === 'number') return !val;

  if (val instanceof Error) return val.message === '';

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case '[object String]':
    case '[object Array]':
      return !val.length;

    // Map or Set or File
    case '[object File]':
    case '[object Map]':
    case '[object Set]':
      {
        return !val.size;
      }
    // Plain Object
    case '[object Object]':
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

function rafThrottle(fn) {
  var locked = false;
  return function () {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (locked) return;
    locked = true;
    window.requestAnimationFrame(function (_) {
      fn.apply(_this, args);
      locked = false;
    });
  };
}

function objToArray(obj) {
  if (Array.isArray(obj)) {
    return obj;
  }
  return isEmpty(obj) ? [] : [obj];
}
// CONCATENATED MODULE: ./src/utils/sign.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: gao_m3
 * @Date: 2021-03-29 17:51:08
 * @LastEditors: wei_jt@ecidi.com
 * @LastEditTime: 2022-03-31 09:36:48
 * @Descripttion: 
 */




var CLIENT = 'fawkes'; //'dca84d27aeaa6783b6405fd222a2897a'//应用id
var CLIENT_SECRET = 'fawkes_secret'; //'73af5c8eb55cd81e696f97ec8151cf5eafa62ce2659c0139ebda3dec41e18594'
var dayjs = __webpack_require__(27);
//获取加密后的url参数字符串
var sign_getUrl = function getUrl(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 30;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  var encodeSign = encodeURIComponent(sign);
  return paramstr + "&sign=" + encodeSign;
};

//获取加密后的参数对象
var sign_getSign = function getSign(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 180;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  return _extends({ sign: sign, ts: ts, ttl: ttl, uid: CLIENT }, ParamArr);
};

var objKeySort = function objKeySort(obj) {
  var newkey = Object.keys(obj).sort();
  var newObj = {};
  for (var i = 0; i < newkey.length; i++) {
    newObj[newkey[i]] = obj[newkey[i]];
  }
  return newObj;
};

var sortUrlParams = function sortUrlParams(str) {
  if (typeof str !== 'string') {
    return {};
  }
  var paramObj = {};
  var paramArr = decodeURI(str).split('&');
  // let paramArr = str.split('&');
  for (var i = 0; i < paramArr.length; i++) {
    var tmp = paramArr[i].split('=');
    var key = tmp[0];
    var value = tmp[1] || "";
    //if (typeof value === 'string' && isNaN(Number(value)) === false && value !== "") {
    //  value = Number(value);
    //}
    if (typeof paramObj[key] === 'undefined') {
      paramObj[key] = value;
    } else {
      var newValue = Array.isArray(paramObj[key]) ? paramObj[key] : [paramObj[key]];
      newValue.push(value);
      paramObj[key] = newValue;
    }
  }
  return paramObj;
};

var objTransUrlParams = function objTransUrlParams(obj) {
  var params = [];
  Object.keys(obj).forEach(function (key) {
    var value = obj[key];
    if (typeof value === 'undefined') {
      value = '';
    }
    params.push([key, value].join('='));
  });
  return params.join('&');
};


// CONCATENATED MODULE: ./src/utils/request.js
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-05 16:35:39
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-10 15:06:30
 * @Description: 请求配置
 */

 //qs一般装了axios就自带不用再装，如果没有，自己安装下
 //签名校验

//开发环境添加代理前缀
var prefix = '../api';
if (false) {}

var request = external_axios_default.a.create({
  baseURL: prefix, //这里配置你自己的url
  transformRequest: [function (data) {
    data = external_qs_default.a.stringify(data); //序列化参数
    return data;
  }],
  withCredentials: true // 允许携带cookie
});
var pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识

var cancelToken = external_axios_default.a.CancelToken;

var removePending = function removePending(config) {
  for (var p in pending) {
    if (config.remove) {
      //当当前请求在数组中存在时执行函数体
      pending[p].f(); //执行取消操作
      pending.splice(p, 1); //把这条记录从数组中移除
    }
  }
};
//添加请求拦截器
request.interceptors.request.use(function (config) {
  removePending(config); //在一个ajax发送前执行一下取消操作
  config.cancelToken = new cancelToken(function (c) {
    //这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式
    if (config.remove) {
      pending.push({
        u: config.url + '&' + config.method,
        f: c
      });
    }
  });
  config.params = sign_getSign(config.params);
  // config.headers['Fawkes-Auth'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6ImZhd2tlcyIsInVzZXJfbmFtZSI6IndlaV9qdCIsInNleCI6IueUtyIsInVzZXJObyI6IjIwMTgyNzMiLCJ1c2VyTmFtZSI6IndlaV9qdCIsImNsaWVudF9pZCI6ImZhd2tlcyIsImxpY2Vuc2UiOiJwb3dlcmVkIGJ5IGZhd2tlcyIsImF1ZCI6WyJvYXV0aDItcmVzb3VyY2UiLCJvYXV0aDItc2VydmVyIl0sInBob25lIjoiMTM3MzU4OTk3NDEiLCJzY29wZSI6WyJhbGwiXSwidGVuYW50SWQiOjEwMDAwMCwidXNlckZ1bGxuYW1lIjoi6Z-m6ZSm5rabIiwiaWQiOiIxMTkwMTUzNDcyMTkyODkyOTg1IiwiZXhwIjoxNTk5NzE3NjA0LCJqdGkiOiI0ODM5OGRiYy03OWM2LTQ5NDUtYTI4MC1mZDdkOWMzYTY5YzciLCJlbWFpbCI6IndlaV9qdEBlY2lkaS5jb20ifQ.LqK4UszX71C89SpMSo6MTKtfWB2v5ow0-jjrUZb3iiA'

  return config;
}, function (error) {
  return Promise.reject(error);
});
//添加响应拦截器
request.interceptors.response.use(function (res) {
  removePending(res.config); //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除
  return res.data;
}, function (error) {
  return {
    // data: {
    //   errmsg: error.message
    // }
  };
});
/* harmony default export */ var utils_request = __webpack_exports__["a"] = (request);

/***/ }),

/***/ 16:
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),

/***/ 18:
/***/ (function(module, exports) {

module.exports = require("crypto-js/hmac-sha1");

/***/ }),

/***/ 19:
/***/ (function(module, exports) {

module.exports = require("crypto-js/enc-base64");

/***/ }),

/***/ 20:
/***/ (function(module, exports) {

module.exports = require("throttle-debounce/debounce");

/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-19 19:40:56
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-09 16:12:13
 * @Description: 选择组件通用部分
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  inject: {
    fksForm: {
      default: function _default() {
        return {};
      }
    },
    fksFormItem: {
      default: function _default() {
        return {};
      }
    }
  },
  props: {
    showAllUser: {
      type: Boolean,
      default: false
    },
    width: {
      type: String,
      default: '100%'
    },
    url: {
      type: String,
      default: ''
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    readonly: Boolean,
    disabled: Boolean,
    /** 标签是否收缩 */
    collapseTags: Boolean,
    size: String,
    related: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      initialInputHeight: 0,
      visible: false
    };
  },

  computed: {
    collapseTagSize: function collapseTagSize() {
      return ['small', 'mini'].indexOf(this.size) > -1 ? 'mini' : 'small';
    },
    forbidden: function forbidden() {
      return this.disabled || !!(this.fksForm && this.fksForm.disabled) || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'disabled';
    },
    uploadReadOnly: function uploadReadOnly() {
      return this.readonly || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'readonly';
    }
  },
  methods: {
    resetInputHeight: function resetInputHeight() {
      var _this = this;

      this.$nextTick(function () {
        if (!_this.$refs.input) return;
        var inputChildNodes = _this.$refs.input.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this.$refs.tags;
        var sizeInMap = _this.initialInputHeight || 36;
        var list = _this.sureList || _this.chosedList;
        input.style.height = list.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 4 : 0) : 0, sizeInMap) + 'px';
      });
    }
  },
  watch: {
    collapseTags: function collapseTags() {
      if (this.multiple) {
        this.resetInputHeight();
      }
    }
  },
  mounted: function mounted() {
    var sizeMap = {
      large: 40,
      small: 32,
      mini: 28
    };
    this.initialInputHeight = sizeMap[this.size];
  }
});

/***/ }),

/***/ 25:
/***/ (function(module, exports) {

module.exports = require("qs");

/***/ }),

/***/ 27:
/***/ (function(module, exports) {

module.exports = require("dayjs");

/***/ }),

/***/ 29:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/portalTree.vue?vue&type=template&id=e2fb8ece&
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-portal-tree" },
    _vm._l(_vm.portalData, function (group, index) {
      return _c(
        "div",
        { key: index, staticClass: "fks-portal-group" },
        [
          _c("span", { staticClass: "fks-portal-group__title" }, [
            _vm._v(_vm._s(_vm.getPortalTypeName(group[0].type))),
          ]),
          _vm._l(group, function (item) {
            return _c(
              "span",
              {
                key: item.id,
                staticClass: "fks-portal-group__item",
                class: { selected: _vm.portalId === item.id },
                on: {
                  click: function ($event) {
                    return _vm.setActive(item)
                  },
                },
              },
              [_vm._v(" " + _vm._s(item.name))]
            )
          }),
        ],
        2
      )
    }),
    0
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue?vue&type=template&id=e2fb8ece&

// EXTERNAL MODULE: ./src/utils/request.js + 2 modules
var request = __webpack_require__(13);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/portalTree.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var portalLabel = {
  'zh-CN': ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'],
  'en-US': ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
};
/* harmony default export */ var portalTreevue_type_script_lang_js_ = ({
  props: {
    portalId: {
      type: String,
      default: ''
    },
    portalFilter: {
      type: Function,
      default: function _default(data) {
        return data;
      }
    },
    portal: {
      type: Object,
      default: undefined
    }
  },
  data: function data() {
    return {
      portalData: []
    };
  },

  watch: {
    portalId: function portalId(val) {
      var _this = this;

      if (!val) {
        this.$emit('update:portal', undefined);
        return;
      }

      var oId = this.portal ? this.portal.id : '';
      if (val && val !== oId) {
        var portal = this.portalData.find(function (item) {
          return item.id === _this.portalId;
        });
        this.$emit('update:portal', portal);
      }
    }
  },
  mounted: function mounted() {
    this.getPortalList();
  },

  methods: {
    getPortalList: function getPortalList() {
      var _this2 = this;

      var r1 = this.$axios || request["a" /* default */];
      r1({
        method: 'get',
        url: 'sys-user/portals/tree',
        ctM: true
      }).then(function (res) {
        var data = _this2.portalFilter(res.data);
        // 遍历门户树 转为Array
        var portalData = _this2.getPortal(data);
        // 转为二维数组
        _this2.portalData = portalData.reduce(function (tal, val) {
          if (tal[tal.length - 1] && tal[tal.length - 1][0].type === val.type) {
            tal[tal.length - 1].push(val);
          } else {
            tal.push([val]);
          }
          return tal;
        }, []);
        // 初始化
        if (_this2.portalId) {
          var portal = portalData.find(function (item) {
            return item.id === _this2.portalId;
          });
          _this2.$emit('update:portal', portal);
        }
      });
    },
    getPortal: function getPortal(tree) {
      var _this3 = this;

      var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      tree.forEach(function (node) {
        list.push({
          name: node.content.name,
          id: node.content.id,
          type: node.content.type
        });
        if (node.children) {
          _this3.getPortal(node.children, list);
        }
      });

      return list.sort(function (a, b) {
        return a.type - b.type;
      });
    },
    getPortalTypeName: function getPortalTypeName(type) {
      var zh = portalLabel['zh-CN'][type] + '\u7EA7\u95E8\u6237';
      var en = 'Level ' + portalLabel['en-US'][type];
      return this.$lang !== 'en-US' ? zh : en;
    },
    setActive: function setActive(item) {
      this.$emit('update:portalId', item.id);
      this.$emit('update:portal', item);
    }
  }
});
// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue?vue&type=script&lang=js&
 /* harmony default export */ var selector_component_portalTreevue_type_script_lang_js_ = (portalTreevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(0);

// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  selector_component_portalTreevue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var portalTree = __webpack_exports__["a"] = (component.exports);

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/locale");

/***/ }),

/***/ 5:
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/types");

/***/ })

/******/ });