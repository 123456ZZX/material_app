module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 100);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent(
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */,
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options =
    typeof scriptExports === 'function' ? scriptExports.options : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) {
    // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
          injectStyles.call(
            this,
            (options.functional ? this.parent : this).$root.$options.shadowRoot
          )
        }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 100:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/index.vue?vue&type=template&id=8898055a&
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-flow-comment" },
    [
      _c(
        "fks-tabs",
        {
          key: _vm.flowTab,
          staticClass: "fks-flow-tabs",
          on: { "tab-click": _vm.handleClick },
          model: {
            value: _vm.active,
            callback: function ($$v) {
              _vm.active = $$v
            },
            expression: "active",
          },
        },
        [
          _vm.flowActive
            ? _c("fks-tab-pane", { attrs: { name: "comment" } }, [
                _c("span", { attrs: { slot: "label" }, slot: "label" }, [
                  _c("i", {
                    staticClass: "user-follow-line",
                    staticStyle: { "margin-right": "8px" },
                  }),
                  _vm._v(
                    "\n        " +
                      _vm._s(_vm.t("fks.flow.flowapproval")) +
                      "\n      "
                  ),
                ]),
                _c(
                  "div",
                  { staticClass: "fks-comment-item-warp" },
                  _vm._l(_vm.flowData, function (item, index) {
                    return _c(
                      "div",
                      {
                        key: index,
                        staticClass: "fks-comment-item flex task-step-line",
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "circle",
                            class: item[_vm.dataSerise.flag],
                          },
                          [
                            _c("div", { staticClass: "number" }, [
                              _vm._v(_vm._s(index + 1)),
                            ]),
                          ]
                        ),
                        _c("div", { staticClass: "fks-comment-item__left" }, [
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title task-step fks-task-name",
                            },
                            [
                              _vm._v(
                                "\n              " +
                                  _vm._s(item[_vm.dataSerise.taskName]) +
                                  "\n            "
                              ),
                            ]
                          ),
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title task-step flex flex-center",
                            },
                            [
                              _c(
                                "div",
                                {
                                  staticClass: "sub-title",
                                  staticStyle: { "min-width": "45px" },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.t("fks.flow.handler")) +
                                      "\n              "
                                  ),
                                ]
                              ),
                              _c(
                                "div",
                                {
                                  staticStyle: {
                                    "word-break": "break-all",
                                    "max-width": "80px",
                                  },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(item[_vm.dataSerise.realName]) +
                                      "\n              "
                                  ),
                                ]
                              ),
                            ]
                          ),
                          item[_vm.dataSerise.orgName]
                            ? _c(
                                "div",
                                {
                                  staticClass:
                                    "fks-task-detail-title task-step flex flex-center",
                                },
                                [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "sub-title",
                                      staticStyle: { "min-width": "45px" },
                                    },
                                    [
                                      _vm._v(
                                        "\n                " +
                                          _vm._s(_vm.t("fks.flow.org")) +
                                          "\n              "
                                      ),
                                    ]
                                  ),
                                  _c(
                                    "div",
                                    {
                                      staticStyle: {
                                        "word-break": "break-all",
                                        "max-width": "80px",
                                      },
                                    },
                                    [
                                      _vm._v(
                                        "\n                " +
                                          _vm._s(item[_vm.dataSerise.orgName]) +
                                          "\n              "
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title comment flex flex-center",
                            },
                            [
                              _c(
                                "div",
                                {
                                  staticClass: "sub-title",
                                  staticStyle: { "min-width": "45px" },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.t("fks.flow.status")) +
                                      "\n              "
                                  ),
                                ]
                              ),
                              _c(
                                "div",
                                {
                                  staticStyle: {
                                    "word-break": "break-all",
                                    "max-width": "80px",
                                  },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(
                                        _vm.solveTypeList[
                                          item[_vm.dataSerise.flag]
                                        ] || item[_vm.dataSerise.solveType]
                                      ) +
                                      "\n              "
                                  ),
                                ]
                              ),
                            ]
                          ),
                        ]),
                        _c("div", { staticClass: "fks-comment-item__right" }, [
                          _c(
                            "div",
                            { staticClass: "fks-task-comment flex-space flex" },
                            [
                              _c("div", {
                                staticClass:
                                  "flex-space fks-task-comment__detail",
                                staticStyle: {
                                  overflow: "auto",
                                  height: "70px",
                                },
                                domProps: {
                                  innerHTML: _vm._s(
                                    item[_vm.dataSerise.comment]
                                      ? item[_vm.dataSerise.comment]
                                      : _vm.solveTypeList[
                                          item[_vm.dataSerise.flag]
                                        ] || item[_vm.dataSerise.solveType]
                                  ),
                                },
                              }),
                              _c("div", { staticClass: "fks-task-signzone" }, [
                                _c(
                                  "div",
                                  {
                                    staticClass: "fks-task-signzone__sign-pic",
                                  },
                                  [
                                    _c("div", { staticClass: "submit-time" }, [
                                      _c("i", {
                                        staticClass: "fks-icon-submit",
                                      }),
                                      _vm._v(
                                        "\n                    " +
                                          _vm._s(
                                            _vm.parseTime(
                                              item[_vm.dataSerise.createDate]
                                            )
                                          ) +
                                          "\n                  "
                                      ),
                                    ]),
                                    item[_vm.dataSerise.approveDate]
                                      ? _c(
                                          "div",
                                          { staticClass: "comment-time" },
                                          [
                                            _c("i", {
                                              staticClass: "fks-icon-verify",
                                            }),
                                            _vm._v(
                                              "\n                    " +
                                                _vm._s(
                                                  _vm.parseTime(
                                                    item[
                                                      _vm.dataSerise.approveDate
                                                    ]
                                                  )
                                                ) +
                                                "\n                  "
                                            ),
                                          ]
                                        )
                                      : _vm._e(),
                                    item[_vm.dataSerise.flag] != "todo" &&
                                    _vm.showSign
                                      ? _c("i", {
                                          staticClass: "fks-icon-edit",
                                        })
                                      : _vm._e(),
                                    item[_vm.dataSerise.flag] != "todo" &&
                                    _vm.showSign
                                      ? _c(
                                          "fks-image",
                                          {
                                            attrs: {
                                              src: item[_vm.dataSerise.signUrl]
                                                ? item[_vm.dataSerise.signUrl]
                                                : _vm.signSrc
                                                ? _vm.signSrc +
                                                  "?userName=" +
                                                  item[_vm.dataSerise.userName]
                                                : "",
                                            },
                                          },
                                          [
                                            _c(
                                              "div",
                                              {
                                                staticClass: "image-slot",
                                                attrs: { slot: "error" },
                                                slot: "error",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                      " +
                                                    _vm._s(
                                                      _vm.t(
                                                        "fks.flow.nosignature"
                                                      )
                                                    ) +
                                                    "\n                    "
                                                ),
                                              ]
                                            ),
                                          ]
                                        )
                                      : _vm._e(),
                                  ],
                                  1
                                ),
                              ]),
                            ]
                          ),
                          item[_vm.dataSerise.fileList] &&
                          item[_vm.dataSerise.fileList].length > 0
                            ? _c(
                                "div",
                                [
                                  _c("file", {
                                    attrs: {
                                      fileList: item[_vm.dataSerise.fileList],
                                    },
                                    on: {
                                      preview: _vm.preview,
                                      download: _vm.download,
                                    },
                                  }),
                                ],
                                1
                              )
                            : _vm._e(),
                        ]),
                      ]
                    )
                  }),
                  0
                ),
              ])
            : _vm._e(),
          _c("fks-tab-pane", { attrs: { name: "flow" } }, [
            _c("span", { attrs: { slot: "label" }, slot: "label" }, [
              _c("i", {
                staticClass: "fks-icon-route-line",
                staticStyle: { "margin-right": "8px" },
              }),
              _vm._v(
                "\n        " + _vm._s(_vm.t("fks.flow.flowchart")) + "\n      "
              ),
            ]),
            _c("div", { staticClass: "flow-warp" }, [
              _c(
                "div",
                {
                  ref: "content",
                  staticClass: "containers",
                  staticStyle: { overflow: "auto" },
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "flex",
                      staticStyle: { "margin-top": "24px" },
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon current" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.processing"))),
                          ]),
                        ]
                      ),
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon done" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.passed"))),
                          ]),
                        ]
                      ),
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon process" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.unfinished"))),
                          ]),
                        ]
                      ),
                    ]
                  ),
                  _c("div", {
                    ref: "canvas",
                    staticClass: "canvas fks-flow-svg-container",
                    staticStyle: { cursor: "pointer" },
                    on: {
                      click: function ($event) {
                        _vm.showViewer = true
                      },
                    },
                  }),
                ]
              ),
            ]),
          ]),
          _vm.showList
            ? _c(
                "fks-tab-pane",
                { attrs: { name: "list" } },
                [
                  _c("span", { attrs: { slot: "label" }, slot: "label" }, [
                    _c("i", {
                      staticClass: "fks-icon-user",
                      staticStyle: { "margin-right": "8px" },
                    }),
                    _vm._v("\n        流程审批列表\n      "),
                  ]),
                  _c(
                    "fks-table",
                    { attrs: { data: _vm.flowData, stripe: "" } },
                    [
                      _c("fks-table-column", { attrs: { type: "index" } }),
                      _c("fks-table-column", {
                        attrs: { prop: "taskName", label: "环节名称" },
                      }),
                      _c("fks-table-column", {
                        attrs: { prop: "realName", label: "执行人" },
                      }),
                      _c("fks-table-column", {
                        attrs: { prop: "createDate", label: "到达时间" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function (scope) {
                                return [
                                  _vm._v(
                                    "\n            " +
                                      _vm._s(
                                        scope.$index == 0
                                          ? "——"
                                          : _vm.parseTime(scope.row.createDate)
                                      )
                                  ),
                                ]
                              },
                            },
                          ],
                          null,
                          false,
                          2016597662
                        ),
                      }),
                      _c("fks-table-column", {
                        attrs: { label: "处理时长" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function (scope) {
                                return [
                                  _vm._v(
                                    "\n            " +
                                      _vm._s(
                                        scope.$index == 0
                                          ? "——"
                                          : scope.row.approveDate
                                          ? _vm.handlingTime(scope.row)
                                          : "尚未处理"
                                      ) +
                                      "\n          "
                                  ),
                                ]
                              },
                            },
                          ],
                          null,
                          false,
                          1547550383
                        ),
                      }),
                    ],
                    1
                  ),
                ],
                1
              )
            : _vm._e(),
        ],
        1
      ),
      _vm.showViewer
        ? _c("svg-viewer", {
            attrs: { "on-close": _vm.viewerClose, flowInfo: _vm.flowInfo },
          })
        : _vm._e(),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue?vue&type=template&id=8898055a&

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/locale"
var locale_ = __webpack_require__(4);
var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

// EXTERNAL MODULE: external "bpmn-js"
var external_bpmn_js_ = __webpack_require__(54);
var external_bpmn_js_default = /*#__PURE__*/__webpack_require__.n(external_bpmn_js_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/file.vue?vue&type=template&id=d315357a&
var filevue_type_template_id_d315357a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticStyle: {
        display: "flex",
        "justify-content": "flex-start",
        "flex-wrap": "wrap",
      },
    },
    _vm._l(_vm.fileList, function (item, index) {
      return _c(
        "div",
        {
          key: index,
          staticStyle: { "margin-left": "20px", width: "fit-content" },
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.hideItem ? true : index < 2,
                  expression: "hideItem ? true : index < 2",
                },
              ],
            },
            [
              _c("fks-icon", {
                attrs: {
                  "icon-class": _vm.getFileIconByExtName(
                    item[_vm.dataSerise.extName]
                  ),
                },
              }),
              _c(
                "span",
                {
                  staticClass: "file-describe",
                  on: {
                    click: function ($event) {
                      return _vm.preview(item)
                    },
                  },
                },
                [
                  _vm._v(
                    "\n        " +
                      _vm._s(item[_vm.dataSerise.fileName]) +
                      "\n      "
                  ),
                ]
              ),
              _c("i", {
                staticClass: "fks-icon-download",
                staticStyle: {
                  "margin-left": "8px",
                  color: "#027aff",
                  cursor: "pointer",
                },
                on: {
                  click: function ($event) {
                    return _vm.download(item)
                  },
                },
              }),
              _c(
                "span",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value:
                        _vm.hideItem && index == _vm.len - 1 && _vm.len > 2,
                      expression: "hideItem && index == len - 1 && len > 2",
                    },
                  ],
                  staticClass: "flow-comments_changeButton",
                  on: { click: _vm.hide },
                },
                [_vm._v("收起")]
              ),
              _c(
                "span",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: !_vm.hideItem && index == 1 && _vm.len > 2,
                      expression: "!hideItem && index == 1 && len > 2",
                    },
                  ],
                  staticClass: "flow-comments_changeButton",
                  on: { click: _vm.expand },
                },
                [_vm._v("展开")]
              ),
            ],
            1
          ),
        ]
      )
    }),
    0
  )
}
var filevue_type_template_id_d315357a_staticRenderFns = []
filevue_type_template_id_d315357a_render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue?vue&type=template&id=d315357a&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/fileIcon"
var fileIcon_ = __webpack_require__(71);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/file.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var filevue_type_script_lang_js_ = ({
  props: {
    fileList: {},
    dataSerise: {
      type: Object,
      default: function _default() {
        return {
          fileName: 'fileName', // 处理人用户名
          extName: 'extName' // 流程节点名称
        };
      }
    }
  },
  data: function data() {
    return {
      len: 0,
      hideItem: false
    };
  },
  mounted: function mounted() {
    if (this.fileList.length > 0) {
      this.len = this.fileList.length;
    }
  },

  methods: {
    getFileIconByExtName: function getFileIconByExtName(extName) {
      return Object(fileIcon_["getFileIconByExtName"])(extName);
    },
    preview: function preview(file) {
      this.$emit('preview', file);
    },
    download: function download(file) {
      this.$emit('download', file);
      //   down(file.fileToken).then((res) => {
      //     download(file, res)
      //   })
    },
    handleClose: function handleClose() {
      this.showPreview = false;
    },
    hide: function hide() {
      this.hideItem = false;
    },
    expand: function expand() {
      this.hideItem = true;
    }
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_filevue_type_script_lang_js_ = (filevue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(0);

// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  components_filevue_type_script_lang_js_,
  filevue_type_template_id_d315357a_render,
  filevue_type_template_id_d315357a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var file = (component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/svgViewer.vue?vue&type=template&id=a68ed03e&
var svgViewervue_type_template_id_a68ed03e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "viewer-fade" } }, [
    _c(
      "div",
      {
        ref: "fks-image-viewer__wrapper",
        staticClass: "fks-image-viewer__wrapper",
        style: { "z-index": _vm.zIndex },
        attrs: { tabindex: "-1" },
      },
      [
        _c(
          "div",
          {
            staticClass: "fks-image-viewer__mask",
            staticStyle: { opacity: "1", background: "#fff" },
          },
          [
            _c(
              "div",
              {
                ref: "content",
                staticClass: "containers",
                staticStyle: { width: "100%", height: "100%" },
              },
              [
                _c("div", {
                  ref: "canvas",
                  staticClass: "canvas",
                  staticStyle: { width: "100%", height: "100%" },
                }),
              ]
            ),
          ]
        ),
        _c(
          "span",
          {
            staticClass: "fks-image-viewer__btn fks-image-viewer__close",
            on: { click: _vm.hide },
          },
          [_c("i", { staticClass: "fks-icon-circle-close" })]
        ),
      ]
    ),
  ])
}
var svgViewervue_type_template_id_a68ed03e_staticRenderFns = []
svgViewervue_type_template_id_a68ed03e_render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue?vue&type=template&id=a68ed03e&

// EXTERNAL MODULE: external "svg-pan-zoom"
var external_svg_pan_zoom_ = __webpack_require__(72);
var external_svg_pan_zoom_default = /*#__PURE__*/__webpack_require__.n(external_svg_pan_zoom_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/svgViewer.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var svgViewervue_type_script_lang_js_ = ({
  name: 'svg-viewer',
  props: {
    zIndex: {
      type: Number,
      default: 2000
    },
    onClose: {
      type: Function,
      default: function _default() {}
    },
    initialIndex: {
      type: Number,
      default: 0
    },
    flowInfo: {
      required: true,
      type: Object
    }
  },

  data: function data() {
    return {
      index: this.initialIndex,
      isShow: false,
      infinite: true,
      loading: false,
      transform: {
        scale: 1,
        deg: 0,
        offsetX: 0,
        offsetY: 0,
        enableTransition: false
      }
    };
  },

  computed: {},
  watch: {},
  methods: {
    hide: function hide() {
      this.onClose();
    },
    setFlowInfo: function setFlowInfo() {
      var _this = this;

      var canvas = this.$refs.canvas;
      canvas.innerHTML = ''; // 清空内容
      var viewer = new external_bpmn_js_default.a({
        container: canvas
      });
      viewer.importXML(this.flowInfo.xml, function (err) {
        if (!err) {
          (function () {
            viewer.get('canvas').zoom('fit-viewport');
            var canvas = viewer.get('canvas');
            var _flowInfo = _this.flowInfo,
                currentNode = _flowInfo.currentNode,
                userTask = _flowInfo.userTask,
                exclusiveGateway = _flowInfo.exclusiveGateway,
                inclusiveGateway = _flowInfo.inclusiveGateway,
                parallelGateway = _flowInfo.parallelGateway,
                sequenceFlow = _flowInfo.sequenceFlow;

            currentNode.forEach(function (item) {
              canvas.addMarker(item, 'current-highlight');
            });
            var _arr = [userTask, exclusiveGateway, inclusiveGateway, parallelGateway, sequenceFlow];
            for (var _i = 0; _i < _arr.length; _i++) {
              var node = _arr[_i];
              node && node.forEach(function (item) {
                canvas.addMarker(item, 'highlight');
              });
            }
            _this.$nextTick(function () {
              var container = _this.$refs.content;
              var svgElement = container.querySelectorAll('svg')[1];
              external_svg_pan_zoom_default()(svgElement, {
                panEnabled: true,
                controlIconsEnabled: false,
                zoomEnabled: true
              });
            });
          })();
        } else {
          console.log('something went wrong:', err);
        }
      });
    }
  },
  mounted: function mounted() {
    this.setFlowInfo();
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_svgViewervue_type_script_lang_js_ = (svgViewervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue





/* normalize component */

var svgViewer_component = Object(componentNormalizer["a" /* default */])(
  components_svgViewervue_type_script_lang_js_,
  svgViewervue_type_template_id_a68ed03e_render,
  svgViewervue_type_template_id_a68ed03e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var svgViewer = (svgViewer_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import { getModelXML, getHistoryNodes } from '@/views/assets/api'




/* harmony default export */ var srcvue_type_script_lang_js_ = ({
  components: { file: file, SvgViewer: svgViewer },
  name: 'FksFlowComments',
  mixins: [locale_default.a],
  props: {
    showSign: {
      type: Boolean,
      default: true
    },
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    flowActive: {
      type: Boolean,
      default: true
    },
    flowInfo: {
      type: Object,
      default: function _default() {
        return {
          userTask: [],
          currentNode: ''
        };
      }
    },
    signSrc: {
      type: String
    },
    solveTypeList: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    dataSerise: {
      type: Object,
      default: function _default() {
        return {
          userName: 'userName', // 处理人用户名
          taskName: 'taskName', // 流程节点名称
          realName: 'realName', // 处理人姓名
          solveType: 'solveType',
          createDate: 'createDate',
          approveDate: 'approveDate', //提交时间
          comment: 'comment', // 评论内容
          id: 'id', // 仅作为唯一标识
          flag: 'flag', // 流程状态标记
          fileList: 'fileList',
          signUrl: 'signUrl', //签名图片地址
          delegateList: 'delegateList', //委托列表
          orgName: 'orgName' //部门名称
        };
      }
    },
    format: {
      type: String
    },
    showList: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      flowTab: 0,
      showViewer: false,
      temp: '',
      flowData: []
    };
  },

  computed: {
    active: {
      get: function get() {
        if (this.temp == '') return this.flowActive ? 'comment' : 'flow';else return this.temp;
      },
      set: function set(val) {
        this.temp = val;
      }
    },
    xml: function xml() {
      return this.flowInfo.xml;
    },
    realFormat: function realFormat() {
      return this.format || this.$fawkes.format || 'YYYY-MM-DD HH:mm:ss';
    }
  },
  watch: {
    data: {
      immediate: true,
      deep: true,
      handler: function handler(val) {
        var _this = this;

        var flowData = [];
        val.forEach(function (item) {
          if (item[_this.dataSerise.delegateList]) {
            flowData.push.apply(flowData, item[_this.dataSerise.delegateList]);
          }
          flowData.push(item);
        });
        this.flowData = flowData;
        this.flowTab = flowData.length;
      }
    },
    xml: function xml() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.setFlowInfo();
      });
    }
  },
  methods: {
    handlingTime: function handlingTime(row) {
      var createDate = this.$dayjs(row.createDate);
      var approveDate = this.$dayjs(row.approveDate);
      var duringTime = approveDate.diff(createDate, 'second');
      return this.formatDuration(duringTime * 1000);
    },
    formatDuration: function formatDuration(ms) {
      if (ms < 0) ms = -ms;
      var time = {
        天: Math.floor(ms / 86400000),
        时: Math.floor(ms / 3600000) % 24,
        分: Math.floor(ms / 60000) % 60,
        秒: Math.floor(ms / 1000) % 60,
        毫秒: Math.floor(ms) % 1000
      };
      return Object.entries(time).filter(function (val) {
        return val[1] !== 0;
      }).map(function (_ref) {
        var key = _ref[0],
            val = _ref[1];
        return val + ' ' + key + ' ';
      }).join('');
    },
    viewerClose: function viewerClose() {
      this.showViewer = false;
    },
    preview: function preview(file) {
      this.$emit('preview', file);
    },
    download: function download(file) {
      this.$emit('download', file);
    },
    parseTime: function parseTime(val) {
      if (val) {
        if (val instanceof Date) {
          val = val.getTime();
        } else {
          val = val.replace(/T/g, ' ').replace(/-/g, '/');
        }
        return this.$dayjs(val).format(this.realFormat);
      } else {
        return '';
      }
    },
    handleClick: function handleClick(data) {
      var _this3 = this;

      if (data.name == 'flow') {
        this.$nextTick(function () {
          _this3.setFlowInfo();
        });
      }
    },
    setFlowInfo: function setFlowInfo() {
      var _this4 = this;

      // 获取到属性ref为“content”的dom节点
      this.container = this.$refs.content;
      // 获取到属性ref为“canvas”的dom节点
      var canvas = this.$refs.canvas;
      canvas.innerHTML = ''; // 清空内容
      var viewer = new external_bpmn_js_default.a({
        container: canvas
      });
      viewer.importXML(this.flowInfo.xml, function (err) {
        if (!err) {
          viewer.get('canvas').zoom('fit-viewport');
          var _canvas = viewer.get('canvas');
          _this4.flowInfo.currentNode.forEach(function (item) {
            _canvas.addMarker(item, 'current-highlight');
          });
          _this4.flowInfo.userTask.forEach(function (item) {
            _canvas.addMarker(item, 'highlight');
          });
          _this4.flowInfo.exclusiveGateway.forEach(function (item) {
            _canvas.addMarker(item, 'highlight');
          });

          // console.log('success!')
        } else {
          console.log('something went wrong:', err);
        }
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var flow_comments_srcvue_type_script_lang_js_ = (srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue





/* normalize component */

var src_component = Object(componentNormalizer["a" /* default */])(
  flow_comments_srcvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src = (src_component.exports);
// CONCATENATED MODULE: ./packages/flow-comments/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
src.install = function (Vue) {
  Vue.component(src.name, src);
};

// 默认导出组件
/* harmony default export */ var flow_comments = __webpack_exports__["default"] = (src);

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/locale");

/***/ }),

/***/ 54:
/***/ (function(module, exports) {

module.exports = require("bpmn-js");

/***/ }),

/***/ 71:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/fileIcon");

/***/ }),

/***/ 72:
/***/ (function(module, exports) {

module.exports = require("svg-pan-zoom");

/***/ })

/******/ });