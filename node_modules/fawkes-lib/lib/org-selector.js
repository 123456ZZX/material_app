module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 176);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent(
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */,
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options =
    typeof scriptExports === 'function' ? scriptExports.options : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) {
    // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
          injectStyles.call(
            this,
            (options.functional ? this.parent : this).$root.$options.shadowRoot
          )
        }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/resize-event");

/***/ }),

/***/ 13:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: external "axios"
var external_axios_ = __webpack_require__(16);
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_);

// EXTERNAL MODULE: external "qs"
var external_qs_ = __webpack_require__(25);
var external_qs_default = /*#__PURE__*/__webpack_require__.n(external_qs_);

// EXTERNAL MODULE: external "crypto-js/hmac-sha1"
var hmac_sha1_ = __webpack_require__(18);
var hmac_sha1_default = /*#__PURE__*/__webpack_require__.n(hmac_sha1_);

// EXTERNAL MODULE: external "crypto-js/enc-base64"
var enc_base64_ = __webpack_require__(19);
var enc_base64_default = /*#__PURE__*/__webpack_require__.n(enc_base64_);

// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(5);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/types"
var types_ = __webpack_require__(8);

// CONCATENATED MODULE: ./src/utils/util.js
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}
/**
 * @description 生成UUID
 * @param {Integer} len uuid长度
 * @param {Integer} radix uuid基数
 * @returns {String} UUID
 */
function uuid(len, radix) {
  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
  var uuid = [],
      i = void 0;
  radix = radix || chars.length;

  if (len) {
    // Compact form
    for (i = 0; i < len; i++) {
      uuid[i] = chars[0 | Math.random() * radix];
    }
  } else {
    // rfc4122, version 4 form
    var r = void 0;
    // rfc4122 requires these characters
    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
    uuid[14] = '4';
    // Fill in random data.  At i==19 set the high bits of clock sequence as
    // per rfc4122, sec. 4.1.5
    for (i = 0; i < 36; i++) {
      if (!uuid[i]) {
        r = 0 | Math.random() * 16;
        uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];
      }
    }
  }
  return uuid.join('');
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || '';
  var paths = prop.split('.');
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, '.$1');
  path = path.replace(/^\./, '');

  var keyArr = path.split('.');
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error('please transfer a valid prop path to form item!');
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};
var treeFind = function treeFind(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return arr[i];
    } else if (Array.isArray(arr[i].children) && arr[i].children.length > 0) {
      var res = treeFind(arr[i].children, pred);
      if (res) return res;
    }
  }
  return undefined;
};
// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf('Edge') > -1;
};

var util_isFirefox = function isFirefox() {
  return !external_vue_default.a.prototype.$isServer && !!window.navigator.userAgent.match(/firefox/i);
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === 'undefined' ? 'undefined' : _typeof(style)) !== 'object') return style;
  var rules = ['transform', 'transition', 'animation'];
  var prefixes = ['ms-', 'webkit-'];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!Object(types_["isString"])(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = Object(types_["isObject"])(a);
  var isObjectB = Object(types_["isObject"])(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === 'boolean') return false;

  if (typeof val === 'number') return !val;

  if (val instanceof Error) return val.message === '';

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case '[object String]':
    case '[object Array]':
      return !val.length;

    // Map or Set or File
    case '[object File]':
    case '[object Map]':
    case '[object Set]':
      {
        return !val.size;
      }
    // Plain Object
    case '[object Object]':
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

function rafThrottle(fn) {
  var locked = false;
  return function () {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (locked) return;
    locked = true;
    window.requestAnimationFrame(function (_) {
      fn.apply(_this, args);
      locked = false;
    });
  };
}

function objToArray(obj) {
  if (Array.isArray(obj)) {
    return obj;
  }
  return isEmpty(obj) ? [] : [obj];
}
// CONCATENATED MODULE: ./src/utils/sign.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: gao_m3
 * @Date: 2021-03-29 17:51:08
 * @LastEditors: wei_jt@ecidi.com
 * @LastEditTime: 2022-03-31 09:36:48
 * @Descripttion: 
 */




var CLIENT = 'fawkes'; //'dca84d27aeaa6783b6405fd222a2897a'//应用id
var CLIENT_SECRET = 'fawkes_secret'; //'73af5c8eb55cd81e696f97ec8151cf5eafa62ce2659c0139ebda3dec41e18594'
var dayjs = __webpack_require__(27);
//获取加密后的url参数字符串
var sign_getUrl = function getUrl(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 30;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  var encodeSign = encodeURIComponent(sign);
  return paramstr + "&sign=" + encodeSign;
};

//获取加密后的参数对象
var sign_getSign = function getSign(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 180;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  return _extends({ sign: sign, ts: ts, ttl: ttl, uid: CLIENT }, ParamArr);
};

var objKeySort = function objKeySort(obj) {
  var newkey = Object.keys(obj).sort();
  var newObj = {};
  for (var i = 0; i < newkey.length; i++) {
    newObj[newkey[i]] = obj[newkey[i]];
  }
  return newObj;
};

var sortUrlParams = function sortUrlParams(str) {
  if (typeof str !== 'string') {
    return {};
  }
  var paramObj = {};
  var paramArr = decodeURI(str).split('&');
  // let paramArr = str.split('&');
  for (var i = 0; i < paramArr.length; i++) {
    var tmp = paramArr[i].split('=');
    var key = tmp[0];
    var value = tmp[1] || "";
    //if (typeof value === 'string' && isNaN(Number(value)) === false && value !== "") {
    //  value = Number(value);
    //}
    if (typeof paramObj[key] === 'undefined') {
      paramObj[key] = value;
    } else {
      var newValue = Array.isArray(paramObj[key]) ? paramObj[key] : [paramObj[key]];
      newValue.push(value);
      paramObj[key] = newValue;
    }
  }
  return paramObj;
};

var objTransUrlParams = function objTransUrlParams(obj) {
  var params = [];
  Object.keys(obj).forEach(function (key) {
    var value = obj[key];
    if (typeof value === 'undefined') {
      value = '';
    }
    params.push([key, value].join('='));
  });
  return params.join('&');
};


// CONCATENATED MODULE: ./src/utils/request.js
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-05 16:35:39
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-10 15:06:30
 * @Description: 请求配置
 */

 //qs一般装了axios就自带不用再装，如果没有，自己安装下
 //签名校验

//开发环境添加代理前缀
var prefix = '../api';
if (false) {}

var request = external_axios_default.a.create({
  baseURL: prefix, //这里配置你自己的url
  transformRequest: [function (data) {
    data = external_qs_default.a.stringify(data); //序列化参数
    return data;
  }],
  withCredentials: true // 允许携带cookie
});
var pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识

var cancelToken = external_axios_default.a.CancelToken;

var removePending = function removePending(config) {
  for (var p in pending) {
    if (config.remove) {
      //当当前请求在数组中存在时执行函数体
      pending[p].f(); //执行取消操作
      pending.splice(p, 1); //把这条记录从数组中移除
    }
  }
};
//添加请求拦截器
request.interceptors.request.use(function (config) {
  removePending(config); //在一个ajax发送前执行一下取消操作
  config.cancelToken = new cancelToken(function (c) {
    //这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式
    if (config.remove) {
      pending.push({
        u: config.url + '&' + config.method,
        f: c
      });
    }
  });
  config.params = sign_getSign(config.params);
  // config.headers['Fawkes-Auth'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6ImZhd2tlcyIsInVzZXJfbmFtZSI6IndlaV9qdCIsInNleCI6IueUtyIsInVzZXJObyI6IjIwMTgyNzMiLCJ1c2VyTmFtZSI6IndlaV9qdCIsImNsaWVudF9pZCI6ImZhd2tlcyIsImxpY2Vuc2UiOiJwb3dlcmVkIGJ5IGZhd2tlcyIsImF1ZCI6WyJvYXV0aDItcmVzb3VyY2UiLCJvYXV0aDItc2VydmVyIl0sInBob25lIjoiMTM3MzU4OTk3NDEiLCJzY29wZSI6WyJhbGwiXSwidGVuYW50SWQiOjEwMDAwMCwidXNlckZ1bGxuYW1lIjoi6Z-m6ZSm5rabIiwiaWQiOiIxMTkwMTUzNDcyMTkyODkyOTg1IiwiZXhwIjoxNTk5NzE3NjA0LCJqdGkiOiI0ODM5OGRiYy03OWM2LTQ5NDUtYTI4MC1mZDdkOWMzYTY5YzciLCJlbWFpbCI6IndlaV9qdEBlY2lkaS5jb20ifQ.LqK4UszX71C89SpMSo6MTKtfWB2v5ow0-jjrUZb3iiA'

  return config;
}, function (error) {
  return Promise.reject(error);
});
//添加响应拦截器
request.interceptors.response.use(function (res) {
  removePending(res.config); //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除
  return res.data;
}, function (error) {
  return {
    // data: {
    //   errmsg: error.message
    // }
  };
});
/* harmony default export */ var utils_request = __webpack_exports__["a"] = (request);

/***/ }),

/***/ 16:
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),

/***/ 176:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/org-selector/src/org-selector.vue?vue&type=template&id=c7e0e434&
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-org-selector-page", style: { width: _vm.width } },
    [
      _c(
        "fks-popover",
        {
          ref: "popover",
          attrs: {
            "popper-class": "fks-org-popover " + _vm.popperClass,
            placement: _vm.popoverPosition,
            "close-delay": 0,
            width: _vm.inputWidth,
            trigger: "click",
            disabled: _vm.uploadReadOnly || _vm.forbidden,
            "visible-arrow": false,
          },
          on: {
            show: _vm.open,
            hide: function ($event) {
              _vm.arrowflag = true
            },
          },
        },
        [
          _vm.isMultiPortal
            ? _c(
                "fks-tabs",
                {
                  ref: "portalTab",
                  staticClass: "fks-org-selector__tabs",
                  on: { "tab-click": _vm.handleTabClick },
                  model: {
                    value: _vm.activeTab,
                    callback: function ($$v) {
                      _vm.activeTab = $$v
                    },
                    expression: "activeTab",
                  },
                },
                [
                  _vm.showPresent
                    ? _c("fks-tab-pane", {
                        attrs: { label: "当前门户", name: "present" },
                      })
                    : _vm._e(),
                  _vm._l(_vm.portalArr, function (item) {
                    return _c("fks-tab-pane", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.multiData[item.code].length,
                          expression: "multiData[item.code].length",
                        },
                      ],
                      key: item.code,
                      attrs: {
                        name: item.code,
                        label: item[_vm.$lang || "zh-CN"]
                          ? item[_vm.$lang || "zh-CN"]
                          : item.zh,
                      },
                    })
                  }),
                ],
                2
              )
            : _vm._e(),
          _c(
            "div",
            { staticClass: "fks-org-selector__searchtree" },
            [
              !_vm.arrowflag
                ? _c("fks-input", {
                    attrs: {
                      placeholder:
                        _vm.placeholder || _vm.t("fks.org.searchbranch"),
                      "suffix-icon": _vm.filterText ? "" : "fks-icon-search",
                      clearable: "",
                    },
                    model: {
                      value: _vm.filterText,
                      callback: function ($$v) {
                        _vm.filterText = $$v
                      },
                      expression: "filterText",
                    },
                  })
                : _vm._e(),
              _c(
                "div",
                {
                  staticStyle: {
                    "text-align": "right",
                    margin: "0",
                    height: "calc(100% - 40px)",
                    overflow: "auto",
                  },
                },
                [
                  _c("fks-tree", {
                    key: _vm.key,
                    ref: "selectTree",
                    staticClass: "filter-tree",
                    attrs: {
                      "default-expand-all": _vm.deptExpand,
                      id: "tree-option",
                      data: _vm.data,
                      props: _vm.defaultProps,
                      "highlight-current": !_vm.multiple,
                      "current-node-key":
                        !_vm.multiple && _vm.chosedList[0]
                          ? _vm.chosedList[0].id
                          : "",
                      "node-key": _vm.defaultProps.id,
                      "expand-on-click-node": false,
                      "filter-node-method": _vm.filterNode,
                      "default-checked-keys": _vm.checkedKeys,
                      "show-checkbox": _vm.multiple,
                      "check-strictly": "",
                    },
                    on: {
                      "check-change": _vm.handleCheckChange,
                      "node-click": _vm.handleNodeClick,
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (ref) {
                          var data = ref.data
                          return _c(
                            "span",
                            { staticClass: "fks-tree-node__label" },
                            [
                              _c(
                                "span",
                                {
                                  staticStyle: {
                                    overflow: "hidden",
                                    "text-overflow": "ellipsis",
                                    "white-space": "nowrap",
                                    width: "80%",
                                  },
                                  attrs: { title: data.content.name },
                                },
                                [_vm._v(_vm._s(data.content.name))]
                              ),
                            ]
                          )
                        },
                      },
                    ]),
                  }),
                ],
                1
              ),
            ],
            1
          ),
          _c(
            "div",
            {
              ref: "reference",
              staticClass: "org-selector-input",
              attrs: { slot: "reference" },
              slot: "reference",
            },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "org-selector-tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                    "is-disabled": _vm.uploadReadOnly || _vm.forbidden,
                  },
                },
                [
                  _vm.collapseTags && _vm.chosedList.length
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.chosedList.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  class: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                  },
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.chosedList[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.chosedList[0].content.name)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.chosedList.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        "+ " + _vm._s(_vm.chosedList.length - 1)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { display: "contents", width: "100%" } },
                        _vm._l(_vm.chosedList, function (tag, index) {
                          return _c(
                            "fks-tag",
                            {
                              key: index,
                              class: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                              },
                              attrs: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                                size: _vm.size,
                                "disable-transitions": "",
                                type: "info",
                              },
                              on: {
                                close: function ($event) {
                                  return _vm.deleteOne(tag)
                                },
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v(_vm._s(tag.content.name))]
                              ),
                            ]
                          )
                        }),
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "fks-input",
                {
                  ref: "input",
                  staticClass: "fks-org-out-input",
                  attrs: {
                    readonly: "",
                    size: _vm.size,
                    value: _vm.newDeptId,
                    disabled: _vm.forbidden,
                    placeholder:
                      _vm.chosedList.length > 0
                        ? ""
                        : _vm.placeholder || _vm.t("fks.org.selectbranch"),
                  },
                },
                [
                  !_vm.uploadReadOnly && !_vm.forbidden
                    ? _c("template", { slot: "suffix" }, [
                        !_vm.arrowflag
                          ? _c("i", {
                              staticClass: "fks-icon-arrow-up fks-input__icon",
                            })
                          : _c("i", {
                              staticClass:
                                "fks-icon-arrow-down fks-input__icon",
                            }),
                      ])
                    : _vm._e(),
                ],
                2
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true


// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue?vue&type=template&id=c7e0e434&

// EXTERNAL MODULE: ./src/utils/request.js + 2 modules
var request = __webpack_require__(13);

// EXTERNAL MODULE: ./src/mixins/selector.js
var selector = __webpack_require__(24);

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/locale"
var locale_ = __webpack_require__(4);
var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/resize-event"
var resize_event_ = __webpack_require__(10);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/org-selector/src/org-selector.vue?vue&type=script&lang=js&
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var org_selectorvue_type_script_lang_js_ = ({
  name: 'FksOrgSelector',
  componentName: 'FksOrgSelector',
  mixins: [selector["a" /* default */], locale_default.a],
  props: {
    deptExpand: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String
    },
    url: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/orgs/tree'
    },
    portalDicPath: {
      type: String,
      default: '/sys-system/dictionary/detail/list'
    },
    portalType: {
      type: String,
      default: 'portalType'
    },
    deptId: {},
    deptName: {
      type: String,
      default: ''
    },
    multiPortal: {},
    multiIndex: {
      type: Array
    },
    popperClass: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    var _this = this;

    return {
      popoverPosition: 'bottom-start',
      showPresent: false,
      ifRender: false,
      newDeptId: '',
      activeTab: 'present',
      arrowflag: true,
      inputWidth: 0,
      filterText: '',
      data: [], // dept tree data
      multiData: {}, //存放各级部门树
      defaultProps: {
        children: 'children',
        label: 'label',
        id: 'id',
        disabled: function disabled(data) {
          return _this.multipleLimit > 0 && _this.chosedList.length >= _this.multipleLimit && !_this.checkedKeys.includes(data.id);
        }
      },
      portalArr: [], //多级门户数组,用于筛选展示多级门户模式下有部门数据的门户tab
      tempPortalArr: [],
      chosedList: [],
      //tempChosedList: [], //记录改变前所选
      innerFlag: false, //判断内部改变
      key: new Date().getTime(), // 刷新选择
      isMultiPortal: typeof this.multiPortal === 'boolean' ? this.multiPortal : !!this.$fawkes.multiPortal
    };
  },

  computed: {
    checkedKeys: function checkedKeys() {
      return this.chosedList.map(function (key) {
        return key.id;
      });
    }
  },
  watch: {
    arrowflag: function arrowflag(val) {
      if (val) this.$refs.popover.doDestroy();
    },
    filterText: function filterText(val) {
      this.$refs.selectTree.filter(val.trim());
    },

    deptId: {
      immediate: true,
      handler: function handler(val) {
        if (val) this.newDeptId = val.toString();else this.newDeptId = '';
        if (!this.innerFlag) {
          this.chosedList = [];
          this.initialList();
        }
        this.innerFlag = false;
      }
    },
    // 状态还原请求数据
    forbidden: function forbidden(val) {
      if (!val && !this.data.length) {
        this.getDepts();
      }
    }
  },
  methods: {
    handleTabClick: function handleTabClick(tab, event) {
      if (this.multiPortal) this.data = this.multiData[tab.name];
    },

    //根据data树初始化多门户树
    initialMultiData: function initialMultiData() {
      //初始化各门户部门树存储对象multiData
      for (var i = 0; i < this.data.length; ++i) {
        this.multiData[this.data[i].content.type].push(this.data[i]);
      } //如果传入了portalId则当前门户tab展示当前传入门户
      if (this.params.hasOwnProperty('portalId')) {
        if (this.params.portalId) {
          for (var _i = 0; _i < this.data.length; ++_i) {
            if (this.params.portalId === this.data[_i].content.portalId) {
              this.multiData['present'] = [];
              this.multiData['present'].push(this.data[_i]);
            }
          }this.data = this.multiData['present'];
        } else this.multiData['present'] = this.data;
      }
      //没有传入则当前门户tab展示所有门户
      else {
          this.multiData['present'] = this.data;
        }
      //如果传入了multiIndex
      if (_typeof(this.multiIndex) === 'object') {
        this.multiIndex.sort();
        //判定是否需要展示当前门户
        var j = 0;
        if (this.multiIndex[0] === 0) {
          this.showPresent = true;
          j = 1;
        } else this.data = this.multiData[this.multiIndex[0]];
        //根据multiIndex初始化显示用portalArr,顺序为tempPortalArr中获取到的字典顺序
        for (var _i2 = 0; _i2 < this.tempPortalArr.length; ++_i2) {
          if (this.multiData[this.tempPortalArr[_i2].code].length) {
            if (this.tempPortalArr[_i2].code === String(this.multiIndex[j])) {
              this.portalArr.push(this.tempPortalArr[_i2]);
              if (j < this.multiIndex.length - 1) j++;
            }
          }
        }
        this.$emit('ready', true);
      } else {
        //如果没有传入multiIndex
        //初始化所有含有部门树的门户页
        this.showPresent = true;
        for (var _i3 = 0; _i3 < this.tempPortalArr.length; ++_i3) {
          if (this.multiData[this.tempPortalArr[_i3].code].length) {
            this.portalArr.push(this.tempPortalArr[_i3]);
          }
        }
        this.$emit('ready', true);
      }
    },
    updateProps: function updateProps(val) {
      console.log('触发选中');
      this.innerFlag = true;
      var dptNameStr = '';
      var dptIdStr = '';
      if (val.length == 0) {
        this.$emit('update:deptId', '');
        this.$emit('update:deptName', '');
        this.$emit('change', val);
      } else {
        val.forEach(function (item) {
          dptNameStr += item.content.name + ',';
          dptIdStr += item.id + ',';
        });
        this.$emit('update:deptId', dptIdStr.substring(0, dptIdStr.length - 1));
        this.$emit('update:deptName', dptNameStr.substring(0, dptNameStr.length - 1));
        this.$emit('change', val);
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },
    initialList: function initialList() {
      if (this.deptName && this.newDeptId) {
        var dptNameArr = this.deptName.split(',');
        var dptIdArr = this.newDeptId.split(',');
        var len = dptNameArr.length;
        var len2 = dptIdArr.length;
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u90E8\u95E8\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u90E8\u95E8\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          for (var i = 0; i < len2; i++) {
            this.chosedList.push({
              id: dptIdArr[i],
              content: { name: dptNameArr[i] }
            });
          }
        }
      } else if (!this.deptName && !this.newDeptId) {
        this.chosedList = [];
      } else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u90E8\u95E8\u6570\u636E,\u90E8\u95E8id\u548C\u90E8\u95E8\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 下拉框
     * @param {type}
     * @return:
     */

    open: function open() {
      this.arrowflag = false;
      this.key = new Date().getTime();
      var rect = this.$refs.popover.$el.getBoundingClientRect();
      var clientTop = document.documentElement.clientTop;
      var clientHeight = document.documentElement.clientHeight;
      var top = rect.top - clientTop;
      var bottom = clientHeight - top - this.$refs.input.$el.offsetHeight;
      if (bottom < 330) {
        this.popoverPosition = 'top-start';
        this.$refs.popover.updatePopper();
      }
      //初始化tab栏 判定是否传入multiIndex
      if (this.isMultiPortal && _typeof(this.multiIndex) === 'object') {
        // console.log(this.multiIndex)
        if (this.multiIndex[0] !== 0) this.activeTab = String(this.multiIndex[0]);
      }
    },

    /**
     * @description 设置树形组件节点的选中状态
     */
    setChecked: function setChecked(key, checked) {
      this.$refs.selectTree.setChecked(key, checked);
    },

    /**
     * @description: 单选
     * @param {type}
     * @return {type}
     */
    handleNodeClick: function handleNodeClick(data) {
      if (this.multiple) {
        return false;
      }
      // 选中部门树
      var len = this.chosedList.length;

      if (len < 1) {
        this.chosedList.push(data);
      } else {
        this.chosedList = [];
        this.chosedList.push(data);
      }
      this.$refs.popover.doClose();
      this.updateProps(this.chosedList);
    },

    /**
     * @description:多选
     * @param {type}
     * @return {type}
     */
    handleCheckChange: function handleCheckChange(data, checked) {
      if (!this.multiple) {
        return false;
      }
      var index = this.chosedList.findIndex(function (item) {
        return item.id == data.id;
      });
      // 选中部门树
      if (checked) {
        if (index < 0) {
          this.chosedList.push(data);
        }
      } else if (index >= 0) {
        this.chosedList.splice(this.chosedList.findIndex(function (item) {
          return item.id == data.id;
        }), 1);
      }
      this.$emit('check-change', data, checked);
      this.updateProps(this.chosedList);
    },
    filterNode: function filterNode(value, data) {
      // 部门树过滤
      if (!value) return true;
      return data.content.name.indexOf(value) !== -1;
    },


    /**
     * @description: 获取数据
     * @param {type}
     * @return:
     */
    getDepts: function getDepts() {
      var _this2 = this;

      //多门户模式下才获取字典
      if (this.isMultiPortal) {
        var params = {
          code: 'portal_type',
          langCode: this.$lang || 'zh-CN'
        };
        var r1 = this.$axios || request["a" /* default */];
        r1({
          method: 'get',
          url: this.portalDicPath,
          params: params,
          headers: this.headers,
          ctM: true
        }).then(function (res) {
          var response = res;
          if (res.data.status) {
            //排除拦截器影响
            response = res.data;
          }
          if (response.status) {
            _this2.tempPortalArr = res.data[_this2.portalType];
            for (var i = 0; i < _this2.tempPortalArr.length; ++i) {
              _this2.multiData[_this2.tempPortalArr[i].code] = [];
            }
            _this2.initData();
          }
        }).catch(function (err) {
          //取不到就走本地缓存
          if (_this2.$storage.get('portalDict')) {
            _this2.tempPortalArr = JSON.parse(_this2.$storage.get('portalDict'));
            for (var i = 0; i < _this2.tempPortalArr.length; ++i) {
              _this2.multiData[_this2.tempPortalArr[i].code] = [];
            }
            _this2.initData();
          } else {
            //取不到本地缓存就关闭多门户模式
            _this2.isMultiPortal = false;
            _this2.initData();
            console.log(err);
            console.log('请求失败或从缓存中无法获取门户字典，关闭多门户模式');
          }
        });
      } else this.initData();
    },
    initData: function initData() {
      var _this3 = this;

      var r = this.$axios || request["a" /* default */];
      var tempParams = this.params;
      if (this.isMultiPortal) tempParams = {};
      r({
        method: 'get',
        params: tempParams,
        url: this.url + this.urlPath,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          //排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this3.data = _this3.analyze(response.data);

          if (_this3.isMultiPortal) _this3.$nextTick(function () {
            this.initialMultiData();
          });else _this3.$emit('ready', true);
        } else {
          console.log('请求失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    },

    /**
     * @description: 根据id过滤树
     * @param {type}
     * @return:
     */

    analyze: function analyze(tree) {
      var _this4 = this;

      var res = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      if (!this.params.id) {
        return tree;
      }
      tree.forEach(function (item) {
        if (item.id == _this4.params.id) {
          res.push(item);
        } else if (item.children) {
          _this4.analyze(item.children, res);
        }
      });
      return res;
    },

    /**
     * @description: 宽度resize
     * @param {type}
     * @return:
     */

    handleResize: function handleResize() {
      var _this5 = this;

      this.$nextTick(function () {
        var reference = _this5.$refs.reference;
        _this5.inputWidth = Math.max(reference.getBoundingClientRect().width - 20, 300);
      });
    },
    deleteOne: function deleteOne(tag) {
      // 删除标签中的人员
      this.$refs.popover.doClose();
      this.chosedList.splice(this.chosedList.findIndex(function (item) {
        return item.id == tag.id;
      }), 1);
      this.updateProps(this.chosedList);
    },
    selectFirst: function selectFirst() {
      if (!!this.data) {
        if (this.data.length) {
          var dptName = this.data[0].content.name;
          var dptId = this.data[0].content.id;
          var orgNo = new String(this.data[0].content.orgNo);
          this.chosedList = [];
          this.chosedList.push({
            id: dptId,
            content: { name: dptName }
          });
          this.updateProps(this.chosedList);
          return orgNo;
        } else {
          return '';
        }
      } else {
        return '';
      }
    }
  },
  mounted: function mounted() {
    var _this6 = this;

    if (!this.forbidden) {
      this.getDepts();
    }
    this.$nextTick(function () {
      var reference = _this6.$refs.reference;
      Object(resize_event_["addResizeListener"])(reference, _this6.handleResize);
      _this6.handleResize();
    });
  },
  beforeDestroy: function beforeDestroy() {
    var reference = this.$refs.reference;
    Object(resize_event_["removeResizeListener"])(reference, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_org_selectorvue_type_script_lang_js_ = (org_selectorvue_type_script_lang_js_); 
// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
var componentNormalizer = __webpack_require__(0);

// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue





/* normalize component */

var component = Object(componentNormalizer["a" /* default */])(
  src_org_selectorvue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var org_selector = (component.exports);
// CONCATENATED MODULE: ./packages/org-selector/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
org_selector.install = function (Vue) {
  Vue.component(org_selector.name, org_selector);
};

// 默认导出组件
/* harmony default export */ var packages_org_selector = __webpack_exports__["default"] = (org_selector);

/***/ }),

/***/ 18:
/***/ (function(module, exports) {

module.exports = require("crypto-js/hmac-sha1");

/***/ }),

/***/ 19:
/***/ (function(module, exports) {

module.exports = require("crypto-js/enc-base64");

/***/ }),

/***/ 24:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-19 19:40:56
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-09 16:12:13
 * @Description: 选择组件通用部分
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  inject: {
    fksForm: {
      default: function _default() {
        return {};
      }
    },
    fksFormItem: {
      default: function _default() {
        return {};
      }
    }
  },
  props: {
    showAllUser: {
      type: Boolean,
      default: false
    },
    width: {
      type: String,
      default: '100%'
    },
    url: {
      type: String,
      default: ''
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    readonly: Boolean,
    disabled: Boolean,
    /** 标签是否收缩 */
    collapseTags: Boolean,
    size: String,
    related: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      initialInputHeight: 0,
      visible: false
    };
  },

  computed: {
    collapseTagSize: function collapseTagSize() {
      return ['small', 'mini'].indexOf(this.size) > -1 ? 'mini' : 'small';
    },
    forbidden: function forbidden() {
      return this.disabled || !!(this.fksForm && this.fksForm.disabled) || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'disabled';
    },
    uploadReadOnly: function uploadReadOnly() {
      return this.readonly || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'readonly';
    }
  },
  methods: {
    resetInputHeight: function resetInputHeight() {
      var _this = this;

      this.$nextTick(function () {
        if (!_this.$refs.input) return;
        var inputChildNodes = _this.$refs.input.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this.$refs.tags;
        var sizeInMap = _this.initialInputHeight || 36;
        var list = _this.sureList || _this.chosedList;
        input.style.height = list.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 4 : 0) : 0, sizeInMap) + 'px';
      });
    }
  },
  watch: {
    collapseTags: function collapseTags() {
      if (this.multiple) {
        this.resetInputHeight();
      }
    }
  },
  mounted: function mounted() {
    var sizeMap = {
      large: 40,
      small: 32,
      mini: 28
    };
    this.initialInputHeight = sizeMap[this.size];
  }
});

/***/ }),

/***/ 25:
/***/ (function(module, exports) {

module.exports = require("qs");

/***/ }),

/***/ 27:
/***/ (function(module, exports) {

module.exports = require("dayjs");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/locale");

/***/ }),

/***/ 5:
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/types");

/***/ })

/******/ });