module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 64);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/date-util");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/dom");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/util");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/locale");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/emitter");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("vue");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var deepmerge = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {} else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = deepmerge(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

return BrowserSpriteSymbol;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(46)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	undefined;
}(this, (function () { 'use strict';

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var deepmerge = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {} else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

//      
// An event handler can take an optional event argument
// and should not return a value
                                          
// An array of all currently registered event handlers for a type
                                            
// A map of event types and their corresponding event handlers.
                        
                                   
  

/** Mitt: Tiny (~200b) functional event emitter / pubsub.
 *  @name mitt
 *  @returns {Mitt}
 */
function mitt(all                 ) {
	all = all || Object.create(null);

	return {
		/**
		 * Register an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to listen for, or `"*"` for all events
		 * @param  {Function} handler Function to call in response to given event
		 * @memberOf mitt
		 */
		on: function on(type        , handler              ) {
			(all[type] || (all[type] = [])).push(handler);
		},

		/**
		 * Remove an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
		 * @param  {Function} handler Handler function to remove
		 * @memberOf mitt
		 */
		off: function off(type        , handler              ) {
			if (all[type]) {
				all[type].splice(all[type].indexOf(handler) >>> 0, 1);
			}
		},

		/**
		 * Invoke all handlers for the given type.
		 * If present, `"*"` handlers are invoked after type-matched handlers.
		 *
		 * @param {String} type  The event type to invoke
		 * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
		 * @memberof mitt
		 */
		emit: function emit(type        , evt     ) {
			(all[type] || []).map(function (handler) { handler(evt); });
			(all['*'] || []).map(function (handler) { handler(type, evt); });
		}
	};
}

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = deepmerge(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var svg$1 = namespaces_1.svg;
var xlink$1 = namespaces_1.xlink;

var defaultConfig = {
  attrs: ( obj = {
    style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),
    'aria-hidden': 'true'
  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )
};
var obj;

var Sprite = function Sprite(config) {
  this.config = deepmerge(defaultConfig, config || {});
  this.symbols = [];
};

/**
 * Add new symbol. If symbol with the same id exists it will be replaced.
 * @param {SpriteSymbol} symbol
 * @return {boolean} `true` - symbol was added, `false` - replaced
 */
Sprite.prototype.add = function add (symbol) {
  var ref = this;
    var symbols = ref.symbols;
  var existing = this.find(symbol.id);

  if (existing) {
    symbols[symbols.indexOf(existing)] = symbol;
    return false;
  }

  symbols.push(symbol);
  return true;
};

/**
 * Remove symbol & destroy it
 * @param {string} id
 * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise
 */
Sprite.prototype.remove = function remove (id) {
  var ref = this;
    var symbols = ref.symbols;
  var symbol = this.find(id);

  if (symbol) {
    symbols.splice(symbols.indexOf(symbol), 1);
    symbol.destroy();
    return true;
  }

  return false;
};

/**
 * @param {string} id
 * @return {SpriteSymbol|null}
 */
Sprite.prototype.find = function find (id) {
  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;
};

/**
 * @param {string} id
 * @return {boolean}
 */
Sprite.prototype.has = function has (id) {
  return this.find(id) !== null;
};

/**
 * @return {string}
 */
Sprite.prototype.stringify = function stringify () {
  var ref = this.config;
    var attrs = ref.attrs;
  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');
  return wrapInSvgString(stringifiedSymbols, attrs);
};

/**
 * @return {string}
 */
Sprite.prototype.toString = function toString () {
  return this.stringify();
};

Sprite.prototype.destroy = function destroy () {
  this.symbols.forEach(function (s) { return s.destroy(); });
};

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

var defaultConfig$1 = {
  /**
   * Should following options be automatically configured:
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @type {boolean}
   */
  autoConfigure: true,

  /**
   * Default mounting selector
   * @type {string}
   */
  mountTo: 'body',

  /**
   * Fix disappearing SVG elements when <base href> exists.
   * Executes when sprite mounted.
   * @see http://stackoverflow.com/a/18265336/796152
   * @see https://github.com/everdimension/angular-svg-base-fix
   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466
   * @type {boolean}
   */
  syncUrlsWithBaseTag: false,

  /**
   * Should sprite listen custom location change event
   * @type {boolean}
   */
  listenLocationChangeEvent: true,

  /**
   * Custom window event name which should be emitted to update sprite urls
   * @type {string}
   */
  locationChangeEvent: 'locationChange',

  /**
   * Emit location change event in Angular automatically
   * @type {boolean}
   */
  locationChangeAngularEmitter: false,

  /**
   * Selector to find symbols usages when updating sprite urls
   * @type {string}
   */
  usagesToUpdate: 'use[*|href]',

  /**
   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.
   * Executes when sprite is rendered, but not mounted.
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364
   * @type {boolean}
   */
  moveGradientsOutsideSymbol: false
};

/**
 * @param {*} arrayLike
 * @return {Array}
 */
var arrayFrom = function (arrayLike) {
  return Array.prototype.slice.call(arrayLike, 0);
};

var browser = {
  isChrome: function () { return /chrome/i.test(navigator.userAgent); },
  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },

  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx
  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },
  isEdge: function () { return /edge/i.test(navigator.userAgent); }
};

/**
 * @param {string} name
 * @param {*} data
 */
var dispatchEvent = function (name, data) {
  var event = document.createEvent('CustomEvent');
  event.initCustomEvent(name, false, false, data);
  window.dispatchEvent(event);
};

/**
 * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.
 * This trick will trigger IE to read and use any existing SVG <style> tags.
 * @see https://github.com/iconic/SVGInjector/issues/23
 * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/
 *
 * @param {Element} node DOM Element to search <style> tags in
 * @return {Array<HTMLStyleElement>}
 */
var evalStylesIEWorkaround = function (node) {
  var updatedNodes = [];

  arrayFrom(node.querySelectorAll('style'))
    .forEach(function (style) {
      style.textContent += '';
      updatedNodes.push(style);
    });

  return updatedNodes;
};

/**
 * @param {string} [url] If not provided - current URL will be used
 * @return {string}
 */
var getUrlWithoutFragment = function (url) {
  return (url || window.location.href).split('#')[0];
};

/* global angular */
/**
 * @param {string} eventName
 */
var locationChangeAngularEmitter = function (eventName) {
  angular.module('ng').run(['$rootScope', function ($rootScope) {
    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {
      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });
    });
  }]);
};

var defaultSelector = 'linearGradient, radialGradient, pattern, mask, clipPath';

/**
 * @param {Element} svg
 * @param {string} [selector]
 * @return {Element}
 */
var moveGradientsOutsideSymbol = function (svg, selector) {
  if ( selector === void 0 ) selector = defaultSelector;

  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {
    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {
      symbol.parentNode.insertBefore(node, symbol);
    });
  });
  return svg;
};

/**
 * @param {NodeList} nodes
 * @param {Function} [matcher]
 * @return {Attr[]}
 */
function selectAttributes(nodes, matcher) {
  var attrs = arrayFrom(nodes).reduce(function (acc, node) {
    if (!node.attributes) {
      return acc;
    }

    var arrayfied = arrayFrom(node.attributes);
    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;
    return acc.concat(matched);
  }, []);

  return attrs;
}

/**
 * @param {NodeList|Node} nodes
 * @param {boolean} [clone=true]
 * @return {string}
 */

var xLinkNS = namespaces_1.xlink.uri;
var xLinkAttrName = 'xlink:href';

// eslint-disable-next-line no-useless-escape
var specialUrlCharsPattern = /[{}|\\\^\[\]`"<>]/g;

function encoder(url) {
  return url.replace(specialUrlCharsPattern, function (match) {
    return ("%" + (match[0].charCodeAt(0).toString(16).toUpperCase()));
  });
}

function escapeRegExp(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"); // $& means the whole matched string
}

/**
 * @param {NodeList} nodes
 * @param {string} startsWith
 * @param {string} replaceWith
 * @return {NodeList}
 */
function updateReferences(nodes, startsWith, replaceWith) {
  arrayFrom(nodes).forEach(function (node) {
    var href = node.getAttribute(xLinkAttrName);
    if (href && href.indexOf(startsWith) === 0) {
      var newUrl = href.replace(startsWith, replaceWith);
      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);
    }
  });

  return nodes;
}

/**
 * List of SVG attributes to update url() target in them
 */
var attList = [
  'clipPath',
  'colorProfile',
  'src',
  'cursor',
  'fill',
  'filter',
  'marker',
  'markerStart',
  'markerMid',
  'markerEnd',
  'mask',
  'stroke',
  'style'
];

var attSelector = attList.map(function (attr) { return ("[" + attr + "]"); }).join(',');

/**
 * Update URLs in svg image (like `fill="url(...)"`) and update referencing elements
 * @param {Element} svg
 * @param {NodeList} references
 * @param {string|RegExp} startsWith
 * @param {string} replaceWith
 * @return {void}
 *
 * @example
 * const sprite = document.querySelector('svg.sprite');
 * const usages = document.querySelectorAll('use');
 * updateUrls(sprite, usages, '#', 'prefix#');
 */
var updateUrls = function (svg, references, startsWith, replaceWith) {
  var startsWithEncoded = encoder(startsWith);
  var replaceWithEncoded = encoder(replaceWith);

  var nodes = svg.querySelectorAll(attSelector);
  var attrs = selectAttributes(nodes, function (ref) {
    var localName = ref.localName;
    var value = ref.value;

    return attList.indexOf(localName) !== -1 && value.indexOf(("url(" + startsWithEncoded)) !== -1;
  });

  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });
  updateReferences(references, startsWithEncoded, replaceWithEncoded);
};

/**
 * Internal emitter events
 * @enum
 * @private
 */
var Events = {
  MOUNT: 'mount',
  SYMBOL_MOUNT: 'symbol_mount'
};

var BrowserSprite = (function (Sprite$$1) {
  function BrowserSprite(cfg) {
    var this$1 = this;
    if ( cfg === void 0 ) cfg = {};

    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));

    var emitter = mitt();
    this._emitter = emitter;
    this.node = null;

    var ref = this;
    var config = ref.config;

    if (config.autoConfigure) {
      this._autoConfigure(cfg);
    }

    if (config.syncUrlsWithBaseTag) {
      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');
      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });
    }

    var handleLocationChange = this._handleLocationChange.bind(this);
    this._handleLocationChange = handleLocationChange;

    // Provide way to update sprite urls externally via dispatching custom window event
    if (config.listenLocationChangeEvent) {
      window.addEventListener(config.locationChangeEvent, handleLocationChange);
    }

    // Emit location change event in Angular automatically
    if (config.locationChangeAngularEmitter) {
      locationChangeAngularEmitter(config.locationChangeEvent);
    }

    // After sprite mounted
    emitter.on(Events.MOUNT, function (spriteNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(spriteNode);
      }
    });

    // After symbol mounted into sprite
    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(symbolNode.parentNode);
      }

      if (browser.isIE() || browser.isEdge()) {
        evalStylesIEWorkaround(symbolNode);
      }
    });
  }

  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;
  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );
  BrowserSprite.prototype.constructor = BrowserSprite;

  var prototypeAccessors = { isMounted: {} };

  /**
   * @return {boolean}
   */
  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * Automatically configure following options
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @param {Object} cfg
   * @private
   */
  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {
    var ref = this;
    var config = ref.config;

    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {
      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';
    }

    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {
        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';
    }

    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {
      config.moveGradientsOutsideSymbol = browser.isFirefox();
    }
  };

  /**
   * @param {Event} event
   * @param {Object} event.detail
   * @param {string} event.detail.oldUrl
   * @param {string} event.detail.newUrl
   * @private
   */
  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {
    var ref = event.detail;
    var oldUrl = ref.oldUrl;
    var newUrl = ref.newUrl;
    this.updateUrls(oldUrl, newUrl);
  };

  /**
   * Add new symbol. If symbol with the same id exists it will be replaced.
   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.
   * @fires Events#SYMBOL_MOUNT
   * @param {BrowserSpriteSymbol} symbol
   * @return {boolean} `true` - symbol was added, `false` - replaced
   */
  BrowserSprite.prototype.add = function add (symbol) {
    var sprite = this;
    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);

    if (this.isMounted && isNewSymbol) {
      symbol.mount(sprite.node);
      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    }

    return isNewSymbol;
  };

  /**
   * Attach to existing DOM node
   * @param {string|Element} target
   * @return {Element|null} attached DOM Element. null if node to attach not found.
   */
  BrowserSprite.prototype.attach = function attach (target) {
    var this$1 = this;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    /** @type Element */
    var node = typeof target === 'string' ? document.querySelector(target) : target;
    sprite.node = node;

    // Already added symbols needs to be mounted
    this.symbols.forEach(function (symbol) {
      symbol.mount(sprite.node);
      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    });

    // Create symbols from existing DOM nodes, add and mount them
    arrayFrom(node.querySelectorAll('symbol'))
      .forEach(function (symbolNode) {
        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);
        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding
        sprite.add(symbol);
      });

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  BrowserSprite.prototype.destroy = function destroy () {
    var ref = this;
    var config = ref.config;
    var symbols = ref.symbols;
    var _emitter = ref._emitter;

    symbols.forEach(function (s) { return s.destroy(); });

    _emitter.off('*');
    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);

    if (this.isMounted) {
      this.unmount();
    }
  };

  /**
   * @fires Events#MOUNT
   * @param {string|Element} [target]
   * @param {boolean} [prepend=false]
   * @return {Element|null} rendered sprite node. null if mount node not found.
   */
  BrowserSprite.prototype.mount = function mount (target, prepend) {
    if ( target === void 0 ) target = this.config.mountTo;
    if ( prepend === void 0 ) prepend = false;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;
    var node = sprite.render();
    this.node = node;

    if (prepend && mountNode.childNodes[0]) {
      mountNode.insertBefore(node, mountNode.childNodes[0]);
    } else {
      mountNode.appendChild(node);
    }

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSprite.prototype.render = function render () {
    return parse(this.stringify());
  };

  /**
   * Detach sprite from the DOM
   */
  BrowserSprite.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  /**
   * Update URLs in sprite and usage elements
   * @param {string} oldUrl
   * @param {string} newUrl
   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted
   */
  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {
    if (!this.isMounted) {
      return false;
    }

    var usages = document.querySelectorAll(this.config.usagesToUpdate);

    updateUrls(
      this.node,
      usages,
      ((getUrlWithoutFragment(oldUrl)) + "#"),
      ((getUrlWithoutFragment(newUrl)) + "#")
    );

    return true;
  };

  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );

  return BrowserSprite;
}(Sprite));

var ready$1 = createCommonjsModule(function (module) {
/*!
  * domready (c) Dustin Diaz 2014 - License MIT
  */
!function (name, definition) {

  { module.exports = definition(); }

}('domready', function () {

  var fns = [], listener
    , doc = document
    , hack = doc.documentElement.doScroll
    , domContentLoaded = 'DOMContentLoaded'
    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);


  if (!loaded)
  { doc.addEventListener(domContentLoaded, listener = function () {
    doc.removeEventListener(domContentLoaded, listener);
    loaded = 1;
    while (listener = fns.shift()) { listener(); }
  }); }

  return function (fn) {
    loaded ? setTimeout(fn, 0) : fns.push(fn);
  }

});
});

var spriteNodeId = '__SVG_SPRITE_NODE__';
var spriteGlobalVarName = '__SVG_SPRITE__';
var isSpriteExists = !!window[spriteGlobalVarName];

// eslint-disable-next-line import/no-mutable-exports
var sprite;

if (isSpriteExists) {
  sprite = window[spriteGlobalVarName];
} else {
  sprite = new BrowserSprite({
    attrs: {
      id: spriteNodeId,
      'aria-hidden': 'true'
    }
  });
  window[spriteGlobalVarName] = sprite;
}

var loadSprite = function () {
  /**
   * Check for page already contains sprite node
   * If found - attach to and reuse it's content
   * If not - render and mount the new sprite
   */
  var existing = document.getElementById(spriteNodeId);

  if (existing) {
    sprite.attach(existing);
  } else {
    sprite.mount(document.body, true);
  }
};

if (document.body) {
  loadSprite();
} else {
  ready$1(loadSprite);
}

var sprite$1 = sprite;

return sprite$1;

})));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(46)))

/***/ }),
/* 8 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/vue-popper");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/resize-event");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/merge");

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/locale");

/***/ }),
/* 12 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/input");

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/migrating");

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/clickoutside");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("throttle-debounce/debounce");

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/button");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/types");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/popup");

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/scrollbar");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/checkbox");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/shared");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = require("babel-helper-vue-jsx-merge-props");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/date");

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/transitions/collapse-transition");

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/mixins/focus");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/vdom");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = require("webuploader");

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = require("throttle-debounce/throttle");

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/tooltip");

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/scroll-into-view");

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = require("axios");

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/button-group");

/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/tag");

/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/scrollbar-width");

/***/ }),
/* 35 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/checkbox-group");

/***/ }),
/* 36 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/after-leave");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/progress");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/aria-utils");

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("bpmn-js");

/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/outside");

/***/ }),
/* 41 */
/***/ (function(module, exports) {

module.exports = require("throttle-debounce");

/***/ }),
/* 42 */
/***/ (function(module, exports) {

module.exports = require("crypto-js/hmac-sha1");

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = require("crypto-js/enc-base64");

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return getAddress; });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/*
* by: chen ming
* time: 2019/9/18
* desc: 选地址组件api
*
* */


function getAddress(baseurl, params) {
    var url = baseurl ? baseurl : process.env.VUE_APP_ADDRESS_URL; //'http://10.215.136.245:17200/sys-region'
    return axios__WEBPACK_IMPORTED_MODULE_0___default()({
        method: 'get',
        url: url + '/region/select',
        withCredentials: true,
        params: params
    }).catch(function (e) {
        if (e) console.log(e);
    });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(86)))

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = require("dayjs");

/***/ }),
/* 46 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 47 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/select");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/option");

/***/ }),
/* 49 */
/***/ (function(module, exports) {

module.exports = require("vuedraggable");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("normalize-wheel");

/***/ }),
/* 51 */
/***/ (function(module, exports) {

module.exports = require("sortablejs");

/***/ }),
/* 52 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/popover");

/***/ }),
/* 53 */
/***/ (function(module, exports) {

module.exports = require("js-md5");

/***/ }),
/* 54 */
/***/ (function(module, exports) {

module.exports = require("qs");

/***/ }),
/* 55 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/skeleton-item");

/***/ }),
/* 56 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/aria-dialog");

/***/ }),
/* 57 */
/***/ (function(module, exports) {

module.exports = require("async-validator");

/***/ }),
/* 58 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/input-number");

/***/ }),
/* 59 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/cascader-panel");

/***/ }),
/* 60 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/radio");

/***/ }),
/* 61 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/fileIcon");

/***/ }),
/* 62 */
/***/ (function(module, exports) {

module.exports = require("svg-pan-zoom");

/***/ }),
/* 63 */
/***/ (function(module, exports) {

module.exports = require("fawkes-lib/lib/utils/storage");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(87);


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./doc/doc_blank.svg": 66,
	"./doc/doc_code.svg": 67,
	"./doc/doc_excel.svg": 68,
	"./doc/doc_exe.svg": 69,
	"./doc/doc_folder.svg": 70,
	"./doc/doc_html.svg": 71,
	"./doc/doc_img.svg": 72,
	"./doc/doc_iso.svg": 73,
	"./doc/doc_music.svg": 74,
	"./doc/doc_pdf.svg": 75,
	"./doc/doc_ppt.svg": 76,
	"./doc/doc_txt.svg": 77,
	"./doc/doc_video.svg": 78,
	"./doc/doc_word.svg": 79,
	"./doc/doc_zip.svg": 80,
	"./tree/click-node.svg": 81,
	"./tree/expand-node.svg": 82,
	"./tree/has-node.svg": 83,
	"./tree/no-node.svg": 84,
	"./tree/tree-root.svg": 85
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 65;

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_blank",
  "use": "icon-doc_blank-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_blank\"><defs><style type=\"text/css\"></style></defs><path d=\"M160 32c-12 0-24.8 4.8-33.6 14.4S112 68 112 80v864c0 12 4.8 24.8 14.4 33.6 9.6 9.6 21.6 14.4 33.6 14.4h704c12 0 24.8-4.8 33.6-14.4 9.6-9.6 14.4-21.6 14.4-33.6V304L640 32H160z\" fill=\"#E5E5E5\" p-id=\"849\" /><path d=\"M912 304H688c-12 0-24.8-4.8-33.6-14.4-9.6-8.8-14.4-21.6-14.4-33.6V32l272 272z\" fill=\"#CCCCCC\" p-id=\"850\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_code",
  "use": "icon-doc_code-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_code\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#383838\" p-id=\"2638\" /><path d=\"M932 184H748V0\" fill=\"#6D6D6C\" p-id=\"2639\" /><path d=\"M432.7 412l-20-20c-2.9-2.9-7.1-2.9-10 0L291.5 503.3c-1.4 1.4-2.1 3.6-2.1 5s0.7 3.6 2.1 5l111.3 111.3c2.9 2.9 7.1 2.9 10 0l20-20c2.9-2.9 2.9-7.1 0-10L347.1 509l85.6-85.6c2.9-3.6 2.9-8.6 0-11.4z m304.6 91.3L626.7 392c-2.9-2.9-7.1-2.9-10 0l-20 20c-2.9 2.9-2.9 7.1 0 10l85.6 85.6-85.6 85.6c-2.9 2.9-2.9 7.1 0 10l20 20c2.9 2.9 7.1 2.9 10 0L738 511.9c1.4-1.4 2.1-3.6 2.1-5-0.6-0.7-1.3-2.2-2.8-3.6z m-169-156.9c-11.4-3.6-23.5 2.9-27.1 13.6l-92.7 284.6c-3.6 11.4 2.9 23.5 13.6 27.1 10.7 3.6 23.5-2.9 27.1-13.6l92.7-285.4c3.5-10.6-2.2-22.8-13.6-26.3z\" fill=\"#FFFFFF\" p-id=\"2640\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_excel",
  "use": "icon-doc_excel-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_excel\"><defs><style type=\"text/css\"></style></defs><path d=\"M745 184.3V1H93v1022.5h836V184.3z\" fill=\"#72DCA2\" p-id=\"1242\" /><path d=\"M928.8 184h-184V0.8\" fill=\"#A9FFCE\" p-id=\"1243\" /><path d=\"M500.8 476.2l76.6-131h67.7L532.5 537.9 445.7 686H378l122.8-209.8z m-0.7 70.3l-6.6-11-112.7-190.3h67.7L525 474.4l8.9 15.2L650.3 686h-67.7l-82.5-139.5z\" fill=\"#FCFCFC\" p-id=\"1244\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_exe",
  "use": "icon-doc_exe-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_exe\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#9B9B9B\" p-id=\"2356\" /><path d=\"M932 184H748V0\" fill=\"#CCCCCC\" p-id=\"2357\" /><path d=\"M363.3 707.2c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3h-88.3z\" fill=\"#FFFFFF\" p-id=\"2358\" /><path d=\"M451.6 557.1c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5h-88.3c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7h-88.3c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-24.7-19.3-44.1-44.1-44.1z m-88.3-45.9c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3h-88.3z\" fill=\"#FFFFFF\" p-id=\"2359\" /><path d=\"M451.6 343.4c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5h-88.3c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7h-88.3c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-23.8-19.3-44.1-44.1-44.1zM577 707.2c-19.4 0-35.3-15.9-35.3-35.3v-88.3c0-19.4 15.9-35.3 35.3-35.3h88.3c19.4 0 35.3 15.9 35.3 35.3v88.3c0 19.4-15.9 35.3-35.3 35.3H577z\" fill=\"#FFFFFF\" p-id=\"2360\" /><path d=\"M665.3 557.1c15 0 26.5 11.5 26.5 26.5v88.3c0 15-11.5 26.5-26.5 26.5H577c-15 0-26.5-11.5-26.5-26.5v-88.3c0-15 11.5-26.5 26.5-26.5h88.3m0-17.7H577c-24.7 0-44.1 20.3-44.1 44.1v88.3c0 24.7 20.3 44.1 44.1 44.1h88.3c24.7 0 44.1-20.3 44.1-44.1v-88.3c0.1-24.7-20.2-44.1-44.1-44.1zM621.2 512c-9.7 0-18.5-3.5-24.7-10.6l-62.7-62.7c-7.1-7.1-10.6-15.9-10.6-24.7 0-9.7 3.5-18.5 10.6-24.7l62.7-62.7c7.1-7.1 15.9-10.6 24.7-10.6 8.8 0 18.5 3.5 24.7 10.6l62.7 62.7c14.1 14.1 14.1 36.2 0 50.3l-62.7 62.7c-6.2 6.2-15 9.7-24.7 9.7z\" fill=\"#FFFFFF\" p-id=\"2361\" /><path d=\"M621.2 324.9c7.1 0 14.1 2.6 18.5 7.9l62.7 62.7c5.3 5.3 7.9 11.5 7.9 18.5s-2.6 14.1-7.9 18.5l-62.7 62.7c-5.3 5.3-11.5 7.9-18.5 7.9-7.1 0-14.1-2.6-18.5-7.9L540 432.5c-5.3-5.3-7.9-11.5-7.9-18.5s2.6-14.1 7.9-18.5l62.7-62.7c4.3-5.3 11.4-7.9 18.5-7.9m0-17.7c-11.5 0-23 4.4-30.9 13.2l-62.7 62.7c-16.8 16.8-16.8 45 0 62.7l62.7 62.7c8.8 8.8 20.3 13.2 30.9 13.2s23-4.4 30.9-13.2l62.7-62.7c16.8-16.8 16.8-45 0-62.7l-62.7-62.7c-8-8.8-19.5-13.2-30.9-13.2z\" fill=\"#FFFFFF\" p-id=\"2362\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_folder",
  "use": "icon-doc_folder-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_folder\"><defs><style type=\"text/css\"></style></defs><path d=\"M0 317h1024v595H0z\" fill=\"#FFE17B\" p-id=\"2912\" /><path d=\"M523 217l-98-97H0v197h1024V217z\" fill=\"#FFEFB6\" p-id=\"2913\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_html",
  "use": "icon-doc_html-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_html\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#5FB3FF\" p-id=\"2499\" /><path d=\"M932 184H748V0\" fill=\"#99CFFF\" p-id=\"2500\" /><path d=\"M704 523.1c0 7 0 14.7-0.9 21.7H456.8c0 42.5 37.3 73.7 78 73.7 27.7 0 54.6-13.9 68.5-38.2h90.2c-24.3 68.5-88.5 114.5-161.3 114.5-26 0-52-6-75.5-18.2-24.3 12.1-57.2 25.1-84.1 25.1-36.4 0-50.3-21.7-50.3-56.4 0-20 4.3-39 10.4-58.1 2.6-12.1 17.3-37.3 23.4-49.4 26-46.8 59.9-93.7 101.5-129.2-32.1 13.9-68.5 49.4-91.1 75.5 17.3-77.2 86.7-132.7 165.7-132.7h10.4c26-12.2 63.3-25.2 92.7-25.2 33.8 0 64.2 13 64.2 52 0 20-7.8 42.5-16.5 61.6 14.1 25.2 21 54.7 21 83.3z m-14.7-136.2c0-24.3-17.3-38.2-39.9-38.2-18.2 0-38.2 7-54.6 14.7 35.6 13.9 64.2 38.2 83.2 69.4 6.1-13.8 11.3-31.1 11.3-45.9z m-340 262.8c0 25.1 14.7 38.2 39 38.2 19.1 0 39.9-7.8 56.4-18.2-35.6-20.8-61.6-52.9-74.6-91.1-9.5 20.8-20.8 48.5-20.8 71.1z m107.5-151.8h154.4c-0.9-40.7-38.2-70.2-77.2-70.2-39.9 0-76.3 29.5-77.2 70.2z\" fill=\"#FFFFFF\" p-id=\"2501\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_img",
  "use": "icon-doc_img-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_img\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#71CE52\" p-id=\"2078\" /><path d=\"M932 184H748V0\" fill=\"#C1FF99\" p-id=\"2079\" /><path d=\"M314.1 460.9c17.5 9.9 38.9 9.8 56.3-0.4 17.4-10.2 28-28.8 27.9-48.9-0.2-31.1-25.6-56.1-56.7-55.9-31.2 0.1-56.2 25.5-56 56.7 0.1 20 11 38.5 28.5 48.5zM466.5 586.7l-74.9-78.8L280.7 666l470.3-3.1-144.2-228.2z\" fill=\"#FFFFFF\" p-id=\"2080\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_iso",
  "use": "icon-doc_iso-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_iso\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#8CBEBF\" p-id=\"2775\" /><path d=\"M932 184H748V0\" fill=\"#B8DDDD\" p-id=\"2776\" /><path d=\"M491.2 510.5c0-12.3 10-22.3 22.3-22.3s22.3 10 22.3 22.3-10 22.3-22.3 22.3-22.3-10-22.3-22.3z m22.3-58c-32 0-57.9 25.9-57.9 57.9s25.9 57.9 57.9 57.9 57.9-25.9 57.9-57.9c0-31.9-25.9-57.9-57.9-57.9z m-209.5 58C304 626.2 397.8 720 513.5 720S723 626.2 723 510.5 629.2 301 513.5 301 304 394.8 304 510.5z m209.5-93.6c51.7 0 93.6 41.9 93.6 93.6s-41.9 93.6-93.6 93.6-93.6-41.9-93.6-93.6 41.9-93.6 93.6-93.6z\" fill=\"#FFFFFF\" p-id=\"2777\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_music",
  "use": "icon-doc_music-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_music\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#FF6955\" p-id=\"1800\" /><path d=\"M932 184H748V0\" fill=\"#FFA694\" p-id=\"1801\" /><path d=\"M586.7 302.1c-5.3 7.5-34.2 20.3-58.7 25.6-31 6.4-47 11.7-63 20.3-21.3 12.8-33.1 28.8-31 43.8 1.1 3.2 26.7 40.6 56.6 83.2 31 42.7 56.6 79 57.6 80 1.1 2.1-3.2 2.1-18.1 1.1-47-3.2-89.6 21.3-108.9 59.8-5.3 11.7-6.4 18.1-6.4 32 0 32 17.1 57.6 49.1 72.6 12.8 5.3 17.1 6.4 43.8 6.4 28.8 0 29.9 0 49.1-9.6C608 692.8 629.4 644.7 608 601c-4.3-9.6-31-55.5-59.8-102.5L496 412h8.5c34.2-2.1 57.6-12.8 73.6-31 13.9-16 18.1-32 17.1-57.6-1-23.5-3.2-28.8-8.5-21.3z\" fill=\"#FFFFFF\" p-id=\"1802\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_pdf",
  "use": "icon-doc_pdf-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_pdf\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#FF5562\" p-id=\"1663\" /><path d=\"M932 184H748V0\" fill=\"#FF9292\" p-id=\"1664\" /><path d=\"M657.9 606.1c-29.4-1.9-57.4-12.9-79.9-31.3-44.2 9.4-86.3 22.9-128.4 39.6-33.5 57.4-64.8 86.6-91.8 86.6-5.4 0-11.9-1-16.2-4.2-11.3-5.1-18.5-16.1-18.3-28.2 0-9.4 2.1-35.5 104.7-78.2 23.3-41.3 42.4-84.6 57.2-129.4-12.9-25-41-86.6-21.6-117.9 6.5-11.5 19.4-17.7 33.5-16.7 11 0.1 21.4 5.1 28.1 13.6 14 18.8 12.9 58.4-5.4 116.8 17.3 31.3 39.9 59.5 66.9 83.5 22.7-4.2 45.3-7.3 68-7.3 50.7 1 58.3 24 57.2 37.5 0 35.6-35.7 35.6-54 35.6z m-302.2 64.6l3.2-1c15.1-5.2 27-15.6 35.6-29.2-16.2 6.3-29.1 16.6-38.8 30.2z m143.5-312.9H496c-1.1 0-3.3 0-4.3 1-4.3 17.7-1.1 36.5 6.5 53.2 6.2-17.5 6.6-36.5 1-54.2z m7.6 151.2l-1.1 2.1-1.1-1.1c-9.7 24-20.5 48-32.4 70.9l2.1-1v2.1c24-8.4 48.5-15.3 73.4-20.9l-1-1h3.3c-16.2-15.5-30.7-32.6-43.2-51.1z m146.8 55.3c-9.7 0-18.3 0-28 2.1 10.8 5.2 21.6 7.3 32.4 8.3 7.6 1 15.1 0 21.6-2.1-0.1-3-4.4-8.3-26-8.3z\" fill=\"#FFFFFF\" p-id=\"1665\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_ppt",
  "use": "icon-doc_ppt-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_ppt\"><defs><style type=\"text/css\"></style></defs><path d=\"M745 186V3H93v1021h836V186z\" fill=\"#FF8278\" p-id=\"1383\" /><path d=\"M929 186H745V2.7\" fill=\"#FFB7B3\" p-id=\"1384\" /><path d=\"M390.5 341.2h64.2V682h-64.2V341.2z m29.3 146.7h109c7.7 0 14.4-1.8 20.3-5.3s10.4-8.5 13.7-14.9 4.9-13.7 4.9-22c0-8.4-1.6-15.9-4.8-22.4s-7.7-11.5-13.6-15-12.7-5.3-20.5-5.3h-109v-61.9h107.3c21.2 0 40 4.3 56.1 13s28.7 20.9 37.6 36.7c8.9 15.8 13.4 34.1 13.4 54.8 0 20.8-4.5 39-13.4 54.7s-21.4 27.9-37.6 36.4c-16.2 8.6-34.9 12.9-56.1 12.9H419.8v-61.7z\" fill=\"#FFFFFF\" p-id=\"1385\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_txt",
  "use": "icon-doc_txt-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_txt\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#92A8C1\" p-id=\"2217\" /><path d=\"M932 184H748V0\" fill=\"#B5BDC6\" p-id=\"2218\" /><path d=\"M387.4 321.8h249.8v61.9H387.4v-61.9z m92.8 27.9h64.2v312.9h-64.2V349.7z\" fill=\"#FFFFFF\" p-id=\"2219\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_video",
  "use": "icon-doc_video-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_video\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#E657FF\" p-id=\"1939\" /><path d=\"M932 184H748V0\" fill=\"#F797FF\" p-id=\"1940\" /><path d=\"M635.3 459.6l52.3-30.3c9.2-5.5 17.4-0.9 17.4 8.3v151.3c0 11-7.3 14.7-17.4 8.3l-52.3-30.3c-9.2-5.5-17.4-11.9-17.4-21.1v-66.9c0-8.3 8.3-13.8 17.4-19.3z m-82.5-56.8H356.7c-20.2 0-36.7 16.5-36.7 36.7v157.7c0 20.2 16.5 36.7 36.7 36.7h196.2c20.2 0 36.7-16.5 36.7-36.7V439.5c-0.1-20.2-16.6-36.7-36.8-36.7z m-118.2 88.9c-2.8 13.8-13.8 23.8-25.7 26.6-23.8 4.6-44-16.5-39.4-39.4 2.8-13.8 13.8-23.8 25.7-25.7 23.8-6.4 44 13.8 39.4 38.5z\" fill=\"#FFFFFF\" p-id=\"1941\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_word",
  "use": "icon-doc_word-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_word\"><defs><style type=\"text/css\"></style></defs><path d=\"M745 186V3H93v1021h836V186z\" fill=\"#6CA2FF\" p-id=\"1522\" /><path d=\"M929 186H745V3\" fill=\"#A2CBFC\" p-id=\"1523\" /><path d=\"M490.4 344.2H542l65.2 227.3L651 344.2h66.1L638.5 685H578l-60.5-238.1L454.3 685h-60.5l-78.5-340.8h66.1l43.8 227.3 65.2-227.3z\" fill=\"#FCFCFC\" p-id=\"1524\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-doc_zip",
  "use": "icon-doc_zip-usage",
  "viewBox": "0 0 1024 1024",
  "content": "<symbol class=\"icon\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" id=\"icon-doc_zip\"><defs><style type=\"text/css\"></style></defs><path d=\"M748 183.5V0H96v1024h836V183.5z\" fill=\"#DBB375\" p-id=\"1101\" /><path d=\"M932 184H748V0\" fill=\"#FFD597\" p-id=\"1102\" /><path d=\"M223 0h96v96h-96zM319 96h96v96h-96zM223 192h96v96h-96zM319 288h96v96h-96zM223 384h96v96h-96zM319 480h96v96h-96z\" fill=\"#FFFFFF\" p-id=\"1103\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-click-node",
  "use": "icon-click-node-usage",
  "viewBox": "0 0 16 16",
  "content": "<symbol xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" id=\"icon-click-node\">\r\n<g opacity=\"0.3\">\r\n\t<path d=\"M13,1H3C2.4,1,2,1.4,2,2v12c0,0.6,0.4,1,1,1h7l4-4V2C14,1.4,13.6,1,13,1z\" />\r\n</g>\r\n<path opacity=\"0.3\" d=\"M10,15v-3c0-0.6,0.4-1,1-1h3L10,15z\" />\r\n<g>\r\n\t<path d=\"M4.5,5h7C11.8,5,12,4.8,12,4.5S11.8,4,11.5,4h-7C4.2,4,4,4.2,4,4.5S4.2,5,4.5,5z\" />\r\n\t<path d=\"M11.5,6h-7C4.2,6,4,6.2,4,6.5S4.2,7,4.5,7h7C11.8,7,12,6.8,12,6.5S11.8,6,11.5,6z\" />\r\n\t<path d=\"M7.5,8h-3C4.2,8,4,8.2,4,8.5S4.2,9,4.5,9h3C7.8,9,8,8.8,8,8.5S7.8,8,7.5,8z\" />\r\n</g>\r\n</symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-expand-node",
  "use": "icon-expand-node-usage",
  "viewBox": "0 0 16 16",
  "content": "<symbol xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" id=\"icon-expand-node\">\r\n<g opacity=\"0.6\">\r\n\t<path d=\"M14,5H8.4C8.1,5,7.9,4.9,7.7,4.7L7.3,4.3C7.1,4.1,6.9,4,6.6,4H2C1.4,4,1,4.4,1,5v8c0,0.6,0.4,1,1,1h12\r\n\t\tc0.6,0,1-0.4,1-1V6C15,5.4,14.6,5,14,5z\" />\r\n</g>\r\n<g opacity=\"0.3\">\r\n\t<path d=\"M7.3,4.3l0.4,0.4C7.9,4.9,8.1,5,8.4,5H14V2c0-0.6-0.5-1-1-1H3C2.5,1,2,1.5,2,2v2h4.6C6.9,4,7.1,4.1,7.3,4.3\r\n\t\tz\" />\r\n</g>\r\n</symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-has-node",
  "use": "icon-has-node-usage",
  "viewBox": "0 0 16 16",
  "content": "<symbol xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" id=\"icon-has-node\">\r\n<g opacity=\"0.6\">\r\n\t<path d=\"M14,3H8.4C8.1,3,7.9,2.9,7.7,2.7L7.3,2.3C7.1,2.1,6.9,2,6.6,2H2C1.4,2,1,2.4,1,3v10c0,0.6,0.4,1,1,1h12\r\n\t\tc0.6,0,1-0.4,1-1V4C15,3.4,14.6,3,14,3z M11.6,6H4.4C4.2,6,4,5.8,4,5.5S4.2,5,4.4,5h7.2C11.8,5,12,5.2,12,5.5S11.8,6,11.6,6z\" />\r\n</g>\r\n</symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-no-node",
  "use": "icon-no-node-usage",
  "viewBox": "0 0 16 16",
  "content": "<symbol xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 16 16\" id=\"icon-no-node\">\r\n<g opacity=\"0.3\">\r\n\t<path d=\"M13,1H3C2.4,1,2,1.4,2,2v12c0,0.6,0.4,1,1,1h7l4-4V2C14,1.4,13.6,1,13,1z M7.5,9h-3C4.2,9,4,8.8,4,8.5\r\n\t\tS4.2,8,4.5,8h3C7.8,8,8,8.2,8,8.5S7.8,9,7.5,9z M11.5,7h-7C4.2,7,4,6.8,4,6.5S4.2,6,4.5,6h7C11.8,6,12,6.2,12,6.5S11.8,7,11.5,7z\r\n\t\t M11.5,5h-7C4.2,5,4,4.8,4,4.5S4.2,4,4.5,4h7C11.8,4,12,4.2,12,4.5S11.8,5,11.5,5z\" />\r\n</g>\r\n<path opacity=\"0.3\" d=\"M10,15v-3c0-0.6,0.4-1,1-1h3L10,15z\" />\r\n</symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);
/* harmony import */ var _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1__);


var symbol = new _node_modules_svg_baker_runtime_browser_symbol_js__WEBPACK_IMPORTED_MODULE_0___default.a({
  "id": "icon-tree-root",
  "use": "icon-tree-root-usage",
  "viewBox": "0 0 32 32",
  "content": "<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" id=\"icon-tree-root\"><title>图标2</title><path d=\"M26.61,16.37l0,9.27A2.36,2.36,0,0,1,24.23,28H7.7a2.36,2.36,0,0,1-2.35-2.36v-9.3l-.56.55a.89.89,0,0,1-1.25,0,.9.9,0,0,1,0-1.21l11-11a2.05,2.05,0,0,1,2.9,0h0l11,11a.88.88,0,0,1-.05,1.25.87.87,0,0,1-1.2,0Z\" style=\"fill:#f78077\" /><polygon points=\"19.09 20.35 24.23 28 16.4 28.01 19.09 20.35\" style=\"fill:#ed7977\" /><rect x=\"12.93\" y=\"19.91\" width=\"6.25\" height=\"8.09\" rx=\"0.8\" style=\"fill:#ffd558\" /><path d=\"M16,19.91h2.39a.8.8,0,0,1,.8.8v6.5a.8.8,0,0,1-.8.8H16a0,0,0,0,1,0,0V19.91A0,0,0,0,1,16,19.91Z\" style=\"fill:#ffb353\" /><circle cx=\"14.56\" cy=\"23.96\" r=\"1.04\" style=\"fill:#fff\" /></symbol>"
});
var result = _node_modules_svg_sprite_loader_runtime_browser_sprite_build_js__WEBPACK_IMPORTED_MODULE_1___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = (symbol);

/***/ }),
/* 86 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/pagination/src/pager.vue?vue&type=template&id=377e4d9c&
var pagervue_type_template_id_377e4d9c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ul",
    { staticClass: "fks-pager", on: { click: _vm.onPagerClick } },
    [
      _vm.pageCount > 0
        ? _c(
            "li",
            {
              staticClass: "number",
              class: { active: _vm.currentPage === 1, disabled: _vm.disabled },
            },
            [_vm._v("1")]
          )
        : _vm._e(),
      _vm.showPrevMore
        ? _c("li", {
            staticClass: "fks-icon more btn-quickprev",
            class: [_vm.quickprevIconClass, { disabled: _vm.disabled }],
            on: {
              mouseenter: function ($event) {
                return _vm.onMouseenter("left")
              },
              mouseleave: function ($event) {
                _vm.quickprevIconClass = "fks-icon-more"
              },
            },
          })
        : _vm._e(),
      _vm._l(_vm.pagers, function (pager) {
        return _c(
          "li",
          {
            key: pager,
            staticClass: "number",
            class: {
              active: _vm.currentPage === pager,
              disabled: _vm.disabled,
            },
          },
          [_vm._v(_vm._s(pager))]
        )
      }),
      _vm.showNextMore
        ? _c("li", {
            staticClass: "fks-icon more btn-quicknext",
            class: [_vm.quicknextIconClass, { disabled: _vm.disabled }],
            on: {
              mouseenter: function ($event) {
                return _vm.onMouseenter("right")
              },
              mouseleave: function ($event) {
                _vm.quicknextIconClass = "fks-icon-more"
              },
            },
          })
        : _vm._e(),
      _vm.pageCount > 1
        ? _c(
            "li",
            {
              staticClass: "number",
              class: {
                active: _vm.currentPage === _vm.pageCount,
                disabled: _vm.disabled,
              },
            },
            [_vm._v(_vm._s(_vm.pageCount))]
          )
        : _vm._e(),
    ],
    2
  )
}
var staticRenderFns = []
pagervue_type_template_id_377e4d9c_render._withStripped = true


// CONCATENATED MODULE: ./packages/pagination/src/pager.vue?vue&type=template&id=377e4d9c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/pagination/src/pager.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var pagervue_type_script_lang_js_ = ({
  name: 'FksPager',

  props: {
    currentPage: Number,

    pageCount: Number,

    pagerCount: Number,

    disabled: Boolean
  },

  watch: {
    showPrevMore: function showPrevMore(val) {
      if (!val) this.quickprevIconClass = 'fks-icon-more';
    },
    showNextMore: function showNextMore(val) {
      if (!val) this.quicknextIconClass = 'fks-icon-more';
    }
  },

  methods: {
    onPagerClick: function onPagerClick(event) {
      var target = event.target;
      if (target.tagName === 'UL' || this.disabled) {
        return;
      }

      var newPage = Number(event.target.textContent);
      var pageCount = this.pageCount;
      var currentPage = this.currentPage;
      var pagerCountOffset = this.pagerCount - 2;

      if (target.className.indexOf('more') !== -1) {
        if (target.className.indexOf('quickprev') !== -1) {
          newPage = currentPage - pagerCountOffset;
        } else if (target.className.indexOf('quicknext') !== -1) {
          newPage = currentPage + pagerCountOffset;
        }
      }

      /* istanbul ignore if */
      if (!isNaN(newPage)) {
        if (newPage < 1) {
          newPage = 1;
        }

        if (newPage > pageCount) {
          newPage = pageCount;
        }
      }

      if (newPage !== currentPage) {
        this.$emit('change', newPage);
      }
    },
    onMouseenter: function onMouseenter(direction) {
      if (this.disabled) return;
      if (direction === 'left') {
        this.quickprevIconClass = 'fks-icon-d-arrow-left';
      } else {
        this.quicknextIconClass = 'fks-icon-d-arrow-right';
      }
    }
  },

  computed: {
    pagers: function pagers() {
      var pagerCount = this.pagerCount;
      var halfPagerCount = (pagerCount - 1) / 2;

      var currentPage = Number(this.currentPage);
      var pageCount = Number(this.pageCount);

      var showPrevMore = false;
      var showNextMore = false;

      if (pageCount > pagerCount) {
        if (currentPage > pagerCount - halfPagerCount) {
          showPrevMore = true;
        }

        if (currentPage < pageCount - halfPagerCount) {
          showNextMore = true;
        }
      }

      var array = [];

      if (showPrevMore && !showNextMore) {
        var startPage = pageCount - (pagerCount - 2);
        for (var i = startPage; i < pageCount; i++) {
          array.push(i);
        }
      } else if (!showPrevMore && showNextMore) {
        for (var _i = 2; _i < pagerCount; _i++) {
          array.push(_i);
        }
      } else if (showPrevMore && showNextMore) {
        var offset = Math.floor(pagerCount / 2) - 1;
        for (var _i2 = currentPage - offset; _i2 <= currentPage + offset; _i2++) {
          array.push(_i2);
        }
      } else {
        for (var _i3 = 2; _i3 < pageCount; _i3++) {
          array.push(_i3);
        }
      }

      this.showPrevMore = showPrevMore;
      this.showNextMore = showNextMore;

      return array;
    }
  },

  data: function data() {
    return {
      current: null,
      showPrevMore: false,
      showNextMore: false,
      quicknextIconClass: 'fks-icon-more',
      quickprevIconClass: 'fks-icon-more'
    };
  }
});
// CONCATENATED MODULE: ./packages/pagination/src/pager.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_pagervue_type_script_lang_js_ = (pagervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent(
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */,
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options =
    typeof scriptExports === 'function' ? scriptExports.options : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) {
    // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
          injectStyles.call(
            this,
            (options.functional ? this.parent : this).$root.$options.shadowRoot
          )
        }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection(h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./packages/pagination/src/pager.vue





/* normalize component */

var component = normalizeComponent(
  src_pagervue_type_script_lang_js_,
  pagervue_type_template_id_377e4d9c_render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var pager = (component.exports);
// EXTERNAL MODULE: external "fawkes-lib/lib/select"
var select_ = __webpack_require__(47);
var select_default = /*#__PURE__*/__webpack_require__.n(select_);

// EXTERNAL MODULE: external "fawkes-lib/lib/option"
var option_ = __webpack_require__(48);
var option_default = /*#__PURE__*/__webpack_require__.n(option_);

// EXTERNAL MODULE: external "fawkes-lib/lib/input"
var input_ = __webpack_require__(12);
var input_default = /*#__PURE__*/__webpack_require__.n(input_);

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/locale"
var locale_ = __webpack_require__(3);
var locale_default = /*#__PURE__*/__webpack_require__.n(locale_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/util"
var util_ = __webpack_require__(2);

// CONCATENATED MODULE: ./packages/pagination/src/pagination.js







/* harmony default export */ var pagination = ({
  name: 'FksPagination',

  props: {
    pageSize: {
      type: Number,
      default: 10
    },

    small: Boolean,

    total: Number,

    pageCount: Number,

    pagerCount: {
      type: Number,
      validator: function validator(value) {
        return (value | 0) === value && value > 4 && value < 22 && value % 2 === 1;
      },

      default: 7
    },

    currentPage: {
      type: Number,
      default: 1
    },

    layout: {
      default: 'prev, pager, next, jumper, ->, total'
    },

    pageSizes: {
      type: Array,
      default: function _default() {
        return [10, 20, 30, 40, 50, 100];
      }
    },

    popperClass: String,

    prevText: String,

    nextText: String,

    bordered: Boolean,

    disabled: Boolean,

    hideOnSinglePage: Boolean
  },

  data: function data() {
    return {
      internalCurrentPage: 1,
      internalPageSize: 0,
      lastEmittedPage: -1,
      userChangePageSize: false
    };
  },
  render: function render(h) {
    var layout = this.layout;
    if (!layout) return null;
    if (this.hideOnSinglePage && (!this.internalPageCount || this.internalPageCount === 1)) return null;

    var template = h('div', { 'class': ['fks-pagination', {
        'is-bordered': this.bordered,
        'fks-pagination--small': this.small
      }] });
    var TEMPLATE_MAP = {
      prev: h('prev'),
      jumper: h('jumper'),
      pager: h('pager', {
        attrs: { currentPage: this.internalCurrentPage, pageCount: this.internalPageCount, pagerCount: this.pagerCount, disabled: this.disabled },
        on: {
          'change': this.handleCurrentChange
        }
      }),
      next: h('next'),
      sizes: h('sizes', {
        attrs: { pageSizes: this.pageSizes }
      }),
      slot: h('slot', [this.$slots.default ? this.$slots.default : '']),
      total: h('total')
    };
    var components = layout.split(',').map(function (item) {
      return item.trim();
    });
    var rightWrapper = h('div', { 'class': 'fks-pagination__rightwrapper' });
    var haveRightWrapper = false;

    template.children = template.children || [];
    rightWrapper.children = rightWrapper.children || [];
    components.forEach(function (compo) {
      if (compo === '->') {
        haveRightWrapper = true;
        return;
      }

      if (!haveRightWrapper) {
        template.children.push(TEMPLATE_MAP[compo]);
      } else {
        rightWrapper.children.push(TEMPLATE_MAP[compo]);
      }
    });

    if (haveRightWrapper) {
      template.children.unshift(rightWrapper);
    }

    return template;
  },


  components: {
    Prev: {
      render: function render(h) {
        return h(
          'button',
          {
            attrs: {
              type: 'button',

              disabled: this.$parent.disabled || this.$parent.internalCurrentPage <= 1
            },
            'class': 'btn-prev', on: {
              'click': this.$parent.prev
            }
          },
          [this.$parent.prevText ? h('span', [this.$parent.prevText]) : h('i', { 'class': 'fks-icon fks-icon-arrow-left' })]
        );
      }
    },

    Next: {
      render: function render(h) {
        return h(
          'button',
          {
            attrs: {
              type: 'button',

              disabled: this.$parent.disabled || this.$parent.internalCurrentPage === this.$parent.internalPageCount || this.$parent.internalPageCount === 0
            },
            'class': 'btn-next', on: {
              'click': this.$parent.next
            }
          },
          [this.$parent.nextText ? h('span', [this.$parent.nextText]) : h('i', { 'class': 'fks-icon fks-icon-arrow-right' })]
        );
      }
    },

    Sizes: {
      mixins: [locale_default.a],

      props: {
        pageSizes: Array
      },

      watch: {
        pageSizes: {
          immediate: true,
          handler: function handler(newVal, oldVal) {
            if (Object(util_["valueEquals"])(newVal, oldVal)) return;
            if (Array.isArray(newVal)) {
              this.$parent.internalPageSize = newVal.indexOf(this.$parent.pageSize) > -1 ? this.$parent.pageSize : this.pageSizes[0];
            }
          }
        }
      },

      render: function render(h) {
        var _this = this;

        return h(
          'span',
          { 'class': 'fks-pagination__sizes' },
          [h(
            'fks-select',
            {
              attrs: {
                value: this.$parent.internalPageSize,
                popperClass: this.$parent.popperClass || '',
                size: 'mini',

                disabled: this.$parent.disabled },
              on: {
                'input': this.handleChange
              }
            },
            [this.pageSizes.map(function (item) {
              return h('fks-option', {
                attrs: {
                  value: item,
                  label: item + _this.t('fks.pagination.pagesize') }
              });
            })]
          )]
        );
      },


      components: {
        FksSelect: select_default.a,
        FksOption: option_default.a
      },

      methods: {
        handleChange: function handleChange(val) {
          if (val !== this.$parent.internalPageSize) {
            this.$parent.internalPageSize = val = parseInt(val, 10);
            this.$parent.userChangePageSize = true;
            this.$parent.$emit('update:pageSize', val);
            this.$parent.$emit('size-change', val);
          }
        }
      }
    },

    Jumper: {
      mixins: [locale_default.a],

      components: { FksInput: input_default.a },

      data: function data() {
        return {
          userInput: null
        };
      },


      watch: {
        '$parent.internalCurrentPage': function $parentInternalCurrentPage() {
          this.userInput = null;
        }
      },

      methods: {
        handleKeyup: function handleKeyup(_ref) {
          var keyCode = _ref.keyCode,
              target = _ref.target;

          // Chrome, Safari, Firefox triggers change event on Enter
          // Hack for IE: https://github.com/ElemeFE/element/issues/11710
          // Drop this method when we no longer supports IE
          if (keyCode === 13) {
            this.handleChange(target.value);
          }
        },
        handleInput: function handleInput(value) {
          this.userInput = value;
        },
        handleChange: function handleChange(value) {
          this.$parent.internalCurrentPage = this.$parent.getValidCurrentPage(value);
          this.$parent.emitChange();
          this.userInput = null;
        }
      },

      render: function render(h) {
        return h(
          'span',
          { 'class': 'fks-pagination__jump' },
          [this.t('fks.pagination.goto'), h('fks-input', {
            'class': 'fks-pagination__editor is-in-pagination',
            attrs: { min: 1,
              max: this.$parent.internalPageCount,
              value: this.userInput !== null ? this.userInput : this.$parent.internalCurrentPage,
              type: 'number',
              disabled: this.$parent.disabled
            },
            nativeOn: {
              'keyup': this.handleKeyup
            },
            on: {
              'input': this.handleInput,
              'change': this.handleChange
            }
          }), this.t('fks.pagination.pageClassifier')]
        );
      }
    },

    Total: {
      mixins: [locale_default.a],

      render: function render(h) {
        return typeof this.$parent.total === 'number' ? h(
          'span',
          { 'class': 'fks-pagination__total' },
          [this.t('fks.pagination.total', { total: this.$parent.total })]
        ) : '';
      }
    },

    Pager: pager
  },

  methods: {
    handleCurrentChange: function handleCurrentChange(val) {
      this.internalCurrentPage = this.getValidCurrentPage(val);
      this.userChangePageSize = true;
      this.emitChange();
    },
    prev: function prev() {
      if (this.disabled) return;
      var newVal = this.internalCurrentPage - 1;
      this.internalCurrentPage = this.getValidCurrentPage(newVal);
      this.$emit('prev-click', this.internalCurrentPage);
      this.emitChange();
    },
    next: function next() {
      if (this.disabled) return;
      var newVal = this.internalCurrentPage + 1;
      this.internalCurrentPage = this.getValidCurrentPage(newVal);
      this.$emit('next-click', this.internalCurrentPage);
      this.emitChange();
    },
    getValidCurrentPage: function getValidCurrentPage(value) {
      value = parseInt(value, 10);

      var havePageCount = typeof this.internalPageCount === 'number';

      var resetValue = void 0;
      if (!havePageCount) {
        if (isNaN(value) || value < 1) resetValue = 1;
      } else {
        if (value < 1) {
          resetValue = 1;
        } else if (value > this.internalPageCount) {
          resetValue = this.internalPageCount;
        }
      }

      if (resetValue === undefined && isNaN(value)) {
        resetValue = 1;
      } else if (resetValue === 0) {
        resetValue = 1;
      }

      return resetValue === undefined ? value : resetValue;
    },
    emitChange: function emitChange() {
      var _this2 = this;

      this.$nextTick(function () {
        if (_this2.internalCurrentPage !== _this2.lastEmittedPage || _this2.userChangePageSize) {
          _this2.$emit('current-change', _this2.internalCurrentPage);
          _this2.lastEmittedPage = _this2.internalCurrentPage;
          _this2.userChangePageSize = false;
        }
      });
    }
  },

  computed: {
    internalPageCount: function internalPageCount() {
      if (typeof this.total === 'number') {
        return Math.max(1, Math.ceil(this.total / this.internalPageSize));
      } else if (typeof this.pageCount === 'number') {
        return Math.max(1, this.pageCount);
      }
      return null;
    }
  },

  watch: {
    currentPage: {
      immediate: true,
      handler: function handler(val) {
        this.internalCurrentPage = this.getValidCurrentPage(val);
      }
    },

    pageSize: {
      immediate: true,
      handler: function handler(val) {
        this.internalPageSize = isNaN(val) ? 10 : val;
      }
    },

    internalCurrentPage: {
      immediate: true,
      handler: function handler(newVal) {
        this.$emit('update:currentPage', newVal);
        this.lastEmittedPage = -1;
      }
    },

    internalPageCount: function internalPageCount(newVal) {
      /* istanbul ignore if */
      var oldPage = this.internalCurrentPage;
      if (newVal > 0 && oldPage === 0) {
        this.internalCurrentPage = 1;
      } else if (oldPage > newVal) {
        this.internalCurrentPage = newVal === 0 ? 1 : newVal;
        this.userChangePageSize && this.emitChange();
      }
      this.userChangePageSize = false;
    }
  }
});
// CONCATENATED MODULE: ./packages/pagination/index.js


/* istanbul ignore next */
pagination.install = function (Vue) {
  Vue.component(pagination.name, pagination);
};

/* harmony default export */ var packages_pagination = (pagination);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dialog/src/component.vue?vue&type=template&id=44503a24&
var componentvue_type_template_id_44503a24_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "dialog-fade" },
      on: { "after-enter": _vm.afterEnter, "after-leave": _vm.afterLeave },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-dialog__wrapper",
          on: {
            click: function ($event) {
              if ($event.target !== $event.currentTarget) {
                return null
              }
              return _vm.handleWrapperClick.apply(null, arguments)
            },
          },
        },
        [
          _c(
            "div",
            {
              key: _vm.key,
              ref: "dialog",
              class: [
                "fks-dialog",
                "fks-dialog--" + _vm.dialogSize,
                {
                  "is-fullscreen": _vm.isFullscreen,
                  "fks-dialog--center": _vm.center,
                },
                _vm.customClass,
              ],
              style: _vm.style,
              attrs: {
                role: "dialog",
                "aria-modal": "true",
                "aria-label": _vm.title || "dialog",
              },
            },
            [
              _c(
                "div",
                { staticClass: "fks-dialog__header" },
                [
                  _vm._t("title", function () {
                    return [
                      _c("span", { staticClass: "fks-dialog__title" }, [
                        _vm._v(_vm._s(_vm.title)),
                      ]),
                    ]
                  }),
                  _vm.showFullscreen
                    ? _c("fks-button", {
                        staticClass: "fks-dialog__fullbtn",
                        attrs: {
                          type: "text",
                          icon: _vm.isFullscreen
                            ? "fks-icon-exit"
                            : "fks-icon-full-screen",
                        },
                        on: {
                          click: function ($event) {
                            _vm.isFullscreen = !_vm.isFullscreen
                          },
                        },
                      })
                    : _vm._e(),
                  _vm.showClose
                    ? _c(
                        "button",
                        {
                          staticClass: "fks-dialog__headerbtn",
                          attrs: { type: "button", "aria-label": "Close" },
                          on: { click: _vm.handleClose },
                        },
                        [
                          _c("i", {
                            staticClass:
                              "fks-dialog__close fks-icon fks-icon-close",
                          }),
                        ]
                      )
                    : _vm._e(),
                ],
                2
              ),
              _vm.rendered
                ? _c(
                    "div",
                    { staticClass: "fks-dialog__body" },
                    [_vm._t("default")],
                    2
                  )
                : _vm._e(),
              _vm.$slots.footer
                ? _c(
                    "div",
                    { staticClass: "fks-dialog__footer" },
                    [_vm._t("footer")],
                    2
                  )
                : _vm._e(),
            ]
          ),
        ]
      ),
    ]
  )
}
var componentvue_type_template_id_44503a24_staticRenderFns = []
componentvue_type_template_id_44503a24_render._withStripped = true


// CONCATENATED MODULE: ./packages/dialog/src/component.vue?vue&type=template&id=44503a24&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/popup"
var popup_ = __webpack_require__(18);
var popup_default = /*#__PURE__*/__webpack_require__.n(popup_);

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/migrating"
var migrating_ = __webpack_require__(13);
var migrating_default = /*#__PURE__*/__webpack_require__.n(migrating_);

// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/emitter"
var emitter_ = __webpack_require__(4);
var emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dialog/src/component.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var componentvue_type_script_lang_js_ = ({
  name: 'FksDialog',

  mixins: [popup_default.a, emitter_default.a, migrating_default.a],

  props: {
    size: {
      type: String,
      default: 'medium'
    },
    title: {
      type: String,
      default: ''
    },

    modal: {
      type: Boolean,
      default: true
    },

    modalAppendToBody: {
      type: Boolean,
      default: true
    },

    appendToBody: {
      //改为默认true
      type: Boolean,
      default: true
    },

    lockScroll: {
      type: Boolean,
      default: true
    },

    closeOnClickModal: {
      //改为默认false
      type: Boolean,
      default: false
    },

    closeOnPressEscape: {
      type: Boolean,
      default: true
    },

    showClose: {
      type: Boolean,
      default: true
    },

    width: String,

    fullscreen: Boolean,
    showFullscreen: {
      type: Boolean,
      default: false
    },
    customClass: {
      type: String,
      default: ''
    },

    top: {
      type: String,
      default: '15vh'
    },
    beforeClose: Function,
    center: {
      type: Boolean,
      default: false
    },

    destroyOnClose: Boolean
  },

  data: function data() {
    return {
      closed: false,
      key: 0,
      isFullscreen: this.fullscreen || false
    };
  },


  watch: {
    visible: function visible(val) {
      var _this = this;

      if (val) {
        this.isFullscreen = this.fullscreen;
        this.closed = false;
        this.$emit('open');
        this.$el.addEventListener('scroll', this.updatePopper);
        this.$nextTick(function () {
          _this.$refs.dialog.scrollTop = 0;
        });
        if (this.appendToBody) {
          document.body.appendChild(this.$el);
        }
      } else {
        this.$el.removeEventListener('scroll', this.updatePopper);
        if (!this.closed) this.$emit('close');
        if (this.destroyOnClose) {
          this.$nextTick(function () {
            _this.key++;
          });
        }
      }
    }
  },

  computed: {
    dialogSize: function dialogSize() {
      return this.size;
    },
    style: function style() {
      var style = {};
      if (!this.isFullscreen) {
        style.marginTop = this.top;
        if (this.width) {
          style.width = this.width;
        }
      }
      return style;
    }
  },

  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          size: 'size is removed.'
        }
      };
    },
    handleWrapperClick: function handleWrapperClick() {
      if (!this.closeOnClickModal) return;
      this.handleClose();
    },
    handleClose: function handleClose() {
      if (typeof this.beforeClose === 'function') {
        this.beforeClose(this.hide);
      } else {
        this.hide();
      }
    },
    hide: function hide(cancel) {
      if (cancel !== false) {
        this.$emit('update:visible', false);
        this.$emit('close');
        this.closed = true;
      }
    },
    updatePopper: function updatePopper() {
      this.broadcast('FksSelectDropdown', 'updatePopper');
      this.broadcast('FksDropdownMenu', 'updatePopper');
    },
    afterEnter: function afterEnter() {
      this.$emit('opened');
    },
    afterLeave: function afterLeave() {
      this.$emit('closed');
    }
  },

  mounted: function mounted() {
    if (this.visible) {
      this.rendered = true;
      this.open();
      if (this.appendToBody) {
        document.body.appendChild(this.$el);
      }
    }
  },
  destroyed: function destroyed() {
    // if appendToBody is true, remove DOM node after destroy
    if (this.appendToBody && this.$el && this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    }
  }
});
// CONCATENATED MODULE: ./packages/dialog/src/component.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_componentvue_type_script_lang_js_ = (componentvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/dialog/src/component.vue





/* normalize component */

var component_component = normalizeComponent(
  src_componentvue_type_script_lang_js_,
  componentvue_type_template_id_44503a24_render,
  componentvue_type_template_id_44503a24_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_component = (component_component.exports);
// CONCATENATED MODULE: ./packages/dialog/index.js


/* istanbul ignore next */
src_component.install = function (Vue) {
  Vue.component(src_component.name, src_component);
};

/* harmony default export */ var dialog = (src_component);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete.vue?vue&type=template&id=6042020b&
var autocompletevue_type_template_id_6042020b_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "clickoutside",
          rawName: "v-clickoutside",
          value: _vm.close,
          expression: "close",
        },
      ],
      staticClass: "fks-autocomplete",
      attrs: {
        "aria-haspopup": "listbox",
        role: "combobox",
        "aria-expanded": _vm.suggestionVisible,
        "aria-owns": _vm.id,
      },
    },
    [
      _c(
        "fks-input",
        _vm._b(
          {
            ref: "input",
            on: {
              input: _vm.handleInput,
              change: _vm.handleChange,
              focus: _vm.handleFocus,
              blur: _vm.handleBlur,
              clear: _vm.handleClear,
            },
            nativeOn: {
              keydown: [
                function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "up", 38, $event.key, [
                      "Up",
                      "ArrowUp",
                    ])
                  ) {
                    return null
                  }
                  $event.preventDefault()
                  return _vm.highlight(_vm.highlightedIndex - 1)
                },
                function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "down", 40, $event.key, [
                      "Down",
                      "ArrowDown",
                    ])
                  ) {
                    return null
                  }
                  $event.preventDefault()
                  return _vm.highlight(_vm.highlightedIndex + 1)
                },
                function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                  ) {
                    return null
                  }
                  return _vm.handleKeyEnter.apply(null, arguments)
                },
                function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
                  ) {
                    return null
                  }
                  return _vm.close.apply(null, arguments)
                },
              ],
            },
          },
          "fks-input",
          [_vm.$props, _vm.$attrs],
          false
        ),
        [
          _vm.$slots.prepend
            ? _c("template", { slot: "prepend" }, [_vm._t("prepend")], 2)
            : _vm._e(),
          _vm.$slots.append
            ? _c("template", { slot: "append" }, [_vm._t("append")], 2)
            : _vm._e(),
          _vm.$slots.prefix
            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
            : _vm._e(),
          _vm.$slots.suffix
            ? _c("template", { slot: "suffix" }, [_vm._t("suffix")], 2)
            : _vm._e(),
        ],
        2
      ),
      _c(
        "fks-autocomplete-suggestions",
        {
          ref: "suggestions",
          class: [_vm.popperClass ? _vm.popperClass : ""],
          attrs: {
            "visible-arrow": "",
            "popper-options": _vm.popperOptions,
            "append-to-body": _vm.popperAppendToBody,
            placement: _vm.placement,
            id: _vm.id,
          },
        },
        _vm._l(_vm.suggestions, function (item, index) {
          return _c(
            "li",
            {
              key: index,
              class: { highlighted: _vm.highlightedIndex === index },
              attrs: {
                id: _vm.id + "-item-" + index,
                role: "option",
                "aria-selected": _vm.highlightedIndex === index,
              },
              on: {
                click: function ($event) {
                  return _vm.select(item)
                },
              },
            },
            [
              _vm._t(
                "default",
                function () {
                  return [_vm._v(_vm._s(item[_vm.valueKey]))]
                },
                { item: item }
              ),
            ],
            2
          )
        }),
        0
      ),
    ],
    1
  )
}
var autocompletevue_type_template_id_6042020b_staticRenderFns = []
autocompletevue_type_template_id_6042020b_render._withStripped = true


// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue?vue&type=template&id=6042020b&

// EXTERNAL MODULE: external "throttle-debounce/debounce"
var debounce_ = __webpack_require__(15);
var debounce_default = /*#__PURE__*/__webpack_require__.n(debounce_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/clickoutside"
var clickoutside_ = __webpack_require__(14);
var clickoutside_default = /*#__PURE__*/__webpack_require__.n(clickoutside_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=template&id=0d06399c&
var autocomplete_suggestionsvue_type_template_id_0d06399c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: { "after-leave": _vm.doDestroy },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showPopper,
              expression: "showPopper",
            },
          ],
          staticClass: "fks-autocomplete-suggestion fks-popper",
          class: {
            "is-loading": !_vm.parent.hideLoading && _vm.parent.loading,
          },
          style: { width: _vm.dropdownWidth },
          attrs: { role: "region" },
        },
        [
          _c(
            "fks-scrollbar",
            {
              attrs: {
                tag: "ul",
                "wrap-class": "fks-autocomplete-suggestion__wrap",
                "view-class": "fks-autocomplete-suggestion__list",
              },
            },
            [
              !_vm.parent.hideLoading && _vm.parent.loading
                ? _c("li", [_c("i", { staticClass: "fks-icon-loading" })])
                : _vm._t("default"),
            ],
            2
          ),
        ],
        1
      ),
    ]
  )
}
var autocomplete_suggestionsvue_type_template_id_0d06399c_staticRenderFns = []
autocomplete_suggestionsvue_type_template_id_0d06399c_render._withStripped = true


// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=template&id=0d06399c&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/vue-popper"
var vue_popper_ = __webpack_require__(8);
var vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);

// EXTERNAL MODULE: external "fawkes-lib/lib/scrollbar"
var scrollbar_ = __webpack_require__(19);
var scrollbar_default = /*#__PURE__*/__webpack_require__.n(scrollbar_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var autocomplete_suggestionsvue_type_script_lang_js_ = ({
  components: { FksScrollbar: scrollbar_default.a },
  mixins: [vue_popper_default.a, emitter_default.a],

  componentName: 'FksAutocompleteSuggestions',

  data: function data() {
    return {
      parent: this.$parent,
      dropdownWidth: ''
    };
  },


  props: {
    options: {
      default: function _default() {
        return {
          gpuAcceleration: false
        };
      }
    },
    id: String
  },

  methods: {
    select: function select(item) {
      this.dispatch('FksAutocomplete', 'item-click', item);
    }
  },

  updated: function updated() {
    var _this = this;

    this.$nextTick(function (_) {
      _this.popperJS && _this.updatePopper();
    });
  },
  mounted: function mounted() {
    this.$parent.popperElm = this.popperElm = this.$el;
    this.referenceElm = this.$parent.$refs.input.$refs.input || this.$parent.$refs.input.$refs.textarea;
    this.referenceList = this.$el.querySelector('.fks-autocomplete-suggestion__list');
    this.referenceList.setAttribute('role', 'listbox');
    this.referenceList.setAttribute('id', this.id);
  },
  created: function created() {
    var _this2 = this;

    this.$on('visible', function (val, inputWidth) {
      _this2.dropdownWidth = inputWidth + 'px';
      _this2.showPopper = val;
    });
  }
});
// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_autocomplete_suggestionsvue_type_script_lang_js_ = (autocomplete_suggestionsvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete-suggestions.vue





/* normalize component */

var autocomplete_suggestions_component = normalizeComponent(
  src_autocomplete_suggestionsvue_type_script_lang_js_,
  autocomplete_suggestionsvue_type_template_id_0d06399c_render,
  autocomplete_suggestionsvue_type_template_id_0d06399c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var autocomplete_suggestions = (autocomplete_suggestions_component.exports);
// EXTERNAL MODULE: external "fawkes-lib/lib/mixins/focus"
var focus_ = __webpack_require__(25);
var focus_default = /*#__PURE__*/__webpack_require__.n(focus_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/autocomplete/src/autocomplete.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//










/* harmony default export */ var autocompletevue_type_script_lang_js_ = ({
  name: 'FksAutocomplete',

  mixins: [emitter_default.a, focus_default()('input'), migrating_default.a],

  inheritAttrs: false,

  componentName: 'FksAutocomplete',

  components: {
    FksInput: input_default.a,
    FksAutocompleteSuggestions: autocomplete_suggestions
  },

  directives: { Clickoutside: clickoutside_default.a },

  props: {
    valueKey: {
      type: String,
      default: 'value'
    },
    popperClass: String,
    popperOptions: Object,
    placeholder: String,
    clearable: {
      type: Boolean,
      default: false
    },
    disabled: Boolean,
    name: String,
    size: String,
    value: String,
    maxlength: Number,
    minlength: Number,
    autofocus: Boolean,
    fetchSuggestions: Function,
    triggerOnFocus: {
      type: Boolean,
      default: true
    },
    customItem: String,
    selectWhenUnmatched: {
      type: Boolean,
      default: false
    },
    prefixIcon: String,
    suffixIcon: String,
    label: String,
    debounce: {
      type: Number,
      default: 300
    },
    placement: {
      type: String,
      default: 'bottom-start'
    },
    hideLoading: Boolean,
    popperAppendToBody: {
      type: Boolean,
      default: true
    },
    highlightFirstItem: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      activated: false,
      suggestions: [],
      loading: false,
      highlightedIndex: -1,
      suggestionDisabled: false
    };
  },

  computed: {
    suggestionVisible: function suggestionVisible() {
      var suggestions = this.suggestions;
      var isValidData = Array.isArray(suggestions) && suggestions.length > 0;
      return (isValidData || this.loading) && this.activated;
    },
    id: function id() {
      return 'fks-autocomplete-' + Object(util_["generateId"])();
    }
  },
  watch: {
    suggestionVisible: function suggestionVisible(val) {
      var $input = this.getInput();
      if ($input) {
        this.broadcast('FksAutocompleteSuggestions', 'visible', [val, $input.offsetWidth]);
      }
    }
  },
  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'custom-item': 'custom-item is removed, use scoped slot instead.',
          props: 'props is removed, use value-key instead.'
        }
      };
    },
    getData: function getData(queryString) {
      var _this = this;

      if (this.suggestionDisabled) {
        return;
      }
      this.loading = true;
      this.fetchSuggestions(queryString, function (suggestions) {
        _this.loading = false;
        if (_this.suggestionDisabled) {
          return;
        }
        if (Array.isArray(suggestions)) {
          _this.suggestions = suggestions;
          _this.highlightedIndex = _this.highlightFirstItem ? 0 : -1;
        } else {
          console.error('[FawkesLib Error][Autocomplete]autocomplete suggestions must be an array');
        }
      });
    },
    handleInput: function handleInput(value) {
      this.$emit('input', value);
      this.suggestionDisabled = false;
      if (!this.triggerOnFocus && !value) {
        this.suggestionDisabled = true;
        this.suggestions = [];
        return;
      }
      this.debouncedGetData(value);
    },
    handleChange: function handleChange(value) {
      this.$emit('change', value);
    },
    handleFocus: function handleFocus(event) {
      this.activated = true;
      this.$emit('focus', event);
      if (this.triggerOnFocus) {
        this.debouncedGetData(this.value);
      }
    },
    handleBlur: function handleBlur(event) {
      this.$emit('blur', event);
    },
    handleClear: function handleClear() {
      this.activated = false;
      this.$emit('clear');
    },
    close: function close(e) {
      this.activated = false;
    },
    handleKeyEnter: function handleKeyEnter(e) {
      var _this2 = this;

      if (this.suggestionVisible && this.highlightedIndex >= 0 && this.highlightedIndex < this.suggestions.length) {
        e.preventDefault();
        this.select(this.suggestions[this.highlightedIndex]);
      } else if (this.selectWhenUnmatched) {
        this.$emit('select', { value: this.value });
        this.$nextTick(function (_) {
          _this2.suggestions = [];
          _this2.highlightedIndex = -1;
        });
      }
    },
    select: function select(item) {
      var _this3 = this;

      this.$emit('input', item[this.valueKey]);
      this.$emit('select', item);
      this.$nextTick(function (_) {
        _this3.suggestions = [];
        _this3.highlightedIndex = -1;
      });
    },
    highlight: function highlight(index) {
      if (!this.suggestionVisible || this.loading) {
        return;
      }
      if (index < 0) {
        this.highlightedIndex = -1;
        return;
      }
      if (index >= this.suggestions.length) {
        index = this.suggestions.length - 1;
      }
      var suggestion = this.$refs.suggestions.$el.querySelector('.fks-autocomplete-suggestion__wrap');
      var suggestionList = suggestion.querySelectorAll('.fks-autocomplete-suggestion__list li');

      var highlightItem = suggestionList[index];
      var scrollTop = suggestion.scrollTop;
      var offsetTop = highlightItem.offsetTop;

      if (offsetTop + highlightItem.scrollHeight > scrollTop + suggestion.clientHeight) {
        suggestion.scrollTop += highlightItem.scrollHeight;
      }
      if (offsetTop < scrollTop) {
        suggestion.scrollTop -= highlightItem.scrollHeight;
      }
      this.highlightedIndex = index;
      var $input = this.getInput();
      $input.setAttribute('aria-activedescendant', this.id + '-item-' + this.highlightedIndex);
    },
    getInput: function getInput() {
      return this.$refs.input.getInput();
    }
  },
  mounted: function mounted() {
    var _this4 = this;

    this.debouncedGetData = debounce_default()(this.debounce, this.getData);
    this.$on('item-click', function (item) {
      _this4.select(item);
    });
    var $input = this.getInput();
    $input.setAttribute('role', 'textbox');
    $input.setAttribute('aria-autocomplete', 'list');
    $input.setAttribute('aria-controls', 'id');
    $input.setAttribute('aria-activedescendant', this.id + '-item-' + this.highlightedIndex);
  },
  beforeDestroy: function beforeDestroy() {
    this.$refs.suggestions.$destroy();
  }
});
// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_autocompletevue_type_script_lang_js_ = (autocompletevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/autocomplete/src/autocomplete.vue





/* normalize component */

var autocomplete_component = normalizeComponent(
  src_autocompletevue_type_script_lang_js_,
  autocompletevue_type_template_id_6042020b_render,
  autocompletevue_type_template_id_6042020b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var autocomplete = (autocomplete_component.exports);
// CONCATENATED MODULE: ./packages/autocomplete/index.js


/* istanbul ignore next */
autocomplete.install = function (Vue) {
  Vue.component(autocomplete.name, autocomplete);
};

/* harmony default export */ var packages_autocomplete = (autocomplete);
// EXTERNAL MODULE: external "fawkes-lib/lib/button"
var button_ = __webpack_require__(16);
var button_default = /*#__PURE__*/__webpack_require__.n(button_);

// EXTERNAL MODULE: external "fawkes-lib/lib/button-group"
var button_group_ = __webpack_require__(32);
var button_group_default = /*#__PURE__*/__webpack_require__.n(button_group_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown.vue?vue&type=script&lang=js&








/* harmony default export */ var dropdownvue_type_script_lang_js_ = ({
  name: 'FksDropdown',

  componentName: 'FksDropdown',

  mixins: [emitter_default.a, migrating_default.a],

  directives: { Clickoutside: clickoutside_default.a },

  components: {
    FksButton: button_default.a,
    FksButtonGroup: button_group_default.a
  },

  provide: function provide() {
    return {
      dropdown: this
    };
  },


  props: {
    trigger: {
      type: String,
      default: 'hover'
    },
    type: String,
    size: {
      type: String,
      default: ''
    },
    splitButton: Boolean,
    hideOnClick: {
      type: Boolean,
      default: true
    },
    placement: {
      type: String,
      default: 'bottom-end'
    },
    visibleArrow: {
      default: true
    },
    showTimeout: {
      type: Number,
      default: 250
    },
    hideTimeout: {
      type: Number,
      default: 150
    },
    tabindex: {
      type: Number,
      default: 0
    }
  },

  data: function data() {
    return {
      timeout: null,
      visible: false,
      triggerElm: null,
      menuItems: null,
      menuItemsArray: null,
      dropdownElm: null,
      focusing: false,
      listId: 'dropdown-menu-' + Object(util_["generateId"])()
    };
  },


  computed: {
    dropdownSize: function dropdownSize() {
      return this.size || (this.$FAWKES || {}).size;
    }
  },

  mounted: function mounted() {
    this.$on('menu-item-click', this.handleMenuItemClick);
  },


  watch: {
    visible: function visible(val) {
      this.broadcast('FksDropdownMenu', 'visible', val);
      this.$emit('visible-change', val);
    },
    focusing: function focusing(val) {
      var selfDefine = this.$el.querySelector('.fks-dropdown-selfdefine');
      if (selfDefine) {
        // 自定义
        if (val) {
          selfDefine.className += ' focusing';
        } else {
          selfDefine.className = selfDefine.className.replace('focusing', '');
        }
      }
    }
  },

  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'menu-align': 'menu-align is renamed to placement.'
        }
      };
    },
    show: function show() {
      var _this = this;

      if (this.triggerElm.disabled) return;
      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        _this.visible = true;
      }, this.trigger === 'click' ? 0 : this.showTimeout);
    },
    hide: function hide() {
      var _this2 = this;

      if (this.triggerElm.disabled) return;
      this.removeTabindex();
      if (this.tabindex >= 0) {
        this.resetTabindex(this.triggerElm);
      }
      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        _this2.visible = false;
      }, this.trigger === 'click' ? 0 : this.hideTimeout);
    },
    handleClick: function handleClick() {
      if (this.triggerElm.disabled) return;
      if (this.visible) {
        this.hide();
      } else {
        this.show();
      }
    },
    handleTriggerKeyDown: function handleTriggerKeyDown(ev) {
      var keyCode = ev.keyCode;
      if ([38, 40].indexOf(keyCode) > -1) {
        // up/down
        this.removeTabindex();
        this.resetTabindex(this.menuItems[0]);
        this.menuItems[0].focus();
        ev.preventDefault();
        ev.stopPropagation();
      } else if (keyCode === 13) {
        // space enter选中
        this.handleClick();
      } else if ([9, 27].indexOf(keyCode) > -1) {
        // tab || esc
        this.hide();
      }
    },
    handleItemKeyDown: function handleItemKeyDown(ev) {
      var keyCode = ev.keyCode;
      var target = ev.target;
      var currentIndex = this.menuItemsArray.indexOf(target);
      var max = this.menuItemsArray.length - 1;
      var nextIndex = void 0;
      if ([38, 40].indexOf(keyCode) > -1) {
        // up/down
        if (keyCode === 38) {
          // up
          nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;
        } else {
          // down
          nextIndex = currentIndex < max ? currentIndex + 1 : max;
        }
        this.removeTabindex();
        this.resetTabindex(this.menuItems[nextIndex]);
        this.menuItems[nextIndex].focus();
        ev.preventDefault();
        ev.stopPropagation();
      } else if (keyCode === 13) {
        // enter选中
        this.triggerElmFocus();
        target.click();
        if (this.hideOnClick) {
          // click关闭
          this.visible = false;
        }
      } else if ([9, 27].indexOf(keyCode) > -1) {
        // tab // esc
        this.hide();
        this.triggerElmFocus();
      }
    },
    resetTabindex: function resetTabindex(ele) {
      // 下次tab时组件聚焦元素
      this.removeTabindex();
      ele.setAttribute('tabindex', '0'); // 下次期望的聚焦元素
    },
    removeTabindex: function removeTabindex() {
      this.triggerElm.setAttribute('tabindex', '-1');
      this.menuItemsArray.forEach(function (item) {
        item.setAttribute('tabindex', '-1');
      });
    },
    initAria: function initAria() {
      this.dropdownElm.setAttribute('id', this.listId);
      this.triggerElm.setAttribute('aria-haspopup', 'list');
      this.triggerElm.setAttribute('aria-controls', this.listId);

      if (!this.splitButton) {
        // 自定义
        this.triggerElm.setAttribute('role', 'button');
        this.triggerElm.setAttribute('tabindex', this.tabindex);
        this.triggerElm.setAttribute('class', (this.triggerElm.getAttribute('class') || '') + ' fks-dropdown-selfdefine'); // 控制
      }
    },
    initEvent: function initEvent() {
      var _this3 = this;

      var trigger = this.trigger,
          show = this.show,
          hide = this.hide,
          handleClick = this.handleClick,
          splitButton = this.splitButton,
          handleTriggerKeyDown = this.handleTriggerKeyDown,
          handleItemKeyDown = this.handleItemKeyDown;

      this.triggerElm = splitButton ? this.$refs.trigger.$el : this.$slots.default[0].elm;

      var dropdownElm = this.dropdownElm;

      this.triggerElm.addEventListener('keydown', handleTriggerKeyDown); // triggerElm keydown
      dropdownElm.addEventListener('keydown', handleItemKeyDown, true); // item keydown
      // 控制自定义元素的样式
      if (!splitButton) {
        this.triggerElm.addEventListener('focus', function () {
          _this3.focusing = true;
        });
        this.triggerElm.addEventListener('blur', function () {
          _this3.focusing = false;
        });
        this.triggerElm.addEventListener('click', function () {
          _this3.focusing = false;
        });
      }
      if (trigger === 'hover') {
        this.triggerElm.addEventListener('mouseenter', show);
        this.triggerElm.addEventListener('mouseleave', hide);
        dropdownElm.addEventListener('mouseenter', show);
        dropdownElm.addEventListener('mouseleave', hide);
      } else if (trigger === 'click') {
        this.triggerElm.addEventListener('click', handleClick);
      }
    },
    handleMenuItemClick: function handleMenuItemClick(command, instance) {
      if (this.hideOnClick) {
        this.visible = false;
      }
      this.$emit('command', command, instance);
    },
    triggerElmFocus: function triggerElmFocus() {
      this.triggerElm.focus && this.triggerElm.focus();
    },
    initDomOperation: function initDomOperation() {
      this.dropdownElm = this.popperElm;
      this.menuItems = this.dropdownElm.querySelectorAll("[tabindex='-1']");
      this.menuItemsArray = [].slice.call(this.menuItems);

      this.initEvent();
      this.initAria();
    }
  },

  render: function render(h) {
    var _this4 = this;

    var hide = this.hide,
        splitButton = this.splitButton,
        type = this.type,
        dropdownSize = this.dropdownSize;


    var handleMainButtonClick = function handleMainButtonClick(event) {
      _this4.$emit('click', event);
      hide();
    };

    var triggerElm = !splitButton ? this.$slots.default : h('fks-button-group', [h(
      'fks-button',
      {
        attrs: {
          type: type,
          size: dropdownSize
        },
        nativeOn: {
          'click': handleMainButtonClick
        }
      },
      [this.$slots.default]
    ), h(
      'fks-button',
      {
        ref: 'trigger',
        attrs: { type: type,
          size: dropdownSize
        },
        'class': 'fks-dropdown__caret-button'
      },
      [h('i', { 'class': 'fks-dropdown__icon fks-icon-arrow-down' })]
    )]);

    return h(
      'div',
      { 'class': 'fks-dropdown', directives: [{
          name: 'clickoutside',
          value: hide
        }]
      },
      [triggerElm, this.$slots.dropdown]
    );
  }
});
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_dropdownvue_type_script_lang_js_ = (dropdownvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown.vue
var dropdown_render, dropdown_staticRenderFns




/* normalize component */

var dropdown_component = normalizeComponent(
  src_dropdownvue_type_script_lang_js_,
  dropdown_render,
  dropdown_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var dropdown = (dropdown_component.exports);
// CONCATENATED MODULE: ./packages/dropdown/index.js


/* istanbul ignore next */
dropdown.install = function (Vue) {
  Vue.component(dropdown.name, dropdown);
};

/* harmony default export */ var packages_dropdown = (dropdown);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-menu.vue?vue&type=template&id=d566d84c&
var dropdown_menuvue_type_template_id_d566d84c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: { "after-leave": _vm.doDestroy },
    },
    [
      _c(
        "ul",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showPopper,
              expression: "showPopper",
            },
          ],
          staticClass: "fks-dropdown-menu fks-popper",
          class: [_vm.size && "fks-dropdown-menu--" + _vm.size],
        },
        [_vm._t("default")],
        2
      ),
    ]
  )
}
var dropdown_menuvue_type_template_id_d566d84c_staticRenderFns = []
dropdown_menuvue_type_template_id_d566d84c_render._withStripped = true


// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue?vue&type=template&id=d566d84c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-menu.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var dropdown_menuvue_type_script_lang_js_ = ({
  name: 'FksDropdownMenu',

  componentName: 'FksDropdownMenu',

  mixins: [vue_popper_default.a],

  props: {
    visibleArrow: {
      type: Boolean,
      default: true
    },
    arrowOffset: {
      type: Number,
      default: 0
    }
  },

  data: function data() {
    return {
      size: this.dropdown.dropdownSize
    };
  },


  inject: ['dropdown'],

  created: function created() {
    var _this = this;

    this.$on('updatePopper', function () {
      if (_this.showPopper) _this.updatePopper();
    });
    this.$on('visible', function (val) {
      _this.showPopper = val;
    });
  },
  mounted: function mounted() {
    this.dropdown.popperElm = this.popperElm = this.$el;
    this.referenceElm = this.dropdown.$el;
    // compatible with 2.6 new v-slot syntax
    // issue link https://github.com/ElemeFE/element/issues/14345
    this.dropdown.initDomOperation();
  },


  watch: {
    'dropdown.placement': {
      immediate: true,
      handler: function handler(val) {
        this.currentPlacement = val;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_dropdown_menuvue_type_script_lang_js_ = (dropdown_menuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-menu.vue





/* normalize component */

var dropdown_menu_component = normalizeComponent(
  src_dropdown_menuvue_type_script_lang_js_,
  dropdown_menuvue_type_template_id_d566d84c_render,
  dropdown_menuvue_type_template_id_d566d84c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var dropdown_menu = (dropdown_menu_component.exports);
// CONCATENATED MODULE: ./packages/dropdown-menu/index.js


/* istanbul ignore next */
dropdown_menu.install = function (Vue) {
  Vue.component(dropdown_menu.name, dropdown_menu);
};

/* harmony default export */ var packages_dropdown_menu = (dropdown_menu);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-item.vue?vue&type=template&id=74d0c6e8&
var dropdown_itemvue_type_template_id_74d0c6e8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "li",
    {
      staticClass: "fks-dropdown-menu__item",
      class: {
        "is-disabled": _vm.disabled,
        "fks-dropdown-menu__item--divided": _vm.divided,
      },
      attrs: {
        "aria-disabled": _vm.disabled,
        tabindex: _vm.disabled ? null : -1,
      },
      on: { click: _vm.handleClick },
    },
    [_vm.icon ? _c("i", { class: _vm.icon }) : _vm._e(), _vm._t("default")],
    2
  )
}
var dropdown_itemvue_type_template_id_74d0c6e8_staticRenderFns = []
dropdown_itemvue_type_template_id_74d0c6e8_render._withStripped = true


// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue?vue&type=template&id=74d0c6e8&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/dropdown/src/dropdown-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var dropdown_itemvue_type_script_lang_js_ = ({
  name: 'FksDropdownItem',

  mixins: [emitter_default.a],

  props: {
    command: {},
    disabled: Boolean,
    divided: Boolean,
    icon: String
  },

  methods: {
    handleClick: function handleClick(e) {
      this.dispatch('FksDropdown', 'menu-item-click', [this.command, this]);
    }
  }
});
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_dropdown_itemvue_type_script_lang_js_ = (dropdown_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/dropdown/src/dropdown-item.vue





/* normalize component */

var dropdown_item_component = normalizeComponent(
  src_dropdown_itemvue_type_script_lang_js_,
  dropdown_itemvue_type_template_id_74d0c6e8_render,
  dropdown_itemvue_type_template_id_74d0c6e8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var dropdown_item = (dropdown_item_component.exports);
// CONCATENATED MODULE: ./packages/dropdown-item/index.js


/* istanbul ignore next */
dropdown_item.install = function (Vue) {
  Vue.component(dropdown_item.name, dropdown_item);
};

/* harmony default export */ var packages_dropdown_item = (dropdown_item);
// CONCATENATED MODULE: ./src/utils/aria-utils.js
var aria = aria || {};

aria.Utils = aria.Utils || {};

/**
 * @desc Set focus on descendant nodes until the first focusable element is
 *       found.
 * @param element
 *          DOM node for which to find the first focusable descendant.
 * @returns
 *  true if a focusable element is found and focus is set.
 */
aria.Utils.focusFirstDescendant = function (element) {
  for (var i = 0; i < element.childNodes.length; i++) {
    var child = element.childNodes[i];
    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {
      return true;
    }
  }
  return false;
};

/**
 * @desc Find the last descendant node that is focusable.
 * @param element
 *          DOM node for which to find the last focusable descendant.
 * @returns
 *  true if a focusable element is found and focus is set.
 */

aria.Utils.focusLastDescendant = function (element) {
  for (var i = element.childNodes.length - 1; i >= 0; i--) {
    var child = element.childNodes[i];
    if (aria.Utils.attemptFocus(child) || aria.Utils.focusLastDescendant(child)) {
      return true;
    }
  }
  return false;
};

/**
 * @desc Set Attempt to set focus on the current node.
 * @param element
 *          The node to attempt to focus on.
 * @returns
 *  true if element is focused.
 */
aria.Utils.attemptFocus = function (element) {
  if (!aria.Utils.isFocusable(element)) {
    return false;
  }
  aria.Utils.IgnoreUtilFocusChanges = true;
  try {
    element.focus();
  } catch (e) {}
  aria.Utils.IgnoreUtilFocusChanges = false;
  return document.activeElement === element;
};

aria.Utils.isFocusable = function (element) {
  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute('tabIndex') !== null) {
    return true;
  }

  if (element.disabled) {
    return false;
  }

  switch (element.nodeName) {
    case 'A':
      return !!element.href && element.rel !== 'ignore';
    case 'INPUT':
      return element.type !== 'hidden' && element.type !== 'file';
    case 'BUTTON':
    case 'SELECT':
    case 'TEXTAREA':
      return true;
    default:
      return false;
  }
};

/**
 * 触发一个事件
 * mouseenter, mouseleave, mouseover, keyup, change, click 等
 * @param  {Element} elm
 * @param  {String} name
 * @param  {*} opts
 */
aria.Utils.triggerEvent = function (elm, name) {
  var eventName = void 0;

  if (/^mouse|click/.test(name)) {
    eventName = 'MouseEvents';
  } else if (/^key/.test(name)) {
    eventName = 'KeyboardEvent';
  } else {
    eventName = 'HTMLEvents';
  }
  var evt = document.createEvent(eventName);

  for (var _len = arguments.length, opts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    opts[_key - 2] = arguments[_key];
  }

  evt.initEvent.apply(evt, [name].concat(opts));
  elm.dispatchEvent ? elm.dispatchEvent(evt) : elm.fireEvent('on' + name, evt);

  return elm;
};

aria.Utils.keys = {
  tab: 9,
  enter: 13,
  space: 32,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  esc: 27
};

/* harmony default export */ var aria_utils = (aria.Utils);
// CONCATENATED MODULE: ./src/utils/menu/aria-submenu.js


var SubMenu = function SubMenu(parent, domNode) {
  this.domNode = domNode;
  this.parent = parent;
  this.subMenuItems = [];
  this.subIndex = 0;
  this.init();
};

SubMenu.prototype.init = function () {
  this.subMenuItems = this.domNode.querySelectorAll('li');
  this.addListeners();
};

SubMenu.prototype.gotoSubIndex = function (idx) {
  if (idx === this.subMenuItems.length) {
    idx = 0;
  } else if (idx < 0) {
    idx = this.subMenuItems.length - 1;
  }
  this.subMenuItems[idx].focus();
  this.subIndex = idx;
};

SubMenu.prototype.addListeners = function () {
  var _this = this;

  var keys = aria_utils.keys;
  var parentNode = this.parent.domNode;
  Array.prototype.forEach.call(this.subMenuItems, function (el) {
    el.addEventListener('keydown', function (event) {
      var prevDef = false;
      switch (event.keyCode) {
        case keys.down:
          _this.gotoSubIndex(_this.subIndex + 1);
          prevDef = true;
          break;
        case keys.up:
          _this.gotoSubIndex(_this.subIndex - 1);
          prevDef = true;
          break;
        case keys.tab:
          aria_utils.triggerEvent(parentNode, 'mouseleave');
          break;
        case keys.enter:
        case keys.space:
          prevDef = true;
          event.currentTarget.click();
          break;
      }
      if (prevDef) {
        event.preventDefault();
        event.stopPropagation();
      }
      return false;
    });
  });
};

/* harmony default export */ var aria_submenu = (SubMenu);
// CONCATENATED MODULE: ./src/utils/menu/aria-menuitem.js



var MenuItem = function MenuItem(domNode) {
  this.domNode = domNode;
  this.submenu = null;
  this.init();
};

MenuItem.prototype.init = function () {
  this.domNode.setAttribute('tabindex', '0');
  var menuChild = this.domNode.querySelector('.fks-menu');
  if (menuChild) {
    this.submenu = new aria_submenu(this, menuChild);
  }
  this.addListeners();
};

MenuItem.prototype.addListeners = function () {
  var _this = this;

  var keys = aria_utils.keys;
  this.domNode.addEventListener('keydown', function (event) {
    var prevDef = false;
    switch (event.keyCode) {
      case keys.down:
        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');
        _this.submenu && _this.submenu.gotoSubIndex(0);
        prevDef = true;
        break;
      case keys.up:
        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');
        _this.submenu && _this.submenu.gotoSubIndex(_this.submenu.subMenuItems.length - 1);
        prevDef = true;
        break;
      case keys.tab:
        aria_utils.triggerEvent(event.currentTarget, 'mouseleave');
        break;
      case keys.enter:
      case keys.space:
        prevDef = true;
        event.currentTarget.click();
        break;
    }
    if (prevDef) {
      event.preventDefault();
    }
  });
};

/* harmony default export */ var aria_menuitem = (MenuItem);
// CONCATENATED MODULE: ./src/utils/menu/aria-menubar.js


var Menu = function Menu(domNode) {
  this.domNode = domNode;
  this.init();
};

Menu.prototype.init = function () {
  var menuChildren = this.domNode.childNodes;
  [].filter.call(menuChildren, function (child) {
    return child.nodeType === 1;
  }).forEach(function (child) {
    new aria_menuitem(child); // eslint-disable-line
  });
};
/* harmony default export */ var aria_menubar = (Menu);
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/dom"
var dom_ = __webpack_require__(1);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu.vue?vue&type=script&lang=js&






/* harmony default export */ var menuvue_type_script_lang_js_ = ({
  name: 'FksMenu',

  render: function render(h) {
    var component = h(
      'ul',
      {
        attrs: {
          role: 'menubar'
        },
        key: +this.collapse,
        style: { backgroundColor: this.backgroundColor || '' },
        'class': {
          'fks-menu--horizontal': this.mode === 'horizontal',
          'fks-menu--collapse': this.collapse,
          'fks-menu': true
        }
      },
      [this.$slots.default]
    );

    if (this.collapseTransition) {
      return h('fks-menu-collapse-transition', [component]);
    } else {
      return component;
    }
  },


  componentName: 'FksMenu',

  mixins: [emitter_default.a, migrating_default.a],

  provide: function provide() {
    return {
      rootMenu: this
    };
  },


  components: {
    'fks-menu-collapse-transition': {
      functional: true,
      render: function render(createElement, context) {
        var data = {
          props: {
            mode: 'out-in'
          },
          on: {
            beforeEnter: function beforeEnter(el) {
              el.style.opacity = 0.2;
            },
            enter: function enter(el) {
              Object(dom_["addClass"])(el, 'fks-opacity-transition');
              el.style.opacity = 1;
            },
            afterEnter: function afterEnter(el) {
              Object(dom_["removeClass"])(el, 'fks-opacity-transition');
              el.style.opacity = '';
            },
            beforeLeave: function beforeLeave(el) {
              if (!el.dataset) el.dataset = {};

              if (Object(dom_["hasClass"])(el, 'fks-menu--collapse')) {
                Object(dom_["removeClass"])(el, 'fks-menu--collapse');
                el.dataset.oldOverflow = el.style.overflow;
                el.dataset.scrollWidth = el.clientWidth;
                Object(dom_["addClass"])(el, 'fks-menu--collapse');
              } else {
                Object(dom_["addClass"])(el, 'fks-menu--collapse');
                el.dataset.oldOverflow = el.style.overflow;
                el.dataset.scrollWidth = el.clientWidth;
                Object(dom_["removeClass"])(el, 'fks-menu--collapse');
              }

              el.style.width = el.scrollWidth + 'px';
              el.style.overflow = 'hidden';
            },
            leave: function leave(el) {
              Object(dom_["addClass"])(el, 'horizontal-collapse-transition');
              el.style.width = el.dataset.scrollWidth + 'px';
            }
          }
        };
        return createElement('transition', data, context.children);
      }
    }
  },

  props: {
    mode: {
      type: String,
      default: 'vertical'
    },
    defaultActive: {
      type: String,
      default: ''
    },
    defaultOpeneds: Array,
    uniqueOpened: Boolean,
    router: Boolean,
    menuTrigger: {
      type: String,
      default: 'hover'
    },
    collapse: Boolean,
    backgroundColor: String,
    textColor: String,
    activeTextColor: String,
    collapseTransition: {
      type: Boolean,
      default: true
    }
  },
  data: function data() {
    return {
      activeIndex: this.defaultActive,
      openedMenus: this.defaultOpeneds && !this.collapse ? this.defaultOpeneds.slice(0) : [],
      items: {},
      submenus: {}
    };
  },

  computed: {
    hoverBackground: function hoverBackground() {
      return this.backgroundColor ? this.mixColor(this.backgroundColor, 0.2) : '';
    },
    isMenuPopup: function isMenuPopup() {
      return this.mode === 'horizontal' || this.mode === 'vertical' && this.collapse;
    }
  },
  watch: {
    defaultActive: function defaultActive(value) {
      if (!this.items[value]) {
        this.activeIndex = null;
      }
      this.updateActiveIndex(value);
    },
    defaultOpeneds: function defaultOpeneds(value) {
      if (!this.collapse) {
        this.openedMenus = value;
      }
    },
    collapse: function collapse(value) {
      if (value) this.openedMenus = [];
      this.broadcast('FksSubmenu', 'toggle-collapse', value);
    }
  },
  methods: {
    updateActiveIndex: function updateActiveIndex(val) {
      var item = this.items[val] || this.items[this.activeIndex] || this.items[this.defaultActive];
      if (item) {
        this.activeIndex = item.index;
        this.initOpenedMenu();
      } else {
        this.activeIndex = null;
      }
    },
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          theme: 'theme is removed.'
        }
      };
    },
    getColorChannels: function getColorChannels(color) {
      color = color.replace('#', '');
      if (/^[0-9a-fA-F]{3}$/.test(color)) {
        color = color.split('');
        for (var i = 2; i >= 0; i--) {
          color.splice(i, 0, color[i]);
        }
        color = color.join('');
      }
      if (/^[0-9a-fA-F]{6}$/.test(color)) {
        return {
          red: parseInt(color.slice(0, 2), 16),
          green: parseInt(color.slice(2, 4), 16),
          blue: parseInt(color.slice(4, 6), 16)
        };
      } else {
        return {
          red: 255,
          green: 255,
          blue: 255
        };
      }
    },
    mixColor: function mixColor(color, percent) {
      var _getColorChannels = this.getColorChannels(color),
          red = _getColorChannels.red,
          green = _getColorChannels.green,
          blue = _getColorChannels.blue;

      if (percent > 0) {
        // shade given color
        red *= 1 - percent;
        green *= 1 - percent;
        blue *= 1 - percent;
      } else {
        // tint given color
        red += (255 - red) * percent;
        green += (255 - green) * percent;
        blue += (255 - blue) * percent;
      }
      return 'rgb(' + Math.round(red) + ', ' + Math.round(green) + ', ' + Math.round(blue) + ')';
    },
    addItem: function addItem(item) {
      this.$set(this.items, item.index, item);
    },
    removeItem: function removeItem(item) {
      delete this.items[item.index];
    },
    addSubmenu: function addSubmenu(item) {
      this.$set(this.submenus, item.index, item);
    },
    removeSubmenu: function removeSubmenu(item) {
      delete this.submenus[item.index];
    },
    openMenu: function openMenu(index, indexPath) {
      var openedMenus = this.openedMenus;
      if (openedMenus.indexOf(index) !== -1) return;
      // 将不在该菜单路径下的其余菜单收起
      // collapse all menu that are not under current menu item
      if (this.uniqueOpened) {
        this.openedMenus = openedMenus.filter(function (index) {
          return indexPath.indexOf(index) !== -1;
        });
      }
      this.openedMenus.push(index);
    },
    closeMenu: function closeMenu(index) {
      var i = this.openedMenus.indexOf(index);
      if (i !== -1) {
        this.openedMenus.splice(i, 1);
      }
    },
    handleSubmenuClick: function handleSubmenuClick(submenu) {
      var index = submenu.index,
          indexPath = submenu.indexPath;

      var isOpened = this.openedMenus.indexOf(index) !== -1;

      if (isOpened) {
        this.closeMenu(index);
        this.$emit('close', index, indexPath);
      } else {
        this.openMenu(index, indexPath);
        this.$emit('open', index, indexPath);
      }
    },
    handleItemClick: function handleItemClick(item) {
      var _this = this;

      var index = item.index,
          indexPath = item.indexPath;

      var oldActiveIndex = this.activeIndex;
      var hasIndex = item.index !== null;

      if (hasIndex) {
        this.activeIndex = item.index;
      }

      this.$emit('select', index, indexPath, item);

      if (this.mode === 'horizontal' || this.collapse) {
        this.openedMenus = [];
      }

      if (this.router && hasIndex) {
        this.routeToItem(item, function (error) {
          _this.activeIndex = oldActiveIndex;
          if (error) {
            // vue-router 3.1.0+ push/replace cause NavigationDuplicated error
            // https://github.com/ElemeFE/element/issues/17044
            if (error.name === 'NavigationDuplicated') return;
            console.error(error);
          }
        });
      }
    },

    // 初始化展开菜单
    // initialize opened menu
    initOpenedMenu: function initOpenedMenu() {
      var _this2 = this;

      var index = this.activeIndex;
      var activeItem = this.items[index];
      if (!activeItem || this.mode === 'horizontal' || this.collapse) return;

      var indexPath = activeItem.indexPath;

      // 展开该菜单项的路径上所有子菜单
      // expand all submenus of the menu item
      indexPath.forEach(function (index) {
        var submenu = _this2.submenus[index];
        submenu && _this2.openMenu(index, submenu.indexPath);
      });
    },
    routeToItem: function routeToItem(item, onError) {
      var route = item.route || item.index;
      try {
        this.$router.push(route, function () {}, onError);
      } catch (e) {
        console.error(e);
      }
    },
    open: function open(index) {
      var _this3 = this;

      var indexPath = this.submenus[index.toString()].indexPath;

      indexPath.forEach(function (i) {
        return _this3.openMenu(i, indexPath);
      });
    },
    close: function close(index) {
      this.closeMenu(index);
    }
  },
  mounted: function mounted() {
    this.initOpenedMenu();
    this.$on('item-click', this.handleItemClick);
    this.$on('submenu-click', this.handleSubmenuClick);
    if (this.mode === 'horizontal') {
      new aria_menubar(this.$el); // eslint-disable-line
    }
    this.$watch('items', this.updateActiveIndex);
  }
});
// CONCATENATED MODULE: ./packages/menu/src/menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_menuvue_type_script_lang_js_ = (menuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/menu/src/menu.vue
var menu_render, menu_staticRenderFns




/* normalize component */

var menu_component = normalizeComponent(
  src_menuvue_type_script_lang_js_,
  menu_render,
  menu_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_menu = (menu_component.exports);
// CONCATENATED MODULE: ./packages/menu/index.js


/* istanbul ignore next */
src_menu.install = function (Vue) {
  Vue.component(src_menu.name, src_menu);
};

/* harmony default export */ var packages_menu = (src_menu);
// EXTERNAL MODULE: external "fawkes-lib/lib/transitions/collapse-transition"
var collapse_transition_ = __webpack_require__(24);
var collapse_transition_default = /*#__PURE__*/__webpack_require__.n(collapse_transition_);

// CONCATENATED MODULE: ./packages/menu/src/menu-mixin.js
/* harmony default export */ var menu_mixin = ({
  inject: ['rootMenu'],
  computed: {
    indexPath: function indexPath() {
      var path = [this.index];
      var parent = this.$parent;
      while (parent.$options.componentName !== 'FksMenu') {
        if (parent.index) {
          path.unshift(parent.index);
        }
        parent = parent.$parent;
      }
      return path;
    },
    parentMenu: function parentMenu() {
      var parent = this.$parent;
      while (parent && ['FksMenu', 'FksSubmenu'].indexOf(parent.$options.componentName) === -1) {
        parent = parent.$parent;
      }
      return parent;
    },
    paddingStyle: function paddingStyle() {
      if (this.rootMenu.mode !== 'vertical') return {};

      var padding = 20;
      var parent = this.$parent;

      if (this.rootMenu.collapse) {
        padding = 20;
      } else {
        while (parent && parent.$options.componentName !== 'FksMenu') {
          if (parent.$options.componentName === 'FksSubmenu') {
            padding += 20;
          }
          parent = parent.$parent;
        }
      }
      return { paddingLeft: padding + 'px' };
    }
  }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/submenu.vue?vue&type=script&lang=js&






var poperMixins = {
  props: {
    transformOrigin: {
      type: [Boolean, String],
      default: false
    },
    offset: vue_popper_default.a.props.offset,
    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
    popperOptions: vue_popper_default.a.props.popperOptions
  },
  data: vue_popper_default.a.data,
  methods: vue_popper_default.a.methods,
  beforeDestroy: vue_popper_default.a.beforeDestroy,
  deactivated: vue_popper_default.a.deactivated
};

/* harmony default export */ var submenuvue_type_script_lang_js_ = ({
  name: 'FksSubmenu',

  componentName: 'FksSubmenu',

  mixins: [menu_mixin, emitter_default.a, poperMixins],

  components: { FksCollapseTransition: collapse_transition_default.a },

  props: {
    index: {
      type: String,
      required: true
    },
    showTimeout: {
      type: Number,
      default: 300
    },
    hideTimeout: {
      type: Number,
      default: 300
    },
    popperClass: String,
    disabled: Boolean,
    popperAppendToBody: {
      type: Boolean,
      default: undefined
    }
  },

  data: function data() {
    return {
      popperJS: null,
      timeout: null,
      items: {},
      submenus: {},
      mouseInChild: false
    };
  },

  watch: {
    opened: function opened(val) {
      var _this = this;

      if (this.isMenuPopup) {
        this.$nextTick(function (_) {
          _this.updatePopper();
        });
      }
    }
  },
  computed: {
    // popper option
    appendToBody: function appendToBody() {
      return this.popperAppendToBody === undefined ? this.isFirstLevel : this.popperAppendToBody;
    },
    menuTransitionName: function menuTransitionName() {
      return this.rootMenu.collapse ? 'fks-zoom-in-left' : 'fks-zoom-in-top';
    },
    opened: function opened() {
      return this.rootMenu.openedMenus.indexOf(this.index) > -1;
    },
    active: function active() {
      var isActive = false;
      var submenus = this.submenus;
      var items = this.items;

      Object.keys(items).forEach(function (index) {
        if (items[index].active) {
          isActive = true;
        }
      });

      Object.keys(submenus).forEach(function (index) {
        if (submenus[index].active) {
          isActive = true;
        }
      });

      return isActive;
    },
    hoverBackground: function hoverBackground() {
      return this.rootMenu.hoverBackground;
    },
    backgroundColor: function backgroundColor() {
      return this.rootMenu.backgroundColor || '';
    },
    activeTextColor: function activeTextColor() {
      return this.rootMenu.activeTextColor || '';
    },
    textColor: function textColor() {
      return this.rootMenu.textColor || '';
    },
    mode: function mode() {
      return this.rootMenu.mode;
    },
    isMenuPopup: function isMenuPopup() {
      return this.rootMenu.isMenuPopup;
    },
    titleStyle: function titleStyle() {
      if (this.mode !== 'horizontal') {
        return {
          color: this.textColor
        };
      }
      return {
        borderBottomColor: this.active ? this.rootMenu.activeTextColor ? this.activeTextColor : '' : 'transparent',
        color: this.active ? this.activeTextColor : this.textColor
      };
    },
    isFirstLevel: function isFirstLevel() {
      var isFirstLevel = true;
      var parent = this.$parent;
      while (parent && parent !== this.rootMenu) {
        if (['FksSubmenu', 'FksMenuItemGroup'].indexOf(parent.$options.componentName) > -1) {
          isFirstLevel = false;
          break;
        } else {
          parent = parent.$parent;
        }
      }
      return isFirstLevel;
    }
  },
  methods: {
    handleCollapseToggle: function handleCollapseToggle(value) {
      if (value) {
        this.initPopper();
      } else {
        this.doDestroy();
      }
    },
    addItem: function addItem(item) {
      this.$set(this.items, item.index, item);
    },
    removeItem: function removeItem(item) {
      delete this.items[item.index];
    },
    addSubmenu: function addSubmenu(item) {
      this.$set(this.submenus, item.index, item);
    },
    removeSubmenu: function removeSubmenu(item) {
      delete this.submenus[item.index];
    },
    handleClick: function handleClick() {
      var rootMenu = this.rootMenu,
          disabled = this.disabled;

      if (rootMenu.menuTrigger === 'hover' && rootMenu.mode === 'horizontal' || rootMenu.collapse && rootMenu.mode === 'vertical' || disabled) {
        return;
      }
      this.dispatch('FksMenu', 'submenu-click', this);
    },
    handleMouseenter: function handleMouseenter(event) {
      var _this2 = this;

      var showTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.showTimeout;

      if (!('ActiveXObject' in window) && event.type === 'focus' && !event.relatedTarget) {
        return;
      }
      var rootMenu = this.rootMenu,
          disabled = this.disabled;

      if (rootMenu.menuTrigger === 'click' && rootMenu.mode === 'horizontal' || !rootMenu.collapse && rootMenu.mode === 'vertical' || disabled) {
        return;
      }
      this.dispatch('FksSubmenu', 'mouse-enter-child');
      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        _this2.rootMenu.openMenu(_this2.index, _this2.indexPath);
      }, showTimeout);

      if (this.appendToBody) {
        this.$parent.$el.dispatchEvent(new MouseEvent('mouseenter'));
      }
    },
    handleMouseleave: function handleMouseleave() {
      var _this3 = this;

      var deepDispatch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var rootMenu = this.rootMenu;

      if (rootMenu.menuTrigger === 'click' && rootMenu.mode === 'horizontal' || !rootMenu.collapse && rootMenu.mode === 'vertical') {
        return;
      }
      this.dispatch('FksSubmenu', 'mouse-leave-child');
      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        !_this3.mouseInChild && _this3.rootMenu.closeMenu(_this3.index);
      }, this.hideTimeout);

      if (this.appendToBody && deepDispatch) {
        if (this.$parent.$options.name === 'FksSubmenu') {
          this.$parent.handleMouseleave(true);
        }
      }
    },
    handleTitleMouseenter: function handleTitleMouseenter() {
      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
      var title = this.$refs['submenu-title'];
      title && (title.style.backgroundColor = this.rootMenu.hoverBackground);
    },
    handleTitleMouseleave: function handleTitleMouseleave() {
      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
      var title = this.$refs['submenu-title'];
      title && (title.style.backgroundColor = this.rootMenu.backgroundColor || '');
    },
    updatePlacement: function updatePlacement() {
      this.currentPlacement = this.mode === 'horizontal' && this.isFirstLevel ? 'bottom-start' : 'right-start';
    },
    initPopper: function initPopper() {
      this.referenceElm = this.$el;
      this.popperElm = this.$refs.menu;
      this.updatePlacement();
    }
  },
  created: function created() {
    var _this4 = this;

    this.$on('toggle-collapse', this.handleCollapseToggle);
    this.$on('mouse-enter-child', function () {
      _this4.mouseInChild = true;
      clearTimeout(_this4.timeout);
    });
    this.$on('mouse-leave-child', function () {
      _this4.mouseInChild = false;
      clearTimeout(_this4.timeout);
    });
  },
  mounted: function mounted() {
    this.parentMenu.addSubmenu(this);
    this.rootMenu.addSubmenu(this);
    this.initPopper();
  },
  beforeDestroy: function beforeDestroy() {
    this.parentMenu.removeSubmenu(this);
    this.rootMenu.removeSubmenu(this);
  },
  render: function render(h) {
    var _this5 = this;

    var active = this.active,
        opened = this.opened,
        paddingStyle = this.paddingStyle,
        titleStyle = this.titleStyle,
        backgroundColor = this.backgroundColor,
        rootMenu = this.rootMenu,
        currentPlacement = this.currentPlacement,
        menuTransitionName = this.menuTransitionName,
        mode = this.mode,
        disabled = this.disabled,
        popperClass = this.popperClass,
        $slots = this.$slots,
        isFirstLevel = this.isFirstLevel;


    var popupMenu = h(
      'transition',
      {
        attrs: { name: menuTransitionName }
      },
      [h(
        'div',
        {
          ref: 'menu',
          directives: [{
            name: 'show',
            value: opened
          }],

          'class': ['fks-menu--' + mode, popperClass],
          on: {
            'mouseenter': function mouseenter($event) {
              return _this5.handleMouseenter($event, 100);
            },
            'mouseleave': function mouseleave() {
              return _this5.handleMouseleave(true);
            },
            'focus': function focus($event) {
              return _this5.handleMouseenter($event, 100);
            }
          }
        },
        [h(
          'ul',
          {
            attrs: {
              role: 'menu'
            },
            'class': ['fks-menu fks-menu--popup', 'fks-menu--popup-' + currentPlacement],
            style: { backgroundColor: rootMenu.backgroundColor || '' }
          },
          [$slots.default]
        )]
      )]
    );

    var inlineMenu = h('fks-collapse-transition', [h(
      'ul',
      {
        attrs: {
          role: 'menu'
        },
        'class': 'fks-menu fks-menu--inline',
        directives: [{
          name: 'show',
          value: opened
        }],

        style: { backgroundColor: rootMenu.backgroundColor || '' }
      },
      [$slots.default]
    )]);

    var submenuTitleIcon = rootMenu.mode === 'horizontal' && isFirstLevel || rootMenu.mode === 'vertical' && !rootMenu.collapse ? 'fks-icon-arrow-down' : 'fks-icon-arrow-right';

    return h(
      'li',
      {
        'class': {
          'fks-submenu': true,
          'is-active': active,
          'is-opened': opened,
          'is-disabled': disabled
        },
        attrs: { role: 'menuitem',
          'aria-haspopup': 'true',
          'aria-expanded': opened
        },
        on: {
          'mouseenter': this.handleMouseenter,
          'mouseleave': function mouseleave() {
            return _this5.handleMouseleave(false);
          },
          'focus': this.handleMouseenter
        }
      },
      [h(
        'div',
        {
          'class': 'fks-submenu__title',
          ref: 'submenu-title',
          on: {
            'click': this.handleClick,
            'mouseenter': this.handleTitleMouseenter,
            'mouseleave': this.handleTitleMouseleave
          },

          style: [paddingStyle, titleStyle, { backgroundColor: backgroundColor }]
        },
        [$slots.title, h('i', { 'class': ['fks-submenu__icon-arrow', submenuTitleIcon] })]
      ), this.isMenuPopup ? popupMenu : inlineMenu]
    );
  }
});
// CONCATENATED MODULE: ./packages/menu/src/submenu.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_submenuvue_type_script_lang_js_ = (submenuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/menu/src/submenu.vue
var submenu_render, submenu_staticRenderFns




/* normalize component */

var submenu_component = normalizeComponent(
  src_submenuvue_type_script_lang_js_,
  submenu_render,
  submenu_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var submenu = (submenu_component.exports);
// CONCATENATED MODULE: ./packages/submenu/index.js


/* istanbul ignore next */
submenu.install = function (Vue) {
  Vue.component(submenu.name, submenu);
};

/* harmony default export */ var packages_submenu = (submenu);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item.vue?vue&type=template&id=19a42274&
var menu_itemvue_type_template_id_19a42274_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "li",
    {
      staticClass: "fks-menu-item",
      class: {
        "is-active": _vm.active,
        "is-disabled": _vm.disabled,
      },
      style: [
        _vm.paddingStyle,
        _vm.itemStyle,
        { backgroundColor: _vm.backgroundColor },
      ],
      attrs: { role: "menuitem", tabindex: "-1" },
      on: {
        click: _vm.handleClick,
        mouseenter: _vm.onMouseEnter,
        focus: _vm.onMouseEnter,
        blur: _vm.onMouseLeave,
        mouseleave: _vm.onMouseLeave,
      },
    },
    [
      _vm.parentMenu.$options.componentName === "FksMenu" &&
      _vm.rootMenu.collapse &&
      _vm.$slots.title
        ? _c("fks-tooltip", { attrs: { effect: "dark", placement: "right" } }, [
            _c(
              "div",
              { attrs: { slot: "content" }, slot: "content" },
              [_vm._t("title")],
              2
            ),
            _c(
              "div",
              {
                staticStyle: {
                  position: "absolute",
                  left: "0",
                  top: "0",
                  height: "100%",
                  width: "100%",
                  display: "inline-block",
                  "box-sizing": "border-box",
                  padding: "0 20px",
                },
              },
              [_vm._t("default")],
              2
            ),
          ])
        : [_vm._t("default"), _vm._t("title")],
    ],
    2
  )
}
var menu_itemvue_type_template_id_19a42274_staticRenderFns = []
menu_itemvue_type_template_id_19a42274_render._withStripped = true


// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue?vue&type=template&id=19a42274&

// EXTERNAL MODULE: external "fawkes-lib/lib/tooltip"
var tooltip_ = __webpack_require__(29);
var tooltip_default = /*#__PURE__*/__webpack_require__.n(tooltip_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var menu_itemvue_type_script_lang_js_ = ({
  name: 'FksMenuItem',

  componentName: 'FksMenuItem',

  mixins: [menu_mixin, emitter_default.a],

  components: { FksTooltip: tooltip_default.a },

  props: {
    index: {
      default: null,
      validator: function validator(val) {
        return typeof val === 'string' || val === null;
      }
    },
    route: [String, Object],
    disabled: Boolean
  },
  computed: {
    active: function active() {
      return this.index === this.rootMenu.activeIndex;
    },
    hoverBackground: function hoverBackground() {
      return this.rootMenu.hoverBackground;
    },
    backgroundColor: function backgroundColor() {
      return this.rootMenu.backgroundColor || '';
    },
    activeTextColor: function activeTextColor() {
      return this.rootMenu.activeTextColor || '';
    },
    textColor: function textColor() {
      return this.rootMenu.textColor || '';
    },
    mode: function mode() {
      return this.rootMenu.mode;
    },
    itemStyle: function itemStyle() {
      var style = {
        color: this.active ? this.activeTextColor : this.textColor
      };
      if (this.mode === 'horizontal' && !this.isNested) {
        style.borderBottomColor = this.active ? this.rootMenu.activeTextColor ? this.activeTextColor : '' : 'transparent';
      }
      return style;
    },
    isNested: function isNested() {
      return this.parentMenu !== this.rootMenu;
    }
  },
  methods: {
    onMouseEnter: function onMouseEnter() {
      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
      this.$el.style.backgroundColor = this.hoverBackground;
    },
    onMouseLeave: function onMouseLeave() {
      if (this.mode === 'horizontal' && !this.rootMenu.backgroundColor) return;
      this.$el.style.backgroundColor = this.backgroundColor;
    },
    handleClick: function handleClick() {
      if (!this.disabled) {
        this.dispatch('FksMenu', 'item-click', this);
        this.$emit('click', this);
      }
    }
  },
  mounted: function mounted() {
    this.parentMenu.addItem(this);
    this.rootMenu.addItem(this);
  },
  beforeDestroy: function beforeDestroy() {
    this.parentMenu.removeItem(this);
    this.rootMenu.removeItem(this);
  }
});
// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_menu_itemvue_type_script_lang_js_ = (menu_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/menu/src/menu-item.vue





/* normalize component */

var menu_item_component = normalizeComponent(
  src_menu_itemvue_type_script_lang_js_,
  menu_itemvue_type_template_id_19a42274_render,
  menu_itemvue_type_template_id_19a42274_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var menu_item = (menu_item_component.exports);
// CONCATENATED MODULE: ./packages/menu-item/index.js


/* istanbul ignore next */
menu_item.install = function (Vue) {
  Vue.component(menu_item.name, menu_item);
};

/* harmony default export */ var packages_menu_item = (menu_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item-group.vue?vue&type=template&id=df723cb4&
var menu_item_groupvue_type_template_id_df723cb4_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("li", { staticClass: "fks-menu-item-group" }, [
    _c(
      "div",
      {
        staticClass: "fks-menu-item-group__title",
        style: { paddingLeft: _vm.levelPadding + "px" },
      },
      [!_vm.$slots.title ? [_vm._v(_vm._s(_vm.title))] : _vm._t("title")],
      2
    ),
    _c("ul", [_vm._t("default")], 2),
  ])
}
var menu_item_groupvue_type_template_id_df723cb4_staticRenderFns = []
menu_item_groupvue_type_template_id_df723cb4_render._withStripped = true


// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue?vue&type=template&id=df723cb4&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu-item-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var menu_item_groupvue_type_script_lang_js_ = ({
  name: 'FksMenuItemGroup',

  componentName: 'FksMenuItemGroup',

  inject: ['rootMenu'],
  props: {
    title: {
      type: String
    }
  },
  data: function data() {
    return {
      paddingLeft: 20
    };
  },

  computed: {
    levelPadding: function levelPadding() {
      var padding = 20;
      var parent = this.$parent;
      if (this.rootMenu.collapse) return 20;
      while (parent && parent.$options.componentName !== 'FksMenu') {
        if (parent.$options.componentName === 'FksSubmenu') {
          padding += 20;
        }
        parent = parent.$parent;
      }
      return padding;
    }
  }
});
// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_menu_item_groupvue_type_script_lang_js_ = (menu_item_groupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/menu/src/menu-item-group.vue





/* normalize component */

var menu_item_group_component = normalizeComponent(
  src_menu_item_groupvue_type_script_lang_js_,
  menu_item_groupvue_type_template_id_df723cb4_render,
  menu_item_groupvue_type_template_id_df723cb4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var menu_item_group = (menu_item_group_component.exports);
// CONCATENATED MODULE: ./packages/menu-item-group/index.js


/* istanbul ignore next */
menu_item_group.install = function (Vue) {
  Vue.component(menu_item_group.name, menu_item_group);
};

/* harmony default export */ var packages_menu_item_group = (menu_item_group);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=template&id=10cc8ad6&
var inputvue_type_template_id_10cc8ad6_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: [
        _vm.type === "textarea" ? "fks-textarea" : "fks-input",
        _vm.inputSize ? "fks-input--" + _vm.inputSize : "",
        {
          "is-disabled": _vm.inputDisabled,
          "is-exceed": _vm.inputExceed,
          "fks-input-group": _vm.$slots.prepend || _vm.$slots.append,
          "fks-input-group--append": _vm.$slots.append,
          "fks-input-group--prepend": _vm.$slots.prepend,
          "fks-input--prefix": _vm.$slots.prefix || _vm.prefixIcon,
          "fks-input--suffix":
            _vm.$slots.suffix ||
            _vm.suffixIcon ||
            _vm.clearable ||
            _vm.showPassword,
          "is-limited3":
            _vm.upperLimit > 99 && _vm.isWordLimitVisible && !_vm.clearable,
          "is-limited2":
            _vm.upperLimit < 100 && _vm.isWordLimitVisible && !_vm.clearable,
          "is-limited4":
            _vm.upperLimit > 99 && _vm.isWordLimitVisible && _vm.clearable,
          "is-limited5":
            _vm.upperLimit < 100 && _vm.isWordLimitVisible && _vm.clearable,
        },
      ],
      on: {
        mouseenter: function ($event) {
          _vm.hovering = true
        },
        mouseleave: function ($event) {
          _vm.hovering = false
        },
      },
    },
    [
      _vm.type !== "textarea"
        ? [
            _vm.$slots.prepend
              ? _c(
                  "div",
                  { staticClass: "fks-input-group__prepend" },
                  [_vm._t("prepend")],
                  2
                )
              : _vm._e(),
            _vm.type !== "textarea"
              ? _c(
                  "input",
                  _vm._b(
                    {
                      ref: "input",
                      staticClass: "fks-input__inner",
                      attrs: {
                        tabindex: _vm.tabindex,
                        type: _vm.showPassword
                          ? _vm.passwordVisible
                            ? "text"
                            : "password"
                          : _vm.type,
                        disabled: _vm.inputDisabled,
                        readonly: _vm.inputReadonly,
                        autocomplete: _vm.autoComplete || _vm.autocomplete,
                        "aria-label": _vm.label,
                      },
                      on: {
                        compositionstart: _vm.handleCompositionStart,
                        compositionupdate: _vm.handleCompositionUpdate,
                        compositionend: _vm.handleCompositionEnd,
                        input: _vm.handleInput,
                        focus: _vm.handleFocus,
                        blur: _vm.handleBlur,
                        change: _vm.handleChange,
                      },
                    },
                    "input",
                    _vm.$attrs,
                    false
                  )
                )
              : _vm._e(),
            _vm.$slots.prefix || _vm.prefixIcon
              ? _c(
                  "span",
                  { staticClass: "fks-input__prefix" },
                  [
                    _vm._t("prefix"),
                    _vm.prefixIcon
                      ? _c("i", {
                          staticClass: "fks-input__icon",
                          class: _vm.prefixIcon,
                        })
                      : _vm._e(),
                  ],
                  2
                )
              : _vm._e(),
            _vm.getSuffixVisible()
              ? _c("span", { staticClass: "fks-input__suffix" }, [
                  _c(
                    "span",
                    { staticClass: "fks-input__suffix-inner" },
                    [
                      !_vm.showClear ||
                      !_vm.showPwdVisible ||
                      !_vm.isWordLimitVisible
                        ? [
                            _vm._t("suffix"),
                            _vm.suffixIcon
                              ? _c("i", {
                                  staticClass: "fks-input__icon",
                                  class: _vm.suffixIcon,
                                })
                              : _vm._e(),
                          ]
                        : _vm._e(),
                      _vm.showClear
                        ? _c("i", {
                            staticClass:
                              "fks-input__icon fks-icon-circle-close fks-input__clear",
                            on: {
                              mousedown: function ($event) {
                                $event.preventDefault()
                              },
                              click: _vm.clear,
                            },
                          })
                        : _vm._e(),
                      _vm.showPwdVisible
                        ? _c("i", {
                            staticClass:
                              "fks-input__icon fks-icon-view fks-input__clear",
                            on: { click: _vm.handlePasswordVisible },
                          })
                        : _vm._e(),
                      _vm.isWordLimitVisible
                        ? _c("span", { staticClass: "fks-input__count" }, [
                            _c(
                              "span",
                              { staticClass: "fks-input__count-inner" },
                              [
                                _vm._v(
                                  _vm._s(_vm.textLength) +
                                    "/" +
                                    _vm._s(_vm.upperLimit)
                                ),
                              ]
                            ),
                          ])
                        : _vm._e(),
                    ],
                    2
                  ),
                  _vm.validateState
                    ? _c("i", {
                        staticClass: "fks-input__icon",
                        class: ["fks-input__validateIcon", _vm.validateIcon],
                      })
                    : _vm._e(),
                ])
              : _vm._e(),
            _vm.$slots.append
              ? _c(
                  "div",
                  { staticClass: "fks-input-group__append" },
                  [_vm._t("append")],
                  2
                )
              : _vm._e(),
          ]
        : _c(
            "textarea",
            _vm._b(
              {
                ref: "textarea",
                staticClass: "fks-textarea__inner",
                style: _vm.textareaStyle,
                attrs: {
                  tabindex: _vm.tabindex,
                  disabled: _vm.inputDisabled,
                  readonly: _vm.inputReadonly,
                  autocomplete: _vm.autoComplete || _vm.autocomplete,
                  "aria-label": _vm.label,
                },
                on: {
                  compositionstart: _vm.handleCompositionStart,
                  compositionupdate: _vm.handleCompositionUpdate,
                  compositionend: _vm.handleCompositionEnd,
                  input: _vm.handleInput,
                  focus: _vm.handleFocus,
                  blur: _vm.handleBlur,
                  change: _vm.handleChange,
                },
              },
              "textarea",
              _vm.$attrs,
              false
            )
          ),
      _vm.isWordLimitVisible && _vm.type === "textarea"
        ? _c("span", { staticClass: "fks-input__count" }, [
            _vm._v(_vm._s(_vm.textLength) + "/" + _vm._s(_vm.upperLimit)),
          ])
        : _vm._e(),
    ],
    2
  )
}
var inputvue_type_template_id_10cc8ad6_staticRenderFns = []
inputvue_type_template_id_10cc8ad6_render._withStripped = true


// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=template&id=10cc8ad6&

// CONCATENATED MODULE: ./packages/input/src/calcTextareaHeight.js
var hiddenTextarea = void 0;

var HIDDEN_STYLE = '\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';

var CONTEXT_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];

function calculateNodeStyling(targetElement) {
  var style = window.getComputedStyle(targetElement);

  var boxSizing = style.getPropertyValue('box-sizing');

  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));

  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));

  var contextStyle = CONTEXT_STYLE.map(function (name) {
    return name + ':' + style.getPropertyValue(name);
  }).join(';');

  return { contextStyle: contextStyle, paddingSize: paddingSize, borderSize: borderSize, boxSizing: boxSizing };
}

function calcTextareaHeight(targetElement) {
  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement('textarea');
    document.body.appendChild(hiddenTextarea);
  }

  var _calculateNodeStyling = calculateNodeStyling(targetElement),
      paddingSize = _calculateNodeStyling.paddingSize,
      borderSize = _calculateNodeStyling.borderSize,
      boxSizing = _calculateNodeStyling.boxSizing,
      contextStyle = _calculateNodeStyling.contextStyle;

  hiddenTextarea.setAttribute('style', contextStyle + ';' + HIDDEN_STYLE);
  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';

  var height = hiddenTextarea.scrollHeight;
  var result = {};

  if (boxSizing === 'border-box') {
    height = height + borderSize;
  } else if (boxSizing === 'content-box') {
    height = height - paddingSize;
  }

  hiddenTextarea.value = '';
  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;

  if (minRows !== null) {
    var minHeight = singleRowHeight * minRows;
    if (boxSizing === 'border-box') {
      minHeight = minHeight + paddingSize + borderSize;
    }
    height = Math.max(minHeight, height);
    result.minHeight = minHeight + 'px';
  }
  if (maxRows !== null) {
    var maxHeight = singleRowHeight * maxRows;
    if (boxSizing === 'border-box') {
      maxHeight = maxHeight + paddingSize + borderSize;
    }
    height = Math.min(maxHeight, height);
  }
  result.height = height + 'px';
  hiddenTextarea.parentNode && hiddenTextarea.parentNode.removeChild(hiddenTextarea);
  hiddenTextarea = null;
  return result;
};
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/merge"
var merge_ = __webpack_require__(10);
var merge_default = /*#__PURE__*/__webpack_require__.n(merge_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/shared"
var shared_ = __webpack_require__(21);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input/src/input.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var inputvue_type_script_lang_js_ = ({
  name: 'FksInput',

  componentName: 'FksInput',

  mixins: [emitter_default.a, migrating_default.a],

  inheritAttrs: false,

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  data: function data() {
    return {
      textareaCalcStyle: {},
      hovering: false,
      focused: false,
      isComposing: false,
      passwordVisible: false
    };
  },


  props: {
    value: [String, Number],
    size: String,
    resize: String,
    form: String,
    disabled: Boolean,
    readonly: Boolean,
    type: {
      type: String,
      default: 'text'
    },
    autosize: {
      type: [Boolean, Object],
      default: false
    },
    autocomplete: {
      type: String,
      default: 'off'
    },
    /** @Deprecated in next major version */
    autoComplete: {
      type: String,
      validator: function validator(val) {
         false && false;
        return true;
      }
    },
    validateEvent: {
      type: Boolean,
      default: true
    },
    suffixIcon: String,
    prefixIcon: String,
    label: String,
    clearable: {
      type: Boolean,
      default: false
    },
    showPassword: {
      type: Boolean,
      default: false
    },
    showWordLimit: {
      type: Boolean,
      default: false
    },
    tabindex: String,
    // 数据脱敏
    masking: {
      type: Boolean,
      default: false
    }
  },

  computed: {
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    validateState: function validateState() {
      return this.fksFormItem ? this.fksFormItem.validateState : '';
    },
    needStatusIcon: function needStatusIcon() {
      return this.fksForm ? this.fksForm.statusIcon : false;
    },
    validateIcon: function validateIcon() {
      return {
        validating: 'fks-icon-loading',
        success: 'fks-icon-circle-check',
        error: 'fks-icon-circle-close'
      }[this.validateState];
    },
    textareaStyle: function textareaStyle() {
      return merge_default()({}, this.textareaCalcStyle, { resize: this.resize });
    },
    inputSize: function inputSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    inputDisabled: function inputDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    inputReadonly: function inputReadonly() {
      return this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    nativeInputValue: function nativeInputValue() {
      return this.value === null || this.value === undefined ? '' : this.masking ? this.desensitizeData(String(this.value)) : String(this.value);
    },
    showClear: function showClear() {
      return this.clearable && !this.inputDisabled && !this.inputReadonly && this.nativeInputValue && (this.focused || this.hovering);
    },
    showPwdVisible: function showPwdVisible() {
      return this.showPassword && !this.inputDisabled && !this.inputReadonly && (!!this.nativeInputValue || this.focused);
    },
    isWordLimitVisible: function isWordLimitVisible() {
      return this.showWordLimit && this.$attrs.maxlength && (this.type === 'text' || this.type === 'textarea') && !this.inputDisabled && !this.inputReadonly && !this.showPassword;
    },
    upperLimit: function upperLimit() {
      return this.$attrs.maxlength;
    },
    textLength: function textLength() {
      if (typeof this.value === 'number') {
        return String(this.value).length;
      }

      return (this.value || '').length;
    },
    inputExceed: function inputExceed() {
      // show exceed style if length of initial value greater then maxlength
      return this.isWordLimitVisible && this.textLength > this.upperLimit;
    }
  },

  watch: {
    value: function value(val) {
      this.$nextTick(this.resizeTextarea);
      if (this.validateEvent) {
        this.dispatch('FksFormItem', 'fks.form.change', [val]);
      }
    },

    autosize: {
      deep: true,
      handler: function handler() {
        this.$nextTick(this.resizeTextarea);
      }
    },
    // native input value is set explicitly
    // do not use v-model / :value in template
    // see: https://github.com/ElemeFE/element/issues/14521
    nativeInputValue: function nativeInputValue() {
      this.setNativeInputValue();
    },

    // when change between <input> and <textarea>,
    // update DOM dependent value and styles
    // https://github.com/ElemeFE/element/issues/14857
    type: function type() {
      var _this = this;

      this.$nextTick(function () {
        _this.setNativeInputValue();
        _this.resizeTextarea();
        _this.updateIconOffset();
      });
    }
  },

  methods: {
    focus: function focus() {
      this.getInput().focus();
    },
    blur: function blur() {
      this.getInput().blur();
    },
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          icon: 'icon is removed, use suffix-icon / prefix-icon instead.',
          'on-icon-click': 'on-icon-click is removed.'
        },
        events: {
          click: 'click is removed.'
        }
      };
    },
    handleBlur: function handleBlur(event) {
      this.focused = false;
      this.$emit('blur', event);
      if (this.validateEvent) {
        this.dispatch('FksFormItem', 'fks.form.blur', [this.value]);
      }
    },
    select: function select() {
      this.getInput().select();
    },
    resizeTextarea: function resizeTextarea() {
      if (this.$isServer) return;
      var autosize = this.autosize,
          type = this.type;

      if (type !== 'textarea') return;
      if (!autosize) {
        this.textareaCalcStyle = {
          minHeight: calcTextareaHeight(this.$refs.textarea).minHeight
        };
        return;
      }
      var minRows = autosize.minRows;
      var maxRows = autosize.maxRows;

      this.textareaCalcStyle = calcTextareaHeight(this.$refs.textarea, minRows, maxRows);
    },
    setNativeInputValue: function setNativeInputValue() {
      var input = this.getInput();
      if (!input) return;
      if (input.value === this.nativeInputValue) return;
      input.value = this.nativeInputValue;
    },
    handleFocus: function handleFocus(event) {
      this.focused = true;
      this.$emit('focus', event);
    },
    handleCompositionStart: function handleCompositionStart() {
      this.isComposing = true;
    },
    handleCompositionUpdate: function handleCompositionUpdate(event) {
      var text = event.target.value;
      var lastCharacter = text[text.length - 1] || '';
      this.isComposing = !Object(shared_["isKorean"])(lastCharacter);
    },
    handleCompositionEnd: function handleCompositionEnd(event) {
      if (this.isComposing) {
        this.isComposing = false;
        this.handleInput(event);
      }
    },
    handleInput: function handleInput(event) {
      // should not emit input during composition
      // see: https://github.com/ElemeFE/element/issues/10516
      if (this.isComposing) return;

      // hack for https://github.com/ElemeFE/element/issues/8548
      // should remove the following line when we don't support IE
      if (event.target.value === this.nativeInputValue) return;

      this.$emit('input', event.target.value);

      // ensure native input value is controlled
      // see: https://github.com/ElemeFE/element/issues/12850
      this.$nextTick(this.setNativeInputValue);
    },
    handleChange: function handleChange(event) {
      this.$emit('change', event.target.value);
    },
    calcIconOffset: function calcIconOffset(place) {
      var elList = [].slice.call(this.$el.querySelectorAll('.fks-input__' + place) || []);
      if (!elList.length) return;
      var el = null;
      for (var i = 0; i < elList.length; i++) {
        if (elList[i].parentNode === this.$el) {
          el = elList[i];
          break;
        }
      }
      if (!el) return;
      var pendantMap = {
        suffix: 'append',
        prefix: 'prepend'
      };

      var pendant = pendantMap[place];
      if (this.$slots[pendant]) {
        el.style.transform = 'translateX(' + (place === 'suffix' ? '-' : '') + this.$el.querySelector('.fks-input-group__' + pendant).offsetWidth + 'px)';
      } else {
        el.removeAttribute('style');
      }
    },
    updateIconOffset: function updateIconOffset() {
      this.calcIconOffset('prefix');
      this.calcIconOffset('suffix');
    },
    clear: function clear() {
      this.$emit('input', '');
      this.$emit('change', '');
      this.$emit('clear');
    },
    handlePasswordVisible: function handlePasswordVisible() {
      this.passwordVisible = !this.passwordVisible;
      this.focus();
    },
    getInput: function getInput() {
      return this.$refs.input || this.$refs.textarea;
    },
    getSuffixVisible: function getSuffixVisible() {
      return this.$slots.suffix || this.suffixIcon || this.showClear || this.showPassword || this.isWordLimitVisible || this.validateState && this.needStatusIcon;
    },

    // 数据脱敏
    desensitizeData: function desensitizeData(dataValue) {
      if (this.focused) return dataValue;
      if (/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/.test(dataValue)) {
        return dataValue.replace(/(.{0,1}).*@(.*)/, '$1***@$2');
      } else {
        if (/^\d{16}|\d{19}$/.test(dataValue)) {
          return dataValue.replace(/^(.{6})(?:\d+)(.{4})$/, '$1******$2');
        } else if (/^[1][3,4,5,7,8][0-9]{9}$/.test(dataValue)) {
          // tel
          return dataValue.replace(/(\d{3})\d{4}(\d*)/, '$1****$2');
        } else if (/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/.test(dataValue)) {
          // id card
          return dataValue.replace(/(\d{8})\d{8}(\d*)/, '$1********$2');
        } else {
          return dataValue.replace(/./g, '*');
        }
      }
    }
  },

  created: function created() {
    this.$on('inputSelect', this.select);
  },
  mounted: function mounted() {
    this.setNativeInputValue();
    this.resizeTextarea();
    this.updateIconOffset();
  },
  updated: function updated() {
    this.$nextTick(this.updateIconOffset);
  }
});
// CONCATENATED MODULE: ./packages/input/src/input.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_inputvue_type_script_lang_js_ = (inputvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/input/src/input.vue





/* normalize component */

var input_component = normalizeComponent(
  src_inputvue_type_script_lang_js_,
  inputvue_type_template_id_10cc8ad6_render,
  inputvue_type_template_id_10cc8ad6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_input = (input_component.exports);
// CONCATENATED MODULE: ./packages/input/index.js


/* istanbul ignore next */
src_input.install = function (Vue) {
  Vue.component(src_input.name, src_input);
};

/* harmony default export */ var packages_input = (src_input);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=template&id=5b0e41de&
var input_numbervue_type_template_id_5b0e41de_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: [
        "fks-input-number",
        _vm.inputNumberSize ? "fks-input-number--" + _vm.inputNumberSize : "",
        { "is-disabled": _vm.inputNumberDisabled },
        { "is-readonly": _vm.inputNumberReadonly },
        { "is-without-controls": !_vm.controls },
        { "is-controls-right": _vm.controlsAtRight },
      ],
      on: {
        dragstart: function ($event) {
          $event.preventDefault()
        },
      },
    },
    [
      _vm.controls
        ? _c(
            "span",
            {
              directives: [
                {
                  name: "repeat-click",
                  rawName: "v-repeat-click",
                  value: _vm.decrease,
                  expression: "decrease",
                },
              ],
              staticClass: "fks-input-number__decrease",
              class: { "is-disabled": _vm.minDisabled },
              attrs: { role: "button" },
              on: {
                keydown: function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                  ) {
                    return null
                  }
                  return _vm.decrease.apply(null, arguments)
                },
              },
            },
            [
              _c("i", {
                class:
                  "fks-icon-" + (_vm.controlsAtRight ? "arrow-down" : "minus"),
              }),
            ]
          )
        : _vm._e(),
      _vm.controls
        ? _c(
            "span",
            {
              directives: [
                {
                  name: "repeat-click",
                  rawName: "v-repeat-click",
                  value: _vm.increase,
                  expression: "increase",
                },
              ],
              staticClass: "fks-input-number__increase",
              class: { "is-disabled": _vm.maxDisabled },
              attrs: { role: "button" },
              on: {
                keydown: function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                  ) {
                    return null
                  }
                  return _vm.increase.apply(null, arguments)
                },
              },
            },
            [
              _c("i", {
                class:
                  "fks-icon-" + (_vm.controlsAtRight ? "arrow-up" : "plus"),
              }),
            ]
          )
        : _vm._e(),
      _c("fks-input", {
        ref: "input",
        attrs: {
          value: _vm.displayValue,
          placeholder: _vm.placeholder,
          disabled: _vm.inputNumberDisabled,
          readonly: _vm.inputNumberReadonly,
          size: _vm.inputNumberSize,
          max: _vm.max,
          min: _vm.min,
          name: _vm.name,
          label: _vm.label,
        },
        on: {
          blur: _vm.handleBlur,
          focus: _vm.handleFocus,
          input: _vm.handleInput,
          change: _vm.handleInputChange,
        },
        nativeOn: {
          keydown: [
            function ($event) {
              if (
                !$event.type.indexOf("key") &&
                _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])
              ) {
                return null
              }
              $event.preventDefault()
              return _vm.increase.apply(null, arguments)
            },
            function ($event) {
              if (
                !$event.type.indexOf("key") &&
                _vm._k($event.keyCode, "down", 40, $event.key, [
                  "Down",
                  "ArrowDown",
                ])
              ) {
                return null
              }
              $event.preventDefault()
              return _vm.decrease.apply(null, arguments)
            },
          ],
        },
      }),
    ],
    1
  )
}
var input_numbervue_type_template_id_5b0e41de_staticRenderFns = []
input_numbervue_type_template_id_5b0e41de_render._withStripped = true


// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=template&id=5b0e41de&

// CONCATENATED MODULE: ./src/directives/repeat-click.js


/* harmony default export */ var repeat_click = ({
  bind: function bind(el, binding, vnode) {
    var interval = null;
    var startTime = void 0;
    var handler = function handler() {
      return vnode.context[binding.expression].apply();
    };
    var clear = function clear() {
      if (Date.now() - startTime < 100) {
        handler();
      }
      clearInterval(interval);
      interval = null;
    };

    Object(dom_["on"])(el, 'mousedown', function (e) {
      if (e.button !== 0) return;
      startTime = Date.now();
      Object(dom_["once"])(document, 'mouseup', clear);
      clearInterval(interval);
      interval = setInterval(handler, 100);
    });
  }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var input_numbervue_type_script_lang_js_ = ({
  name: 'FksInputNumber',
  mixins: [focus_default()('input')],
  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },
  directives: {
    repeatClick: repeat_click
  },
  components: {
    FksInput: input_default.a
  },
  props: {
    step: {
      type: Number,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      default: false
    },
    max: {
      type: Number,
      default: Infinity
    },
    min: {
      type: Number,
      default: -Infinity
    },
    value: {},
    disabled: Boolean,
    readonly: Boolean,
    size: String,
    controls: {
      type: Boolean,
      default: true
    },
    controlsPosition: {
      type: String,
      default: ''
    },
    name: String,
    label: String,
    placeholder: String,
    precision: {
      type: Number,
      validator: function validator(val) {
        return val >= 0 && val === parseInt(val, 10);
      }
    }
  },
  data: function data() {
    return {
      currentValue: 0,
      userInput: null
    };
  },

  watch: {
    value: {
      immediate: true,
      handler: function handler(value) {
        var newVal = value === undefined ? value : Number(value);
        if (newVal !== undefined) {
          if (isNaN(newVal)) {
            return;
          }

          if (this.stepStrictly) {
            var stepPrecision = this.getPrecision(this.step);
            var precisionFactor = Math.pow(10, stepPrecision);
            newVal = Math.round(newVal / this.step) * precisionFactor * this.step / precisionFactor;
          }

          if (this.precision !== undefined) {
            newVal = this.toPrecision(newVal, this.precision);
          }
        }
        if (newVal >= this.max) newVal = this.max;
        if (newVal <= this.min) newVal = this.min;
        this.currentValue = newVal;
        this.userInput = null;
        this.$emit('input', newVal);
      }
    }
  },
  computed: {
    minDisabled: function minDisabled() {
      return this._decrease(this.value, this.step) < this.min;
    },
    maxDisabled: function maxDisabled() {
      return this._increase(this.value, this.step) > this.max;
    },
    numPrecision: function numPrecision() {
      var value = this.value,
          step = this.step,
          getPrecision = this.getPrecision,
          precision = this.precision;

      var stepPrecision = getPrecision(step);
      if (precision !== undefined) {
        if (stepPrecision > precision) {
          console.warn('[FawkesLib Warn][InputNumber]precision should not be less than the decimal places of step');
        }
        return precision;
      } else {
        return Math.max(getPrecision(value), stepPrecision);
      }
    },
    controlsAtRight: function controlsAtRight() {
      return this.controls && this.controlsPosition === 'right';
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    inputNumberSize: function inputNumberSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    inputNumberDisabled: function inputNumberDisabled() {
      return this.disabled || !!(this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    inputNumberReadonly: function inputNumberReadonly() {
      return this.readonly || !!(this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    displayValue: function displayValue() {
      if (this.userInput !== null) {
        return this.userInput;
      }

      var currentValue = this.currentValue;

      if (typeof currentValue === 'number') {
        if (this.stepStrictly) {
          var stepPrecision = this.getPrecision(this.step);
          var precisionFactor = Math.pow(10, stepPrecision);
          currentValue = Math.round(currentValue / this.step) * precisionFactor * this.step / precisionFactor;
        }

        if (this.precision !== undefined) {
          currentValue = currentValue.toFixed(this.precision);
        }
      }

      return currentValue;
    }
  },
  methods: {
    toPrecision: function toPrecision(num, precision) {
      if (precision === undefined) precision = this.numPrecision;
      return parseFloat(Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision));
    },
    getPrecision: function getPrecision(value) {
      if (value === undefined) return 0;
      var valueString = value.toString();
      var dotPosition = valueString.indexOf('.');
      var precision = 0;
      if (dotPosition !== -1) {
        precision = valueString.length - dotPosition - 1;
      }
      return precision;
    },
    _increase: function _increase(val, step) {
      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

      var precisionFactor = Math.pow(10, this.numPrecision);
      // Solve the accuracy problem of JS decimal calculation by converting the value to integer.
      return this.toPrecision((precisionFactor * val + precisionFactor * step) / precisionFactor);
    },
    _decrease: function _decrease(val, step) {
      if (typeof val !== 'number' && val !== undefined) return this.currentValue;

      var precisionFactor = Math.pow(10, this.numPrecision);

      return this.toPrecision((precisionFactor * val - precisionFactor * step) / precisionFactor);
    },
    increase: function increase() {
      if (this.inputNumberDisabled || this.maxDisabled || this.inputNumberReadonly) return;
      var value = this.value || 0;
      var newVal = this._increase(value, this.step);
      this.setCurrentValue(newVal);
    },
    decrease: function decrease() {
      if (this.inputNumberDisabled || this.minDisabled || this.inputNumberReadonly) return;
      var value = this.value || 0;
      var newVal = this._decrease(value, this.step);
      this.setCurrentValue(newVal);
    },
    handleBlur: function handleBlur(event) {
      this.$emit('blur', event);
    },
    handleFocus: function handleFocus(event) {
      this.$emit('focus', event);
    },
    setCurrentValue: function setCurrentValue(newVal) {
      var oldVal = this.currentValue;
      if (typeof newVal === 'number' && this.precision !== undefined) {
        newVal = this.toPrecision(newVal, this.precision);
      }
      if (newVal >= this.max) newVal = this.max;
      if (newVal <= this.min) newVal = this.min;
      if (oldVal === newVal) return;
      this.userInput = null;
      this.$emit('input', newVal);
      this.$emit('change', newVal, oldVal);
      this.currentValue = newVal;
    },
    handleInput: function handleInput(value) {
      this.userInput = value;
    },
    handleInputChange: function handleInputChange(value) {
      var newVal = value === '' ? undefined : Number(value);
      if (!isNaN(newVal) || value === '') {
        this.setCurrentValue(newVal);
      }
      this.userInput = null;
    },
    select: function select() {
      this.$refs.input.select();
    }
  },
  mounted: function mounted() {
    var innerInput = this.$refs.input.$refs.input;
    innerInput.setAttribute('role', 'spinbutton');
    innerInput.setAttribute('aria-valuemax', this.max);
    innerInput.setAttribute('aria-valuemin', this.min);
    innerInput.setAttribute('aria-valuenow', this.currentValue);
    innerInput.setAttribute('aria-disabled', this.inputNumberDisabled);
    innerInput.setAttribute('aria-readonly', this.inputNumberReadonly);
  },
  updated: function updated() {
    if (!this.$refs || !this.$refs.input) return;
    var innerInput = this.$refs.input.$refs.input;
    innerInput.setAttribute('aria-valuenow', this.currentValue);
  }
});
// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_input_numbervue_type_script_lang_js_ = (input_numbervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/input-number/src/input-number.vue





/* normalize component */

var input_number_component = normalizeComponent(
  src_input_numbervue_type_script_lang_js_,
  input_numbervue_type_template_id_5b0e41de_render,
  input_numbervue_type_template_id_5b0e41de_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var input_number = (input_number_component.exports);
// CONCATENATED MODULE: ./packages/input-number/index.js


/* istanbul ignore next */
input_number.install = function (Vue) {
  Vue.component(input_number.name, input_number);
};

/* harmony default export */ var packages_input_number = (input_number);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=template&id=1e8f20a0&
var radiovue_type_template_id_1e8f20a0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "fks-radio",
      class: [
        { "is-vertical": _vm.isGroup && _vm.vertical },
        _vm.border && _vm.radioSize ? "fks-radio--" + _vm.radioSize : "",
        { "is-disabled": _vm.isDisabled },
        { "is-readonly": _vm.isReadonly },
        { "is-focus": _vm.focus },
        { "is-bordered": _vm.border },
        { "is-checked": _vm.model === _vm.label },
      ],
      attrs: {
        role: "radio",
        "aria-checked": _vm.model === _vm.label,
        "aria-disabled": _vm.isDisabled || _vm.isReadonly,
        tabindex: _vm.tabIndex,
      },
      on: {
        keydown: function ($event) {
          if (
            !$event.type.indexOf("key") &&
            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
          ) {
            return null
          }
          $event.stopPropagation()
          $event.preventDefault()
          _vm.model = _vm.isDisabled ? _vm.model : _vm.label
        },
      },
    },
    [
      _c(
        "span",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: !_vm.border,
              expression: "!border",
            },
          ],
          staticClass: "fks-radio__input",
          class: {
            "is-disabled": _vm.isDisabled,
            "is-readonly": _vm.isReadonly,
            "is-checked": _vm.model === _vm.label,
          },
        },
        [
          _c("span", { staticClass: "fks-radio__inner" }),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.model,
                expression: "model",
              },
            ],
            ref: "radio",
            staticClass: "fks-radio__original",
            attrs: {
              type: "radio",
              "aria-hidden": "true",
              name: _vm.name,
              disabled: _vm.isDisabled || _vm.isReadonly,
              tabindex: "-1",
            },
            domProps: {
              value: _vm.label,
              checked: _vm._q(_vm.model, _vm.label),
            },
            on: {
              focus: function ($event) {
                _vm.focus = true
              },
              blur: function ($event) {
                _vm.focus = false
              },
              change: [
                function ($event) {
                  _vm.model = _vm.label
                },
                _vm.handleChange,
              ],
            },
          }),
        ]
      ),
      _c(
        "span",
        {
          staticClass: "fks-radio__label",
          on: {
            keydown: function ($event) {
              $event.stopPropagation()
            },
          },
        },
        [
          _vm._t("default"),
          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e(),
        ],
        2
      ),
    ]
  )
}
var radiovue_type_template_id_1e8f20a0_staticRenderFns = []
radiovue_type_template_id_1e8f20a0_render._withStripped = true


// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=template&id=1e8f20a0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var radiovue_type_script_lang_js_ = ({
  name: 'FksRadio',

  mixins: [emitter_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  componentName: 'FksRadio',

  props: {
    value: {},
    label: {},
    disabled: Boolean,
    readonly: Boolean,
    name: String,
    border: Boolean,
    size: String
  },

  data: function data() {
    return {
      focus: false,
      vertical: false
    };
  },

  computed: {
    isGroup: function isGroup() {
      var parent = this.$parent;
      while (parent) {
        if (parent.$options.componentName !== 'FksRadioGroup') {
          parent = parent.$parent;
        } else {
          this.vertical = parent._props.vertical;
          this._radioGroup = parent;
          return true;
        }
      }
      return false;
    },

    model: {
      get: function get() {
        return this.isGroup ? this._radioGroup.value : this.value;
      },
      set: function set(val) {
        if (this.isGroup) {
          this.dispatch('FksRadioGroup', 'input', [val]);
        } else {
          this.$emit('input', val);
        }
        this.$refs.radio && (this.$refs.radio.checked = this.model === this.label);
      }
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    radioSize: function radioSize() {
      var temRadioSize = this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
      return this.isGroup ? this._radioGroup.radioGroupSize || temRadioSize : temRadioSize;
    },
    isDisabled: function isDisabled() {
      return this.isGroup ? this._radioGroup.disabled || this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled : this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    isReadonly: function isReadonly() {
      return this.isGroup ? this._radioGroup.readonly || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly : this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    tabIndex: function tabIndex() {
      return this.isDisabled || this.isReadonly || this.isGroup && this.model !== this.label ? -1 : 0;
    }
  },

  methods: {
    handleChange: function handleChange() {
      var _this = this;

      this.$nextTick(function () {
        _this.$emit('change', _this.model);
        _this.isGroup && _this.dispatch('FksRadioGroup', 'handleChange', _this.model);
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/radio/src/radio.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_radiovue_type_script_lang_js_ = (radiovue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/radio/src/radio.vue





/* normalize component */

var radio_component = normalizeComponent(
  src_radiovue_type_script_lang_js_,
  radiovue_type_template_id_1e8f20a0_render,
  radiovue_type_template_id_1e8f20a0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_radio = (radio_component.exports);
// CONCATENATED MODULE: ./packages/radio/index.js


/* istanbul ignore next */
src_radio.install = function (Vue) {
  Vue.component(src_radio.name, src_radio);
};

/* harmony default export */ var packages_radio = (src_radio);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-group.vue?vue&type=template&id=21081e9e&
var radio_groupvue_type_template_id_21081e9e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    _vm._elTag,
    {
      tag: "component",
      staticClass: "fks-radio-group",
      attrs: { role: "radiogroup" },
      on: { keydown: _vm.handleKeydown },
    },
    [_vm._t("default")],
    2
  )
}
var radio_groupvue_type_template_id_21081e9e_staticRenderFns = []
radio_groupvue_type_template_id_21081e9e_render._withStripped = true


// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue?vue&type=template&id=21081e9e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//



var keyCode = Object.freeze({
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
});
/* harmony default export */ var radio_groupvue_type_script_lang_js_ = ({
  name: 'FksRadioGroup',

  componentName: 'FksRadioGroup',

  inject: {
    fksFormItem: {
      default: ''
    }
  },

  mixins: [emitter_default.a],

  props: {
    vertical: {
      type: Boolean,
      default: false
    },
    value: {},
    size: String,
    fill: String,
    textColor: String,
    disabled: Boolean,
    readonly: Boolean
  },

  computed: {
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    _elTag: function _elTag() {
      return (this.$vnode.data || {}).tag || 'div';
    },
    radioGroupSize: function radioGroupSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    }
  },

  created: function created() {
    var _this = this;

    this.$on('handleChange', function (value) {
      _this.$emit('change', value);
    });
  },
  mounted: function mounted() {
    // 当radioGroup没有默认选项时，第一个可以选中Tab导航
    var radios = this.$el.querySelectorAll('[type=radio]');
    var firstLabel = this.$el.querySelectorAll('[role=radio]')[0];
    if (![].some.call(radios, function (radio) {
      return radio.checked;
    }) && firstLabel) {
      firstLabel.tabIndex = 0;
    }
  },

  methods: {
    handleKeydown: function handleKeydown(e) {
      // 左右上下按键 可以在radio组内切换不同选项
      var target = e.target;
      var className = target.nodeName === 'INPUT' ? '[type=radio]' : '[role=radio]';
      var radios = this.$el.querySelectorAll(className);
      var length = radios.length;
      var index = [].indexOf.call(radios, target);
      var roleRadios = this.$el.querySelectorAll('[role=radio]');
      switch (e.keyCode) {
        case keyCode.LEFT:
        case keyCode.UP:
          e.stopPropagation();
          e.preventDefault();
          if (index === 0) {
            roleRadios[length - 1].click();
            roleRadios[length - 1].focus();
          } else {
            roleRadios[index - 1].click();
            roleRadios[index - 1].focus();
          }
          break;
        case keyCode.RIGHT:
        case keyCode.DOWN:
          if (index === length - 1) {
            e.stopPropagation();
            e.preventDefault();
            roleRadios[0].click();
            roleRadios[0].focus();
          } else {
            roleRadios[index + 1].click();
            roleRadios[index + 1].focus();
          }
          break;
        default:
          break;
      }
    }
  },
  watch: {
    value: function value(_value) {
      this.dispatch('FksFormItem', 'fks.form.change', [this.value]);
    }
  }
});
// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_radio_groupvue_type_script_lang_js_ = (radio_groupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/radio/src/radio-group.vue





/* normalize component */

var radio_group_component = normalizeComponent(
  src_radio_groupvue_type_script_lang_js_,
  radio_groupvue_type_template_id_21081e9e_render,
  radio_groupvue_type_template_id_21081e9e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var radio_group = (radio_group_component.exports);
// CONCATENATED MODULE: ./packages/radio-group/index.js


/* istanbul ignore next */
radio_group.install = function (Vue) {
  Vue.component(radio_group.name, radio_group);
};

/* harmony default export */ var packages_radio_group = (radio_group);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=template&id=adf6b460&
var radio_buttonvue_type_template_id_adf6b460_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "fks-radio-button",
      class: [
        _vm.size ? "fks-radio-button--" + _vm.size : "",
        { "is-active": _vm.value === _vm.label },
        { "is-disabled": _vm.isDisabled },
        { "is-readonly": _vm.isReadonly },
        { "is-focus": _vm.focus },
      ],
      attrs: {
        role: "radio",
        "aria-checked": _vm.value === _vm.label,
        "aria-disabled": _vm.isDisabled || _vm.isReadonly,
        tabindex: _vm.tabIndex,
      },
      on: {
        keydown: function ($event) {
          if (
            !$event.type.indexOf("key") &&
            _vm._k($event.keyCode, "space", 32, $event.key, [" ", "Spacebar"])
          ) {
            return null
          }
          $event.stopPropagation()
          $event.preventDefault()
          _vm.value = _vm.isDisabled ? _vm.value : _vm.label
        },
      },
    },
    [
      _c("input", {
        directives: [
          {
            name: "model",
            rawName: "v-model",
            value: _vm.value,
            expression: "value",
          },
        ],
        staticClass: "fks-radio-button__orig-radio",
        attrs: {
          type: "radio",
          name: _vm.name,
          disabled: _vm.isDisabled || _vm.isReadonly,
          readonly: _vm.isReadonly,
          tabindex: "-1",
        },
        domProps: { value: _vm.label, checked: _vm._q(_vm.value, _vm.label) },
        on: {
          change: [
            function ($event) {
              _vm.value = _vm.label
            },
            _vm.handleChange,
          ],
          focus: function ($event) {
            _vm.focus = true
          },
          blur: function ($event) {
            _vm.focus = false
          },
        },
      }),
      _c(
        "span",
        {
          staticClass: "fks-radio-button__inner",
          style: _vm.value === _vm.label ? _vm.activeStyle : null,
          on: {
            keydown: function ($event) {
              $event.stopPropagation()
            },
          },
        },
        [
          _vm._t("default"),
          !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e(),
        ],
        2
      ),
    ]
  )
}
var radio_buttonvue_type_template_id_adf6b460_staticRenderFns = []
radio_buttonvue_type_template_id_adf6b460_render._withStripped = true


// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=template&id=adf6b460&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var radio_buttonvue_type_script_lang_js_ = ({
  name: 'FksRadioButton',

  mixins: [emitter_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    label: {},
    disabled: Boolean,
    readonly: Boolean,
    name: String
  },
  data: function data() {
    return {
      focus: false
    };
  },

  computed: {
    value: {
      get: function get() {
        return this._radioGroup.value;
      },
      set: function set(value) {
        this._radioGroup.$emit('input', value);
      }
    },
    _radioGroup: function _radioGroup() {
      var parent = this.$parent;
      while (parent) {
        if (parent.$options.componentName !== 'FksRadioGroup') {
          parent = parent.$parent;
        } else {
          return parent;
        }
      }
      return false;
    },
    activeStyle: function activeStyle() {
      return {
        backgroundColor: this._radioGroup.fill || '',
        borderColor: this._radioGroup.fill || '',
        boxShadow: this._radioGroup.fill ? '-1px 0 0 0 ' + this._radioGroup.fill : '',
        color: this._radioGroup.textColor || ''
      };
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    size: function size() {
      return this._radioGroup.radioGroupSize || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    isDisabled: function isDisabled() {
      return this.disabled || this._radioGroup.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    isReadonly: function isReadonly() {
      return this.disabled || this._radioGroup.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    tabIndex: function tabIndex() {
      return this.isDisabled || this._radioGroup && this.value !== this.label ? -1 : 0;
    }
  },

  methods: {
    handleChange: function handleChange() {
      var _this = this;

      this.$nextTick(function () {
        _this.dispatch('FksRadioGroup', 'handleChange', _this.value);
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_radio_buttonvue_type_script_lang_js_ = (radio_buttonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/radio/src/radio-button.vue





/* normalize component */

var radio_button_component = normalizeComponent(
  src_radio_buttonvue_type_script_lang_js_,
  radio_buttonvue_type_template_id_adf6b460_render,
  radio_buttonvue_type_template_id_adf6b460_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var radio_button = (radio_button_component.exports);
// CONCATENATED MODULE: ./packages/radio-button/index.js


/* istanbul ignore next */
radio_button.install = function (Vue) {
  Vue.component(radio_button.name, radio_button);
};

/* harmony default export */ var packages_radio_button = (radio_button);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=template&id=42a868c5&
var checkboxvue_type_template_id_42a868c5_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "fks-checkbox",
      class: [
        { "is-vertical": _vm.isGroup && _vm.vertical },
        _vm.border && _vm.checkboxSize
          ? "fks-checkbox--" + _vm.checkboxSize
          : "",
        { "is-disabled": _vm.isDisabled },
        { "is-readonly": _vm.isReadonly },
        { "is-bordered": _vm.border },
        { "is-checked": _vm.isChecked },
      ],
      attrs: { id: _vm.id },
    },
    [
      _c(
        "span",
        {
          staticClass: "fks-checkbox__input",
          class: {
            "is-disabled": _vm.isDisabled,
            "is-readonly": _vm.isReadonly,
            "is-checked": _vm.isChecked,
            "is-indeterminate": _vm.indeterminate,
            "is-focus": _vm.focus,
          },
          attrs: {
            tabindex: _vm.indeterminate ? 0 : false,
            role: _vm.indeterminate ? "checkbox" : false,
            "aria-checked": _vm.indeterminate ? "mixed" : false,
          },
        },
        [
          _c("span", { staticClass: "fks-checkbox__inner" }),
          _vm.trueLabel || _vm.falseLabel
            ? _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.model,
                    expression: "model",
                  },
                ],
                staticClass: "fks-checkbox__original",
                attrs: {
                  type: "checkbox",
                  "aria-hidden": _vm.indeterminate ? "true" : "false",
                  name: _vm.name,
                  disabled: _vm.isReadonly || _vm.isDisabled,
                  "true-value": _vm.trueLabel,
                  "false-value": _vm.falseLabel,
                },
                domProps: {
                  checked: Array.isArray(_vm.model)
                    ? _vm._i(_vm.model, null) > -1
                    : _vm._q(_vm.model, _vm.trueLabel),
                },
                on: {
                  change: [
                    function ($event) {
                      var $$a = _vm.model,
                        $$el = $event.target,
                        $$c = $$el.checked ? _vm.trueLabel : _vm.falseLabel
                      if (Array.isArray($$a)) {
                        var $$v = null,
                          $$i = _vm._i($$a, $$v)
                        if ($$el.checked) {
                          $$i < 0 && (_vm.model = $$a.concat([$$v]))
                        } else {
                          $$i > -1 &&
                            (_vm.model = $$a
                              .slice(0, $$i)
                              .concat($$a.slice($$i + 1)))
                        }
                      } else {
                        _vm.model = $$c
                      }
                    },
                    _vm.handleChange,
                  ],
                  focus: function ($event) {
                    _vm.focus = true
                  },
                  blur: function ($event) {
                    _vm.focus = false
                  },
                },
              })
            : _c("input", {
                directives: [
                  {
                    name: "model",
                    rawName: "v-model",
                    value: _vm.model,
                    expression: "model",
                  },
                ],
                staticClass: "fks-checkbox__original",
                attrs: {
                  type: "checkbox",
                  "aria-hidden": _vm.indeterminate ? "true" : "false",
                  disabled: _vm.isReadonly || _vm.isDisabled,
                  name: _vm.name,
                },
                domProps: {
                  value: _vm.label,
                  checked: Array.isArray(_vm.model)
                    ? _vm._i(_vm.model, _vm.label) > -1
                    : _vm.model,
                },
                on: {
                  change: [
                    function ($event) {
                      var $$a = _vm.model,
                        $$el = $event.target,
                        $$c = $$el.checked ? true : false
                      if (Array.isArray($$a)) {
                        var $$v = _vm.label,
                          $$i = _vm._i($$a, $$v)
                        if ($$el.checked) {
                          $$i < 0 && (_vm.model = $$a.concat([$$v]))
                        } else {
                          $$i > -1 &&
                            (_vm.model = $$a
                              .slice(0, $$i)
                              .concat($$a.slice($$i + 1)))
                        }
                      } else {
                        _vm.model = $$c
                      }
                    },
                    _vm.handleChange,
                  ],
                  focus: function ($event) {
                    _vm.focus = true
                  },
                  blur: function ($event) {
                    _vm.focus = false
                  },
                },
              }),
        ]
      ),
      _vm.$slots.default || _vm.label
        ? _c(
            "span",
            { staticClass: "fks-checkbox__label" },
            [
              _vm._t("default"),
              !_vm.$slots.default ? [_vm._v(_vm._s(_vm.label))] : _vm._e(),
            ],
            2
          )
        : _vm._e(),
    ]
  )
}
var checkboxvue_type_template_id_42a868c5_staticRenderFns = []
checkboxvue_type_template_id_42a868c5_render._withStripped = true


// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=template&id=42a868c5&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var checkboxvue_type_script_lang_js_ = ({
  name: 'FksCheckbox',

  mixins: [emitter_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  componentName: 'FksCheckbox',

  data: function data() {
    return {
      vertical: false,
      selfModel: false,
      focus: false,
      isLimitExceeded: false
    };
  },


  computed: {
    model: {
      get: function get() {
        return this.isGroup ? this.store : this.value !== undefined ? this.value : this.selfModel;
      },
      set: function set(val) {
        if (this.isGroup) {
          this.isLimitExceeded = false;
          var isIncrease = val.length > this.model.length;
          var isDecrease = val.length < this.model.length;
          this._checkboxGroup.min !== undefined && val.length < this._checkboxGroup.min && !isIncrease && (this.isLimitExceeded = true);

          this._checkboxGroup.max !== undefined && val.length > this._checkboxGroup.max && !isDecrease && (this.isLimitExceeded = true);

          this.isLimitExceeded === false && this.dispatch('FksCheckboxGroup', 'input', [val]);
        } else {
          this.$emit('input', val);
          this.selfModel = val;
        }
      }
    },

    isChecked: function isChecked() {
      if ({}.toString.call(this.model) === '[object Boolean]') {
        return this.model;
      } else if (Array.isArray(this.model)) {
        return this.model.indexOf(this.label) > -1;
      } else if (this.model !== null && this.model !== undefined) {
        return this.model === this.trueLabel;
      }
    },
    isGroup: function isGroup() {
      var parent = this.$parent;
      while (parent) {
        if (parent.$options.componentName !== 'FksCheckboxGroup') {
          parent = parent.$parent;
        } else {
          this.vertical = parent._props.vertical;
          this._checkboxGroup = parent;
          return true;
        }
      }
      return false;
    },
    store: function store() {
      return this._checkboxGroup ? this._checkboxGroup.value : this.value;
    },


    /* used to make the isDisabled judgment under max/min props */
    isLimitDisabled: function isLimitDisabled() {
      var _checkboxGroup = this._checkboxGroup,
          max = _checkboxGroup.max,
          min = _checkboxGroup.min;

      return !!(max || min) && this.model.length >= max && !this.isChecked || this.model.length <= min && this.isChecked;
    },
    isDisabled: function isDisabled() {
      return this.isGroup ? this._checkboxGroup.disabled || this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.isLimitDisabled : this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    isReadonly: function isReadonly() {
      return this.isGroup ? this._checkboxGroup.readonly || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly || this.isLimitDisabled : this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    checkboxSize: function checkboxSize() {
      var temCheckboxSize = this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
      return this.isGroup ? this._checkboxGroup.checkboxGroupSize || temCheckboxSize : temCheckboxSize;
    }
  },

  props: {
    value: {},
    label: {},
    indeterminate: Boolean,
    disabled: Boolean,
    readonly: Boolean,
    checked: Boolean,
    name: String,
    trueLabel: [String, Number],
    falseLabel: [String, Number],
    id: String /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
    , controls: String /* 当indeterminate为真时，为controls提供相关连的checkbox的id，表明元素间的控制关系*/
    , border: Boolean,
    size: String
  },

  methods: {
    addToStore: function addToStore() {
      if (Array.isArray(this.model) && this.model.indexOf(this.label) === -1) {
        this.model.push(this.label);
      } else {
        this.model = this.trueLabel || true;
      }
    },
    handleChange: function handleChange(ev) {
      var _this = this;

      if (this.isLimitExceeded) return;
      var value = void 0;
      if (ev.target.checked) {
        value = this.trueLabel === undefined ? true : this.trueLabel;
      } else {
        value = this.falseLabel === undefined ? false : this.falseLabel;
      }
      this.$emit('change', value, ev);
      this.$nextTick(function () {
        if (_this.isGroup) {
          _this.dispatch('FksCheckboxGroup', 'change', [_this._checkboxGroup.value]);
        }
      });
    }
  },

  created: function created() {
    this.checked && this.addToStore();
  },
  mounted: function mounted() {
    // 为indeterminate元素 添加aria-controls 属性
    if (this.indeterminate) {
      this.$el.setAttribute('aria-controls', this.controls);
    }
  },


  watch: {
    value: function value(_value) {
      this.dispatch('FksFormItem', 'fks.form.change', _value);
    }
  }
});
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_checkboxvue_type_script_lang_js_ = (checkboxvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox.vue





/* normalize component */

var checkbox_component = normalizeComponent(
  src_checkboxvue_type_script_lang_js_,
  checkboxvue_type_template_id_42a868c5_render,
  checkboxvue_type_template_id_42a868c5_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_checkbox = (checkbox_component.exports);
// CONCATENATED MODULE: ./packages/checkbox/index.js


/* istanbul ignore next */
src_checkbox.install = function (Vue) {
  Vue.component(src_checkbox.name, src_checkbox);
};

/* harmony default export */ var packages_checkbox = (src_checkbox);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-button.vue?vue&type=template&id=2a27c904&
var checkbox_buttonvue_type_template_id_2a27c904_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    {
      staticClass: "fks-checkbox-button",
      class: [
        _vm.size ? "fks-checkbox-button--" + _vm.size : "",
        { "is-disabled": _vm.isDisabled },
        { "is-readonly": _vm.isReadonly },
        { "is-checked": _vm.isChecked },
        { "is-focus": _vm.focus },
      ],
      attrs: {
        role: "checkbox",
        "aria-checked": _vm.isChecked,
        "aria-disabled": _vm.isDisabled,
      },
    },
    [
      _vm.trueLabel || _vm.falseLabel
        ? _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.model,
                expression: "model",
              },
            ],
            staticClass: "fks-checkbox-button__original",
            attrs: {
              type: "checkbox",
              name: _vm.name,
              disabled: _vm.isReadonly || _vm.isDisabled,
              "true-value": _vm.trueLabel,
              "false-value": _vm.falseLabel,
            },
            domProps: {
              checked: Array.isArray(_vm.model)
                ? _vm._i(_vm.model, null) > -1
                : _vm._q(_vm.model, _vm.trueLabel),
            },
            on: {
              change: [
                function ($event) {
                  var $$a = _vm.model,
                    $$el = $event.target,
                    $$c = $$el.checked ? _vm.trueLabel : _vm.falseLabel
                  if (Array.isArray($$a)) {
                    var $$v = null,
                      $$i = _vm._i($$a, $$v)
                    if ($$el.checked) {
                      $$i < 0 && (_vm.model = $$a.concat([$$v]))
                    } else {
                      $$i > -1 &&
                        (_vm.model = $$a
                          .slice(0, $$i)
                          .concat($$a.slice($$i + 1)))
                    }
                  } else {
                    _vm.model = $$c
                  }
                },
                _vm.handleChange,
              ],
              focus: function ($event) {
                _vm.focus = true
              },
              blur: function ($event) {
                _vm.focus = false
              },
            },
          })
        : _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.model,
                expression: "model",
              },
            ],
            staticClass: "fks-checkbox-button__original",
            attrs: {
              type: "checkbox",
              name: _vm.name,
              disabled: _vm.isReadonly || _vm.isDisabled,
            },
            domProps: {
              value: _vm.label,
              checked: Array.isArray(_vm.model)
                ? _vm._i(_vm.model, _vm.label) > -1
                : _vm.model,
            },
            on: {
              change: [
                function ($event) {
                  var $$a = _vm.model,
                    $$el = $event.target,
                    $$c = $$el.checked ? true : false
                  if (Array.isArray($$a)) {
                    var $$v = _vm.label,
                      $$i = _vm._i($$a, $$v)
                    if ($$el.checked) {
                      $$i < 0 && (_vm.model = $$a.concat([$$v]))
                    } else {
                      $$i > -1 &&
                        (_vm.model = $$a
                          .slice(0, $$i)
                          .concat($$a.slice($$i + 1)))
                    }
                  } else {
                    _vm.model = $$c
                  }
                },
                _vm.handleChange,
              ],
              focus: function ($event) {
                _vm.focus = true
              },
              blur: function ($event) {
                _vm.focus = false
              },
            },
          }),
      _vm.$slots.default || _vm.label
        ? _c(
            "span",
            {
              staticClass: "fks-checkbox-button__inner",
              style: _vm.isChecked ? _vm.activeStyle : null,
            },
            [
              _vm._t("default", function () {
                return [_vm._v(_vm._s(_vm.label))]
              }),
            ],
            2
          )
        : _vm._e(),
    ]
  )
}
var checkbox_buttonvue_type_template_id_2a27c904_staticRenderFns = []
checkbox_buttonvue_type_template_id_2a27c904_render._withStripped = true


// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue?vue&type=template&id=2a27c904&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var checkbox_buttonvue_type_script_lang_js_ = ({
  name: 'FksCheckboxButton',

  mixins: [emitter_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  data: function data() {
    return {
      selfModel: false,
      focus: false,
      isLimitExceeded: false
    };
  },


  props: {
    value: {},
    label: {},
    disabled: Boolean,
    readonly: Boolean,
    checked: Boolean,
    name: String,
    trueLabel: [String, Number],
    falseLabel: [String, Number]
  },
  computed: {
    model: {
      get: function get() {
        return this._checkboxGroup ? this.store : this.value !== undefined ? this.value : this.selfModel;
      },
      set: function set(val) {
        if (this._checkboxGroup) {
          this.isLimitExceeded = false;
          this._checkboxGroup.min !== undefined && val.length < this._checkboxGroup.min && (this.isLimitExceeded = true);

          this._checkboxGroup.max !== undefined && val.length > this._checkboxGroup.max && (this.isLimitExceeded = true);

          this.isLimitExceeded === false && this.dispatch('FksCheckboxGroup', 'input', [val]);
        } else if (this.value !== undefined) {
          this.$emit('input', val);
        } else {
          this.selfModel = val;
        }
      }
    },

    isChecked: function isChecked() {
      if ({}.toString.call(this.model) === '[object Boolean]') {
        return this.model;
      } else if (Array.isArray(this.model)) {
        return this.model.indexOf(this.label) > -1;
      } else if (this.model !== null && this.model !== undefined) {
        return this.model === this.trueLabel;
      }
    },
    _checkboxGroup: function _checkboxGroup() {
      var parent = this.$parent;
      while (parent) {
        if (parent.$options.componentName !== 'FksCheckboxGroup') {
          parent = parent.$parent;
        } else {
          return parent;
        }
      }
      return false;
    },
    store: function store() {
      return this._checkboxGroup ? this._checkboxGroup.value : this.value;
    },
    activeStyle: function activeStyle() {
      return {
        backgroundColor: this._checkboxGroup.fill || '',
        borderColor: this._checkboxGroup.fill || '',
        color: this._checkboxGroup.textColor || '',
        'box-shadow': '-1px 0 0 0 ' + this._checkboxGroup.fill
      };
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    size: function size() {
      return this._checkboxGroup.checkboxGroupSize || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },


    /* used to make the isDisabled judgment under max/min props */
    isLimitDisabled: function isLimitDisabled() {
      var _checkboxGroup2 = this._checkboxGroup,
          max = _checkboxGroup2.max,
          min = _checkboxGroup2.min;

      return !!(max || min) && this.model.length >= max && !this.isChecked || this.model.length <= min && this.isChecked;
    },
    isDisabled: function isDisabled() {
      return this._checkboxGroup ? this._checkboxGroup.disabled || this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.isLimitDisabled : this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    isReadonly: function isReadonly() {
      return this.isGroup ? this._checkboxGroup.readonly || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly || this.isLimitDisabled : this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },
  methods: {
    addToStore: function addToStore() {
      if (Array.isArray(this.model) && this.model.indexOf(this.label) === -1) {
        this.model.push(this.label);
      } else {
        this.model = this.trueLabel || true;
      }
    },
    handleChange: function handleChange(ev) {
      var _this = this;

      if (this.isLimitExceeded) return;
      var value = void 0;
      if (ev.target.checked) {
        value = this.trueLabel === undefined ? true : this.trueLabel;
      } else {
        value = this.falseLabel === undefined ? false : this.falseLabel;
      }
      this.$emit('change', value, ev);
      this.$nextTick(function () {
        if (_this._checkboxGroup) {
          _this.dispatch('FksCheckboxGroup', 'change', [_this._checkboxGroup.value]);
        }
      });
    }
  },

  created: function created() {
    this.checked && this.addToStore();
  }
});
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_checkbox_buttonvue_type_script_lang_js_ = (checkbox_buttonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-button.vue





/* normalize component */

var checkbox_button_component = normalizeComponent(
  src_checkbox_buttonvue_type_script_lang_js_,
  checkbox_buttonvue_type_template_id_2a27c904_render,
  checkbox_buttonvue_type_template_id_2a27c904_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var checkbox_button = (checkbox_button_component.exports);
// CONCATENATED MODULE: ./packages/checkbox-button/index.js


/* istanbul ignore next */
checkbox_button.install = function (Vue) {
  Vue.component(checkbox_button.name, checkbox_button);
};

/* harmony default export */ var packages_checkbox_button = (checkbox_button);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=ced1a9e0&
var checkbox_groupvue_type_template_id_ced1a9e0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-checkbox-group",
      attrs: { role: "group", "aria-label": "checkbox-group" },
    },
    [_vm._t("default")],
    2
  )
}
var checkbox_groupvue_type_template_id_ced1a9e0_staticRenderFns = []
checkbox_groupvue_type_template_id_ced1a9e0_render._withStripped = true


// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=template&id=ced1a9e0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//



/* harmony default export */ var checkbox_groupvue_type_script_lang_js_ = ({
  name: 'FksCheckboxGroup',

  componentName: 'FksCheckboxGroup',

  mixins: [emitter_default.a],

  inject: {
    fksFormItem: {
      default: ''
    }
  },

  props: {
    vertical: {
      type: Boolean,
      default: false
    },
    value: {},
    disabled: Boolean,
    readonly: Boolean,
    min: Number,
    max: Number,
    size: String,
    fill: String,
    textColor: String
  },

  computed: {
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    checkboxGroupSize: function checkboxGroupSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    }
  },

  watch: {
    value: function value(_value) {
      this.dispatch('FksFormItem', 'fks.form.change', [_value]);
    }
  }
});
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_checkbox_groupvue_type_script_lang_js_ = (checkbox_groupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/checkbox/src/checkbox-group.vue





/* normalize component */

var checkbox_group_component = normalizeComponent(
  src_checkbox_groupvue_type_script_lang_js_,
  checkbox_groupvue_type_template_id_ced1a9e0_render,
  checkbox_groupvue_type_template_id_ced1a9e0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var checkbox_group = (checkbox_group_component.exports);
// CONCATENATED MODULE: ./packages/checkbox-group/index.js


/* istanbul ignore next */
checkbox_group.install = function (Vue) {
  Vue.component(checkbox_group.name, checkbox_group);
};

/* harmony default export */ var packages_checkbox_group = (checkbox_group);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/switch/src/component.vue?vue&type=template&id=4dc74776&
var componentvue_type_template_id_4dc74776_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-switch",
      class: {
        "is-disabled": _vm.switchDisabled,
        "is-readonly": _vm.switchReadonly,
        "is-checked": _vm.checked,
      },
      attrs: {
        role: "switch",
        "aria-checked": _vm.checked,
        "aria-disabled": _vm.switchDisabled || _vm.switchReadonly,
      },
      on: {
        click: function ($event) {
          $event.preventDefault()
          return _vm.switchValue.apply(null, arguments)
        },
      },
    },
    [
      _c("input", {
        ref: "input",
        staticClass: "fks-switch__input",
        attrs: {
          type: "checkbox",
          id: _vm.id,
          name: _vm.name,
          "true-value": _vm.activeValue,
          "false-value": _vm.inactiveValue,
          disabled: _vm.switchDisabled || _vm.switchReadonly,
          readonly: _vm.switchReadonly,
        },
        on: {
          change: _vm.handleChange,
          keydown: function ($event) {
            if (
              !$event.type.indexOf("key") &&
              _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
            ) {
              return null
            }
            return _vm.switchValue.apply(null, arguments)
          },
        },
      }),
      _vm.inactiveIconClass || _vm.inactiveText
        ? _c(
            "span",
            {
              class: [
                "fks-switch__label",
                "fks-switch__label--left",
                !_vm.checked ? "is-active" : "",
              ],
            },
            [
              _vm.inactiveIconClass
                ? _c("i", { class: [_vm.inactiveIconClass] })
                : _vm._e(),
              !_vm.inactiveIconClass && _vm.inactiveText
                ? _c("span", { attrs: { "aria-hidden": _vm.checked } }, [
                    _vm._v(_vm._s(_vm.inactiveText)),
                  ])
                : _vm._e(),
            ]
          )
        : _vm._e(),
      _c("span", {
        ref: "core",
        staticClass: "fks-switch__core",
        style: { width: _vm.coreWidth + "px" },
      }),
      _vm.activeIconClass || _vm.activeText
        ? _c(
            "span",
            {
              class: [
                "fks-switch__label",
                "fks-switch__label--right",
                _vm.checked ? "is-active" : "",
              ],
            },
            [
              _vm.activeIconClass
                ? _c("i", { class: [_vm.activeIconClass] })
                : _vm._e(),
              !_vm.activeIconClass && _vm.activeText
                ? _c("span", { attrs: { "aria-hidden": !_vm.checked } }, [
                    _vm._v(_vm._s(_vm.activeText)),
                  ])
                : _vm._e(),
            ]
          )
        : _vm._e(),
    ]
  )
}
var componentvue_type_template_id_4dc74776_staticRenderFns = []
componentvue_type_template_id_4dc74776_render._withStripped = true


// CONCATENATED MODULE: ./packages/switch/src/component.vue?vue&type=template&id=4dc74776&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/switch/src/component.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var switch_src_componentvue_type_script_lang_js_ = ({
  name: 'FksSwitch',
  mixins: [focus_default()('input'), migrating_default.a, emitter_default.a],
  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },
  props: {
    value: {
      type: [Boolean, String, Number],
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    readonly: {
      type: Boolean,
      default: false
    },
    width: {
      type: Number,
      default: 40
    },
    activeIconClass: {
      type: String,
      default: ''
    },
    inactiveIconClass: {
      type: String,
      default: ''
    },
    activeText: String,
    inactiveText: String,
    activeColor: {
      type: String,
      default: ''
    },
    inactiveColor: {
      type: String,
      default: ''
    },
    activeValue: {
      type: [Boolean, String, Number],
      default: true
    },
    inactiveValue: {
      type: [Boolean, String, Number],
      default: false
    },
    name: {
      type: String,
      default: ''
    },
    validateEvent: {
      type: Boolean,
      default: true
    },
    id: String
  },
  data: function data() {
    return {
      coreWidth: this.width
    };
  },
  created: function created() {
    if (!~[this.activeValue, this.inactiveValue].indexOf(this.value)) {
      this.$emit('input', this.inactiveValue);
    }
  },

  computed: {
    checked: function checked() {
      return this.value === this.activeValue;
    },
    switchDisabled: function switchDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    switchReadonly: function switchReadonly() {
      return this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },
  watch: {
    checked: function checked() {
      this.$refs.input.checked = this.checked;
      if (this.activeColor || this.inactiveColor) {
        this.setBackgroundColor();
      }
      if (this.validateEvent) {
        this.dispatch('FksFormItem', 'fks.form.change', [this.value]);
      }
    }
  },
  methods: {
    handleChange: function handleChange(event) {
      var _this = this;

      var val = this.checked ? this.inactiveValue : this.activeValue;
      this.$emit('input', val);
      this.$emit('change', val);
      this.$nextTick(function () {
        // set input's checked property
        // in case parent refuses to change component's value
        _this.$refs.input.checked = _this.checked;
      });
    },
    setBackgroundColor: function setBackgroundColor() {
      var newColor = this.checked ? this.activeColor : this.inactiveColor;
      this.$refs.core.style.borderColor = newColor;
      this.$refs.core.style.backgroundColor = newColor;
    },
    switchValue: function switchValue() {
      !this.switchDisabled && !this.switchReadonly && this.handleChange();
    },
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'on-color': 'on-color is renamed to active-color.',
          'off-color': 'off-color is renamed to inactive-color.',
          'on-text': 'on-text is renamed to active-text.',
          'off-text': 'off-text is renamed to inactive-text.',
          'on-value': 'on-value is renamed to active-value.',
          'off-value': 'off-value is renamed to inactive-value.',
          'on-icon-class': 'on-icon-class is renamed to active-icon-class.',
          'off-icon-class': 'off-icon-class is renamed to inactive-icon-class.'
        }
      };
    }
  },
  mounted: function mounted() {
    /* istanbul ignore if */
    this.coreWidth = this.width || 40;
    if (this.activeColor || this.inactiveColor) {
      this.setBackgroundColor();
    }
    this.$refs.input.checked = this.checked;
  }
});
// CONCATENATED MODULE: ./packages/switch/src/component.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_switch_src_componentvue_type_script_lang_js_ = (switch_src_componentvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/switch/src/component.vue





/* normalize component */

var src_component_component = normalizeComponent(
  packages_switch_src_componentvue_type_script_lang_js_,
  componentvue_type_template_id_4dc74776_render,
  componentvue_type_template_id_4dc74776_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var switch_src_component = (src_component_component.exports);
// CONCATENATED MODULE: ./packages/switch/index.js


/* istanbul ignore next */
switch_src_component.install = function (Vue) {
  Vue.component(switch_src_component.name, switch_src_component);
};

/* harmony default export */ var packages_switch = (switch_src_component);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=template&id=0c82f141&
var selectvue_type_template_id_0c82f141_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "outside",
          rawName: "v-outside",
          value: _vm.handleClose,
          expression: "handleClose",
        },
      ],
      staticClass: "fks-select",
      class: [_vm.selectSize ? "fks-select--" + _vm.selectSize : ""],
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.toggleMenu.apply(null, arguments)
        },
      },
    },
    [
      _vm.multiple
        ? _c(
            "div",
            {
              ref: "tags",
              staticClass: "fks-select__tags",
              style: { "max-width": _vm.inputWidth - 32 + "px", width: "100%" },
            },
            [
              _vm.collapseTags && _vm.selected.length
                ? _c(
                    "span",
                    [
                      _c(
                        "fks-tag",
                        {
                          attrs: {
                            closable: _vm.isCloseable,
                            size: _vm.collapseTagSize,
                            hit: _vm.selected[0].hitState,
                            type: "info",
                            "disable-transitions": "",
                          },
                          on: {
                            close: function ($event) {
                              return _vm.deleteTag($event, _vm.selected[0])
                            },
                          },
                        },
                        [
                          _c("span", { staticClass: "fks-select__tags-text" }, [
                            _vm._v(_vm._s(_vm.selected[0].currentLabel)),
                          ]),
                        ]
                      ),
                      _vm.selected.length > 1
                        ? _c(
                            "fks-tag",
                            {
                              attrs: {
                                closable: false,
                                size: _vm.collapseTagSize,
                                type: "info",
                                "disable-transitions": "",
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v("+ " + _vm._s(_vm.selected.length - 1))]
                              ),
                            ]
                          )
                        : _vm._e(),
                    ],
                    1
                  )
                : _vm._e(),
              !_vm.collapseTags
                ? _c(
                    "transition-group",
                    { on: { "after-leave": _vm.resetInputHeight } },
                    _vm._l(_vm.selected, function (item) {
                      return _c(
                        "fks-tag",
                        {
                          key: _vm.getValueKey(item),
                          attrs: {
                            closable: _vm.isCloseable,
                            size: _vm.collapseTagSize,
                            hit: item.hitState,
                            type: "info",
                            "disable-transitions": "",
                          },
                          on: {
                            close: function ($event) {
                              return _vm.deleteTag($event, item)
                            },
                          },
                        },
                        [
                          _c("span", { staticClass: "fks-select__tags-text" }, [
                            _vm._v(_vm._s(item.currentLabel)),
                          ]),
                        ]
                      )
                    }),
                    1
                  )
                : _vm._e(),
              _vm.filterable
                ? _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.query,
                        expression: "query",
                      },
                    ],
                    ref: "input",
                    staticClass: "fks-select__input",
                    class: [_vm.selectSize ? "is-" + _vm.selectSize : ""],
                    style: {
                      "flex-grow": "1",
                      width: _vm.inputLength / (_vm.inputWidth - 32) + "%",
                      "max-width": _vm.inputWidth - 42 + "px",
                    },
                    attrs: {
                      type: "text",
                      disabled: _vm.selectDisabled,
                      readonly: _vm.selectReadonly,
                      autocomplete: _vm.autoComplete || _vm.autocomplete,
                    },
                    domProps: { value: _vm.query },
                    on: {
                      focus: _vm.handleFocus,
                      blur: function ($event) {
                        _vm.softFocus = false
                      },
                      keyup: _vm.managePlaceholder,
                      keydown: [
                        _vm.resetInputState,
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "down", 40, $event.key, [
                              "Down",
                              "ArrowDown",
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("next")
                        },
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "up", 38, $event.key, [
                              "Up",
                              "ArrowUp",
                            ])
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.navigateOptions("prev")
                        },
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          $event.preventDefault()
                          return _vm.selectOption.apply(null, arguments)
                        },
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "esc", 27, $event.key, [
                              "Esc",
                              "Escape",
                            ])
                          ) {
                            return null
                          }
                          $event.stopPropagation()
                          $event.preventDefault()
                          _vm.visible = false
                        },
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "delete",
                              [8, 46],
                              $event.key,
                              ["Backspace", "Delete", "Del"]
                            )
                          ) {
                            return null
                          }
                          return _vm.deletePrevTag.apply(null, arguments)
                        },
                        function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
                          ) {
                            return null
                          }
                          _vm.visible = false
                        },
                      ],
                      compositionstart: _vm.handleComposition,
                      compositionupdate: _vm.handleComposition,
                      compositionend: _vm.handleComposition,
                      input: [
                        function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.query = $event.target.value
                        },
                        _vm.debouncedQueryChange,
                      ],
                    },
                  })
                : _vm._e(),
            ],
            1
          )
        : _vm._e(),
      _c(
        "fks-input",
        {
          ref: "reference",
          class: {
            "is-focus": _vm.visible,
            "is-multiple": _vm.multiple && !_vm.filterable,
          },
          attrs: {
            type: "text",
            placeholder: _vm.currentPlaceholder,
            name: _vm.name,
            id: _vm.id,
            autocomplete: _vm.autoComplete || _vm.autocomplete,
            size: _vm.selectSize,
            disabled: _vm.selectDisabled,
            readonly: _vm.selectReadonly,
            "validate-event": false,
            tabindex: _vm.multiple && _vm.filterable ? "-1" : null,
          },
          on: { focus: _vm.handleFocus, blur: _vm.handleBlur },
          nativeOn: {
            keyup: function ($event) {
              return _vm.debouncedOnInputChange.apply(null, arguments)
            },
            keydown: [
              function ($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "down", 40, $event.key, [
                    "Down",
                    "ArrowDown",
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("next")
              },
              function ($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "up", 38, $event.key, [
                    "Up",
                    "ArrowUp",
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                return _vm.navigateOptions("prev")
              },
              function ($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                ) {
                  return null
                }
                $event.preventDefault()
                return _vm.selectOption.apply(null, arguments)
              },
              function ($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "esc", 27, $event.key, [
                    "Esc",
                    "Escape",
                  ])
                ) {
                  return null
                }
                $event.stopPropagation()
                $event.preventDefault()
                _vm.visible = false
              },
              function ($event) {
                if (
                  !$event.type.indexOf("key") &&
                  _vm._k($event.keyCode, "tab", 9, $event.key, "Tab")
                ) {
                  return null
                }
                _vm.visible = false
              },
            ],
            paste: function ($event) {
              return _vm.debouncedOnInputChange.apply(null, arguments)
            },
            mouseenter: function ($event) {
              _vm.inputHovering = true
            },
            mouseleave: function ($event) {
              _vm.inputHovering = false
            },
          },
          model: {
            value: _vm.selectedLabel,
            callback: function ($$v) {
              _vm.selectedLabel = $$v
            },
            expression: "selectedLabel",
          },
        },
        [
          _vm.$slots.prefix
            ? _c("template", { slot: "prefix" }, [_vm._t("prefix")], 2)
            : _vm._e(),
          _c("template", { slot: "suffix" }, [
            _c("i", {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: !_vm.showClose && !_vm.readonlyToggle,
                  expression: "!showClose && !readonlyToggle",
                },
              ],
              class: [
                "fks-select__caret",
                "fks-input__icon",
                "fks-icon-" + _vm.iconClass,
              ],
            }),
            _vm.showClose && !_vm.readonlyToggle
              ? _c("i", {
                  staticClass:
                    "fks-select__caret fks-input__icon fks-icon-circle-close",
                  on: { click: _vm.handleClearClick },
                })
              : _vm._e(),
          ]),
        ],
        2
      ),
      _c(
        "transition",
        {
          attrs: { name: "fks-zoom-in-top" },
          on: {
            "before-enter": _vm.handleMenuEnter,
            "after-leave": _vm.doDestroy,
          },
        },
        [
          _c(
            "fks-select-menu",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.visible && _vm.emptyText !== false,
                  expression: "visible && emptyText !== false",
                },
              ],
              ref: "popper",
              attrs: { "append-to-body": _vm.popperAppendToBody },
            },
            [
              _c(
                "fks-scrollbar",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.options.length > 0 && !_vm.loading,
                      expression: "options.length > 0 && !loading",
                    },
                  ],
                  ref: "scrollbar",
                  class: {
                    "is-empty":
                      !_vm.allowCreate &&
                      _vm.query &&
                      _vm.filteredOptionsCount === 0,
                  },
                  attrs: {
                    tag: "ul",
                    "wrap-class": "fks-select-dropdown__wrap",
                    "view-class": "fks-select-dropdown__list",
                  },
                },
                [
                  _vm.showNewOption
                    ? _c("fks-option", {
                        attrs: { value: _vm.query, created: "" },
                      })
                    : _vm._e(),
                  _vm._t("default"),
                ],
                2
              ),
              _vm.emptyText &&
              (!_vm.allowCreate ||
                _vm.loading ||
                (_vm.allowCreate && _vm.options.length === 0))
                ? [
                    _vm.$slots.empty
                      ? _vm._t("empty")
                      : _c("p", { staticClass: "fks-select-dropdown__empty" }, [
                          _vm._v(_vm._s(_vm.emptyText)),
                        ]),
                  ]
                : _vm._e(),
            ],
            2
          ),
        ],
        1
      ),
    ],
    1
  )
}
var selectvue_type_template_id_0c82f141_staticRenderFns = []
selectvue_type_template_id_0c82f141_render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=template&id=0c82f141&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=template&id=f920c4a0&
var select_dropdownvue_type_template_id_f920c4a0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-select-dropdown fks-popper",
      class: [{ "is-multiple": _vm.$parent.multiple }, _vm.popperClass],
      style: { minWidth: _vm.minWidth },
    },
    [_vm._t("default")],
    2
  )
}
var select_dropdownvue_type_template_id_f920c4a0_staticRenderFns = []
select_dropdownvue_type_template_id_f920c4a0_render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=template&id=f920c4a0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var select_dropdownvue_type_script_lang_js_ = ({
  name: 'FksSelectDropdown',

  componentName: 'FksSelectDropdown',

  mixins: [vue_popper_default.a],

  props: {
    placement: {
      default: 'bottom-start'
    },

    boundariesPadding: {
      default: 0
    },

    popperOptions: {
      default: function _default() {
        return {
          gpuAcceleration: false
        };
      }
    },

    visibleArrow: {
      default: false
    },

    appendToBody: {
      type: Boolean,
      default: true
    }
  },

  data: function data() {
    return {
      minWidth: ''
    };
  },


  computed: {
    popperClass: function popperClass() {
      return this.$parent.popperClass;
    }
  },

  watch: {
    '$parent.inputWidth': function $parentInputWidth() {
      this.minWidth = this.$parent.$el.getBoundingClientRect().width + 'px';
    }
  },

  mounted: function mounted() {
    var _this = this;

    this.referenceElm = this.$parent.$refs.reference.$el;
    this.$parent.popperElm = this.popperElm = this.$el;
    this.$on('updatePopper', function () {
      if (_this.$parent.visible) _this.updatePopper();
    });
    this.$on('destroyPopper', this.destroyPopper);
  }
});
// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_select_dropdownvue_type_script_lang_js_ = (select_dropdownvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/select/src/select-dropdown.vue





/* normalize component */

var select_dropdown_component = normalizeComponent(
  src_select_dropdownvue_type_script_lang_js_,
  select_dropdownvue_type_template_id_f920c4a0_render,
  select_dropdownvue_type_template_id_f920c4a0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var select_dropdown = (select_dropdown_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=template&id=3ce2fad8&
var optionvue_type_template_id_3ce2fad8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "li",
    {
      directives: [
        {
          name: "show",
          rawName: "v-show",
          value: _vm.visible,
          expression: "visible",
        },
      ],
      staticClass: "fks-select-dropdown__item",
      class: {
        selected: _vm.itemSelected,
        "is-disabled": _vm.disabled || _vm.groupDisabled || _vm.limitReached,
        hover: _vm.hover,
      },
      on: {
        mouseenter: _vm.hoverItem,
        click: function ($event) {
          $event.stopPropagation()
          return _vm.selectOptionClick.apply(null, arguments)
        },
        mousedown: _vm.handleMouseDown,
      },
    },
    [
      _vm._t("default", function () {
        return [_c("span", [_vm._v(_vm._s(_vm.currentLabel))])]
      }),
    ],
    2
  )
}
var optionvue_type_template_id_3ce2fad8_staticRenderFns = []
optionvue_type_template_id_3ce2fad8_render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=template&id=3ce2fad8&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option.vue?vue&type=script&lang=js&
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var optionvue_type_script_lang_js_ = ({
  mixins: [emitter_default.a],

  name: 'FksOption',

  componentName: 'FksOption',

  inject: ['select'],

  props: {
    value: {
      required: true
    },
    label: [String, Number],
    created: Boolean,
    disabled: {
      type: Boolean,
      default: false
    }
  },

  data: function data() {
    return {
      index: -1,
      groupDisabled: false,
      visible: true,
      hitState: false,
      hover: false
    };
  },


  computed: {
    isObject: function isObject() {
      return Object.prototype.toString.call(this.value).toLowerCase() === '[object object]';
    },
    currentLabel: function currentLabel() {
      return this.label || (this.isObject ? '' : this.value);
    },
    currentValue: function currentValue() {
      return this.value || this.label || '';
    },
    itemSelected: function itemSelected() {
      if (!this.select.multiple) {
        return this.isEqual(this.value, this.select.value);
      } else {
        return this.contains(this.select.value, this.value);
      }
    },
    limitReached: function limitReached() {
      if (this.select.multiple) {
        return !this.itemSelected && (this.select.value || []).length >= this.select.multipleLimit && this.select.multipleLimit > 0;
      } else {
        return false;
      }
    }
  },

  watch: {
    currentLabel: function currentLabel() {
      if (!this.created && !this.select.remote) this.dispatch('FksSelect', 'setSelected');
    },
    value: function value(val, oldVal) {
      var _select = this.select,
          remote = _select.remote,
          valueKey = _select.valueKey;

      if (!this.created && !remote) {
        if (valueKey && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (typeof oldVal === 'undefined' ? 'undefined' : _typeof(oldVal)) === 'object' && val[valueKey] === oldVal[valueKey]) {
          return;
        }
        this.dispatch('FksSelect', 'setSelected');
      }
    }
  },

  methods: {
    isEqual: function isEqual(a, b) {
      if (!this.isObject) {
        return a === b;
      } else {
        var valueKey = this.select.valueKey;
        return Object(util_["getValueByPath"])(a, valueKey) === Object(util_["getValueByPath"])(b, valueKey);
      }
    },
    contains: function contains() {
      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var target = arguments[1];

      if (!this.isObject) {
        return arr && arr.indexOf(target) > -1;
      } else {
        var valueKey = this.select.valueKey;
        return arr && arr.some(function (item) {
          return Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(target, valueKey);
        });
      }
    },
    handleGroupDisabled: function handleGroupDisabled(val) {
      this.groupDisabled = val;
    },
    handleMouseDown: function handleMouseDown() {
      var _this = this;

      setTimeout(function () {
        _this.dispatch('FksSelect', 'handleFocusShow');
      }, 100);
    },
    hoverItem: function hoverItem() {
      this.dispatch('FksSelect', 'handleFocusShow');
      if (!this.disabled && !this.groupDisabled) {
        this.select.hoverIndex = this.select.options.indexOf(this);
      }
    },
    selectOptionClick: function selectOptionClick() {
      if (this.disabled !== true && this.groupDisabled !== true) {
        this.dispatch('FksSelect', 'handleOptionClick', [this, true]);
      }
    },
    queryChange: function queryChange(query) {
      this.visible = new RegExp(Object(util_["escapeRegexpString"])(query), 'i').test(this.currentLabel) || this.created;
      if (!this.visible) {
        this.select.filteredOptionsCount--;
      }
    }
  },

  created: function created() {
    this.select.options.push(this);
    this.select.cachedOptions.push(this);
    this.select.optionsCount++;
    this.select.filteredOptionsCount++;

    this.$on('queryChange', this.queryChange);
    this.$on('handleGroupDisabled', this.handleGroupDisabled);
  },
  beforeDestroy: function beforeDestroy() {
    var _select2 = this.select,
        selected = _select2.selected,
        multiple = _select2.multiple;

    var selectedOptions = multiple ? selected : [selected];
    var index = this.select.cachedOptions.indexOf(this);
    var selectedIndex = selectedOptions.indexOf(this);

    // if option is not selected, remove it from cache
    if (index > -1 && selectedIndex < 0) {
      this.select.cachedOptions.splice(index, 1);
    }
    this.select.onOptionDestroy(this.select.options.indexOf(this));
  }
});
// CONCATENATED MODULE: ./packages/select/src/option.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_optionvue_type_script_lang_js_ = (optionvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/select/src/option.vue





/* normalize component */

var option_component = normalizeComponent(
  src_optionvue_type_script_lang_js_,
  optionvue_type_template_id_3ce2fad8_render,
  optionvue_type_template_id_3ce2fad8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_option = (option_component.exports);
// EXTERNAL MODULE: external "fawkes-lib/lib/tag"
var tag_ = __webpack_require__(33);
var tag_default = /*#__PURE__*/__webpack_require__.n(tag_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/outside"
var outside_ = __webpack_require__(40);

// CONCATENATED MODULE: ./packages/select/src/outside.js
/*
 * @Author: gao_m3
 * @Date: 2021-05-18 16:25:00
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-05-21 15:49:17
 * @Descripttion:
 */

/* harmony default export */ var outside = ({
    bind: function bind(el, binding) {
        Object(outside_["bind"])(el, binding);
    },
    unbind: function unbind(el, binding) {
        Object(outside_["unbind"])(el);
    }
});
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/resize-event"
var resize_event_ = __webpack_require__(9);

// EXTERNAL MODULE: external "fawkes-lib/lib/locale"
var lib_locale_ = __webpack_require__(11);
var lib_locale_default = /*#__PURE__*/__webpack_require__.n(lib_locale_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/scroll-into-view"
var scroll_into_view_ = __webpack_require__(30);
var scroll_into_view_default = /*#__PURE__*/__webpack_require__.n(scroll_into_view_);

// CONCATENATED MODULE: ./packages/select/src/navigation-mixin.js
/* harmony default export */ var navigation_mixin = ({
  data: function data() {
    return {
      hoverOption: -1
    };
  },


  computed: {
    optionsAllDisabled: function optionsAllDisabled() {
      return this.options.filter(function (option) {
        return option.visible;
      }).every(function (option) {
        return option.disabled;
      });
    }
  },

  watch: {
    hoverIndex: function hoverIndex(val) {
      var _this = this;

      if (typeof val === 'number' && val > -1) {
        this.hoverOption = this.options[val] || {};
      }
      this.options.forEach(function (option) {
        option.hover = _this.hoverOption === option;
      });
    }
  },

  methods: {
    navigateOptions: function navigateOptions(direction) {
      var _this2 = this;

      if (!this.visible) {
        this.visible = true;
        return;
      }
      if (this.options.length === 0 || this.filteredOptionsCount === 0) return;
      if (!this.optionsAllDisabled) {
        if (direction === 'next') {
          this.hoverIndex++;
          if (this.hoverIndex === this.options.length) {
            this.hoverIndex = 0;
          }
        } else if (direction === 'prev') {
          this.hoverIndex--;
          if (this.hoverIndex < 0) {
            this.hoverIndex = this.options.length - 1;
          }
        }
        var option = this.options[this.hoverIndex];
        if (option.disabled === true || option.groupDisabled === true || !option.visible) {
          this.navigateOptions(direction);
        }
        this.$nextTick(function () {
          return _this2.scrollToOption(_this2.hoverOption);
        });
      }
    }
  }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




















/* harmony default export */ var selectvue_type_script_lang_js_ = ({
  mixins: [emitter_default.a, locale_default.a, focus_default()('reference'), navigation_mixin],

  name: 'FksSelect',

  componentName: 'FksSelect',

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  provide: function provide() {
    return {
      select: this
    };
  },


  computed: {
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    isCloseable: function isCloseable() {
      if (this.selectDisabled || this.readonlyToggle) return false;
      if (this.multiple) return true;
      return false;
    },
    showClose: function showClose() {
      var hasValue = this.multiple ? Array.isArray(this.value) && this.value.length > 0 : this.value !== undefined && this.value !== null && this.value !== '';
      var criteria = this.clearable && !this.selectDisabled && (!this.selectReadonly || this.clearable) && // clearable时，可展示close
      this.inputHovering && hasValue;
      return criteria;
    },
    iconClass: function iconClass() {
      return this.remote && this.filterable ? '' : this.visible ? 'arrow-up is-reverse' : 'arrow-up';
    },
    debounce: function debounce() {
      return this.remote ? 300 : 0;
    },
    emptyText: function emptyText() {
      if (this.loading) {
        return this.loadingText || this.t('fks.select.loading');
      } else {
        if (this.remote && this.query === '' && this.options.length === 0) return false;
        if (this.filterable && this.query && this.options.length > 0 && this.filteredOptionsCount === 0) {
          return this.noMatchText || this.t('fks.select.noMatch');
        }
        if (this.options.length === 0) {
          return this.noDataText || this.t('fks.select.noData');
        }
      }
      return null;
    },
    showNewOption: function showNewOption() {
      var _this = this;

      var hasExistingOption = this.options.filter(function (option) {
        return !option.created;
      }).some(function (option) {
        return option.currentLabel === _this.query;
      });
      return this.filterable && this.allowCreate && this.query !== '' && !hasExistingOption;
    },
    selectReadonly: function selectReadonly() {
      if (this.readonlyToggle || !Object(util_["isIE"])() && !Object(util_["isEdge"])() && !this.visible) {
        return true;
      }
      // 显示 close ，readonly
      if (this.filterable || this.multiple) {
        return false;
      }
      return true;
    },
    selectSize: function selectSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    selectDisabled: function selectDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    readonlyToggle: function readonlyToggle() {
      return (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly || this.readonly;
    },
    collapseTagSize: function collapseTagSize() {
      return ['small', 'mini'].indexOf(this.selectSize) > -1 ? 'mini' : 'small';
    }
  },

  components: {
    FksInput: input_default.a,
    FksSelectMenu: select_dropdown,
    FksOption: src_option,
    FksTag: tag_default.a,
    FksScrollbar: scrollbar_default.a
  },

  directives: { Clickoutside: clickoutside_default.a, outside: outside },

  props: {
    name: String,
    id: String,
    value: {
      required: true
    },
    autocomplete: {
      type: String,
      default: 'off'
    },
    /** @Deprecated in next major version */
    autoComplete: {
      type: String,
      validator: function validator(val) {
         false && false;
        return true;
      }
    },
    automaticDropdown: Boolean,
    size: String,
    disabled: Boolean,
    readonly: {
      type: Boolean,
      default: false
    },
    clearable: Boolean,
    filterable: Boolean,
    allowCreate: Boolean,
    loading: Boolean,
    popperClass: String,
    remote: Boolean,
    loadingText: String,
    noMatchText: String,
    noDataText: String,
    remoteMethod: Function,
    filterMethod: Function,
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    placeholder: {
      type: String,
      default: function _default() {
        return Object(lib_locale_["t"])('fks.select.placeholder');
      }
    },
    defaultFirstOption: Boolean,
    reserveKeyword: Boolean,
    valueKey: {
      type: String,
      default: 'value'
    },
    collapseTags: Boolean,
    popperAppendToBody: {
      type: Boolean,
      default: true
    }
  },

  data: function data() {
    return {
      optionFlag: false,
      count: 0,
      options: [],
      cachedOptions: [],
      createdLabel: null,
      createdSelected: false,
      selected: this.multiple ? [] : {},
      inputLength: 20,
      inputWidth: 0,
      initialInputHeight: 0,
      cachedPlaceHolder: '',
      optionsCount: 0,
      filteredOptionsCount: 0,
      visible: false,
      softFocus: false,
      selectedLabel: '',
      hoverIndex: -1,
      query: '',
      previousQuery: null,
      inputHovering: false,
      currentPlaceholder: '',
      menuVisibleOnFocus: false,
      isOnComposition: false,
      isSilentBlur: false
    };
  },


  watch: {
    selectDisabled: function selectDisabled() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.resetInputHeight();
      });
    },
    placeholder: function placeholder(val) {
      this.cachedPlaceHolder = this.currentPlaceholder = val;
    },
    value: function value(val, oldVal) {
      if (this.multiple) {
        this.resetInputHeight();
        if (val && val.length > 0 || this.$refs.input && this.query !== '') {
          this.currentPlaceholder = '';
        } else {
          this.currentPlaceholder = this.cachedPlaceHolder;
        }
        if (this.filterable && !this.reserveKeyword) {
          this.query = '';
          this.handleQueryChange(this.query);
        }
      }
      this.setSelected();
      if (this.filterable && !this.multiple) {
        this.inputLength = 20;
      }
      if (!Object(util_["valueEquals"])(val, oldVal)) {
        this.dispatch('FksFormItem', 'fks.form.change', val);
      }
    },
    visible: function visible(val) {
      var _this3 = this;

      if (!val) {
        this.broadcast('FksSelectDropdown', 'destroyPopper');
        if (this.$refs.input) {
          this.$refs.input.blur();
        }
        this.query = '';
        this.previousQuery = null;
        this.selectedLabel = '';
        this.inputLength = 20;
        this.menuVisibleOnFocus = false;
        this.resetHoverIndex();
        this.$nextTick(function () {
          if (_this3.$refs.input && _this3.$refs.input.value === '' && _this3.selected.length === 0) {
            _this3.currentPlaceholder = _this3.cachedPlaceHolder;
          }
        });
        if (!this.multiple) {
          if (this.selected) {
            if (this.filterable && this.allowCreate && this.createdSelected && this.createdLabel) {
              this.selectedLabel = this.createdLabel;
            } else {
              this.selectedLabel = this.selected.currentLabel;
            }
            if (this.filterable) this.query = this.selectedLabel;
          }

          if (this.filterable) {
            this.currentPlaceholder = this.cachedPlaceHolder;
          }
        }
      } else {
        this.broadcast('FksSelectDropdown', 'updatePopper');
        if (this.filterable) {
          this.query = this.remote ? '' : this.selectedLabel;
          this.handleQueryChange(this.query);
          if (this.multiple) {
            this.$refs.input.focus();
          } else {
            if (!this.remote) {
              this.broadcast('FksOption', 'queryChange', '');
              this.broadcast('FksOptionGroup', 'queryChange');
            }

            if (this.selectedLabel) {
              this.currentPlaceholder = this.selectedLabel;
              this.selectedLabel = '';
            }
          }
        }
      }
      this.$emit('visible-change', val);
    },
    options: function options() {
      var _this4 = this;

      if (this.$isServer) return;
      this.$nextTick(function () {
        _this4.broadcast('FksSelectDropdown', 'updatePopper');
      });
      if (this.multiple) {
        this.resetInputHeight();
      }
      var inputs = this.$el.querySelectorAll('input');
      if ([].indexOf.call(inputs, document.activeElement) === -1) {
        this.setSelected();
      }
      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
        this.checkDefaultFirstOption();
      }
    }
  },

  methods: {
    handleFocusShow: function handleFocusShow() {
      this.setSoftFocus();
    },
    handleComposition: function handleComposition(event) {
      var _this5 = this;

      var text = event.target.value;
      if (event.type === 'compositionend') {
        this.isOnComposition = false;
        this.$nextTick(function (_) {
          return _this5.handleQueryChange(text);
        });
      } else {
        var lastCharacter = text[text.length - 1] || '';
        this.isOnComposition = !Object(shared_["isKorean"])(lastCharacter);
      }
    },
    handleQueryChange: function handleQueryChange(val) {
      var _this6 = this;

      if (this.previousQuery === val || this.isOnComposition) return;
      if (this.previousQuery === null && (typeof this.filterMethod === 'function' || typeof this.remoteMethod === 'function')) {
        this.previousQuery = val;
        return;
      }
      this.previousQuery = val;
      this.$nextTick(function () {
        if (_this6.visible) _this6.broadcast('FksSelectDropdown', 'updatePopper');
      });
      this.hoverIndex = -1;
      if (this.multiple && this.filterable) {
        this.$nextTick(function () {
          var length = _this6.$refs.input.value.length * 15 + 20;
          _this6.inputLength = _this6.collapseTags ? Math.min(50, length) : length;
          _this6.managePlaceholder();
          _this6.resetInputHeight();
        });
      }
      if (this.remote && typeof this.remoteMethod === 'function') {
        this.hoverIndex = -1;
        this.remoteMethod(val);
      } else if (typeof this.filterMethod === 'function') {
        this.filterMethod(val);
        this.broadcast('FksOptionGroup', 'queryChange');
      } else {
        this.filteredOptionsCount = this.optionsCount;
        this.broadcast('FksOption', 'queryChange', val);
        this.broadcast('FksOptionGroup', 'queryChange');
      }
      if (this.defaultFirstOption && (this.filterable || this.remote) && this.filteredOptionsCount) {
        this.checkDefaultFirstOption();
      }
    },
    scrollToOption: function scrollToOption(option) {
      var target = Array.isArray(option) && option[0] ? option[0].$el : option.$el;
      if (this.$refs.popper && target) {
        var menu = this.$refs.popper.$el.querySelector('.fks-select-dropdown__wrap');
        scroll_into_view_default()(menu, target);
      }
      this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();
    },
    handleMenuEnter: function handleMenuEnter() {
      var _this7 = this;

      this.$nextTick(function () {
        return _this7.scrollToOption(_this7.selected);
      });
    },
    emitChange: function emitChange(val) {
      if (!Object(util_["valueEquals"])(this.value, val)) {
        this.$emit('change', val);
      }
    },
    getOption: function getOption(value) {
      var option = void 0;
      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
      var isNull = Object.prototype.toString.call(value).toLowerCase() === '[object null]';
      var isUndefined = Object.prototype.toString.call(value).toLowerCase() === '[object undefined]';

      for (var i = this.cachedOptions.length - 1; i >= 0; i--) {
        var cachedOption = this.cachedOptions[i];
        var isEqual = isObject ? Object(util_["getValueByPath"])(cachedOption.value, this.valueKey) === Object(util_["getValueByPath"])(value, this.valueKey) : cachedOption.value === value;
        if (isEqual) {
          option = cachedOption;
          break;
        }
      }
      if (option) return option;
      var label = !isObject && !isNull && !isUndefined ? value : '';
      var newOption = {
        value: value,
        currentLabel: label
      };
      if (this.multiple) {
        newOption.hitState = false;
      }
      return newOption;
    },
    setSelected: function setSelected() {
      var _this8 = this;

      if (!this.multiple) {
        var option = this.getOption(this.value);
        if (option.created) {
          this.createdLabel = option.currentLabel;
          this.createdSelected = true;
        } else {
          this.createdSelected = false;
        }
        this.selectedLabel = option.currentLabel;
        this.selected = option;
        if (this.filterable) this.query = this.selectedLabel;
        return;
      }
      var result = [];
      if (Array.isArray(this.value)) {
        this.value.forEach(function (value) {
          result.push(_this8.getOption(value));
        });
      }
      this.selected = result;
      this.$nextTick(function () {
        _this8.resetInputHeight();
      });
    },
    handleFocus: function handleFocus(event) {
      if (this.selectDisabled || this.readonlyToggle) return;
      if (!this.softFocus) {
        if (this.automaticDropdown || this.filterable) {
          this.count = 0;
          this.visible = true;
          if (this.filterable) this.menuVisibleOnFocus = true;
        }
        this.$emit('focus', event);
      } else {
        this.softFocus = false;
      }
    },
    blur: function blur() {
      this.visible = false;
      this.$refs.reference.blur();
    },
    handleBlur: function handleBlur(event) {
      var _this9 = this;

      setTimeout(function () {
        if (_this9.isSilentBlur) {
          _this9.isSilentBlur = false;
        } else {
          _this9.$emit('blur', event);
        }
      }, 50);
      this.softFocus = false;
    },
    handleClearClick: function handleClearClick(event) {
      this.deleteSelected(event);
    },
    doDestroy: function doDestroy() {
      this.$refs.popper && this.$refs.popper.doDestroy();
    },
    handleClose: function handleClose() {
      this.visible = false;
    },
    toggleLastOptionHitState: function toggleLastOptionHitState(hit) {
      if (!Array.isArray(this.selected)) return;
      var option = this.selected[this.selected.length - 1];
      if (!option) return;

      if (hit === true || hit === false) {
        option.hitState = hit;
        return hit;
      }

      option.hitState = !option.hitState;
      return option.hitState;
    },
    deletePrevTag: function deletePrevTag(e) {
      if (e.target.value.length <= 0 && !this.toggleLastOptionHitState()) {
        var value = this.value.slice();
        value.pop();
        this.$emit('input', value);
        this.emitChange(value);
      }
    },
    managePlaceholder: function managePlaceholder() {
      if (this.currentPlaceholder !== '') {
        this.currentPlaceholder = this.$refs.input.value ? '' : this.cachedPlaceHolder;
      }
    },
    resetInputState: function resetInputState(e) {
      if (e.keyCode !== 8) this.toggleLastOptionHitState(false);
      this.inputLength = this.$refs.input.value.length * 15 + 20;
      this.resetInputHeight();
    },
    resetInputHeight: function resetInputHeight() {
      var _this10 = this;

      if (this.collapseTags && !this.filterable) return;
      this.$nextTick(function () {
        if (!_this10.$refs.reference) return;
        var inputChildNodes = _this10.$refs.reference.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this10.$refs.tags;
        var sizeInMap = _this10.initialInputHeight || 40;
        input.style.height = _this10.selected.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) + 'px';
        if (_this10.visible && _this10.emptyText !== false) {
          _this10.broadcast('FksSelectDropdown', 'updatePopper');
        }
      });
    },
    resetHoverIndex: function resetHoverIndex() {
      var _this11 = this;

      setTimeout(function () {
        if (!_this11.multiple) {
          _this11.hoverIndex = _this11.options.indexOf(_this11.selected);
        } else {
          if (_this11.selected.length > 0) {
            _this11.hoverIndex = Math.min.apply(null, _this11.selected.map(function (item) {
              return _this11.options.indexOf(item);
            }));
          } else {
            _this11.hoverIndex = -1;
          }
        }
      }, 300);
    },
    handleOptionSelect: function handleOptionSelect(option, byClick) {
      var _this12 = this;

      if (this.multiple) {
        var value = (this.value || []).slice();
        var optionIndex = this.getValueIndex(value, option.value);
        if (optionIndex > -1) {
          value.splice(optionIndex, 1);
        } else if (this.multipleLimit <= 0 || value.length < this.multipleLimit) {
          value.push(option.value);
        }
        this.$emit('input', value);
        this.emitChange(value);
        if (option.created) {
          this.query = '';
          this.handleQueryChange('');
          this.inputLength = 20;
        }
        if (this.filterable) this.$refs.input.focus();
      } else {
        this.$emit('input', option.value);
        this.emitChange(option.value);
        this.visible = false;
      }

      this.isSilentBlur = byClick;
      this.setSoftFocus(); //阻止了callback 触发hfocusin清除定时器
      if (this.visible) return;
      this.$nextTick(function () {
        _this12.scrollToOption(option);
      });
    },
    setSoftFocus: function setSoftFocus() {
      this.softFocus = true;
      var input = this.$refs.input || this.$refs.reference;
      if (input) {
        input.focus();
      }
    },
    getValueIndex: function getValueIndex() {
      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var value = arguments[1];

      var isObject = Object.prototype.toString.call(value).toLowerCase() === '[object object]';
      if (!isObject) {
        return arr.indexOf(value);
      } else {
        var valueKey = this.valueKey;
        var index = -1;
        arr.some(function (item, i) {
          if (Object(util_["getValueByPath"])(item, valueKey) === Object(util_["getValueByPath"])(value, valueKey)) {
            index = i;
            return true;
          }
          return false;
        });
        return index;
      }
    },
    toggleMenu: function toggleMenu() {
      if (!(this.selectDisabled || this.readonlyToggle)) {
        if (this.menuVisibleOnFocus) {
          if (this.filterable && this.count > 0) this.visible = !this.visible;
          this.menuVisibleOnFocus = false;
        } else {
          this.visible = !this.visible;
        }
        if (this.visible) {
          ;(this.$refs.input || this.$refs.reference).focus();
        }
        this.count++;
      }
    },
    selectOption: function selectOption() {
      if (!this.visible) {
        this.toggleMenu();
      } else {
        if (this.options[this.hoverIndex]) {
          this.handleOptionSelect(this.options[this.hoverIndex]);
        }
      }
    },
    deleteSelected: function deleteSelected(event) {
      event.stopPropagation();
      var value = this.multiple ? [] : '';
      this.$emit('input', value);
      this.emitChange(value);
      this.visible = false;
      this.$emit('clear');
    },
    deleteTag: function deleteTag(event, tag) {
      var index = this.selected.indexOf(tag);
      if (index > -1 && !this.selectDisabled) {
        var value = this.value.slice();
        value.splice(index, 1);
        this.$emit('input', value);
        this.emitChange(value);
        this.$emit('remove-tag', tag.value);
      }
      event.stopPropagation();
    },
    onInputChange: function onInputChange() {
      if (this.filterable && this.query !== this.selectedLabel) {
        this.query = this.selectedLabel;
        this.handleQueryChange(this.query);
      }
    },
    onOptionDestroy: function onOptionDestroy(index) {
      if (index > -1) {
        this.optionsCount--;
        this.filteredOptionsCount--;
        this.options.splice(index, 1);
      }
    },
    resetInputWidth: function resetInputWidth() {
      this.inputWidth = this.$refs.reference.$el.getBoundingClientRect().width;
    },
    handleResize: function handleResize() {
      this.resetInputWidth();
      if (this.multiple) this.resetInputHeight();
    },
    checkDefaultFirstOption: function checkDefaultFirstOption() {
      this.hoverIndex = -1;
      // highlight the created option
      var hasCreated = false;
      for (var i = this.options.length - 1; i >= 0; i--) {
        if (this.options[i].created) {
          hasCreated = true;
          this.hoverIndex = i;
          break;
        }
      }
      if (hasCreated) return;
      for (var _i = 0; _i !== this.options.length; ++_i) {
        var option = this.options[_i];
        if (this.query) {
          // highlight first options that passes the filter
          if (!option.disabled && !option.groupDisabled && option.visible && !option.readonly) {
            this.hoverIndex = _i;
            break;
          }
        } else {
          // highlight currently selected option
          if (option.itemSelected) {
            this.hoverIndex = _i;
            break;
          }
        }
      }
    },
    getValueKey: function getValueKey(item) {
      if (Object.prototype.toString.call(item.value).toLowerCase() !== '[object object]') {
        return item.value;
      } else {
        return Object(util_["getValueByPath"])(item.value, this.valueKey);
      }
    }
  },

  created: function created() {
    var _this13 = this;

    this.cachedPlaceHolder = this.currentPlaceholder = this.placeholder;
    if (this.multiple && !Array.isArray(this.value)) {
      this.$emit('input', []);
    }
    if (!this.multiple && Array.isArray(this.value)) {
      this.$emit('input', '');
    }

    this.debouncedOnInputChange = debounce_default()(this.debounce, function () {
      _this13.onInputChange();
    });

    this.debouncedQueryChange = debounce_default()(this.debounce, function (e) {
      _this13.handleQueryChange(e.target.value);
    });
    this.$on('handleOptionClick', this.handleOptionSelect);
    this.$on('setSelected', this.setSelected);
    this.$on('handleFocusShow', this.handleFocusShow);
  },
  destoryed: function destoryed() {
    outside.unbind(this.$refs.popper.$el, this.$refs.popper.hide);
  },
  mounted: function mounted() {
    var _this14 = this;

    // iframe 中加载的是一个相对独立的 Document，如果直接在父页面中给 Document 绑定 click 事件，点击 iframe 并不会触发该事件
    //popper插入body中，绑定为同一源
    outside.bind(this.$refs.popper.$el, this.$refs.popper.hide);
    if (this.multiple && Array.isArray(this.value) && this.value.length > 0) {
      this.currentPlaceholder = '';
    }
    Object(resize_event_["addResizeListener"])(this.$el, this.handleResize);

    var reference = this.$refs.reference;
    if (reference && reference.$el) {
      var sizeMap = {
        medium: 36,
        small: 32,
        mini: 28
      };
      var input = reference.$el.querySelector('input');
      this.initialInputHeight = input.getBoundingClientRect().height || sizeMap[this.selectSize];
    }
    if (this.remote && this.multiple) {
      this.resetInputHeight();
    }
    this.$nextTick(function () {
      if (reference && reference.$el) {
        _this14.inputWidth = reference.$el.getBoundingClientRect().width;
      }
    });
    this.setSelected();
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$el && this.handleResize) Object(resize_event_["removeResizeListener"])(this.$el, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/select/src/select.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_selectvue_type_script_lang_js_ = (selectvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/select/src/select.vue





/* normalize component */

var select_component = normalizeComponent(
  src_selectvue_type_script_lang_js_,
  selectvue_type_template_id_0c82f141_render,
  selectvue_type_template_id_0c82f141_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_select = (select_component.exports);
// CONCATENATED MODULE: ./packages/select/index.js


/* istanbul ignore next */
src_select.install = function (Vue) {
  Vue.component(src_select.name, src_select);
};

/* harmony default export */ var packages_select = (src_select);
// CONCATENATED MODULE: ./packages/option/index.js


/* istanbul ignore next */
src_option.install = function (Vue) {
  Vue.component(src_option.name, src_option);
};

/* harmony default export */ var packages_option = (src_option);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option-group.vue?vue&type=template&id=11d6ffae&
var option_groupvue_type_template_id_11d6ffae_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ul",
    {
      directives: [
        {
          name: "show",
          rawName: "v-show",
          value: _vm.visible,
          expression: "visible",
        },
      ],
      staticClass: "fks-select-group__wrap",
    },
    [
      _c("li", { staticClass: "fks-select-group__title" }, [
        _vm._v(_vm._s(_vm.label)),
      ]),
      _c("li", [
        _c("ul", { staticClass: "fks-select-group" }, [_vm._t("default")], 2),
      ]),
    ]
  )
}
var option_groupvue_type_template_id_11d6ffae_staticRenderFns = []
option_groupvue_type_template_id_11d6ffae_render._withStripped = true


// CONCATENATED MODULE: ./packages/select/src/option-group.vue?vue&type=template&id=11d6ffae&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/select/src/option-group.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var option_groupvue_type_script_lang_js_ = ({
  mixins: [emitter_default.a],

  name: 'FksOptionGroup',

  componentName: 'FksOptionGroup',

  props: {
    label: String,
    disabled: {
      type: Boolean,
      default: false
    }
  },

  data: function data() {
    return {
      visible: true
    };
  },


  watch: {
    disabled: function disabled(val) {
      this.broadcast('FksOption', 'handleGroupDisabled', val);
    }
  },

  methods: {
    queryChange: function queryChange() {
      this.visible = this.$children && Array.isArray(this.$children) && this.$children.some(function (option) {
        return option.visible === true;
      });
    }
  },

  created: function created() {
    this.$on('queryChange', this.queryChange);
  },
  mounted: function mounted() {
    if (this.disabled) {
      this.broadcast('FksOption', 'handleGroupDisabled', this.disabled);
    }
  }
});
// CONCATENATED MODULE: ./packages/select/src/option-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_option_groupvue_type_script_lang_js_ = (option_groupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/select/src/option-group.vue





/* normalize component */

var option_group_component = normalizeComponent(
  src_option_groupvue_type_script_lang_js_,
  option_groupvue_type_template_id_11d6ffae_render,
  option_groupvue_type_template_id_11d6ffae_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var option_group = (option_group_component.exports);
// CONCATENATED MODULE: ./packages/option-group/index.js


/* istanbul ignore next */
option_group.install = function (Vue) {
  Vue.component(option_group.name, option_group);
};

/* harmony default export */ var packages_option_group = (option_group);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=template&id=695b5cac&
var buttonvue_type_template_id_695b5cac_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "button",
    {
      staticClass: "fks-button",
      class: [
        _vm.type ? "fks-button--" + _vm.type : "",
        _vm.buttonSize ? "fks-button--" + _vm.buttonSize : "",
        {
          "is-disabled": _vm.buttonDisabled,
          "is-loading": _vm.loading,
          "is-plain": _vm.plain,
          "is-round": _vm.round,
          "is-circle": _vm.circle,
          "is-dash": _vm.dash,
          "is-text": _vm.text,
          "is-dangerText": _vm.dangerText,
          "is-primary": _vm.primary,
        },
      ],
      attrs: {
        disabled: _vm.buttonDisabled || _vm.loading,
        autofocus: _vm.autofocus,
        type: _vm.nativeType,
      },
      on: { click: _vm.handleClick },
    },
    [
      _vm.loading ? _c("i", { staticClass: "fks-icon-loading" }) : _vm._e(),
      _vm.icon && !_vm.loading ? _c("i", { class: _vm.icon }) : _vm._e(),
      _vm.$slots.default ? _c("span", [_vm._t("default")], 2) : _vm._e(),
    ]
  )
}
var buttonvue_type_template_id_695b5cac_staticRenderFns = []
buttonvue_type_template_id_695b5cac_render._withStripped = true


// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=template&id=695b5cac&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var buttonvue_type_script_lang_js_ = ({
  name: 'FksButton',

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    type: {
      type: String,
      default: 'default'
    },
    size: String,
    icon: {
      type: String,
      default: ''
    },
    nativeType: {
      type: String,
      default: 'button'
    },
    loading: Boolean,
    disabled: Boolean,
    dangerText: Boolean,
    primary: Boolean,
    dash: Boolean,
    text: Boolean,
    plain: Boolean,
    autofocus: Boolean,
    round: Boolean,
    circle: Boolean
  },

  computed: {
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    buttonSize: function buttonSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    buttonDisabled: function buttonDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    }
  },

  methods: {
    handleClick: function handleClick(evt) {
      this.$emit('click', evt);
    }
  }
});
// CONCATENATED MODULE: ./packages/button/src/button.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_buttonvue_type_script_lang_js_ = (buttonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/button/src/button.vue





/* normalize component */

var button_component = normalizeComponent(
  src_buttonvue_type_script_lang_js_,
  buttonvue_type_template_id_695b5cac_render,
  buttonvue_type_template_id_695b5cac_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_button = (button_component.exports);
// CONCATENATED MODULE: ./packages/button/index.js


/* istanbul ignore next */
src_button.install = function (Vue) {
  Vue.component(src_button.name, src_button);
};

/* harmony default export */ var packages_button = (src_button);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=template&id=ed432162&
var button_groupvue_type_template_id_ed432162_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-button-group" }, [_vm._t("default")], 2)
}
var button_groupvue_type_template_id_ed432162_staticRenderFns = []
button_groupvue_type_template_id_ed432162_render._withStripped = true


// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=template&id=ed432162&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/button/src/button-group.vue?vue&type=script&lang=js&
//
//
//
//
//

/* harmony default export */ var button_groupvue_type_script_lang_js_ = ({
  name: 'FksButtonGroup'
});
// CONCATENATED MODULE: ./packages/button/src/button-group.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_button_groupvue_type_script_lang_js_ = (button_groupvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/button/src/button-group.vue





/* normalize component */

var button_group_component = normalizeComponent(
  src_button_groupvue_type_script_lang_js_,
  button_groupvue_type_template_id_ed432162_render,
  button_groupvue_type_template_id_ed432162_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var button_group = (button_group_component.exports);
// CONCATENATED MODULE: ./packages/button-group/index.js


/* istanbul ignore next */
button_group.install = function (Vue) {
  Vue.component(button_group.name, button_group);
};

/* harmony default export */ var packages_button_group = (button_group);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/table.vue?vue&type=template&id=51c2cfdc&
var tablevue_type_template_id_51c2cfdc_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _vm.showTable
    ? _c(
        "div",
        {
          staticClass: "fks-table",
          class: [
            {
              "fks-table--fit": _vm.fit,
              "fks-table--striped": _vm.realStripe,
              "fks-table--border": _vm.realBorder || _vm.isGroup,
              "fks-table--hidden": _vm.isHidden,
              "fks-table--group": _vm.isGroup,
              "fks-table--fluid-height": _vm.maxHeight,
              "fks-table--scrollable-x": _vm.layout.scrollX,
              "fks-table--scrollable-y": _vm.layout.scrollY,
              "fks-table--enable-row-hover": !_vm.store.states.isComplex,
              "fks-table--enable-row-transition":
                (_vm.store.states.data || []).length !== 0 &&
                (_vm.store.states.data || []).length < 100,
            },
            _vm.tableSize ? "fks-table--" + _vm.tableSize : "",
          ],
          on: {
            mouseleave: function ($event) {
              return _vm.handleMouseLeave($event)
            },
          },
        },
        [
          _c(
            "div",
            { ref: "hiddenColumns", staticClass: "hidden-columns" },
            [_vm._t("default")],
            2
          ),
          _vm.isSelect
            ? _c(
                "fks-popover",
                {
                  attrs: {
                    placement: "bottom",
                    width: "160",
                    trigger: "click",
                  },
                },
                [
                  _c(
                    "draggable",
                    {
                      staticStyle: {
                        height: "100%",
                        "max-height": "400px",
                        overflow: "auto",
                        "padding-right": "4px",
                      },
                      attrs: {
                        list: _vm.labelItem,
                        handle: ".move_area",
                        animation: 200,
                      },
                    },
                    _vm._l(_vm.labelItem, function (item, index) {
                      return _c(
                        "div",
                        { key: index, staticClass: "column-title-row" },
                        [
                          _c("div", { staticClass: "move_area" }, [
                            _c("span", { staticClass: "move-button" }, [
                              _c("span", { staticClass: "move-button-icon" }),
                            ]),
                            _c("span", { staticClass: "move-content" }, [
                              _vm._v(_vm._s(item.value)),
                            ]),
                          ]),
                          _c("fks-switch", {
                            staticStyle: { float: "right" },
                            model: {
                              value: item.show,
                              callback: function ($$v) {
                                _vm.$set(item, "show", $$v)
                              },
                              expression: "item.show",
                            },
                          }),
                        ],
                        1
                      )
                    }),
                    0
                  ),
                  _c(
                    "fks-button",
                    { attrs: { slot: "reference" }, slot: "reference" },
                    [_vm._v("筛选列")]
                  ),
                ],
                1
              )
            : _vm._e(),
          _vm.showHeader
            ? _c(
                "div",
                {
                  directives: [
                    {
                      name: "mousewheel",
                      rawName: "v-mousewheel",
                      value: _vm.handleHeaderFooterMousewheel,
                      expression: "handleHeaderFooterMousewheel",
                    },
                  ],
                  ref: "headerWrapper",
                  staticClass: "fks-table__header-wrapper",
                },
                [
                  _c("table-header", {
                    ref: "tableHeader",
                    style: {
                      width: _vm.layout.bodyWidth
                        ? _vm.layout.bodyWidth + "px"
                        : "",
                    },
                    attrs: {
                      store: _vm.store,
                      border: _vm.realBorder,
                      "default-sort": _vm.defaultSort,
                    },
                  }),
                ],
                1
              )
            : _vm._e(),
          _c(
            "div",
            {
              ref: "bodyWrapper",
              staticClass: "fks-table__body-wrapper",
              class: [
                _vm.layout.scrollX
                  ? "is-scrolling-" + _vm.scrollPosition
                  : "is-scrolling-none",
              ],
              style: [_vm.bodyHeight],
            },
            [
              _c("table-body", {
                key: _vm.dragKey,
                style: {
                  width: _vm.bodyWidth,
                  cursor: _vm.pointer,
                },
                attrs: {
                  context: _vm.context,
                  store: _vm.store,
                  stripe: _vm.realStripe,
                  "row-class-name": _vm.rowClassName,
                  "row-style": _vm.rowStyle,
                  highlight: _vm.highlightCurrentRow,
                },
              }),
              !_vm.data || _vm.data.length === 0
                ? _c(
                    "div",
                    {
                      ref: "emptyBlock",
                      staticClass: "fks-table__empty-block",
                      style: _vm.emptyBlockStyle,
                    },
                    [
                      _c(
                        "span",
                        { staticClass: "fks-table__empty-text" },
                        [
                          _vm._t("empty", function () {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm.emptyText || _vm.t("fks.table.emptyText")
                                )
                              ),
                            ]
                          }),
                        ],
                        2
                      ),
                    ]
                  )
                : _vm._e(),
              _vm.$slots.append
                ? _c(
                    "div",
                    {
                      ref: "appendWrapper",
                      staticClass: "fks-table__append-wrapper",
                    },
                    [_vm._t("append")],
                    2
                  )
                : _vm._e(),
            ],
            1
          ),
          _vm.showSummary
            ? _c(
                "div",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.data && _vm.data.length > 0,
                      expression: "data && data.length > 0",
                    },
                    {
                      name: "mousewheel",
                      rawName: "v-mousewheel",
                      value: _vm.handleHeaderFooterMousewheel,
                      expression: "handleHeaderFooterMousewheel",
                    },
                  ],
                  ref: "footerWrapper",
                  staticClass: "fks-table__footer-wrapper",
                },
                [
                  _c("table-footer", {
                    style: {
                      width: _vm.layout.bodyWidth
                        ? _vm.layout.bodyWidth + "px"
                        : "",
                    },
                    attrs: {
                      store: _vm.store,
                      border: _vm.realBorder,
                      "sum-text": _vm.sumText || _vm.t("fks.table.sumText"),
                      "summary-method": _vm.summaryMethod,
                      "default-sort": _vm.defaultSort,
                    },
                  }),
                ],
                1
              )
            : _vm._e(),
          _vm.fixedColumns.length > 0
            ? _c(
                "div",
                {
                  directives: [
                    {
                      name: "mousewheel",
                      rawName: "v-mousewheel",
                      value: _vm.handleFixedMousewheel,
                      expression: "handleFixedMousewheel",
                    },
                  ],
                  ref: "fixedWrapper",
                  staticClass: "fks-table__fixed",
                  style: [
                    {
                      width: _vm.layout.fixedWidth
                        ? _vm.layout.fixedWidth + "px"
                        : "",
                    },
                    _vm.fixedHeight,
                  ],
                },
                [
                  _vm.showHeader
                    ? _c(
                        "div",
                        {
                          ref: "fixedHeaderWrapper",
                          staticClass: "fks-table__fixed-header-wrapper",
                        },
                        [
                          _c("table-header", {
                            ref: "fixedTableHeader",
                            style: {
                              width: _vm.bodyWidth,
                            },
                            attrs: {
                              fixed: "left",
                              border: _vm.realBorder,
                              store: _vm.store,
                            },
                          }),
                        ],
                        1
                      )
                    : _vm._e(),
                  _c(
                    "div",
                    {
                      ref: "fixedBodyWrapper",
                      staticClass: "fks-table__fixed-body-wrapper",
                      style: [
                        {
                          top: _vm.layout.headerHeight + "px",
                        },
                        _vm.fixedBodyHeight,
                      ],
                    },
                    [
                      _c("table-body", {
                        key: _vm.dragKey,
                        style: {
                          width: _vm.bodyWidth,
                        },
                        attrs: {
                          fixed: "left",
                          store: _vm.store,
                          stripe: _vm.realStripe,
                          highlight: _vm.highlightCurrentRow,
                          "row-class-name": _vm.rowClassName,
                          "row-style": _vm.rowStyle,
                        },
                      }),
                      _vm.$slots.append
                        ? _c("div", {
                            staticClass: "fks-table__append-gutter",
                            style: { height: _vm.layout.appendHeight + "px" },
                          })
                        : _vm._e(),
                    ],
                    1
                  ),
                  _vm.showSummary
                    ? _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.data && _vm.data.length > 0,
                              expression: "data && data.length > 0",
                            },
                          ],
                          ref: "fixedFooterWrapper",
                          staticClass: "fks-table__fixed-footer-wrapper",
                        },
                        [
                          _c("table-footer", {
                            style: {
                              width: _vm.bodyWidth,
                            },
                            attrs: {
                              fixed: "left",
                              border: _vm.realBorder,
                              "sum-text":
                                _vm.sumText || _vm.t("fks.table.sumText"),
                              "summary-method": _vm.summaryMethod,
                              store: _vm.store,
                            },
                          }),
                        ],
                        1
                      )
                    : _vm._e(),
                ]
              )
            : _vm._e(),
          _vm.rightFixedColumns.length > 0
            ? _c(
                "div",
                {
                  directives: [
                    {
                      name: "mousewheel",
                      rawName: "v-mousewheel",
                      value: _vm.handleFixedMousewheel,
                      expression: "handleFixedMousewheel",
                    },
                  ],
                  ref: "rightFixedWrapper",
                  staticClass: "fks-table__fixed-right",
                  style: [
                    {
                      width: _vm.layout.rightFixedWidth
                        ? _vm.layout.rightFixedWidth + "px"
                        : "",
                      right: _vm.layout.scrollY
                        ? (_vm.realBorder
                            ? _vm.layout.gutterWidth
                            : _vm.layout.gutterWidth || 0) + "px"
                        : "",
                    },
                    _vm.fixedHeight,
                  ],
                },
                [
                  _vm.showHeader
                    ? _c(
                        "div",
                        {
                          ref: "rightFixedHeaderWrapper",
                          staticClass: "fks-table__fixed-header-wrapper",
                        },
                        [
                          _c("table-header", {
                            ref: "rightFixedTableHeader",
                            style: {
                              width: _vm.bodyWidth,
                            },
                            attrs: {
                              fixed: "right",
                              border: _vm.realBorder,
                              store: _vm.store,
                            },
                          }),
                        ],
                        1
                      )
                    : _vm._e(),
                  _c(
                    "div",
                    {
                      ref: "rightFixedBodyWrapper",
                      staticClass: "fks-table__fixed-body-wrapper",
                      style: [
                        {
                          top: _vm.layout.headerHeight + "px",
                        },
                        _vm.fixedBodyHeight,
                      ],
                    },
                    [
                      _c("table-body", {
                        key: _vm.dragKey,
                        style: {
                          width: _vm.bodyWidth,
                        },
                        attrs: {
                          fixed: "right",
                          store: _vm.store,
                          stripe: _vm.realStripe,
                          "row-class-name": _vm.rowClassName,
                          "row-style": _vm.rowStyle,
                          highlight: _vm.highlightCurrentRow,
                        },
                      }),
                      _vm.$slots.append
                        ? _c("div", {
                            staticClass: "fks-table__append-gutter",
                            style: { height: _vm.layout.appendHeight + "px" },
                          })
                        : _vm._e(),
                    ],
                    1
                  ),
                  _vm.showSummary
                    ? _c(
                        "div",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.data && _vm.data.length > 0,
                              expression: "data && data.length > 0",
                            },
                          ],
                          ref: "rightFixedFooterWrapper",
                          staticClass: "fks-table__fixed-footer-wrapper",
                        },
                        [
                          _c("table-footer", {
                            style: {
                              width: _vm.bodyWidth,
                            },
                            attrs: {
                              fixed: "right",
                              border: _vm.realBorder,
                              "sum-text":
                                _vm.sumText || _vm.t("fks.table.sumText"),
                              "summary-method": _vm.summaryMethod,
                              store: _vm.store,
                            },
                          }),
                        ],
                        1
                      )
                    : _vm._e(),
                ]
              )
            : _vm._e(),
          _vm.rightFixedColumns.length > 0
            ? _c("div", {
                ref: "rightFixedPatch",
                staticClass: "fks-table__fixed-right-patch",
                style: {
                  width: _vm.layout.scrollY
                    ? _vm.layout.gutterWidth + "px"
                    : "0",
                  height: _vm.layout.headerHeight + "px",
                },
              })
            : _vm._e(),
          _c("div", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.resizeProxyVisible,
                expression: "resizeProxyVisible",
              },
            ],
            ref: "resizeProxy",
            staticClass: "fks-table__column-resize-proxy",
          }),
        ],
        1
      )
    : _vm._e()
}
var tablevue_type_template_id_51c2cfdc_staticRenderFns = []
tablevue_type_template_id_51c2cfdc_render._withStripped = true


// CONCATENATED MODULE: ./packages/table/src/table.vue?vue&type=template&id=51c2cfdc&

// EXTERNAL MODULE: external "vuedraggable"
var external_vuedraggable_ = __webpack_require__(49);
var external_vuedraggable_default = /*#__PURE__*/__webpack_require__.n(external_vuedraggable_);

// EXTERNAL MODULE: external "throttle-debounce"
var external_throttle_debounce_ = __webpack_require__(41);

// EXTERNAL MODULE: external "normalize-wheel"
var external_normalize_wheel_ = __webpack_require__(50);
var external_normalize_wheel_default = /*#__PURE__*/__webpack_require__.n(external_normalize_wheel_);

// CONCATENATED MODULE: ./src/directives/mousewheel.js


var mousewheel_isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;

var mousewheel_mousewheel = function mousewheel(element, callback) {
  if (element && element.addEventListener) {
    element.addEventListener(mousewheel_isFirefox ? 'DOMMouseScroll' : 'mousewheel', function (event) {
      var normalized = external_normalize_wheel_default()(event);
      callback && callback.apply(this, [event, normalized]);
    });
  }
};

/* harmony default export */ var directives_mousewheel = ({
  bind: function bind(el, binding) {
    mousewheel_mousewheel(el, binding.value);
  }
});
// EXTERNAL MODULE: external "vue"
var external_vue_ = __webpack_require__(5);
var external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);

// CONCATENATED MODULE: ./packages/table/src/util.js
var util_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



var getCell = function getCell(event) {
  var cell = event.target;

  while (cell && cell.tagName.toUpperCase() !== 'HTML') {
    if (cell.tagName.toUpperCase() === 'TD') {
      return cell;
    }
    cell = cell.parentNode;
  }

  return null;
};

var util_isObject = function isObject(obj) {
  return obj !== null && (typeof obj === 'undefined' ? 'undefined' : util_typeof(obj)) === 'object';
};

var util_orderBy = function orderBy(array, sortKey, reverse, sortMethod, sortBy) {
  if (!sortKey && !sortMethod && (!sortBy || Array.isArray(sortBy) && !sortBy.length)) {
    return array;
  }
  if (typeof reverse === 'string') {
    reverse = reverse === 'descending' ? -1 : 1;
  } else {
    reverse = reverse && reverse < 0 ? -1 : 1;
  }
  var getKey = sortMethod ? null : function (value, index) {
    if (sortBy) {
      if (!Array.isArray(sortBy)) {
        sortBy = [sortBy];
      }
      return sortBy.map(function (by) {
        if (typeof by === 'string') {
          return Object(util_["getValueByPath"])(value, by);
        } else {
          return by(value, index, array);
        }
      });
    }
    if (sortKey !== '$key') {
      if (util_isObject(value) && '$value' in value) value = value.$value;
    }
    return [util_isObject(value) ? Object(util_["getValueByPath"])(value, sortKey) : value];
  };
  var compare = function compare(a, b) {
    if (sortMethod) {
      return sortMethod(a.value, b.value);
    }
    for (var i = 0, len = a.key.length; i < len; i++) {
      if (a.key[i] < b.key[i]) {
        return -1;
      }
      if (a.key[i] > b.key[i]) {
        return 1;
      }
    }
    return 0;
  };
  return array.map(function (value, index) {
    return {
      value: value,
      index: index,
      key: getKey ? getKey(value, index) : null
    };
  }).sort(function (a, b) {
    var order = compare(a, b);
    if (!order) {
      // make stable https://en.wikipedia.org/wiki/Sorting_algorithm#Stability
      order = a.index - b.index;
    }
    return order * reverse;
  }).map(function (item) {
    return item.value;
  });
};

var getColumnById = function getColumnById(table, columnId) {
  var column = null;
  table.columns.forEach(function (item) {
    if (item.id === columnId) {
      column = item;
    }
  });
  return column;
};

var getColumnByKey = function getColumnByKey(table, columnKey) {
  var column = null;
  for (var i = 0; i < table.columns.length; i++) {
    var item = table.columns[i];
    if (item.columnKey === columnKey) {
      column = item;
      break;
    }
  }
  return column;
};

var getColumnByCell = function getColumnByCell(table, cell) {
  var matches = (cell.className || '').match(/fks-table_[^\s]+/gm);
  if (matches) {
    return getColumnById(table, matches[0]);
  }
  return null;
};

var getRowIdentity = function getRowIdentity(row, rowKey) {
  if (!row) throw new Error('row is required when get row identity');
  if (typeof rowKey === 'string') {
    if (rowKey.indexOf('.') < 0) {
      return row[rowKey];
    }
    var key = rowKey.split('.');
    var current = row;
    for (var i = 0; i < key.length; i++) {
      current = current[key[i]];
    }
    return current;
  } else if (typeof rowKey === 'function') {
    return rowKey.call(null, row);
  }
};

var getKeysMap = function getKeysMap(array, rowKey) {
  var arrayMap = {};
  (array || []).forEach(function (row, index) {
    arrayMap[getRowIdentity(row, rowKey)] = { row: row, index: index };
  });
  return arrayMap;
};

function hasOwn(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

function mergeOptions(defaults, config) {
  var options = {};
  var key = void 0;
  for (key in defaults) {
    options[key] = defaults[key];
  }
  for (key in config) {
    if (hasOwn(config, key)) {
      var value = config[key];
      if (typeof value !== 'undefined') {
        options[key] = value;
      }
    }
  }
  return options;
}

function parseWidth(width) {
  if (width !== undefined) {
    width = parseInt(width, 10);
    if (isNaN(width)) {
      width = null;
    }
  }
  return width;
}

function parseMinWidth(minWidth) {
  if (typeof minWidth !== 'undefined') {
    minWidth = parseWidth(minWidth);
    if (isNaN(minWidth)) {
      minWidth = 80;
    }
  }
  return minWidth;
};

function parseHeight(height) {
  if (typeof height === 'number') {
    return height;
  }
  if (typeof height === 'string') {
    if (/^\d+(?:px)?$/.test(height)) {
      return parseInt(height, 10);
    } else {
      return height;
    }
  }
  return null;
}

// https://github.com/reduxjs/redux/blob/master/src/compose.js
function compose() {
  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }

  if (funcs.length === 0) {
    return function (arg) {
      return arg;
    };
  }
  if (funcs.length === 1) {
    return funcs[0];
  }
  return funcs.reduce(function (a, b) {
    return function () {
      return a(b.apply(undefined, arguments));
    };
  });
}

function toggleRowStatus(statusArr, row, newVal) {
  var changed = false;
  var index = statusArr.indexOf(row);
  var included = index !== -1;

  var addRow = function addRow() {
    statusArr.push(row);
    changed = true;
  };
  var removeRow = function removeRow() {
    statusArr.splice(index, 1);
    changed = true;
  };

  if (typeof newVal === 'boolean') {
    if (newVal && !included) {
      addRow();
    } else if (!newVal && included) {
      removeRow();
    }
  } else {
    if (included) {
      removeRow();
    } else {
      addRow();
    }
  }
  return changed;
}

function walkTreeNode(root, cb) {
  var childrenKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'children';
  var lazyKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'hasChildren';

  var isNil = function isNil(array) {
    return !(Array.isArray(array) && array.length);
  };

  function _walker(parent, children, level) {
    cb(parent, children, level);
    children.forEach(function (item) {
      if (item[lazyKey]) {
        cb(item, null, level + 1);
        return;
      }
      var children = item[childrenKey];
      if (!isNil(children)) {
        _walker(item, children, level + 1);
      }
    });
  }

  root.forEach(function (item) {
    if (item[lazyKey]) {
      cb(item, null, 0);
      return;
    }
    var children = item[childrenKey];
    if (!isNil(children)) {
      _walker(item, children, 0);
    }
  });
}
// CONCATENATED MODULE: ./packages/table/src/store/expand.js


/* harmony default export */ var expand = ({
  data: function data() {
    return {
      states: {
        defaultExpandAll: false,
        expandRows: []
      }
    };
  },


  methods: {
    updateExpandRows: function updateExpandRows() {
      var _states = this.states,
          _states$data = _states.data,
          data = _states$data === undefined ? [] : _states$data,
          rowKey = _states.rowKey,
          defaultExpandAll = _states.defaultExpandAll,
          expandRows = _states.expandRows;

      if (defaultExpandAll) {
        this.states.expandRows = data.slice();
      } else if (rowKey) {
        // TODO：这里的代码可以优化
        var expandRowsMap = getKeysMap(expandRows, rowKey);
        this.states.expandRows = data.reduce(function (prev, row) {
          var rowId = getRowIdentity(row, rowKey);
          var rowInfo = expandRowsMap[rowId];
          if (rowInfo) {
            prev.push(row);
          }
          return prev;
        }, []);
      } else {
        this.states.expandRows = [];
      }
    },
    toggleRowExpansion: function toggleRowExpansion(row, expanded) {
      var changed = toggleRowStatus(this.states.expandRows, row, expanded);
      if (changed) {
        this.table.$emit('expand-change', row, this.states.expandRows.slice());
        this.scheduleLayout();
      }
    },
    setExpandRowKeys: function setExpandRowKeys(rowKeys) {
      this.assertRowKey();
      // TODO：这里的代码可以优化
      var _states2 = this.states,
          data = _states2.data,
          rowKey = _states2.rowKey;

      var keysMap = getKeysMap(data, rowKey);
      this.states.expandRows = rowKeys.reduce(function (prev, cur) {
        var info = keysMap[cur];
        if (info) {
          prev.push(info.row);
        }
        return prev;
      }, []);
    },
    isRowExpanded: function isRowExpanded(row) {
      var _states3 = this.states,
          _states3$expandRows = _states3.expandRows,
          expandRows = _states3$expandRows === undefined ? [] : _states3$expandRows,
          rowKey = _states3.rowKey;

      if (rowKey) {
        var expandMap = getKeysMap(expandRows, rowKey);
        return !!expandMap[getRowIdentity(row, rowKey)];
      }
      return expandRows.indexOf(row) !== -1;
    }
  }
});
// CONCATENATED MODULE: ./packages/table/src/store/current.js
/*
 * @Author: gao_m3
 * @Date: 2021-03-29 17:51:08
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-08-25 15:01:01
 * @Descripttion: 
 */



/* harmony default export */ var current = ({
  data: function data() {
    return {
      states: {
        // 不可响应的，设置 currentRowKey 时，data 不一定存在，也许无法算出正确的 currentRow
        // 把该值缓存一下，当用户点击修改 currentRow 时，把该值重置为 null
        _currentRowKey: null,
        currentRow: null
      }
    };
  },


  methods: {
    setCurrentRowKey: function setCurrentRowKey(key) {
      this.assertRowKey();
      this.states._currentRowKey = key;
      this.setCurrentRowByKey(key);
    },
    restoreCurrentRowKey: function restoreCurrentRowKey() {
      this.states._currentRowKey = null;
    },
    setCurrentRowByKey: function setCurrentRowByKey(key) {
      var states = this.states;
      var _states$data = states.data,
          data = _states$data === undefined ? [] : _states$data,
          rowKey = states.rowKey;

      var currentRow = null;
      if (rowKey) {
        currentRow = Object(util_["treeFind"])(data, function (item) {
          return getRowIdentity(item, rowKey) === key;
        });
      }
      states.currentRow = currentRow;
    },
    updateCurrentRow: function updateCurrentRow(currentRow) {
      var states = this.states,
          table = this.table;

      var oldCurrentRow = states.currentRow;
      if (currentRow && currentRow !== oldCurrentRow) {
        states.currentRow = currentRow;
        table.$emit('current-change', currentRow, oldCurrentRow);
        return;
      }
      if (!currentRow && oldCurrentRow) {
        states.currentRow = null;
        table.$emit('current-change', null, oldCurrentRow);
      }
    },
    updateCurrentRowData: function updateCurrentRowData() {
      var states = this.states,
          table = this.table;
      var rowKey = states.rowKey,
          _currentRowKey = states._currentRowKey;
      // data 为 null 时，解构时的默认值会被忽略

      var data = states.data || [];
      var oldCurrentRow = states.currentRow;

      // 当 currentRow 不在 data 中时尝试更新数据
      if (data.indexOf(oldCurrentRow) === -1 && oldCurrentRow) {
        if (rowKey) {
          var currentRowKey = getRowIdentity(oldCurrentRow, rowKey);
          this.setCurrentRowByKey(currentRowKey);
        } else {
          states.currentRow = null;
        }
        if (states.currentRow === null) {
          table.$emit('current-change', null, oldCurrentRow);
        }
      } else if (_currentRowKey) {
        // 把初始时下设置的 rowKey 转化成 rowData
        this.setCurrentRowByKey(_currentRowKey);
        this.restoreCurrentRowKey();
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/table/src/store/tree.js
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



/* harmony default export */ var tree = ({
  data: function data() {
    return {
      states: {
        // defaultExpandAll 存在于 expand.js 中，这里不重复添加
        // 在展开行中，expandRowKeys 会被转化成 expandRows，expandRowKeys 这个属性只是记录了 TreeTable 行的展开
        // TODO: 拆分为独立的 TreeTable，统一用法
        expandRowKeys: [],
        treeData: {},
        indent: 24,
        lazy: false,
        lazyTreeNodeMap: {},
        lazyColumnIdentifier: 'hasChildren',
        childrenColumnName: 'children'
      }
    };
  },


  computed: {
    // 嵌入型的数据，watch 无法是检测到变化 https://github.com/ElemeFE/element/issues/14998
    // TODO: 使用 computed 解决该问题，是否会造成性能问题？
    // @return { id: { level, children } }
    normalizedData: function normalizedData() {
      if (!this.states.rowKey) return {};
      var data = this.states.data || [];
      return this.normalize(data);
    },

    // @return { id: { children } }
    // 针对懒加载的情形，不处理嵌套数据
    normalizedLazyNode: function normalizedLazyNode() {
      var _states = this.states,
          rowKey = _states.rowKey,
          lazyTreeNodeMap = _states.lazyTreeNodeMap,
          lazyColumnIdentifier = _states.lazyColumnIdentifier;

      var keys = Object.keys(lazyTreeNodeMap);
      var res = {};
      if (!keys.length) return res;
      keys.forEach(function (key) {
        if (lazyTreeNodeMap[key].length) {
          var item = { children: [] };
          lazyTreeNodeMap[key].forEach(function (row) {
            var currentRowKey = getRowIdentity(row, rowKey);
            item.children.push(currentRowKey);
            if (row[lazyColumnIdentifier] && !res[currentRowKey]) {
              res[currentRowKey] = { children: [] };
            }
          });
          res[key] = item;
        }
      });
      return res;
    }
  },

  watch: {
    normalizedData: 'updateTreeData',
    normalizedLazyNode: 'updateTreeData'
  },

  methods: {
    normalize: function normalize(data) {
      var _states2 = this.states,
          childrenColumnName = _states2.childrenColumnName,
          lazyColumnIdentifier = _states2.lazyColumnIdentifier,
          rowKey = _states2.rowKey,
          lazy = _states2.lazy;

      var res = {};
      walkTreeNode(data, function (parent, children, level) {
        var parentId = getRowIdentity(parent, rowKey);
        if (Array.isArray(children)) {
          res[parentId] = {
            children: children.map(function (row) {
              return getRowIdentity(row, rowKey);
            }),
            level: level
          };
        } else if (lazy) {
          // 当 children 不存在且 lazy 为 true，该节点即为懒加载的节点
          res[parentId] = {
            children: [],
            lazy: true,
            level: level
          };
        }
      }, childrenColumnName, lazyColumnIdentifier);
      return res;
    },
    updateTreeData: function updateTreeData() {
      var nested = this.normalizedData;
      var normalizedLazyNode = this.normalizedLazyNode;
      var keys = Object.keys(nested);
      var newTreeData = {};
      if (keys.length) {
        var _states3 = this.states,
            oldTreeData = _states3.treeData,
            defaultExpandAll = _states3.defaultExpandAll,
            expandRowKeys = _states3.expandRowKeys,
            lazy = _states3.lazy;

        var rootLazyRowKeys = [];
        var getExpanded = function getExpanded(oldValue, key) {
          var included = defaultExpandAll || expandRowKeys && expandRowKeys.indexOf(key) !== -1;
          return !!(oldValue && oldValue.expanded || included);
        };
        // 合并 expanded 与 display，确保数据刷新后，状态不变
        keys.forEach(function (key) {
          var oldValue = oldTreeData[key];
          var newValue = _extends({}, nested[key]);
          newValue.expanded = getExpanded(oldValue, key);
          if (newValue.lazy) {
            var _ref = oldValue || {},
                _ref$loaded = _ref.loaded,
                loaded = _ref$loaded === undefined ? false : _ref$loaded,
                _ref$loading = _ref.loading,
                loading = _ref$loading === undefined ? false : _ref$loading;

            newValue.loaded = !!loaded;
            newValue.loading = !!loading;
            rootLazyRowKeys.push(key);
          }
          newTreeData[key] = newValue;
        });
        // 根据懒加载数据更新 treeData
        var lazyKeys = Object.keys(normalizedLazyNode);
        if (lazy && lazyKeys.length && rootLazyRowKeys.length) {
          lazyKeys.forEach(function (key) {
            var oldValue = oldTreeData[key];
            var lazyNodeChildren = normalizedLazyNode[key].children;
            if (rootLazyRowKeys.indexOf(key) !== -1) {
              // 懒加载的 root 节点，更新一下原有的数据，原来的 children 一定是空数组
              if (newTreeData[key].children.length !== 0) {
                throw new Error('[FksTable]children must be an empty array.');
              }
              newTreeData[key].children = lazyNodeChildren;
            } else {
              var _ref2 = oldValue || {},
                  _ref2$loaded = _ref2.loaded,
                  loaded = _ref2$loaded === undefined ? false : _ref2$loaded,
                  _ref2$loading = _ref2.loading,
                  loading = _ref2$loading === undefined ? false : _ref2$loading;

              newTreeData[key] = {
                lazy: true,
                loaded: !!loaded,
                loading: !!loading,
                expanded: getExpanded(oldValue, key),
                children: lazyNodeChildren,
                level: ''
              };
            }
          });
        }
      }
      this.states.treeData = newTreeData;
      this.updateTableScrollY();
    },
    updateTreeExpandKeys: function updateTreeExpandKeys(value) {
      this.states.expandRowKeys = value;
      this.updateTreeData();
    },
    toggleTreeExpansion: function toggleTreeExpansion(row, expanded) {
      this.assertRowKey();
      var _states4 = this.states,
          rowKey = _states4.rowKey,
          treeData = _states4.treeData;

      var id = getRowIdentity(row, rowKey);
      var data = id && treeData[id];
      if (id && data && 'expanded' in data) {
        var oldExpanded = data.expanded;
        expanded = typeof expanded === 'undefined' ? !data.expanded : expanded;
        treeData[id].expanded = expanded;
        if (oldExpanded !== expanded) {
          this.table.$emit('expand-change', row, expanded);
          var flag = false;
          if (expanded) {
            // expandArr去重
            this.table.expandArr.forEach(function (item) {
              if (item.id === row.id) {
                flag = true;
              }
            });
            if (!flag) {
              this.table.expandArr.push(row);
            }
          } else {
            for (var i = 0; i < this.table.expandArr.length; ++i) {
              if (this.table.expandArr[i][rowKey] === id) {
                this.table.expandArr.splice(i, 1);
                break;
              }
            }
          }
        }
        this.updateTableScrollY();
      }
    },
    loadOrToggle: function loadOrToggle(row) {
      this.assertRowKey();
      var _states5 = this.states,
          lazy = _states5.lazy,
          treeData = _states5.treeData,
          rowKey = _states5.rowKey;

      var id = getRowIdentity(row, rowKey);
      var data = treeData[id];
      if (lazy && data && 'loaded' in data && !data.loaded) {
        this.loadData(row, id, data);
      } else {
        this.toggleTreeExpansion(row);
      }
    },
    loadData: function loadData(row, key, treeNode) {
      var _this = this;

      var load = this.table.load;
      var _states6 = this.states,
          lazyTreeNodeMap = _states6.lazyTreeNodeMap,
          treeData = _states6.treeData;

      if (load && !treeData[key].loaded) {
        treeData[key].loading = true;
        load(row, treeNode, function (data) {
          if (!Array.isArray(data)) {
            throw new Error('[FksTable] data must be an array');
          }
          treeData[key].loading = false;
          treeData[key].loaded = true;
          treeData[key].expanded = true;
          if (data.length) {
            _this.$set(lazyTreeNodeMap, key, data);
          }
          _this.table.$emit('expand-change', row, true);
        });
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/table/src/store/watcher.js







var watcher_sortData = function sortData(data, states) {
  var sortingColumn = states.sortingColumn;
  if (!sortingColumn || typeof sortingColumn.sortable === 'string') {
    return data;
  }
  return util_orderBy(data, states.sortProp, states.sortOrder, sortingColumn.sortMethod, sortingColumn.sortBy);
};

var doFlattenColumns = function doFlattenColumns(columns) {
  var result = [];
  columns.forEach(function (column) {
    if (column.children) {
      result.push.apply(result, doFlattenColumns(column.children));
    } else {
      result.push(column);
    }
  });
  return result;
};

/* harmony default export */ var watcher = (external_vue_default.a.extend({
  data: function data() {
    return {
      states: {
        // 3.0 版本后要求必须设置该属性
        rowKey: null,

        // 渲染的数据来源，是对 table 中的 data 过滤排序后的结果
        data: [],

        // 是否包含固定列
        isComplex: false,

        // 列
        _columns: [], // 不可响应的
        originColumns: [],
        columns: [],
        fixedColumns: [],
        rightFixedColumns: [],
        leafColumns: [],
        fixedLeafColumns: [],
        rightFixedLeafColumns: [],
        leafColumnsLength: 0,
        fixedLeafColumnsLength: 0,
        rightFixedLeafColumnsLength: 0,

        // 选择
        isAllSelected: false,
        selection: [],
        reserveSelection: false,
        selectOnIndeterminate: false,
        selectable: null,

        // 过滤
        filters: {}, // 不可响应的
        filteredData: null,

        // 排序
        sortingColumn: null,
        sortProp: null,
        sortOrder: null,

        hoverRow: null,
        selectedCol: []
      }
    };
  },


  mixins: [expand, current, tree],

  methods: {
    // 检查 rowKey 是否存在
    assertRowKey: function assertRowKey() {
      var rowKey = this.states.rowKey;
      if (!rowKey) throw new Error('[FksTable] prop row-key is required');
    },


    // 更新列
    updateColumns: function updateColumns() {
      var states = this.states;
      var _columns = states._columns || [];
      states.fixedColumns = _columns.filter(function (column) {
        return column.fixed === true || column.fixed === 'left';
      });
      states.rightFixedColumns = _columns.filter(function (column) {
        return column.fixed === 'right';
      });

      if (states.fixedColumns.length > 0 && _columns[0] && _columns[0].type === 'selection' && !_columns[0].fixed) {
        _columns[0].fixed = true;
        states.fixedColumns.unshift(_columns[0]);
      }

      var notFixedColumns = _columns.filter(function (column) {
        return !column.fixed;
      });
      states.originColumns = [].concat(states.fixedColumns).concat(notFixedColumns).concat(states.rightFixedColumns);

      var leafColumns = doFlattenColumns(notFixedColumns);
      var fixedLeafColumns = doFlattenColumns(states.fixedColumns);
      var rightFixedLeafColumns = doFlattenColumns(states.rightFixedColumns);

      states.leafColumnsLength = leafColumns.length;
      states.fixedLeafColumnsLength = fixedLeafColumns.length;
      states.rightFixedLeafColumnsLength = rightFixedLeafColumns.length;

      states.columns = [].concat(fixedLeafColumns).concat(leafColumns).concat(rightFixedLeafColumns);
      states.isComplex = states.fixedColumns.length > 0 || states.rightFixedColumns.length > 0;
    },


    // 更新 DOM
    scheduleLayout: function scheduleLayout(needUpdateColumns) {
      if (needUpdateColumns) {
        this.updateColumns();
      }
      this.table.debouncedUpdateLayout();
    },


    // 选择
    isSelected: function isSelected(row) {
      var _states$selection = this.states.selection,
          selection = _states$selection === undefined ? [] : _states$selection;

      return selection.indexOf(row) > -1;
    },
    clearSelection: function clearSelection() {
      var states = this.states;
      states.isAllSelected = false;
      var oldSelection = states.selection;
      if (oldSelection.length) {
        states.selection = [];
        this.table.$emit('selection-change', []);
      }
    },
    cleanSelection: function cleanSelection() {
      var states = this.states;
      var data = states.data,
          rowKey = states.rowKey,
          selection = states.selection;

      var deleted = void 0;
      if (rowKey) {
        deleted = [];
        var selectedMap = getKeysMap(selection, rowKey);
        var dataMap = getKeysMap(data, rowKey);
        for (var key in selectedMap) {
          if (selectedMap.hasOwnProperty(key) && !dataMap[key]) {
            deleted.push(selectedMap[key].row);
          }
        }
      } else {
        deleted = selection.filter(function (item) {
          return data.indexOf(item) === -1;
        });
      }
      if (deleted.length) {
        var newSelection = selection.filter(function (item) {
          return deleted.indexOf(item) === -1;
        });
        states.selection = newSelection;
        this.table.$emit('selection-change', newSelection.slice());
      }
    },
    toggleRowSelection: function toggleRowSelection(row, selected) {
      var emitChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

      var changed = toggleRowStatus(this.states.selection, row, selected);
      if (changed) {
        var newSelection = (this.states.selection || []).slice();
        // 调用 API 修改选中值，不触发 select 事件
        if (emitChange) {
          this.table.$emit('select', newSelection, row);
        }
        this.table.$emit('selection-change', newSelection);
      }
    },
    _toggleAllSelection: function _toggleAllSelection() {
      var states = this.states;
      var _states$data = states.data,
          data = _states$data === undefined ? [] : _states$data,
          selection = states.selection;
      // when only some rows are selected (but not all), select or deselect all of them
      // depending on the value of selectOnIndeterminate

      var value = states.selectOnIndeterminate ? !states.isAllSelected : !(states.isAllSelected || selection.length);
      states.isAllSelected = value;

      var selectionChanged = false;
      // 兼容树形列表
      var flatMap = function flatMap(array) {
        return array && array.length ? array.flatMap(function (item) {
          return [item].concat(flatMap(item.children));
        }) : [];
      };
      flatMap(data).forEach(function (row, index) {
        if (states.selectable) {
          if (states.selectable.call(null, row, index) && toggleRowStatus(selection, row, value)) {
            selectionChanged = true;
          }
        } else {
          if (toggleRowStatus(selection, row, value)) {
            selectionChanged = true;
          }
        }
      });

      if (selectionChanged) {
        this.table.$emit('selection-change', selection ? selection.slice() : []);
      }
      this.table.$emit('select-all', selection, value);
    },
    updateSelectionByRowKey: function updateSelectionByRowKey() {
      var states = this.states;
      var selection = states.selection,
          rowKey = states.rowKey,
          data = states.data;

      var selectedMap = getKeysMap(selection, rowKey);
      data.forEach(function (row) {
        var rowId = getRowIdentity(row, rowKey);
        var rowInfo = selectedMap[rowId];
        if (rowInfo) {
          selection[rowInfo.index] = row;
        }
      });
    },
    updateAllSelected: function updateAllSelected() {
      var states = this.states;
      var selection = states.selection,
          rowKey = states.rowKey,
          selectable = states.selectable;
      // data 为 null 时，解构时的默认值会被忽略

      var data = states.data || [];
      if (data.length === 0) {
        states.isAllSelected = false;
        return;
      }

      var selectedMap = void 0;
      if (rowKey) {
        selectedMap = getKeysMap(selection, rowKey);
      }
      var isSelected = function isSelected(row) {
        if (selectedMap) {
          return !!selectedMap[getRowIdentity(row, rowKey)];
        } else {
          return selection.indexOf(row) !== -1;
        }
      };
      var isAllSelected = true;
      var selectedCount = 0;
      for (var i = 0, j = data.length; i < j; i++) {
        var item = data[i];
        var isRowSelectable = selectable && selectable.call(null, item, i);
        if (!isSelected(item)) {
          if (!selectable || isRowSelectable) {
            isAllSelected = false;
            break;
          }
        } else {
          selectedCount++;
        }
      }

      if (selectedCount === 0) isAllSelected = false;
      states.isAllSelected = isAllSelected;
    },


    // 过滤与排序
    updateFilters: function updateFilters(columns, values) {
      if (!Array.isArray(columns)) {
        columns = [columns];
      }
      var states = this.states;
      var filters = {};
      columns.forEach(function (col) {
        states.filters[col.id] = values;
        filters[col.columnKey || col.id] = values;
      });

      return filters;
    },
    updateSort: function updateSort(column, prop, order) {
      if (this.states.sortingColumn && this.states.sortingColumn !== column) {
        this.states.sortingColumn.order = null;
      }
      this.states.sortingColumn = column;
      this.states.sortProp = prop;
      this.states.sortOrder = order;
    },
    execFilter: function execFilter() {
      var _this = this;

      var states = this.states;
      var _data = states._data,
          filters = states.filters;

      var data = _data;

      Object.keys(filters).forEach(function (columnId) {
        var values = states.filters[columnId];
        if (!values || values.length === 0) return;
        var column = getColumnById(_this.states, columnId);
        if (column && column.filterMethod) {
          data = data.filter(function (row) {
            return values.some(function (value) {
              return column.filterMethod.call(null, value, row, column);
            });
          });
        }
      });

      states.filteredData = data;
    },
    execSort: function execSort() {
      var states = this.states;
      states.data = watcher_sortData(states.filteredData, states);
    },


    // 根据 filters 与 sort 去过滤 data
    execQuery: function execQuery(ignore) {
      if (!(ignore && ignore.filter)) {
        this.execFilter();
      }
      this.execSort();
    },
    clearFilter: function clearFilter(columnKeys) {
      var states = this.states;
      var _table$$refs = this.table.$refs,
          tableHeader = _table$$refs.tableHeader,
          fixedTableHeader = _table$$refs.fixedTableHeader,
          rightFixedTableHeader = _table$$refs.rightFixedTableHeader;


      var panels = {};
      if (tableHeader) panels = merge_default()(panels, tableHeader.filterPanels);
      if (fixedTableHeader) panels = merge_default()(panels, fixedTableHeader.filterPanels);
      if (rightFixedTableHeader) panels = merge_default()(panels, rightFixedTableHeader.filterPanels);

      var keys = Object.keys(panels);
      if (!keys.length) return;

      if (typeof columnKeys === 'string') {
        columnKeys = [columnKeys];
      }

      if (Array.isArray(columnKeys)) {
        var columns = columnKeys.map(function (key) {
          return getColumnByKey(states, key);
        });
        keys.forEach(function (key) {
          var column = columns.find(function (col) {
            return col.id === key;
          });
          if (column) {
            // TODO: 优化这里的代码
            panels[key].filteredValue = [];
          }
        });
        this.commit('filterChange', {
          column: columns,
          values: [],
          silent: true,
          multi: true
        });
      } else {
        keys.forEach(function (key) {
          // TODO: 优化这里的代码
          panels[key].filteredValue = [];
        });

        states.filters = {};
        this.commit('filterChange', {
          column: {},
          values: [],
          silent: true
        });
      }
    },
    clearSort: function clearSort() {
      var states = this.states;
      if (!states.sortingColumn) return;

      this.updateSort(null, null, null);
      this.commit('changeSortCondition', {
        silent: true
      });
    },


    // 适配层，expand-row-keys 在 Expand 与 TreeTable 中都有使用
    setExpandRowKeysAdapter: function setExpandRowKeysAdapter(val) {
      // 这里会触发额外的计算，但为了兼容性，暂时这么做
      this.setExpandRowKeys(val);
      this.updateTreeExpandKeys(val);
    },


    // 展开行与 TreeTable 都要使用
    toggleRowExpansionAdapter: function toggleRowExpansionAdapter(row, expanded) {
      var hasExpandColumn = this.states.columns.some(function (_ref) {
        var type = _ref.type;
        return type === 'expand';
      });
      if (hasExpandColumn) {
        this.toggleRowExpansion(row, expanded);
      } else {
        this.toggleTreeExpansion(row, expanded);
      }
    }
  }
}));
// CONCATENATED MODULE: ./packages/table/src/store/index.js




watcher.prototype.mutations = {
  setData: function setData(states, data) {
    var dataInstanceChanged = states._data !== data;
    states._data = data;
    this.execQuery();
    // 数据变化，更新部分数据。
    // 没有使用 computed，而是手动更新部分数据 https://github.com/vuejs/vue/issues/6660#issuecomment-331417140
    this.updateCurrentRowData();
    this.updateExpandRows();
    if (states.reserveSelection) {
      this.assertRowKey();
      this.updateSelectionByRowKey();
    } else {
      if (dataInstanceChanged) {
        this.clearSelection();
      } else {
        this.cleanSelection();
      }
    }
    this.updateAllSelected();

    this.updateTableScrollY();
  },
  insertColumn: function insertColumn(states, column, index, parent) {
    var array = states._columns;
    if (parent) {
      array = parent.children;
      if (!array) array = parent.children = [];
    }

    if (typeof index !== 'undefined') {
      array.splice(index, 0, column);
    } else {
      array.push(column);
    }

    if (column.type === 'selection') {
      states.selectable = column.selectable;
      states.reserveSelection = column.reserveSelection;
    }

    if (this.table.$ready) {
      this.updateColumns(); // hack for dynamics insert column
      this.scheduleLayout();
    }
  },
  removeColumn: function removeColumn(states, column, parent) {
    var array = states._columns;
    if (parent) {
      array = parent.children;
      if (!array) array = parent.children = [];
    }
    if (array) {
      array.splice(array.indexOf(column), 1);
    }

    if (this.table.$ready) {
      this.updateColumns(); // hack for dynamics remove column
      this.scheduleLayout();
    }
  },
  sort: function sort(states, options) {
    var prop = options.prop,
        order = options.order,
        init = options.init;

    if (prop) {
      var column = Object(util_["arrayFind"])(states.columns, function (column) {
        return column.property === prop;
      });
      if (column) {
        column.order = order;
        this.updateSort(column, prop, order);
        this.commit('changeSortCondition', { init: init });
      }
    }
  },
  changeSortCondition: function changeSortCondition(states, options) {
    // 修复 pr https://github.com/ElemeFE/element/pull/15012 导致的 bug
    var column = states.sortingColumn,
        prop = states.sortProp,
        order = states.sortOrder;

    if (order === null) {
      states.sortingColumn = null;
      states.sortProp = null;
    }
    var ingore = { filter: true };
    this.execQuery(ingore);

    if (!options || !(options.silent || options.init)) {
      this.table.$emit('sort-change', {
        column: column,
        prop: prop,
        order: order
      });
    }

    this.updateTableScrollY();
  },
  filterChange: function filterChange(states, options) {
    var column = options.column,
        values = options.values,
        silent = options.silent;

    var newFilters = this.updateFilters(column, values);

    this.execQuery();

    if (!silent) {
      this.table.$emit('filter-change', newFilters);
    }

    this.updateTableScrollY();
  },
  toggleAllSelection: function toggleAllSelection() {
    this.toggleAllSelection();
  },
  rowSelectedChanged: function rowSelectedChanged(states, row) {
    this.toggleRowSelection(row);
    this.updateAllSelected();
  },
  setHoverRow: function setHoverRow(states, row) {
    states.hoverRow = row;
  },
  setCurrentRow: function setCurrentRow(states, row) {
    this.updateCurrentRow(row);
  },
  setSelectedCol: function setSelectedCol(states, selectedCol) {
    states.selectedCol = selectedCol;
  }
};

watcher.prototype.commit = function (name) {
  var mutations = this.mutations;
  if (mutations[name]) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    mutations[name].apply(this, [this.states].concat(args));
  } else {
    throw new Error('Action not found: ' + name);
  }
};

watcher.prototype.updateTableScrollY = function () {
  external_vue_default.a.nextTick(this.table.updateScrollY);
};

/* harmony default export */ var src_store = (watcher);
// CONCATENATED MODULE: ./packages/table/src/store/helper.js



function createStore(table) {
  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!table) {
    throw new Error('Table is required.');
  }

  var store = new src_store();
  store.table = table;
  // fix https://github.com/ElemeFE/element/issues/14075
  // related pr https://github.com/ElemeFE/element/pull/14146
  store.toggleAllSelection = debounce_default()(10, store._toggleAllSelection);
  Object.keys(initialState).forEach(function (key) {
    store.states[key] = initialState[key];
  });
  return store;
}

function mapStates(mapper) {
  var res = {};
  Object.keys(mapper).forEach(function (key) {
    var value = mapper[key];
    var fn = void 0;
    if (typeof value === 'string') {
      fn = function fn() {
        return this.store.states[value];
      };
    } else if (typeof value === 'function') {
      fn = function fn() {
        return value.call(this, this.store.states);
      };
    } else {
      console.error('invalid value type');
    }
    if (fn) {
      res[key] = fn;
    }
  });
  return res;
};
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/scrollbar-width"
var scrollbar_width_ = __webpack_require__(34);
var scrollbar_width_default = /*#__PURE__*/__webpack_require__.n(scrollbar_width_);

// CONCATENATED MODULE: ./packages/table/src/table-layout.js
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





var table_layout_TableLayout = function () {
  function TableLayout(options) {
    _classCallCheck(this, TableLayout);

    this.observers = [];
    this.table = null;
    this.store = null;
    this.columns = null;
    this.fit = true;
    this.showHeader = true;

    this.height = null;
    this.scrollX = false;
    this.scrollY = false;
    this.bodyWidth = null;
    this.fixedWidth = null;
    this.rightFixedWidth = null;
    this.tableHeight = null;
    this.headerHeight = 44; // Table Header Height
    this.appendHeight = 0; // Append Slot Height
    this.footerHeight = 44; // Table Footer Height
    this.viewportHeight = null; // Table Height - Scroll Bar Height
    this.bodyHeight = null; // Table Height - Table Header Height
    this.fixedBodyHeight = null; // Table Height - Table Header Height - Scroll Bar Height
    this.gutterWidth = scrollbar_width_default()();

    for (var name in options) {
      if (options.hasOwnProperty(name)) {
        this[name] = options[name];
      }
    }

    if (!this.table) {
      throw new Error('table is required for Table Layout');
    }
    if (!this.store) {
      throw new Error('store is required for Table Layout');
    }
  }

  TableLayout.prototype.updateScrollY = function updateScrollY() {
    var height = this.height;
    if (height === null) return false;
    var bodyWrapper = this.table.bodyWrapper;
    if (this.table.$el && bodyWrapper) {
      var body = bodyWrapper.querySelector('.fks-table__body');
      var prevScrollY = this.scrollY;
      var scrollY = body.offsetHeight > this.bodyHeight;
      this.scrollY = scrollY;
      return prevScrollY !== scrollY;
    }
    return false;
  };

  TableLayout.prototype.setHeight = function setHeight(value) {
    var _this = this;

    var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'height';

    if (external_vue_default.a.prototype.$isServer) return;
    var el = this.table.$el;
    value = parseHeight(value);
    this.height = value;

    if (!el && (value || value === 0)) return external_vue_default.a.nextTick(function () {
      return _this.setHeight(value, prop);
    });

    if (typeof value === 'number') {
      el.style[prop] = value + 'px';
      this.updateElsHeight();
    } else if (typeof value === 'string') {
      el.style[prop] = value;
      this.updateElsHeight();
    }
  };

  TableLayout.prototype.setMaxHeight = function setMaxHeight(value) {
    this.setHeight(value, 'max-height');
  };

  TableLayout.prototype.getFlattenColumns = function getFlattenColumns() {
    var flattenColumns = [];
    var columns = this.table.columns;
    columns.forEach(function (column) {
      if (column.isColumnGroup) {
        flattenColumns.push.apply(flattenColumns, column.columns);
      } else {
        flattenColumns.push(column);
      }
    });

    return flattenColumns;
  };

  TableLayout.prototype.updateElsHeight = function updateElsHeight() {
    var _this2 = this;

    if (!this.table.$ready) return external_vue_default.a.nextTick(function () {
      return _this2.updateElsHeight();
    });
    var _table$$refs = this.table.$refs,
        headerWrapper = _table$$refs.headerWrapper,
        appendWrapper = _table$$refs.appendWrapper,
        footerWrapper = _table$$refs.footerWrapper;

    this.appendHeight = appendWrapper ? appendWrapper.offsetHeight : 0;

    if (this.showHeader && !headerWrapper) return;

    // fix issue (https://github.com/ElemeFE/element/pull/16956)
    var headerTrElm = headerWrapper ? headerWrapper.querySelector('.fks-table__header tr') : null;
    var noneHeader = this.headerDisplayNone(headerTrElm);

    var headerHeight = this.headerHeight = !this.showHeader ? 0 : headerWrapper.offsetHeight;
    if (this.showHeader && !noneHeader && headerWrapper.offsetWidth > 0 && (this.table.columns || []).length > 0 && headerHeight < 2) {
      return external_vue_default.a.nextTick(function () {
        return _this2.updateElsHeight();
      });
    }
    var tableHeight = this.tableHeight = this.table.$el.clientHeight;
    var footerHeight = this.footerHeight = footerWrapper ? footerWrapper.offsetHeight : 0;
    if (this.height !== null) {
      this.bodyHeight = tableHeight - headerHeight - footerHeight + (footerWrapper ? 1 : 0);
    }
    this.fixedBodyHeight = this.scrollX ? this.bodyHeight - this.gutterWidth : this.bodyHeight;

    var noData = !(this.store.states.data && this.store.states.data.length);
    this.viewportHeight = this.scrollX ? tableHeight - (noData ? 0 : this.gutterWidth) : tableHeight;

    this.updateScrollY();
    this.notifyObservers('scrollable');
  };

  TableLayout.prototype.headerDisplayNone = function headerDisplayNone(elm) {
    if (!elm) return true;
    var headerChild = elm;
    while (headerChild.tagName !== 'DIV') {
      if (getComputedStyle(headerChild).display === 'none') {
        return true;
      }
      headerChild = headerChild.parentElement;
    }
    return false;
  };

  TableLayout.prototype.updateColumnsWidth = function updateColumnsWidth() {
    if (external_vue_default.a.prototype.$isServer) return;
    var fit = this.fit;
    var bodyWidth = this.table.$el.clientWidth;
    var bodyMinWidth = 0;

    var flattenColumns = this.getFlattenColumns();
    var flexColumns = flattenColumns.filter(function (column) {
      return typeof column.width !== 'number';
    });

    flattenColumns.forEach(function (column) {
      // Clean those columns whose width changed from flex to unflex
      if (typeof column.width === 'number' && column.realWidth) column.realWidth = null;
    });

    if (flexColumns.length > 0 && fit) {
      flattenColumns.forEach(function (column) {
        bodyMinWidth += column.width || column.minWidth || 80;
      });

      var scrollYWidth = this.scrollY ? this.gutterWidth : 0;

      if (bodyMinWidth <= bodyWidth - scrollYWidth) {
        // DON'T HAVE SCROLL BAR
        this.scrollX = false;

        var totalFlexWidth = bodyWidth - scrollYWidth - bodyMinWidth;

        if (flexColumns.length === 1) {
          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth;
        } else {
          var allColumnsWidth = flexColumns.reduce(function (prev, column) {
            return prev + (column.minWidth || 80);
          }, 0);
          var flexWidthPerPixel = totalFlexWidth / allColumnsWidth;
          var noneFirstWidth = 0;

          flexColumns.forEach(function (column, index) {
            if (index === 0) return;
            var flexWidth = Math.floor((column.minWidth || 80) * flexWidthPerPixel);
            noneFirstWidth += flexWidth;
            column.realWidth = (column.minWidth || 80) + flexWidth;
          });

          flexColumns[0].realWidth = (flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;
        }
      } else {
        // HAVE HORIZONTAL SCROLL BAR
        this.scrollX = true;
        flexColumns.forEach(function (column) {
          column.realWidth = column.minWidth;
        });
      }

      this.bodyWidth = Math.max(bodyMinWidth, bodyWidth);
      this.table.resizeState.width = this.bodyWidth;
    } else {
      flattenColumns.forEach(function (column) {
        if (!column.width && !column.minWidth) {
          column.realWidth = 80;
        } else {
          column.realWidth = column.width || column.minWidth;
        }

        bodyMinWidth += column.realWidth;
      });
      this.scrollX = bodyMinWidth > bodyWidth;

      this.bodyWidth = bodyMinWidth;
    }

    var fixedColumns = this.store.states.fixedColumns;

    if (fixedColumns.length > 0) {
      var fixedWidth = 0;
      fixedColumns.forEach(function (column) {
        fixedWidth += column.realWidth || column.width;
      });

      this.fixedWidth = fixedWidth;
    }

    var rightFixedColumns = this.store.states.rightFixedColumns;
    if (rightFixedColumns.length > 0) {
      var rightFixedWidth = 0;
      rightFixedColumns.forEach(function (column) {
        rightFixedWidth += column.realWidth || column.width;
      });

      this.rightFixedWidth = rightFixedWidth;
    }

    this.notifyObservers('columns');
  };

  TableLayout.prototype.addObserver = function addObserver(observer) {
    this.observers.push(observer);
  };

  TableLayout.prototype.removeObserver = function removeObserver(observer) {
    var index = this.observers.indexOf(observer);
    if (index !== -1) {
      this.observers.splice(index, 1);
    }
  };

  TableLayout.prototype.notifyObservers = function notifyObservers(event) {
    var _this3 = this;

    var observers = this.observers;
    observers.forEach(function (observer) {
      switch (event) {
        case 'columns':
          observer.onColumnsChange(_this3);
          break;
        case 'scrollable':
          observer.onScrollableChange(_this3);
          break;
        default:
          throw new Error('Table Layout don\'t have event ' + event + '.');
      }
    });
  };

  return TableLayout;
}();

/* harmony default export */ var table_layout = (table_layout_TableLayout);
// EXTERNAL MODULE: external "fawkes-lib/lib/checkbox"
var checkbox_ = __webpack_require__(20);
var checkbox_default = /*#__PURE__*/__webpack_require__.n(checkbox_);

// CONCATENATED MODULE: ./packages/table/src/layout-observer.js
/* harmony default export */ var layout_observer = ({
  created: function created() {
    this.tableLayout.addObserver(this);
  },
  destroyed: function destroyed() {
    this.tableLayout.removeObserver(this);
  },


  computed: {
    tableLayout: function tableLayout() {
      var layout = this.layout;
      if (!layout && this.table) {
        layout = this.table.layout;
      }
      if (!layout) {
        throw new Error('Can not find table layout.');
      }
      return layout;
    }
  },

  mounted: function mounted() {
    this.onColumnsChange(this.tableLayout);
    this.onScrollableChange(this.tableLayout);
  },
  updated: function updated() {
    if (this.__updated__) return;
    this.onColumnsChange(this.tableLayout);
    this.onScrollableChange(this.tableLayout);
    this.__updated__ = true;
  },


  methods: {
    onColumnsChange: function onColumnsChange(layout) {
      var cols = this.$el.querySelectorAll('colgroup > col');
      if (!cols.length) return;
      var flattenColumns = layout.getFlattenColumns();
      var columnsMap = {};
      flattenColumns.forEach(function (column) {
        columnsMap[column.id] = column;
      });
      for (var i = 0, j = cols.length; i < j; i++) {
        var col = cols[i];
        var name = col.getAttribute('name');
        var column = columnsMap[name];
        if (column) {
          col.setAttribute('width', column.realWidth || column.width);
        }
      }
    },
    onScrollableChange: function onScrollableChange(layout) {
      var cols = this.$el.querySelectorAll('colgroup > col[name=gutter]');
      for (var i = 0, j = cols.length; i < j; i++) {
        var col = cols[i];
        col.setAttribute('width', layout.scrollY ? layout.gutterWidth : '0');
      }
      var ths = this.$el.querySelectorAll('th.gutter');
      for (var _i = 0, _j = ths.length; _i < _j; _i++) {
        var th = ths[_i];
        th.style.width = layout.scrollY ? layout.gutterWidth + 'px' : '0';
        th.style.display = layout.scrollY ? '' : 'none';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/table/src/table-body.js
var table_body_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var table_body_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };










/* harmony default export */ var table_body = ({
  name: 'FksTableBody',

  mixins: [layout_observer],

  components: {
    FksCheckbox: checkbox_default.a,
    FksTooltip: tooltip_default.a
  },

  props: {
    store: {
      required: true
    },
    stripe: Boolean,
    context: {},
    rowClassName: [String, Function],
    rowStyle: [Object, Function],
    fixed: String,
    highlight: Boolean
  },

  render: function render(h) {
    var _this = this;

    var data = this.data || [];
    return h(
      'table',
      {
        'class': 'fks-table__body',
        attrs: { cellspacing: '0',
          cellpadding: '0',
          border: '0' }
      },
      [h('colgroup', [this.columns.map(function (column) {
        return h('col', {
          attrs: { name: column.id },
          key: column.id });
      })]), h('tbody', [data.reduce(function (acc, row) {
        return acc.concat(_this.wrappedRowRender(row, acc.length));
      }, []), h('fks-tooltip', {
        attrs: { effect: this.table.tooltipEffect, placement: 'top', content: this.tooltipContent },
        ref: 'tooltip' })])]
    );
  },


  computed: table_body_extends({
    table: function table() {
      return this.$parent;
    }
  }, mapStates({
    data: 'data',
    columns: 'columns',
    treeIndent: 'indent',
    leftFixedLeafCount: 'fixedLeafColumnsLength',
    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
    columnsCount: function columnsCount(states) {
      return states.columns.length;
    },
    leftFixedCount: function leftFixedCount(states) {
      return states.fixedColumns.length;
    },
    rightFixedCount: function rightFixedCount(states) {
      return states.rightFixedColumns.length;
    },
    hasExpandColumn: function hasExpandColumn(states) {
      return states.columns.some(function (_ref) {
        var type = _ref.type;
        return type === 'expand';
      });
    }
  }), {
    firstDefaultColumnIndex: function firstDefaultColumnIndex() {
      return Object(util_["arrayFindIndex"])(this.columns, function (_ref2) {
        var type = _ref2.type;
        return type === 'default';
      });
    }
  }),

  watch: {
    // don't trigger getter of currentRow in getCellClass. see https://jsfiddle.net/oe2b4hqt/
    // update DOM manually. see https://github.com/ElemeFE/element/pull/13954/files#diff-9b450c00d0a9dec0ffad5a3176972e40
    'store.states.hoverRow': function storeStatesHoverRow(newVal, oldVal) {
      var _this2 = this;

      if (!this.store.states.isComplex || this.$isServer) return;
      var raf = window.requestAnimationFrame;
      if (!raf) {
        raf = function raf(fn) {
          return setTimeout(fn, 16);
        };
      }
      raf(function () {
        var rows = _this2.$el.querySelectorAll('.fks-table__row');
        var oldRow = rows[oldVal];
        var newRow = rows[newVal];
        if (oldRow) {
          Object(dom_["removeClass"])(oldRow, 'hover-row');
        }
        if (newRow) {
          Object(dom_["addClass"])(newRow, 'hover-row');
        }
      });
    }
  },

  data: function data() {
    return {
      tooltipContent: ''
    };
  },
  created: function created() {
    this.activateTooltip = debounce_default()(50, function (tooltip) {
      return tooltip.handleShowPopper();
    });
  },


  methods: {
    getKeyOfRow: function getKeyOfRow(row, index) {
      var rowKey = this.table.rowKey;
      if (rowKey) {
        return getRowIdentity(row, rowKey);
      }
      return index;
    },
    isColumnHidden: function isColumnHidden(index) {
      if (this.fixed === true || this.fixed === 'left') {
        return index >= this.leftFixedLeafCount;
      } else if (this.fixed === 'right') {
        return index < this.columnsCount - this.rightFixedLeafCount;
      } else {
        return index < this.leftFixedLeafCount || index >= this.columnsCount - this.rightFixedLeafCount;
      }
    },
    getSpan: function getSpan(row, column, rowIndex, columnIndex) {
      var rowspan = 1;
      var colspan = 1;
      var fn = this.table.spanMethod;
      if (typeof fn === 'function') {
        var result = fn({
          row: row,
          column: column,
          rowIndex: rowIndex,
          columnIndex: columnIndex
        });
        if (Array.isArray(result)) {
          rowspan = result[0];
          colspan = result[1];
        } else if ((typeof result === 'undefined' ? 'undefined' : table_body_typeof(result)) === 'object') {
          rowspan = result.rowspan;
          colspan = result.colspan;
        }
      }
      return { rowspan: rowspan, colspan: colspan };
    },
    getRowStyle: function getRowStyle(row, rowIndex) {
      var rowStyle = this.table.rowStyle;
      if (typeof rowStyle === 'function') {
        return rowStyle.call(null, {
          row: row,
          rowIndex: rowIndex
        });
      }
      return rowStyle || null;
    },
    getRowClass: function getRowClass(row, rowIndex) {
      var classes = ['fks-table__row'];
      if (this.table.highlightCurrentRow && row === this.store.states.currentRow) {
        classes.push('current-row');
      }

      if (this.stripe && rowIndex % 2 === 1) {
        classes.push('fks-table__row--striped');
      }
      var rowClassName = this.table.rowClassName;
      if (typeof rowClassName === 'string') {
        classes.push(rowClassName);
      } else if (typeof rowClassName === 'function') {
        classes.push(rowClassName.call(null, {
          row: row,
          rowIndex: rowIndex
        }));
      }

      if (this.store.states.expandRows.indexOf(row) > -1) {
        classes.push('expanded');
      }

      return classes;
    },
    getCellStyle: function getCellStyle(rowIndex, columnIndex, row, column) {
      var cellStyle = this.table.cellStyle;
      if (typeof cellStyle === 'function') {
        return cellStyle.call(null, {
          rowIndex: rowIndex,
          columnIndex: columnIndex,
          row: row,
          column: column
        });
      }
      return cellStyle;
    },
    getCellClass: function getCellClass(rowIndex, columnIndex, row, column) {
      var classes = [column.id, column.align, column.className];

      if (this.isColumnHidden(columnIndex)) {
        classes.push('is-hidden');
      }

      var cellClassName = this.table.cellClassName;
      if (typeof cellClassName === 'string') {
        classes.push(cellClassName);
      } else if (typeof cellClassName === 'function') {
        classes.push(cellClassName.call(null, {
          rowIndex: rowIndex,
          columnIndex: columnIndex,
          row: row,
          column: column
        }));
      }

      return classes.join(' ');
    },
    getColspanRealWidth: function getColspanRealWidth(columns, colspan, index) {
      if (colspan < 1) {
        return columns[index].realWidth;
      }
      var widthArr = columns.map(function (_ref3) {
        var realWidth = _ref3.realWidth;
        return realWidth;
      }).slice(index, index + colspan);
      return widthArr.reduce(function (acc, width) {
        return acc + width;
      }, -1);
    },
    handleCellMouseEnter: function handleCellMouseEnter(event, row) {
      var table = this.table;
      var cell = getCell(event);

      if (cell) {
        var column = getColumnByCell(table, cell);
        var hoverState = table.hoverState = { cell: cell, column: column, row: row };
        table.$emit('cell-mouse-enter', hoverState.row, hoverState.column, hoverState.cell, event);
      }

      // 判断是否text-overflow, 如果是就显示tooltip
      var cellChild = event.target.querySelector('.cell');
      if (!(Object(dom_["hasClass"])(cellChild, 'fks-tooltip') && cellChild.childNodes.length)) {
        return;
      }
      // use range width instead of scrollWidth to determine whether the text is overflowing
      // to address a potential FireFox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1074543#c3
      var range = document.createRange();
      range.setStart(cellChild, 0);
      range.setEnd(cellChild, cellChild.childNodes.length);
      var rangeWidth = range.getBoundingClientRect().width;
      var padding = (parseInt(Object(dom_["getStyle"])(cellChild, 'paddingLeft'), 10) || 0) + (parseInt(Object(dom_["getStyle"])(cellChild, 'paddingRight'), 10) || 0);
      if ((rangeWidth + padding > cellChild.offsetWidth || cellChild.scrollWidth > cellChild.offsetWidth) && this.$refs.tooltip) {
        var tooltip = this.$refs.tooltip;
        // TODO 会引起整个 Table 的重新渲染，需要优化
        this.tooltipContent = cell.innerText || cell.textContent;
        tooltip.referenceElm = cell;
        tooltip.$refs.popper && (tooltip.$refs.popper.style.display = 'none');
        tooltip.doDestroy();
        tooltip.setExpectedState(true);
        this.activateTooltip(tooltip);
      }
    },
    handleCellMouseLeave: function handleCellMouseLeave(event) {
      var tooltip = this.$refs.tooltip;
      if (tooltip) {
        tooltip.setExpectedState(false);
        tooltip.handleClosePopper();
      }
      var cell = getCell(event);
      if (!cell) return;

      var oldHoverState = this.table.hoverState || {};
      this.table.$emit('cell-mouse-leave', oldHoverState.row, oldHoverState.column, oldHoverState.cell, event);
    },


    handleMouseEnter: debounce_default()(30, function (index) {
      this.store.commit('setHoverRow', index);
    }),

    handleMouseLeave: debounce_default()(30, function () {
      this.store.commit('setHoverRow', null);
    }),

    handleContextMenu: function handleContextMenu(event, row) {
      this.handleEvent(event, row, 'contextmenu');
    },
    handleDoubleClick: function handleDoubleClick(event, row) {
      this.handleEvent(event, row, 'dblclick');
    },
    handleClick: function handleClick(event, row) {
      this.store.commit('setCurrentRow', row);
      this.handleEvent(event, row, 'click');
    },
    handleEvent: function handleEvent(event, row, name) {
      var table = this.table;
      var cell = getCell(event);
      var column = void 0;
      if (cell) {
        column = getColumnByCell(table, cell);
        if (column) {
          table.$emit('cell-' + name, row, column, cell, event);
        }
      }
      table.$emit('row-' + name, row, column, event);
    },
    rowRender: function rowRender(row, $index, treeRowData) {
      var _this3 = this;

      var h = this.$createElement;
      var treeIndent = this.treeIndent,
          columns = this.columns,
          firstDefaultColumnIndex = this.firstDefaultColumnIndex;

      var columnsHidden = columns.map(function (column, index) {
        return _this3.isColumnHidden(index);
      });
      var rowClasses = this.getRowClass(row, $index);
      var display = true;
      if (treeRowData) {
        rowClasses.push('fks-table__row--level-' + treeRowData.level);
        display = treeRowData.display;
      }
      // 指令 v-show 会覆盖 row-style 中 display
      // 使用 :style 代替 v-show https://github.com/ElemeFE/element/issues/16995
      var displayStyle = display ? null : {
        display: 'none'
      };
      return h(
        'tr',
        {
          style: [displayStyle, this.getRowStyle(row, $index)],
          'class': rowClasses,
          key: this.getKeyOfRow(row, $index),
          on: {
            'dblclick': function dblclick($event) {
              return _this3.handleDoubleClick($event, row);
            },
            'click': function click($event) {
              return _this3.handleClick($event, row);
            },
            'contextmenu': function contextmenu($event) {
              return _this3.handleContextMenu($event, row);
            },
            'mouseenter': function mouseenter(_) {
              return _this3.handleMouseEnter($index);
            },
            'mouseleave': this.handleMouseLeave
          }
        },
        [columns.map(function (column, cellIndex) {
          var _getSpan = _this3.getSpan(row, column, $index, cellIndex),
              rowspan = _getSpan.rowspan,
              colspan = _getSpan.colspan;

          if (!rowspan || !colspan) {
            return null;
          }
          var columnData = table_body_extends({}, column);
          columnData.realWidth = _this3.getColspanRealWidth(columns, colspan, cellIndex);
          var data = {
            store: _this3.store,
            _self: _this3.context || _this3.table.$vnode.context,
            column: columnData,
            row: row,
            $index: $index
          };
          if (cellIndex === firstDefaultColumnIndex && treeRowData) {
            data.treeNode = {
              indent: treeRowData.level * treeIndent,
              level: treeRowData.level
            };
            if (typeof treeRowData.expanded === 'boolean') {
              data.treeNode.expanded = treeRowData.expanded;
              // 表明是懒加载
              if ('loading' in treeRowData) {
                data.treeNode.loading = treeRowData.loading;
              }
              if ('noLazyChildren' in treeRowData) {
                data.treeNode.noLazyChildren = treeRowData.noLazyChildren;
              }
            }
          }
          return h(
            'td',
            {
              style: _this3.getCellStyle($index, cellIndex, row, column),
              'class': _this3.getCellClass($index, cellIndex, row, column),
              attrs: { rowspan: rowspan,
                colspan: colspan
              },
              on: {
                'mouseenter': function mouseenter($event) {
                  return _this3.handleCellMouseEnter($event, row);
                },
                'mouseleave': _this3.handleCellMouseLeave
              }
            },
            [column.renderCell.call(_this3._renderProxy, _this3.$createElement, data, columnsHidden[cellIndex])]
          );
        })]
      );
    },
    wrappedRowRender: function wrappedRowRender(row, $index) {
      var _this4 = this;

      var h = this.$createElement;

      var store = this.store;
      var isRowExpanded = store.isRowExpanded,
          assertRowKey = store.assertRowKey;
      var _store$states = store.states,
          treeData = _store$states.treeData,
          lazyTreeNodeMap = _store$states.lazyTreeNodeMap,
          childrenColumnName = _store$states.childrenColumnName,
          rowKey = _store$states.rowKey;

      if (this.hasExpandColumn && isRowExpanded(row)) {
        var renderExpanded = this.table.renderExpanded;
        var tr = this.rowRender(row, $index);
        if (!renderExpanded) {
          console.error('[FawkesLib Error]renderExpanded is required.');
          return tr;
        }
        // 使用二维数组，避免修改 $index
        return [[tr, h(
          'tr',
          { key: 'expanded-row__' + tr.key },
          [h(
            'td',
            {
              attrs: { colspan: this.columnsCount },
              'class': 'fks-table__expanded-cell' },
            [renderExpanded(this.$createElement, { row: row, $index: $index, store: this.store })]
          )]
        )]];
      } else if (Object.keys(treeData).length) {
        assertRowKey();
        // TreeTable 时，rowKey 必须由用户设定，不使用 getKeyOfRow 计算
        // 在调用 rowRender 函数时，仍然会计算 rowKey，不太好的操作
        var key = getRowIdentity(row, rowKey);
        var cur = treeData[key];
        var treeRowData = null;
        if (cur) {
          treeRowData = {
            expanded: cur.expanded,
            level: cur.level,
            display: true
          };
          if (typeof cur.lazy === 'boolean') {
            if (typeof cur.loaded === 'boolean' && cur.loaded) {
              treeRowData.noLazyChildren = !(cur.children && cur.children.length);
            }
            treeRowData.loading = cur.loading;
          }
        }
        var tmp = [this.rowRender(row, $index, treeRowData)];
        // 渲染嵌套数据
        if (cur) {
          // currentRow 记录的是 index，所以还需主动增加 TreeTable 的 index
          var i = 0;
          var traverse = function traverse(children, parent) {
            if (!(children && children.length && parent)) return;
            children.forEach(function (node) {
              // 父节点的 display 状态影响子节点的显示状态
              var innerTreeRowData = {
                display: parent.display && parent.expanded,
                level: parent.level + 1
              };
              var childKey = getRowIdentity(node, rowKey);
              if (childKey === undefined || childKey === null) {
                throw new Error('for nested data item, row-key is required.');
              }
              cur = table_body_extends({}, treeData[childKey]);
              // 对于当前节点，分成有无子节点两种情况。
              // 如果包含子节点的，设置 expanded 属性。
              // 对于它子节点的 display 属性由它本身的 expanded 与 display 共同决定。
              if (cur) {
                innerTreeRowData.expanded = cur.expanded;
                // 懒加载的某些节点，level 未知
                cur.level = cur.level || innerTreeRowData.level;
                cur.display = !!(cur.expanded && innerTreeRowData.display);
                if (typeof cur.lazy === 'boolean') {
                  if (typeof cur.loaded === 'boolean' && cur.loaded) {
                    innerTreeRowData.noLazyChildren = !(cur.children && cur.children.length);
                  }
                  innerTreeRowData.loading = cur.loading;
                }
              }
              i++;
              tmp.push(_this4.rowRender(node, $index + i, innerTreeRowData));
              if (cur) {
                var _nodes = lazyTreeNodeMap[childKey] || node[childrenColumnName];
                traverse(_nodes, cur);
              }
            });
          };
          // 对于 root 节点，display 一定为 true
          cur.display = true;
          var nodes = lazyTreeNodeMap[key] || row[childrenColumnName];
          traverse(nodes, cur);
        }
        return tmp;
      } else {
        return this.rowRender(row, $index);
      }
    }
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/filter-panel.vue?vue&type=template&id=74cf32f8&
var filter_panelvue_type_template_id_74cf32f8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "fks-zoom-in-top" } }, [
    _vm.multiple
      ? _c(
          "div",
          {
            directives: [
              {
                name: "clickoutside",
                rawName: "v-clickoutside",
                value: _vm.handleOutsideClick,
                expression: "handleOutsideClick",
              },
              {
                name: "show",
                rawName: "v-show",
                value: _vm.showPopper,
                expression: "showPopper",
              },
            ],
            staticClass: "fks-table-filter",
          },
          [
            _c(
              "div",
              { staticClass: "fks-table-filter__content" },
              [
                _c(
                  "fks-scrollbar",
                  { attrs: { "wrap-class": "fks-table-filter__wrap" } },
                  [
                    _c(
                      "fks-checkbox-group",
                      {
                        staticClass: "fks-table-filter__checkbox-group",
                        model: {
                          value: _vm.filteredValue,
                          callback: function ($$v) {
                            _vm.filteredValue = $$v
                          },
                          expression: "filteredValue",
                        },
                      },
                      _vm._l(_vm.filters, function (filter) {
                        return _c(
                          "fks-checkbox",
                          { key: filter.value, attrs: { label: filter.value } },
                          [_vm._v(_vm._s(filter.text))]
                        )
                      }),
                      1
                    ),
                  ],
                  1
                ),
              ],
              1
            ),
            _c("div", { staticClass: "fks-table-filter__bottom" }, [
              _c(
                "button",
                {
                  class: { "is-disabled": _vm.filteredValue.length === 0 },
                  attrs: { disabled: _vm.filteredValue.length === 0 },
                  on: { click: _vm.handleConfirm },
                },
                [
                  _vm._v(
                    "\n        " +
                      _vm._s(_vm.t("fks.table.confirmFilter")) +
                      "\n      "
                  ),
                ]
              ),
              _c("button", { on: { click: _vm.handleReset } }, [
                _vm._v(_vm._s(_vm.t("fks.table.resetFilter"))),
              ]),
            ]),
          ]
        )
      : _c(
          "div",
          {
            directives: [
              {
                name: "clickoutside",
                rawName: "v-clickoutside",
                value: _vm.handleOutsideClick,
                expression: "handleOutsideClick",
              },
              {
                name: "show",
                rawName: "v-show",
                value: _vm.showPopper,
                expression: "showPopper",
              },
            ],
            staticClass: "fks-table-filter",
          },
          [
            _c(
              "ul",
              { staticClass: "fks-table-filter__list" },
              [
                _c(
                  "li",
                  {
                    staticClass: "fks-table-filter__list-item",
                    class: {
                      "is-active":
                        _vm.filterValue === undefined ||
                        _vm.filterValue === null,
                    },
                    on: {
                      click: function ($event) {
                        return _vm.handleSelect(null)
                      },
                    },
                  },
                  [
                    _vm._v(
                      "\n        " +
                        _vm._s(_vm.t("fks.table.clearFilter")) +
                        "\n      "
                    ),
                  ]
                ),
                _vm._l(_vm.filters, function (filter) {
                  return _c(
                    "li",
                    {
                      key: filter.value,
                      staticClass: "fks-table-filter__list-item",
                      class: { "is-active": _vm.isActive(filter) },
                      attrs: { label: filter.value },
                      on: {
                        click: function ($event) {
                          return _vm.handleSelect(filter.value)
                        },
                      },
                    },
                    [_vm._v("\n        " + _vm._s(filter.text) + "\n      ")]
                  )
                }),
              ],
              2
            ),
          ]
        ),
  ])
}
var filter_panelvue_type_template_id_74cf32f8_staticRenderFns = []
filter_panelvue_type_template_id_74cf32f8_render._withStripped = true


// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue?vue&type=template&id=74cf32f8&

// CONCATENATED MODULE: ./packages/table/src/dropdown.js

var dropdowns = [];

!external_vue_default.a.prototype.$isServer && document.addEventListener('click', function (event) {
  dropdowns.forEach(function (dropdown) {
    var target = event.target;
    if (!dropdown || !dropdown.$el) return;
    if (target === dropdown.$el || dropdown.$el.contains(target)) {
      return;
    }
    dropdown.handleOutsideClick && dropdown.handleOutsideClick(event);
  });
});

/* harmony default export */ var src_dropdown = ({
  open: function open(instance) {
    if (instance) {
      dropdowns.push(instance);
    }
  },
  close: function close(instance) {
    var index = dropdowns.indexOf(instance);
    if (index !== -1) {
      dropdowns.splice(instance, 1);
    }
  }
});
// EXTERNAL MODULE: external "fawkes-lib/lib/checkbox-group"
var checkbox_group_ = __webpack_require__(35);
var checkbox_group_default = /*#__PURE__*/__webpack_require__.n(checkbox_group_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/filter-panel.vue?vue&type=script&lang=js&
var _name$mixins$directiv;

var filter_panelvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//











/* harmony default export */ var filter_panelvue_type_script_lang_js_ = (_name$mixins$directiv = {
  name: 'FksTableFilterPanel',

  mixins: [vue_popper_default.a, locale_default.a],

  directives: {
    Clickoutside: clickoutside_default.a
  },

  components: {
    FksCheckbox: checkbox_default.a,
    FksCheckboxGroup: checkbox_group_default.a,
    FksScrollbar: scrollbar_default.a
  },

  props: {
    placement: {
      type: String,
      default: 'bottom-end'
    }
  },
  computed: filter_panelvue_type_script_lang_js_extends({}, mapStates({
    customFilter: function customFilter(states) {
      return states.customFilter;
    }
  })),
  methods: {
    isActive: function isActive(filter) {
      return filter.value === this.filterValue;
    },
    handleOutsideClick: function handleOutsideClick() {
      var _this = this;

      setTimeout(function () {
        _this.showPopper = false;
      }, 16);
    },
    handleConfirm: function handleConfirm() {
      if (this.table.customFilter) this.table.$emit('handle-filter', this.filteredValue, this.column.property);else {
        this.confirmFilter(this.filteredValue);
        this.handleOutsideClick();
      }
    },
    handleReset: function handleReset() {
      this.filteredValue = [];
      if (this.table.customFilter) {
        this.table.$emit('handle-reset', this.column.property);
      } else {
        this.confirmFilter(this.filteredValue);
        this.handleOutsideClick();
      }
    },
    handleSelect: function handleSelect(filterValue) {
      this.filterValue = filterValue;

      if (typeof filterValue !== 'undefined' && filterValue !== null) {
        this.confirmFilter(this.filteredValue);
      } else {
        this.confirmFilter([]);
      }

      this.handleOutsideClick();
    },
    confirmFilter: function confirmFilter(filteredValue) {
      this.table.store.commit('filterChange', {
        column: this.column,
        values: filteredValue
      });
      this.table.store.updateAllSelected();
    }
  },

  data: function data() {
    return {
      table: null,
      cell: null,
      column: null
    };
  }
}, _name$mixins$directiv['computed'] = {
  filters: function filters() {
    return this.column && this.column.filters;
  },


  filterValue: {
    get: function get() {
      return (this.column.filteredValue || [])[0];
    },
    set: function set(value) {
      if (this.filteredValue) {
        if (typeof value !== 'undefined' && value !== null) {
          this.filteredValue.splice(0, 1, value);
        } else {
          this.filteredValue.splice(0, 1);
        }
      }
    }
  },

  filteredValue: {
    get: function get() {
      if (this.column) {
        return this.column.filteredValue || [];
      }
      return [];
    },
    set: function set(value) {
      if (this.column) {
        this.column.filteredValue = value;
      }
    }
  },

  multiple: function multiple() {
    if (this.column) {
      return this.column.filterMultiple;
    }
    return true;
  }
}, _name$mixins$directiv.mounted = function mounted() {
  var _this2 = this;

  this.popperElm = this.$el;
  this.referenceElm = this.cell;
  this.table.bodyWrapper.addEventListener('scroll', function () {
    _this2.updatePopper();
  });

  this.$watch('showPopper', function (value) {
    if (_this2.column) _this2.column.filterOpened = value;
    if (value) {
      src_dropdown.open(_this2);
    } else {
      src_dropdown.close(_this2);
    }
  });
}, _name$mixins$directiv.watch = {
  showPopper: function showPopper(val) {
    if (val === true && parseInt(this.popperJS._popper.style.zIndex, 10) < popup_["PopupManager"].zIndex) {
      this.popperJS._popper.style.zIndex = popup_["PopupManager"].nextZIndex();
    }
  }
}, _name$mixins$directiv);
// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_filter_panelvue_type_script_lang_js_ = (filter_panelvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table/src/filter-panel.vue





/* normalize component */

var filter_panel_component = normalizeComponent(
  src_filter_panelvue_type_script_lang_js_,
  filter_panelvue_type_template_id_74cf32f8_render,
  filter_panelvue_type_template_id_74cf32f8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var filter_panel = (filter_panel_component.exports);
// CONCATENATED MODULE: ./packages/table/src/table-header.js
var table_header_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };








var getAllColumns = function getAllColumns(columns) {
  var result = [];
  columns.forEach(function (column) {
    if (column.children) {
      result.push(column);
      result.push.apply(result, getAllColumns(column.children));
    } else {
      result.push(column);
    }
  });
  return result;
};

var convertToRows = function convertToRows(originColumns) {
  var maxLevel = 1;
  var traverse = function traverse(column, parent) {
    if (parent) {
      column.level = parent.level + 1;
      if (maxLevel < column.level) {
        maxLevel = column.level;
      }
    }
    if (column.children) {
      var colSpan = 0;
      column.children.forEach(function (subColumn) {
        traverse(subColumn, column);
        colSpan += subColumn.colSpan;
      });
      column.colSpan = colSpan;
    } else {
      column.colSpan = 1;
    }
  };

  originColumns.forEach(function (column) {
    column.level = 1;
    traverse(column);
  });

  var rows = [];
  for (var i = 0; i < maxLevel; i++) {
    rows.push([]);
  }

  var allColumns = getAllColumns(originColumns);

  allColumns.forEach(function (column) {
    if (!column.children) {
      column.rowSpan = maxLevel - column.level + 1;
    } else {
      column.rowSpan = 1;
    }
    rows[column.level - 1].push(column);
  });

  return rows;
};

/* harmony default export */ var table_header = ({
  name: 'FksTableHeader',

  mixins: [layout_observer],

  render: function render(h) {
    var _this = this;

    var originColumns = this.store.states.originColumns;
    var columnRows = convertToRows(originColumns, this.columns);
    // 是否拥有多级表头
    var isGroup = columnRows.length > 1;
    if (isGroup) this.$parent.isGroup = true;
    return h(
      'table',
      {
        'class': 'fks-table__header',
        attrs: { cellspacing: '0',
          cellpadding: '0',
          border: '0' }
      },
      [h('colgroup', [this.columns.map(function (column) {
        return h('col', {
          attrs: { name: column.id },
          key: column.id });
      }), this.hasGutter ? h('col', {
        attrs: { name: 'gutter' }
      }) : '']), h(
        'thead',
        { 'class': [{ 'is-group': isGroup, 'has-gutter': this.hasGutter }] },
        [this._l(columnRows, function (columns, rowIndex) {
          return h(
            'tr',
            {
              style: _this.getHeaderRowStyle(rowIndex),
              'class': _this.getHeaderRowClass(rowIndex)
            },
            [columns.map(function (column, cellIndex) {
              return h(
                'th',
                {
                  attrs: {
                    colspan: column.colSpan,
                    rowspan: column.rowSpan
                  },
                  on: {
                    'mousemove': function mousemove($event) {
                      return _this.handleMouseMove($event, column);
                    },
                    'mouseout': _this.handleMouseOut,
                    'mousedown': function mousedown($event) {
                      return _this.handleMouseDown($event, column);
                    },
                    'click': function click($event) {
                      return _this.handleHeaderClick($event, column);
                    },
                    'contextmenu': function contextmenu($event) {
                      return _this.handleHeaderContextMenu($event, column);
                    }
                  },

                  style: _this.getHeaderCellStyle(rowIndex, cellIndex, columns, column),
                  'class': _this.getHeaderCellClass(rowIndex, cellIndex, columns, column),
                  key: column.id },
                [h(
                  'div',
                  { 'class': ['cell', column.filteredValue && column.filteredValue.length > 0 ? 'highlight' : '', column.labelClassName] },
                  [column.renderHeader ? column.renderHeader.call(_this._renderProxy, h, { column: column, $index: cellIndex, store: _this.store, _self: _this.$parent.$vnode.context }) : column.label, column.sortable ? h(
                    'span',
                    {
                      'class': 'caret-wrapper',
                      on: {
                        'click': function click($event) {
                          return _this.handleSortClick($event, column);
                        }
                      }
                    },
                    [h('i', { 'class': 'fks-icon-arrow-up sort',
                      on: {
                        'click': function click($event) {
                          return _this.handleSortClick($event, column, 'ascending');
                        }
                      }
                    }), h('i', { 'class': 'fks-icon-arrow-down sort',
                      on: {
                        'click': function click($event) {
                          return _this.handleSortClick($event, column, 'descending');
                        }
                      }
                    })]
                  ) : '', column.filterable ? h(
                    'span',
                    {
                      'class': 'fks-table__column-filter-trigger',
                      on: {
                        'click': function click($event) {
                          return _this.handleFilterClick($event, column);
                        }
                      }
                    },
                    [h('span', { 'class': 'fks-icon-filter' })]
                  ) : '']
                )]
              );
            }), _this.hasGutter ? h('th', { 'class': 'gutter' }) : '']
          );
        })]
      )]
    );
  },


  props: {
    fixed: String,
    store: {
      required: true
    },
    border: Boolean,
    defaultSort: {
      type: Object,
      default: function _default() {
        return {
          prop: '',
          order: ''
        };
      }
    }
  },

  components: {
    FksCheckbox: checkbox_default.a
  },

  computed: table_header_extends({
    table: function table() {
      return this.$parent;
    },
    hasGutter: function hasGutter() {
      return !this.fixed && this.tableLayout.gutterWidth;
    }
  }, mapStates({
    columns: 'columns',
    isAllSelected: 'isAllSelected',
    leftFixedLeafCount: 'fixedLeafColumnsLength',
    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
    columnsCount: function columnsCount(states) {
      return states.columns.length;
    },
    leftFixedCount: function leftFixedCount(states) {
      return states.fixedColumns.length;
    },
    rightFixedCount: function rightFixedCount(states) {
      return states.rightFixedColumns.length;
    }
  })),

  created: function created() {
    this.filterPanels = {};
  },
  mounted: function mounted() {
    var _this2 = this;

    // nextTick 是有必要的 https://github.com/ElemeFE/element/pull/11311
    this.$nextTick(function () {
      var _defaultSort = _this2.defaultSort,
          prop = _defaultSort.prop,
          order = _defaultSort.order;

      var init = true;
      _this2.store.commit('sort', { prop: prop, order: order, init: init });
    });
  },
  beforeDestroy: function beforeDestroy() {
    var panels = this.filterPanels;
    for (var prop in panels) {
      if (panels.hasOwnProperty(prop) && panels[prop]) {
        panels[prop].$destroy(true);
      }
    }
  },


  methods: {
    isCellHidden: function isCellHidden(index, columns) {
      var start = 0;
      for (var i = 0; i < index; i++) {
        start += columns[i].colSpan;
      }
      var after = start + columns[index].colSpan - 1;
      if (this.fixed === true || this.fixed === 'left') {
        return after >= this.leftFixedLeafCount;
      } else if (this.fixed === 'right') {
        return start < this.columnsCount - this.rightFixedLeafCount;
      } else {
        return after < this.leftFixedLeafCount || start >= this.columnsCount - this.rightFixedLeafCount;
      }
    },
    getHeaderRowStyle: function getHeaderRowStyle(rowIndex) {
      var headerRowStyle = this.table.headerRowStyle;
      if (typeof headerRowStyle === 'function') {
        return headerRowStyle.call(null, { rowIndex: rowIndex });
      }
      return headerRowStyle;
    },
    getHeaderRowClass: function getHeaderRowClass(rowIndex) {
      var classes = [];

      var headerRowClassName = this.table.headerRowClassName;
      if (typeof headerRowClassName === 'string') {
        classes.push(headerRowClassName);
      } else if (typeof headerRowClassName === 'function') {
        classes.push(headerRowClassName.call(null, { rowIndex: rowIndex }));
      }

      return classes.join(' ');
    },
    getHeaderCellStyle: function getHeaderCellStyle(rowIndex, columnIndex, row, column) {
      var headerCellStyle = this.table.headerCellStyle;
      if (typeof headerCellStyle === 'function') {
        return headerCellStyle.call(null, {
          rowIndex: rowIndex,
          columnIndex: columnIndex,
          row: row,
          column: column
        });
      }
      return headerCellStyle;
    },
    getHeaderCellClass: function getHeaderCellClass(rowIndex, columnIndex, row, column) {
      var classes = [column.id, column.order, column.headerAlign, column.className, column.labelClassName];

      if (rowIndex === 0 && this.isCellHidden(columnIndex, row)) {
        classes.push('is-hidden');
      }

      if (!column.children) {
        classes.push('is-leaf');
      }

      if (column.sortable) {
        classes.push('is-sortable');
      }

      var headerCellClassName = this.table.headerCellClassName;
      if (typeof headerCellClassName === 'string') {
        classes.push(headerCellClassName);
      } else if (typeof headerCellClassName === 'function') {
        classes.push(headerCellClassName.call(null, {
          rowIndex: rowIndex,
          columnIndex: columnIndex,
          row: row,
          column: column
        }));
      }

      return classes.join(' ');
    },
    toggleAllSelection: function toggleAllSelection(event) {
      event.stopPropagation();
      this.store.commit('toggleAllSelection');
    },
    handleFilterClick: function handleFilterClick(event, column) {
      event.stopPropagation();
      var target = event.target;
      var cell = target.tagName === 'TH' ? target : target.parentNode;
      if (Object(dom_["hasClass"])(cell, 'noclick')) return;
      cell = cell.querySelector('.fks-table__column-filter-trigger') || cell;
      var table = this.$parent;

      var filterPanel = this.filterPanels[column.id];

      if (filterPanel && column.filterOpened) {
        filterPanel.showPopper = false;
        return;
      }

      if (!filterPanel) {
        filterPanel = new external_vue_default.a(filter_panel);
        this.filterPanels[column.id] = filterPanel;
        if (column.filterPlacement) {
          filterPanel.placement = column.filterPlacement;
        }
        filterPanel.table = table;
        filterPanel.cell = cell;
        filterPanel.column = column;
        !this.$isServer && filterPanel.$mount(document.createElement('div'));
      }

      setTimeout(function () {
        filterPanel.showPopper = true;
      }, 16);
    },
    handleHeaderClick: function handleHeaderClick(event, column) {
      if (!column.filters && column.sortable) {
        this.handleSortClick(event, column);
      } else if (column.filterable && !column.sortable) {
        this.handleFilterClick(event, column);
      }

      this.$parent.$emit('header-click', column, event);
    },
    handleHeaderContextMenu: function handleHeaderContextMenu(event, column) {
      this.$parent.$emit('header-contextmenu', column, event);
    },
    handleMouseDown: function handleMouseDown(event, column) {
      var _this3 = this;

      if (this.$isServer) return;
      if (column.children && column.children.length > 0) return;
      /* istanbul ignore if */
      if (this.draggingColumn && this.border) {
        this.dragging = true;

        this.$parent.resizeProxyVisible = true;

        var table = this.$parent;
        var tableEl = table.$el;
        var tableLeft = tableEl.getBoundingClientRect().left;
        var columnEl = this.$el.querySelector('th.' + column.id);
        var columnRect = columnEl.getBoundingClientRect();
        var minLeft = columnRect.left - tableLeft + 30;

        Object(dom_["addClass"])(columnEl, 'noclick');

        this.dragState = {
          startMouseLeft: event.clientX,
          startLeft: columnRect.right - tableLeft,
          startColumnLeft: columnRect.left - tableLeft,
          tableLeft: tableLeft
        };

        var resizeProxy = table.$refs.resizeProxy;
        resizeProxy.style.left = this.dragState.startLeft + 'px';

        document.onselectstart = function () {
          return false;
        };
        document.ondragstart = function () {
          return false;
        };

        var handleMouseMove = function handleMouseMove(event) {
          var deltaLeft = event.clientX - _this3.dragState.startMouseLeft;
          var proxyLeft = _this3.dragState.startLeft + deltaLeft;

          resizeProxy.style.left = Math.max(minLeft, proxyLeft) + 'px';
        };

        var handleMouseUp = function handleMouseUp() {
          if (_this3.dragging) {
            var _dragState = _this3.dragState,
                startColumnLeft = _dragState.startColumnLeft,
                startLeft = _dragState.startLeft;

            var finalLeft = parseInt(resizeProxy.style.left, 10);
            var columnWidth = finalLeft - startColumnLeft;
            column.width = column.realWidth = columnWidth;
            table.$emit('header-dragend', column.width, startLeft - startColumnLeft, column, event);

            _this3.store.scheduleLayout();

            document.body.style.cursor = '';
            _this3.dragging = false;
            _this3.draggingColumn = null;
            _this3.dragState = {};

            table.resizeProxyVisible = false;
          }

          document.removeEventListener('mousemove', handleMouseMove);
          document.removeEventListener('mouseup', handleMouseUp);
          document.onselectstart = null;
          document.ondragstart = null;

          setTimeout(function () {
            Object(dom_["removeClass"])(columnEl, 'noclick');
          }, 0);
        };

        document.addEventListener('mousemove', handleMouseMove);
        document.addEventListener('mouseup', handleMouseUp);
      }
    },
    handleMouseMove: function handleMouseMove(event, column) {
      if (column.children && column.children.length > 0) return;
      var target = event.target;
      while (target && target.tagName !== 'TH') {
        target = target.parentNode;
      }

      if (!column || !column.resizable) return;

      if (!this.dragging && this.border) {
        var rect = target.getBoundingClientRect();

        var bodyStyle = document.body.style;
        if (rect.width > 12 && rect.right - event.pageX < 8) {
          bodyStyle.cursor = 'col-resize';
          if (Object(dom_["hasClass"])(target, 'is-sortable')) {
            target.style.cursor = 'col-resize';
          }
          this.draggingColumn = column;
        } else if (!this.dragging) {
          bodyStyle.cursor = '';
          if (Object(dom_["hasClass"])(target, 'is-sortable')) {
            target.style.cursor = 'pointer';
          }
          this.draggingColumn = null;
        }
      }
    },
    handleMouseOut: function handleMouseOut() {
      if (this.$isServer) return;
      document.body.style.cursor = '';
    },
    toggleOrder: function toggleOrder(_ref) {
      var order = _ref.order,
          sortOrders = _ref.sortOrders;

      if (order === '') return sortOrders[0];
      var index = sortOrders.indexOf(order || null);
      return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1];
    },
    handleSortClick: function handleSortClick(event, column, givenOrder) {
      event.stopPropagation();
      var order = column.order === givenOrder ? null : givenOrder || this.toggleOrder(column);

      var target = event.target;
      while (target && target.tagName !== 'TH') {
        target = target.parentNode;
      }

      if (target && target.tagName === 'TH') {
        if (Object(dom_["hasClass"])(target, 'noclick')) {
          Object(dom_["removeClass"])(target, 'noclick');
          return;
        }
      }

      if (!column.sortable) return;

      var states = this.store.states;
      var sortProp = states.sortProp;
      var sortOrder = void 0;
      var sortingColumn = states.sortingColumn;

      if (sortingColumn !== column || sortingColumn === column && sortingColumn.order === null) {
        if (sortingColumn) {
          sortingColumn.order = null;
        }
        states.sortingColumn = column;
        sortProp = column.property;
      }

      if (!order) {
        sortOrder = column.order = null;
      } else {
        sortOrder = column.order = order;
      }

      states.sortProp = sortProp;
      states.sortOrder = sortOrder;

      this.store.commit('changeSortCondition');
    }
  },

  data: function data() {
    return {
      draggingColumn: null,
      dragging: false,
      dragState: {}
    };
  }
});
// CONCATENATED MODULE: ./packages/table/src/table-footer.js
var table_footer_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




/* harmony default export */ var table_footer = ({
  name: 'FksTableFooter',

  mixins: [layout_observer],

  render: function render(h) {
    var _this = this;

    var sums = [];
    if (this.summaryMethod) {
      sums = this.summaryMethod({ columns: this.columns, data: this.store.states.data });
    } else {
      this.columns.forEach(function (column, index) {
        if (index === 0) {
          sums[index] = _this.sumText;
          return;
        }
        var values = _this.store.states.data.map(function (item) {
          return Number(item[column.property]);
        });
        var precisions = [];
        var notNumber = true;
        values.forEach(function (value) {
          if (!isNaN(value)) {
            notNumber = false;
            var decimal = ('' + value).split('.')[1];
            precisions.push(decimal ? decimal.length : 0);
          }
        });
        var precision = Math.max.apply(null, precisions);
        if (!notNumber) {
          sums[index] = values.reduce(function (prev, curr) {
            var value = Number(curr);
            if (!isNaN(value)) {
              return parseFloat((prev + curr).toFixed(Math.min(precision, 20)));
            } else {
              return prev;
            }
          }, 0);
        } else {
          sums[index] = '';
        }
      });
    }

    return h(
      'table',
      {
        'class': 'fks-table__footer',
        attrs: { cellspacing: '0',
          cellpadding: '0',
          border: '0' }
      },
      [h('colgroup', [this.columns.map(function (column) {
        return h('col', {
          attrs: { name: column.id },
          key: column.id });
      }), this.hasGutter ? h('col', {
        attrs: { name: 'gutter' }
      }) : '']), h(
        'tbody',
        { 'class': [{ 'has-gutter': this.hasGutter }] },
        [h('tr', [this.columns.map(function (column, cellIndex) {
          return h(
            'td',
            {
              key: cellIndex,
              attrs: { colspan: column.colSpan,
                rowspan: column.rowSpan
              },
              'class': _this.getRowClasses(column, cellIndex) },
            [h(
              'div',
              { 'class': ['cell', column.labelClassName] },
              [sums[cellIndex]]
            )]
          );
        }), this.hasGutter ? h('th', { 'class': 'gutter' }) : ''])]
      )]
    );
  },


  props: {
    fixed: String,
    store: {
      required: true
    },
    summaryMethod: Function,
    sumText: String,
    border: Boolean,
    defaultSort: {
      type: Object,
      default: function _default() {
        return {
          prop: '',
          order: ''
        };
      }
    }
  },

  computed: table_footer_extends({
    table: function table() {
      return this.$parent;
    },
    hasGutter: function hasGutter() {
      return !this.fixed && this.tableLayout.gutterWidth;
    }
  }, mapStates({
    columns: 'columns',
    isAllSelected: 'isAllSelected',
    leftFixedLeafCount: 'fixedLeafColumnsLength',
    rightFixedLeafCount: 'rightFixedLeafColumnsLength',
    columnsCount: function columnsCount(states) {
      return states.columns.length;
    },
    leftFixedCount: function leftFixedCount(states) {
      return states.fixedColumns.length;
    },
    rightFixedCount: function rightFixedCount(states) {
      return states.rightFixedColumns.length;
    }
  })),

  methods: {
    isCellHidden: function isCellHidden(index, columns, column) {
      if (this.fixed === true || this.fixed === 'left') {
        return index >= this.leftFixedLeafCount;
      } else if (this.fixed === 'right') {
        var before = 0;
        for (var i = 0; i < index; i++) {
          before += columns[i].colSpan;
        }
        return before < this.columnsCount - this.rightFixedLeafCount;
      } else if (!this.fixed && column.fixed) {
        // hide cell when footer instance is not fixed and column is fixed
        return true;
      } else {
        return index < this.leftFixedCount || index >= this.columnsCount - this.rightFixedCount;
      }
    },
    getRowClasses: function getRowClasses(column, cellIndex) {
      var classes = [column.id, column.align, column.labelClassName];
      if (column.className) {
        classes.push(column.className);
      }
      if (this.isCellHidden(cellIndex, this.columns, column)) {
        classes.push('is-hidden');
      }
      if (!column.children) {
        classes.push('is-leaf');
      }
      return classes;
    }
  }
});
// EXTERNAL MODULE: external "sortablejs"
var external_sortablejs_ = __webpack_require__(51);
var external_sortablejs_default = /*#__PURE__*/__webpack_require__.n(external_sortablejs_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/table/src/table.vue?vue&type=script&lang=js&
var tablevue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//















var tableIdSeed = 1;

/* harmony default export */ var tablevue_type_script_lang_js_ = ({
  name: 'FksTable',

  mixins: [locale_default.a, migrating_default.a],

  directives: {
    Mousewheel: directives_mousewheel
  },
  props: {
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    // 同级拖拽true
    dragLimit: {
      type: Boolean,
      default: false
    },
    // 筛选是否走用户自定义函数
    customFilter: {
      type: Boolean,
      default: false
    },
    isSelect: {
      type: Boolean,
      default: false
    },
    isDraggable: {},

    size: String,

    width: [String, Number],

    height: [String, Number],

    maxHeight: [String, Number],

    fit: {
      type: Boolean,
      default: true
    },
    reExpand: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    stripe: {
      type: [String, Boolean],
      default: ''
    },

    border: {
      type: [String, Boolean],
      default: ''
    },

    rowKey: [String, Function],

    context: {},

    showHeader: {
      type: Boolean,
      default: true
    },

    showSummary: Boolean,

    sumText: String,

    summaryMethod: Function,

    rowClassName: [String, Function],

    rowStyle: [Object, Function],

    cellClassName: [String, Function],

    cellStyle: [Object, Function],

    headerRowClassName: [String, Function],

    headerRowStyle: [Object, Function],

    headerCellClassName: [String, Function],

    headerCellStyle: [Object, Function],

    getExpandNode: [Object, Function],

    highlightCurrentRow: Boolean,

    currentRowKey: [String, Number],

    emptyText: String,

    expandRowKeys: Array,

    defaultExpandAll: Boolean,

    defaultSort: Object,

    tooltipEffect: String,

    spanMethod: Function,

    selectOnIndeterminate: {
      type: Boolean,
      default: true
    },

    indent: {
      type: Number,
      default: 24
    },

    treeProps: {
      type: Object,
      default: function _default() {
        return {
          hasChildren: 'hasChildren',
          children: 'children'
        };
      }
    },

    lazy: Boolean,

    load: Function
  },

  components: {
    draggable: external_vuedraggable_default.a,
    TableHeader: table_header,
    TableFooter: table_footer,
    TableBody: table_body
  },

  methods: {
    reExpandTable: function reExpandTable(val) {
      var _this = this;

      this.$nextTick(function () {
        if (val.length > 0 && !_this.defaultExpandAll) {
          val.forEach(function (item) {
            _this.toggleRowExpansion(item, true);
          });
        }
      });
    },

    // 遍历树形结构处理数据
    // 考虑到页面数据延迟获取问题 flatternArray=[]
    getDealData: function getDealData() {
      var result = [];
      var children = this.treeProps.children;
      var rowKey = this.rowKey;
      var func = function func(arr, parent) {
        arr.forEach(function (item) {
          var obj = Object.assign(item);
          obj.id = item[rowKey];
          if (parent) {
            if (obj.parentId) {
              obj.parentId = parent[rowKey];
            } else obj.parentId = parent[rowKey];
          } else obj.parentId = '0';
          // 将每一级的数据装入result，拖动时可以根据下标拿到包括当前节点子节点的整个数据
          result.push(obj);
          if (item[children] && item[children].length !== 0) {
            func(item[children], item);
          }
        });
      };
      func(this.tempData);
      this.flattenArray = result;
      this.visibleNum = this.flattenArray.length;
      if (this.defaultExpandAll) {
        // 如果默认全展开根据平铺数组初始化expandArr
        var tempResult = [];
        var getExpandArr = function getExpandArr(arr) {
          arr.forEach(function (item) {
            if (item.hasOwnProperty('children')) {
              tempResult.push(item);
              getExpandArr(item.children);
            }
          });
        };
        this.expandArr = [];
        getExpandArr(this.tempData);
        this.expandArr = tempResult;
      }
    },


    // 初始化拖动表格的函数
    rowDrop: function rowDrop() {
      var tbody = this.$refs['bodyWrapper'].querySelector('tbody');
      var self = this;
      this.getDealData();
      external_sortablejs_default.a.create(tbody, {
        chosenClass: 'sortable-chosen', // 被选中项的css 类名
        dragClass: 'sortable-drag', // 正在被拖拽中的css类名

        onMove: function onMove(evt) {
          self.handleMove(evt);
        },
        onEnd: function onEnd(evt) {
          self.handleDrag(evt);
        },
        onChoose: function onChoose(evt) {
          self.handleChoose(evt);
        }
      });
    },
    handleChoose: function handleChoose(evt) {
      this.startIndex = evt.oldIndex;
    },
    handleMove: function handleMove(evt) {
      var evtHeight = window.getComputedStyle(evt.dragged).height; // 48
      if (evtHeight != 'auto') this.itemHeight = evtHeight.replace('px', '');
      evt.dragged.style.display = 'none';
    },

    // 获取某个子节点全部的父节点id
    findParentId: function findParentId(index) {
      var _this2 = this;

      if (index < this.flattenArray.length) {
        var parentId = this.flattenArray[index].parentId;
        this.parentKey.push(parentId);
        if (parentId != 0) {
          var a = 0;
          this.flattenArray.forEach(function (item) {
            if (item.id == parentId) {
              _this2.findParentId(a);
            }
            a++;
          });
        } else {
          return;
        }
      }
    },

    // 处理拖动
    handleDrag: function handleDrag(evt) {
      var _this3 = this;

      evt.item.style.display = 'table-row';
      if (this.flattenArray.length == 0) return;
      var flag = true;
      // 动作指定
      var dropPrev = false;
      var dropInner = false;
      var dropNext = false;
      // 拖动项与目标项
      var dropIndex = evt.oldIndex;
      var targetIndex = evt.newIndex;
      var targetHeight = evt.originalEvent.target.offsetHeight; // 目标项视图高度
      var mousePositon = evt.originalEvent.offsetY; // 鼠标在目标项内部的相对位置
      // 根据鼠标位置区分拖动意图——上:平级、中:子集、下:子集/平级
      // 拖拽的内容包含子集未处理
      if (mousePositon < 0) mousePositon += Number(this.itemHeight);
      var posRadio = mousePositon / targetHeight;
      if (!this.dragLimit) {
        if (posRadio < 0.3) {
          dropPrev = true;
        } else if (posRadio > 0.7) {
          dropNext = true;
        } else {
          dropInner = true;
        }
        if (dropIndex == targetIndex && (dropNext || dropInner)) {
          targetIndex++;
        }
      } else {
        if (posRadio < 0.5) dropPrev = true;else dropNext = true;
        if (dropIndex == targetIndex && dropNext) {
          targetIndex++;
        }
        if (this.flattenArray[dropIndex].parentId != this.flattenArray[targetIndex].parentId) {
          console.log('不允许非同级拖拽');
          flag = false;
        }
      }
      if (flag) {
        var copyItem = this.flattenArray[dropIndex];
        var childLength = 0;
        // 判断拖动的目标项是否含有子集
        if (dropIndex != this.flattenArray.length - 1) {
          if (this.flattenArray[dropIndex + 1].parentId === copyItem.id) {
            var searchEnd = false;
            for (var i = dropIndex + 1; i < this.flattenArray.length; ++i) {
              if (this.flattenArray[i].parentId === copyItem.parentId) {
                childLength = i - dropIndex - 1;
                searchEnd = true;
                break;
              }
              if (i === this.flattenArray.length - 1 && !searchEnd) {
                childLength = i - dropIndex;
              }
            }
          }
        }
        // 如果没有拖动或将父级移动到自身子集则不操作
        this.parentKey = [];
        var temp = true;
        this.findParentId(targetIndex);
        this.parentKey.forEach(function (item) {
          if (item == copyItem.id) {
            temp = false;
            return;
          }
        });
        if (dropIndex !== targetIndex && temp) {
          // 如果移动项
          // 移动成目标平级的上一项
          if (dropPrev) {
            copyItem.parentId = this.flattenArray[targetIndex].parentId;
            if (childLength) {
              var _temp = this.flattenArray.slice(dropIndex, dropIndex + childLength + 1);
              this.flattenArray.splice(dropIndex, childLength + 1);
              if (dropIndex < targetIndex) targetIndex -= childLength + 1;
              _temp.forEach(function (item) {
                _this3.flattenArray.splice(targetIndex++, 0, item);
              });
            } else {
              this.flattenArray.splice(dropIndex, 1);
              if (dropIndex < targetIndex) targetIndex--;
              this.flattenArray.splice(targetIndex, 0, copyItem);
            }
          }
          // 移动成子集
          if (dropInner) {
            // 如果本来就是子集 移动到当前子集第一位
            if (targetIndex < this.flattenArray.length) {
              if (copyItem.parentId === this.flattenArray[targetIndex].id) {
                this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
              } else {
                copyItem.parentId = this.flattenArray[targetIndex].id;
                // 如果目标自身未展开则展开目标项
                var ifExpand = false;
                this.expandArr.forEach(function (item) {
                  if (item.id === _this3.flattenArray[targetIndex].id) {
                    ifExpand = true;
                    return;
                  }
                });
                if (!ifExpand) {
                  this.expandArr.push(this.flattenArray[targetIndex]);
                }
                this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
              }
            }
          }
          if (dropNext) {
            // 检测目标是否含有子集
            if (targetIndex < this.flattenArray.length - 1) {
              if (this.flattenArray[targetIndex + 1].parentId === this.flattenArray[targetIndex].id) {
                // 目标有子集
                var _ifExpand = false;
                this.expandArr.forEach(function (item) {
                  if (item.id === _this3.flattenArray[targetIndex].id) {
                    _ifExpand = true;
                    return;
                  }
                });
                if (_ifExpand) {
                  // 目标有子集且展开 移动到目标子集的第一位
                  copyItem.parentId = this.flattenArray[targetIndex].id;
                  this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
                } else {
                  // 目标有子集且没展开 移动到目标平级的下一项
                  copyItem.parentId = this.flattenArray[targetIndex].parentId;
                  var _searchEnd = false;
                  for (var _i = targetIndex + 1; _i < this.flattenArray.length; ++_i) {
                    if (this.flattenArray[_i].parentId === this.flattenArray[targetIndex].parentId) {
                      targetIndex = _i - 1;
                      _searchEnd = true;
                      break;
                    }
                    if (_i === this.flattenArray.length - 1 && !_searchEnd) {
                      targetIndex = _i;
                    }
                  }
                  this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
                }
              } else {
                // 目标没子集 移动到目标平级的下一项
                copyItem.parentId = this.flattenArray[targetIndex].parentId;
                this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
              }
            } else if (targetIndex < this.flattenArray.length) {
              // 目标没子集 移动到目标平级的下一项
              copyItem.parentId = this.flattenArray[targetIndex].parentId;
              this.deleteAdd(dropIndex, targetIndex, copyItem, childLength);
            }
          }
        }
      }
      // 转换tableData
      this.flatToData();
    },

    // 拖拽到目标平铺数组后一项的情况
    deleteAdd: function deleteAdd(dropIndex, targetIndex, copyItem, childLength) {
      var _this4 = this;

      if (childLength > 0) {
        var temp = this.flattenArray.slice(dropIndex, dropIndex + childLength + 1);
        this.flattenArray.splice(dropIndex, childLength + 1);
        if (dropIndex < targetIndex) targetIndex -= childLength + 1;
        // 对操作item为含有children的节点时，复制平铺数组中包含children的切片并依次推入目标位置
        temp.forEach(function (item) {
          _this4.flattenArray.splice(targetIndex++ + 1, 0, item);
        });
      } else {
        this.flattenArray.splice(dropIndex, 1);
        if (dropIndex < targetIndex) targetIndex--;
        this.flattenArray.splice(targetIndex + 1, 0, copyItem);
      }
    },

    // 平铺数组转换树形data
    flatToData: function flatToData() {
      var _this5 = this;

      var tempData = [];
      var tempFlat = this.flattenArray;
      tempFlat.forEach(function (item) {
        delete item.children;
      });
      tempData = this.pushArr(tempFlat, '0');
      // 到这步都没有问题
      // 父子级渲染问题
      //  this.showTable = false
      // this.$emit("update:data", [])
      // let debounceData = []
      // this.flattenArray.forEach((item) => {
      //   if (item.parentId == 0) debounceData.push(item)
      // })
      // 先赋值高度相同的内容防止画面抖动 删除的话父子级位置颠倒
      if (!this.dragLimit) this.store.commit('setData', this.debounceData);
      setTimeout(function () {
        _this5.store.commit('setData', JSON.parse(JSON.stringify(tempData)));
        _this5.$emit('onDragSuccess', tempData);
        // this.$emit("update:data", JSON.parse(JSON.stringify(tempData)))
        //   this.showTable = true
        _this5.doLayout();
        // this.$forceUpdate() 失败
        _this5.dragKey += 1; // 确认了数据已经更新，就是渲染出错
        setTimeout(function () {
          _this5.rowDrop();
          _this5.handleExpand();
        }, 0);
      }, 0);
    },


    // 根据此时的expandArr手动调整展开关闭项
    handleExpand: function handleExpand() {
      // 全部关闭
      var tempExpandArr = JSON.parse(JSON.stringify(this.expandArr));
      var self = this;
      if (self.defaultExpandAll) {
        var _loop = function _loop(i) {
          if (self.flattenArray[i].id == self.flattenArray[i + 1].parentId) {
            var ifSearch = false;
            tempExpandArr.forEach(function (item) {
              if (item.id == self.flattenArray[i].id) {
                ifSearch = true;
                return;
              }
            });
            if (!ifSearch) self.toggleRowExpansion(self.flattenArray[i], false);
          }
        };

        for (var i = 0; i < self.flattenArray.length - 1; i++) {
          _loop(i);
        }
      } else {
        // 虽然子集在expandArr但父集不在 父集被迫展开
        tempExpandArr.forEach(function (item) {
          self.toggleRowExpansion(item, true);
        });
      }
    },


    // 递归处理平铺数组转化为树形data
    pushArr: function pushArr(flatArr, parentId) {
      var dataArr = [];
      for (var i = 0; i < flatArr.length; i++) {
        if (flatArr[i].parentId === parentId) {
          dataArr.push(flatArr[i]);
        } else if (dataArr.length > 0) {
          // 此时推入dataArr的最后一项含有子节点
          // dataArr[dataArr.length - 1]['children'] = []   //always set error
          Object.assign(dataArr[dataArr.length - 1], { children: [] });
          var searchEnd = false;
          // 向下查找属于下层的数组进入递归
          for (var j = i; j < flatArr.length; j++) {
            // 该平铺数组结束前找到了下层数组
            if (flatArr[j].parentId === parentId) {
              // 此时的dataArr末项添加children属性
              searchEnd = true;
              dataArr[dataArr.length - 1]['children'] = this.pushArr(flatArr.slice(i, j), flatArr[i].parentId);
              i = j - 1;
              break;
            }
            // 到平铺数组结束都没找到平级
            if (j === flatArr.length - 1 && !searchEnd) {
              dataArr[dataArr.length - 1]['children'] = this.pushArr(flatArr.slice(i), flatArr[i].parentId);
              i = j;
              break;
            }
          }
        }
      }
      return dataArr;
    },
    updateData: function updateData() {
      this.$emit('update:data', this.store.states.data);
    },
    getMigratingConfig: function getMigratingConfig() {
      return {
        events: {
          expand: 'expand is renamed to expand-change'
        }
      };
    },
    setCurrentRow: function setCurrentRow(row) {
      this.store.commit('setCurrentRow', row);
    },
    toggleRowSelection: function toggleRowSelection(row, selected) {
      this.store.toggleRowSelection(row, selected, false);
      this.store.updateAllSelected();
    },
    toggleRowExpansion: function toggleRowExpansion(row, expanded) {
      this.store.toggleRowExpansionAdapter(row, expanded);
    },
    clearSelection: function clearSelection() {
      this.store.clearSelection();
    },
    clearFilter: function clearFilter(columnKeys) {
      this.store.clearFilter(columnKeys);
    },
    clearSort: function clearSort() {
      this.store.clearSort();
    },
    handleMouseLeave: function handleMouseLeave() {
      this.store.commit('setHoverRow', null);
      if (this.hoverState) this.hoverState = null;
    },
    updateScrollY: function updateScrollY() {
      var changed = this.layout.updateScrollY();
      if (changed) {
        this.layout.notifyObservers('scrollable');
        this.layout.updateColumnsWidth();
      }
    },
    scrollToTop: function scrollToTop() {
      this.bodyWrapper.scrollTop = 0;
    },
    handleFixedMousewheel: function handleFixedMousewheel(event, data) {
      var bodyWrapper = this.bodyWrapper;
      if (Math.abs(data.spinY) > 0) {
        var currentScrollTop = bodyWrapper.scrollTop;
        if (data.pixelY < 0 && currentScrollTop !== 0) {
          event.preventDefault();
        }
        if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {
          event.preventDefault();
        }
        bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);
      } else {
        bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);
      }
    },
    handleHeaderFooterMousewheel: function handleHeaderFooterMousewheel(event, data) {
      var pixelX = data.pixelX,
          pixelY = data.pixelY;

      if (Math.abs(pixelX) >= Math.abs(pixelY)) {
        this.bodyWrapper.scrollLeft += data.pixelX / 5;
      }
    },


    // TODO 使用 CSS transform
    syncPostion: Object(external_throttle_debounce_["throttle"])(20, function () {
      var _bodyWrapper = this.bodyWrapper,
          scrollLeft = _bodyWrapper.scrollLeft,
          scrollTop = _bodyWrapper.scrollTop,
          offsetWidth = _bodyWrapper.offsetWidth,
          scrollWidth = _bodyWrapper.scrollWidth;
      var _$refs = this.$refs,
          headerWrapper = _$refs.headerWrapper,
          footerWrapper = _$refs.footerWrapper,
          fixedBodyWrapper = _$refs.fixedBodyWrapper,
          rightFixedBodyWrapper = _$refs.rightFixedBodyWrapper;

      if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;
      if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;
      if (fixedBodyWrapper) fixedBodyWrapper.scrollTop = scrollTop;
      if (rightFixedBodyWrapper) rightFixedBodyWrapper.scrollTop = scrollTop;
      var maxScrollLeftPosition = scrollWidth - offsetWidth - 1;
      if (scrollLeft >= maxScrollLeftPosition) {
        this.scrollPosition = 'right';
      } else if (scrollLeft === 0) {
        this.scrollPosition = 'left';
      } else {
        this.scrollPosition = 'middle';
      }
    }),
    bindEvents: function bindEvents() {
      this.bodyWrapper.addEventListener('scroll', this.syncPostion, {
        passive: true
      });
      if (this.fit) {
        Object(resize_event_["addResizeListener"])(this.$el, this.resizeListener);
      }
    },
    unbindEvents: function unbindEvents() {
      this.bodyWrapper.removeEventListener('scroll', this.syncPostion, {
        passive: true
      });
      if (this.fit) {
        Object(resize_event_["removeResizeListener"])(this.$el, this.resizeListener);
      }
    },
    resizeListener: function resizeListener() {
      if (!this.$ready) return;
      var shouldUpdateLayout = false;
      var el = this.$el;
      var _resizeState = this.resizeState,
          oldWidth = _resizeState.width,
          oldHeight = _resizeState.height;


      var width = el.offsetWidth;
      if (oldWidth !== width) {
        shouldUpdateLayout = true;
      }

      var height = el.offsetHeight;
      if ((this.height || this.shouldUpdateHeight) && oldHeight !== height) {
        shouldUpdateLayout = true;
      }

      if (shouldUpdateLayout) {
        this.resizeState.width = width;
        this.resizeState.height = height;
        this.doLayout();
      }
    },
    doLayout: function doLayout() {
      if (this.shouldUpdateHeight) {
        this.layout.updateElsHeight();
      }
      this.layout.updateColumnsWidth();
    },
    sort: function sort(prop, order) {
      this.store.commit('sort', { prop: prop, order: order });
    },
    toggleAllSelection: function toggleAllSelection() {
      this.store.commit('toggleAllSelection');
    }
  },

  computed: tablevue_type_script_lang_js_extends({
    pointer: function pointer() {
      if (this.isDraggable) return 'move';
    },
    tempData: function tempData() {
      return this.store.states.data;
    },
    realStripe: function realStripe() {
      return this.stripe !== '' ? this.stripe && this.stripe != 'false' : !!this.$fawkes.stripe;
    },
    realBorder: function realBorder() {
      return this.border !== '' ? this.border && this.border != 'false' : !!this.$fawkes.border;
    },
    tableSize: function tableSize() {
      return this.size || (this.$FAWKES || {}).size;
    },
    bodyWrapper: function bodyWrapper() {
      return this.$refs.bodyWrapper;
    },
    shouldUpdateHeight: function shouldUpdateHeight() {
      return this.height || this.maxHeight || this.fixedColumns.length > 0 || this.rightFixedColumns.length > 0;
    },
    bodyWidth: function bodyWidth() {
      var _layout = this.layout,
          bodyWidth = _layout.bodyWidth,
          scrollY = _layout.scrollY,
          gutterWidth = _layout.gutterWidth;

      return bodyWidth ? bodyWidth - (scrollY ? gutterWidth : 0) + 'px' : '';
    },
    bodyHeight: function bodyHeight() {
      var _layout2 = this.layout,
          _layout2$headerHeight = _layout2.headerHeight,
          headerHeight = _layout2$headerHeight === undefined ? 0 : _layout2$headerHeight,
          bodyHeight = _layout2.bodyHeight,
          _layout2$footerHeight = _layout2.footerHeight,
          footerHeight = _layout2$footerHeight === undefined ? 0 : _layout2$footerHeight;

      if (this.height) {
        return {
          height: bodyHeight ? bodyHeight + 'px' : ''
        };
      } else if (this.maxHeight) {
        var maxHeight = parseHeight(this.maxHeight);
        if (typeof maxHeight === 'number') {
          return {
            'max-height': maxHeight - footerHeight - (this.showHeader ? headerHeight : 0) + 'px'
          };
        }
      }
      return {};
    },
    fixedBodyHeight: function fixedBodyHeight() {
      if (this.height) {
        return {
          height: this.layout.fixedBodyHeight ? this.layout.fixedBodyHeight + 'px' : ''
        };
      } else if (this.maxHeight) {
        var maxHeight = parseHeight(this.maxHeight);
        if (typeof maxHeight === 'number') {
          maxHeight = this.layout.scrollX ? maxHeight - this.layout.gutterWidth : maxHeight;
          if (this.showHeader) {
            maxHeight -= this.layout.headerHeight;
          }
          maxHeight -= this.layout.footerHeight;
          return {
            'max-height': maxHeight + 'px'
          };
        }
      }
      return {};
    },
    fixedHeight: function fixedHeight() {
      if (this.maxHeight) {
        if (this.showSummary) {
          return {
            bottom: 0
          };
        }
        return {
          bottom: this.layout.scrollX && this.data.length ? this.layout.gutterWidth + 'px' : ''
        };
      } else {
        if (this.showSummary) {
          return {
            height: this.layout.tableHeight ? this.layout.tableHeight + 'px' : ''
          };
        }
        return {
          height: this.layout.viewportHeight ? this.layout.viewportHeight + 'px' : ''
        };
      }
    },
    emptyBlockStyle: function emptyBlockStyle() {
      if (this.data && this.data.length) return null;
      var height = '100%';
      if (this.layout.appendHeight) {
        height = 'calc(100% - ' + this.layout.appendHeight + 'px)';
      }
      return {
        width: this.bodyWidth,
        height: height
      };
    }
  }, mapStates({
    selection: 'selection',
    columns: 'columns',
    tableData: 'data',
    fixedColumns: 'fixedColumns',
    rightFixedColumns: 'rightFixedColumns'
  })),

  watch: {
    labelItem: {
      handler: function handler(val) {
        var _this6 = this;

        this.selectedItem = [];
        val.forEach(function (item) {
          if (item.show) {
            _this6.selectedItem.push(item.value);
          }
        });
        this.store.commit('setSelectedCol', this.selectedItem);
      },

      deep: true
    },
    expandArr: function expandArr(val) {
      var temp = [];
      val.forEach(function (item) {
        temp.push(item.id);
      });
      this.$emit('getExpandNode', val, temp);
      this.expandLength = val.length;
    },
    expandLength: function expandLength(val) {
      var _this7 = this;

      var num = 0;
      this.flattenArray.forEach(function (item) {
        if (item.parentId == 0) num++;else {
          _this7.expandArr.forEach(function (exItem) {
            if (item.parentId == exItem.id) num++;
          });
        }
      });
      this.visibleNum = num;
    },
    visibleNum: function visibleNum(val) {
      this.debounceData = [];
      for (var i = 0; i < val; ++i) {
        this.debounceData.push({ id: i, name: '', address: '', date: '' });
      }
    },


    height: {
      immediate: true,
      handler: function handler(value) {
        this.layout.setHeight(value);
      }
    },

    maxHeight: {
      immediate: true,
      handler: function handler(value) {
        this.layout.setMaxHeight(value);
      }
    },

    currentRowKey: {
      immediate: true,
      handler: function handler(value) {
        if (!this.rowKey) return;
        this.store.setCurrentRowKey(value);
      }
    },

    data: {
      immediate: true,
      handler: function handler(value) {
        var _this8 = this;

        this.store.commit('setData', value);
        this.$nextTick(function () {
          _this8.doLayout(); // 表头错位问题修复
          // 优化平铺数组 待数据获取后转换
          if (_this8.isDraggable && !!_this8.rowKey) _this8.rowDrop();
        });
      }
    },

    expandRowKeys: {
      immediate: true,
      handler: function handler(newVal) {
        if (newVal) {
          this.store.setExpandRowKeysAdapter(newVal);
        }
      }
    }
  },

  created: function created() {
    var _this9 = this;

    this.tableId = 'fks-table_' + tableIdSeed++;
    this.debouncedUpdateLayout = Object(external_throttle_debounce_["debounce"])(50, function () {
      return _this9.doLayout();
    });
  },
  mounted: function mounted() {
    var _this10 = this;

    this.bindEvents();
    this.store.updateColumns();
    this.doLayout();

    this.resizeState = {
      width: this.$el.offsetWidth,
      height: this.$el.offsetHeight
    };

    // init filters
    this.labelItem = [];
    this.store.states.columns.forEach(function (column) {
      _this10.labelItem.push({
        value: column.label,
        show: true
      });
      _this10.selectedItem.push(column.label);
      if (column.filteredValue && column.filteredValue.length) {
        _this10.store.commit('filterChange', {
          column: column,
          values: column.filteredValue,
          silent: true
        });
      }
    });

    this.$ready = true;
    this.$nextTick(function () {
      if (_this10.reExpand.length > 0 && !_this10.defaultExpandAll) {
        _this10.reExpand.forEach(function (item) {
          _this10.toggleRowExpansion(item, true);
        });
      }
    });
    // 初始化拖拽树存入数据
    // if (this.isDraggable && !!this.rowKey) this.getDealData()
  },
  destroyed: function destroyed() {
    this.unbindEvents();
  },
  data: function data() {
    var _treeProps = this.treeProps,
        _treeProps$hasChildre = _treeProps.hasChildren,
        hasChildren = _treeProps$hasChildre === undefined ? 'hasChildren' : _treeProps$hasChildre,
        _treeProps$children = _treeProps.children,
        children = _treeProps$children === undefined ? 'children' : _treeProps$children;

    this.store = createStore(this, {
      rowKey: this.rowKey,
      defaultExpandAll: this.defaultExpandAll,
      selectOnIndeterminate: this.selectOnIndeterminate,
      // TreeTable 的相关配置
      indent: this.indent,
      lazy: this.lazy,
      lazyColumnIdentifier: hasChildren,
      childrenColumnName: children
    });
    var layout = new table_layout({
      store: this.store,
      table: this,
      fit: this.fit,
      showHeader: this.showHeader
    });
    return {
      dragKey: 0,
      showTable: true,
      selectedItem: [], // 选中的列名
      labelItem: [], // 所有列名
      parentKey: [],
      startIndex: 0,
      itemHeight: 48,
      visibleNum: 0, // 可见条数
      flattenArray: [], // 平铺数组
      expandArr: [], // 展开项id数组
      expandLength: 0,
      debounceData: [],
      layout: layout,
      isHidden: false,
      renderExpanded: null,
      resizeProxyVisible: false,
      resizeState: {
        width: null,
        height: null
      },
      // 是否拥有多级表头
      isGroup: false,
      scrollPosition: 'left'
    };
  }
});
// CONCATENATED MODULE: ./packages/table/src/table.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tablevue_type_script_lang_js_ = (tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/table/src/table.vue





/* normalize component */

var table_component = normalizeComponent(
  src_tablevue_type_script_lang_js_,
  tablevue_type_template_id_51c2cfdc_render,
  tablevue_type_template_id_51c2cfdc_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_table = (table_component.exports);
// CONCATENATED MODULE: ./packages/table/index.js


/* istanbul ignore next */
src_table.install = function (Vue) {
  Vue.component(src_table.name, src_table);
};

/* harmony default export */ var packages_table = (src_table);
// EXTERNAL MODULE: external "babel-helper-vue-jsx-merge-props"
var external_babel_helper_vue_jsx_merge_props_ = __webpack_require__(22);
var external_babel_helper_vue_jsx_merge_props_default = /*#__PURE__*/__webpack_require__.n(external_babel_helper_vue_jsx_merge_props_);

// CONCATENATED MODULE: ./packages/table/src/config.js


var cellStarts = {
  default: {
    align: 'is-center',
    headerAlign: 'is-center',
    order: ''
  },
  /* New 为业务表单新增类型 */
  amount: {
    align: 'is-right',
    headerAlign: 'is-right',
    order: ''
  },
  people: {
    align: 'is-center',
    headerAlign: 'is-center',
    width: 98,
    realWidth: 98,
    order: ''
  },
  date: {
    align: 'is-center',
    headerAlign: 'is-center',
    width: 138,
    realWidth: 138,
    order: ''
  },
  datetime: {
    align: 'is-center',
    headerAlign: 'is-center',
    width: 202,
    realWidth: 202,
    order: ''
  },
  wide: {
    minWidth: 200,
    align: 'is-left',
    headerAlign: 'is-center',
    order: ''
  },
  selection: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: '',
    className: 'fks-table-column--selection'
  },
  expand: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ''
  },
  index: {
    width: 48,
    minWidth: 48,
    realWidth: 48,
    order: ''
  }

  // 这些选项不应该被覆盖
};var cellForced = {
  selection: {
    renderHeader: function renderHeader(h, _ref) {
      var store = _ref.store;

      return h('fks-checkbox', {
        attrs: {
          disabled: store.states.data && store.states.data.length === 0,
          indeterminate: store.states.selection.length > 0 && !this.isAllSelected,

          value: this.isAllSelected },
        nativeOn: {
          'click': this.toggleAllSelection
        }
      });
    },
    renderCell: function renderCell(h, _ref2) {
      var row = _ref2.row,
          column = _ref2.column,
          store = _ref2.store,
          $index = _ref2.$index;

      return h('fks-checkbox', {
        nativeOn: {
          'click': function click(event) {
            return event.stopPropagation();
          }
        },
        attrs: {
          value: store.isSelected(row),
          disabled: column.selectable ? !column.selectable.call(null, row, $index) : false
        },
        on: {
          'input': function input() {
            store.commit('rowSelectedChanged', row);
          }
        }
      });
    },
    sortable: false,
    resizable: false
  },
  index: {
    renderHeader: function renderHeader(h, _ref3) {
      var column = _ref3.column;

      return column.label || '#';
    },
    renderCell: function renderCell(h, _ref4) {
      var $index = _ref4.$index,
          column = _ref4.column;

      var i = $index + 1;
      var index = column.index;

      if (typeof index === 'number') {
        i = $index + index;
      } else if (typeof index === 'function') {
        i = index($index);
      }

      return h('div', [i]);
    },
    sortable: false
  },
  expand: {
    renderHeader: function renderHeader(h, _ref5) {
      var column = _ref5.column;

      return column.label || '';
    },
    renderCell: function renderCell(h, _ref6) {
      var row = _ref6.row,
          store = _ref6.store;

      var classes = ['fks-table__expand-icon'];
      if (store.states.expandRows.indexOf(row) > -1) {
        classes.push('fks-table__expand-icon--expanded');
      }
      var callback = function callback(e) {
        e.stopPropagation();
        store.toggleRowExpansion(row);
      };
      return h(
        'div',
        { 'class': classes,
          on: {
            'click': callback
          }
        },
        [h('i', { 'class': 'fks-icon fks-icon-arrow-right' })]
      );
    },
    sortable: false,
    resizable: false,
    className: 'fks-table__expand-column'
  }
};

function defaultRenderCell(h, _ref7) {
  var row = _ref7.row,
      column = _ref7.column,
      $index = _ref7.$index;

  var property = column.property;
  var value = property && Object(util_["getPropByPath"])(row, property).v;
  if (column && column.formatter) {
    return column.formatter(row, column, value, $index);
  }
  return value;
}

function treeCellPrefix(h, _ref8) {
  var row = _ref8.row,
      treeNode = _ref8.treeNode,
      store = _ref8.store;

  if (!treeNode) return null;
  var ele = [];
  var callback = function callback(e) {
    e.stopPropagation();
    store.loadOrToggle(row);
  };
  if (treeNode.indent) {
    ele.push(h('span', { 'class': 'fks-table__indent', style: { 'padding-left': treeNode.indent + 'px' } }));
  }
  if (typeof treeNode.expanded === 'boolean' && !treeNode.noLazyChildren) {
    var expandClasses = ['fks-table__expand-icon', treeNode.expanded ? 'fks-table__expand-icon--expanded' : ''];
    var iconClasses = ['fks-icon-arrow-right'];
    if (treeNode.loading) {
      iconClasses = ['fks-icon-loading'];
    }
    ele.push(h(
      'div',
      { 'class': expandClasses,
        on: {
          'click': callback
        }
      },
      [h('i', { 'class': iconClasses })]
    ));
  } else {
    ele.push(h('span', { 'class': 'fks-table__placeholder' }));
  }
  return ele;
}
// CONCATENATED MODULE: ./packages/table/src/table-column.js


var table_column_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };





var columnIdSeed = 1;

/* harmony default export */ var table_column = ({
  name: 'FksTableColumn',

  props: {
    type: {
      type: String,
      default: 'default'
    },
    label: String,
    className: String,
    labelClassName: String,
    property: String,
    prop: String,
    width: {},
    minWidth: {},
    renderHeader: Function,
    sortable: {
      type: [Boolean, String],
      default: false
    },
    sortMethod: Function,
    sortBy: [String, Function, Array],
    resizable: {
      type: Boolean,
      default: true
    },
    columnKey: String,
    align: String,
    headerAlign: String,
    showTooltipWhenOverflow: Boolean,
    showOverflowTooltip: Boolean,
    fixed: [Boolean, String],
    formatter: Function,
    selectable: Function,
    reserveSelection: Boolean,
    filterMethod: Function,
    filteredValue: Array,
    filters: Array,
    filterPlacement: String,
    filterMultiple: {
      type: Boolean,
      default: true
    },
    index: [Number, Function],
    isLink: { //可点击列
      type: Boolean,
      default: false
    },
    sortOrders: {
      type: Array,
      default: function _default() {
        return ['ascending', 'descending', null];
      },
      validator: function validator(val) {
        return val.every(function (order) {
          return ['ascending', 'descending', null].indexOf(order) > -1;
        });
      }
    }
  },

  data: function data() {

    return {
      isFirst: true,
      isSubColumn: false,
      columns: []
    };
  },


  computed: {
    owner: function owner() {
      var parent = this.$parent;
      while (parent && !parent.tableId) {
        parent = parent.$parent;
      }
      return parent;
    },
    columnOrTableParent: function columnOrTableParent() {
      var parent = this.$parent;
      while (parent && !parent.tableId && !parent.columnId) {
        parent = parent.$parent;
      }
      return parent;
    },
    realWidth: function realWidth() {
      return parseWidth(this.width);
    },
    realMinWidth: function realMinWidth() {
      return parseMinWidth(this.minWidth);
    },
    realAlign: function realAlign() {
      return this.align ? 'is-' + this.align : null;
    },
    realHeaderAlign: function realHeaderAlign() {
      return this.headerAlign ? 'is-' + this.headerAlign : 'is-center';
    }
  },

  methods: {
    getPropsData: function getPropsData() {
      var _this = this;

      for (var _len = arguments.length, props = Array(_len), _key = 0; _key < _len; _key++) {
        props[_key] = arguments[_key];
      }

      return props.reduce(function (prev, cur) {
        if (Array.isArray(cur)) {
          cur.forEach(function (key) {
            prev[key] = _this[key];
          });
        }
        return prev;
      }, {});
    },
    getColumnElIndex: function getColumnElIndex(children, child) {
      return [].indexOf.call(children, child);
    },

    /**
     * @description 0.2.0 新增 替换宽度设置函数，补充对齐方式设置
     * @param {*} column 
     */
    setColumnBaseStyles: function setColumnBaseStyles(column) {
      if (this.realWidth) {
        column.width = this.realWidth;
      }
      if (this.realMinWidth) {
        column.minWidth = this.realMinWidth;
      }
      if (!column.minWidth) {
        column.minWidth = 80;
      }
      column.realWidth = column.width === undefined ? column.minWidth : column.width;

      if (this.realAlign) {
        column.align = this.realAlign;
      }
      if (this.realHeaderAlign) {
        column.headerAlign = this.realHeaderAlign;
      }
      return column;
    },
    setColumnForcedProps: function setColumnForcedProps(column) {
      // 对于特定类型的 column，某些属性不允许设置
      var type = column.type;
      var source = cellForced[type] || {};
      Object.keys(source).forEach(function (prop) {
        var value = source[prop];
        if (value !== undefined) {
          column[prop] = prop === 'className' ? column[prop] + ' ' + value : value;
        }
      });
      return column;
    },
    setColumnRenders: function setColumnRenders(column) {
      var _this2 = this;

      var h = this.$createElement;

      // renderHeader 属性不推荐使用。
      if (this.renderHeader) {
        console.warn('[FawkesLib Warn][TableColumn]Comparing to render-header, scoped-slot header is easier to use. We recommend users to use scoped-slot header.');
      } else if (column.type !== 'selection') {
        column.renderHeader = function (h, scope) {
          var renderHeader = _this2.$scopedSlots.header;
          return renderHeader ? renderHeader(scope) : column.label;
        };
      }

      var originRenderCell = column.renderCell;
      // TODO: 这里的实现调整
      if (column.type === 'expand') {
        // 对于展开行，renderCell 不允许配置的。在上一步中已经设置过，这里需要简单封装一下。
        column.renderCell = function (h, data) {
          return h(
            'div',
            { 'class': 'cell' },
            [originRenderCell(h, data)]
          );
        };
        this.owner.renderExpanded = function (h, data) {
          return _this2.$scopedSlots.default ? _this2.$scopedSlots.default(data) : _this2.$slots.default;
        };
      } else {
        originRenderCell = originRenderCell || defaultRenderCell;
        // 对 renderCell 进行包装
        column.renderCell = function (h, data) {
          var children = null;
          if (_this2.$scopedSlots.default) {
            children = _this2.$scopedSlots.default(data);
          } else {
            children = originRenderCell(h, data);
          }
          var prefix = treeCellPrefix(h, data);
          var props = {
            class: 'cell',
            style: {}
          };
          if (column.isLink) {
            props.class += ' fks-table__link-column';
            props.style = { width: (data.column.realWidth || data.column.width) - 1 + 'px' };
          }
          if (column.showOverflowTooltip) {
            props.class += ' fks-tooltip';
            props.style = { width: (data.column.realWidth || data.column.width) - 1 + 'px' };
          }
          return h(
            'div',
            external_babel_helper_vue_jsx_merge_props_default()([props, {
              on: {
                'click': function click($event) {
                  return _this2.handleClick($event, data);
                }
              }
            }]),
            [prefix, children]
          );
        };
      }
      return column;
    },
    registerNormalWatchers: function registerNormalWatchers() {
      var _this3 = this;

      var props = ['label', 'property', 'filters', 'filterMultiple', 'sortable', 'index', 'formatter', 'className', 'labelClassName', 'showOverflowTooltip'];
      // 一些属性具有别名
      var aliases = {
        prop: 'property',
        realAlign: 'align',
        realHeaderAlign: 'headerAlign',
        realWidth: 'width'
      };
      var allAliases = props.reduce(function (prev, cur) {
        prev[cur] = cur;
        return prev;
      }, aliases);

      Object.keys(allAliases).forEach(function (key) {
        var columnKey = aliases[key];

        _this3.$watch(key, function (newVal) {
          _this3.columnConfig[columnKey] = newVal;
        });
      });
    },
    registerComplexWatchers: function registerComplexWatchers() {
      var _this4 = this;

      var props = ['fixed'];
      var aliases = {
        realWidth: 'width',
        realMinWidth: 'minWidth'
      };
      var allAliases = props.reduce(function (prev, cur) {
        prev[cur] = cur;
        return prev;
      }, aliases);

      Object.keys(allAliases).forEach(function (key) {
        var columnKey = aliases[key];

        _this4.$watch(key, function (newVal) {
          _this4.columnConfig[columnKey] = newVal;
          var updateColumns = columnKey === 'fixed';
          _this4.owner.store.scheduleLayout(updateColumns);
        });
      });
    },


    /**增加link事件 */
    handleClick: function handleClick(event, data) {
      this.$emit('link', data, event);
    },
    createChange: function createChange() {
      // console.log('lable初始获取')
      // console.log(this.label)
      var owner = this.owner;
      var parent = this.columnOrTableParent;
      var children = this.isSubColumn ? parent.$el.children : parent.$refs.hiddenColumns.children;
      var columnIndex = this.getColumnElIndex(children, this.$el);
      //  if (this.label != '日期')
      //hide column 
      owner.store.commit('insertColumn', this.columnConfig, columnIndex, this.isSubColumn ? parent.columnConfig : null);
    },
    destroyChange: function destroyChange() {
      if (!this.$parent) return;
      var parent = this.$parent;
      this.owner.store.commit('removeColumn', this.columnConfig, this.isSubColumn ? parent.columnConfig : null);
    }
  },

  components: {
    FksCheckbox: checkbox_default.a
  },

  beforeCreate: function beforeCreate() {
    this.row = {};
    this.column = {};
    this.$index = 0;
    this.columnId = '';
  },
  created: function created() {
    var parent = this.columnOrTableParent;
    this.isSubColumn = this.owner !== parent;
    this.columnId = (parent.tableId || parent.columnId) + '_column_' + columnIdSeed++;

    var type = this.type || 'default';
    var sortable = this.sortable === '' ? true : this.sortable;
    var defaults = table_column_extends({}, cellStarts[type], {
      id: this.columnId,
      type: type,
      property: this.prop || this.property,
      showOverflowTooltip: this.showOverflowTooltip || this.showTooltipWhenOverflow,
      // filter 相关属性
      filterable: this.filters || this.filterMethod,
      filteredValue: [],
      filterPlacement: '',
      isColumnGroup: false,
      filterOpened: false,
      // sort 相关属性
      sortable: sortable,
      // index 列
      index: this.index
    });

    var basicProps = ['columnKey', 'label', 'className', 'labelClassName', 'type', 'renderHeader', 'formatter', 'fixed', 'resizable', 'isLink'];
    var sortProps = ['sortMethod', 'sortBy', 'sortOrders'];
    var selectProps = ['selectable', 'reserveSelection'];
    var filterProps = ['filterMethod', 'filters', 'filterMultiple', 'filterOpened', 'filteredValue', 'filterPlacement'];

    var column = this.getPropsData(basicProps, sortProps, selectProps, filterProps);
    column = mergeOptions(defaults, column);

    // 注意 compose 中函数执行的顺序是从右到左
    var chains = compose(this.setColumnRenders, this.setColumnBaseStyles, this.setColumnForcedProps);
    column = chains(column);

    this.columnConfig = column;

    // 注册 watcher
    this.registerNormalWatchers();
    this.registerComplexWatchers();
  },
  mounted: function mounted() {
    // console.log('lable初始获取')
    // console.log(this.label)
    var owner = this.owner;
    var parent = this.columnOrTableParent;
    var children = this.isSubColumn ? parent.$el.children : parent.$refs.hiddenColumns.children;
    var columnIndex = this.getColumnElIndex(children, this.$el);
    //  if (this.label != '日期')
    //hide column 
    owner.store.commit('insertColumn', this.columnConfig, columnIndex, this.isSubColumn ? parent.columnConfig : null);
  },
  destroyed: function destroyed() {
    if (!this.$parent) return;
    var parent = this.$parent;
    this.owner.store.commit('removeColumn', this.columnConfig, this.isSubColumn ? parent.columnConfig : null);
  },

  watch: {
    'owner.store.states.selectedCol': function ownerStoreStatesSelectedCol(val, old) {
      var _this5 = this;

      if (!this.isFirst) {
        if (old.indexOf(this.label) > -1) {
          //old有
          if (val.indexOf(this.label) < 0) {
            //new 没有
            this.destroyChange();
          }
        } else {
          //old没有
          if (val.indexOf(this.label) > -1) {
            setTimeout(function () {
              _this5.createChange();
            }, 0);
          }
        }
      }
      this.isFirst = false;
    },
    label: function label(val) {
      this.owner.store.updateColumns();
    }
  },

  render: function render(h) {
    // slots 也要渲染，需要计算合并表头
    return h('div', this.$slots.default);
  }
});
// CONCATENATED MODULE: ./packages/table-column/index.js


/* istanbul ignore next */
table_column.install = function (Vue) {
  Vue.component(table_column.name, table_column);
};

/* harmony default export */ var packages_table_column = (table_column);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/picker.vue?vue&type=template&id=b37f393c&
var pickervue_type_template_id_b37f393c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return !_vm.ranged
    ? _c(
        "fks-input",
        _vm._b(
          {
            directives: [
              {
                name: "clickoutside",
                rawName: "v-clickoutside",
                value: _vm.handleClose,
                expression: "handleClose",
              },
            ],
            ref: "reference",
            staticClass: "fks-date-editor",
            class: "fks-date-editor--" + _vm.type,
            attrs: {
              readonly:
                !_vm.editable ||
                _vm.pickerReadonly ||
                _vm.type === "dates" ||
                _vm.type === "week",
              disabled: _vm.pickerDisabled,
              size: _vm.pickerSize,
              name: _vm.name,
              placeholder: _vm.placeholder,
              value: _vm.displayValue,
              validateEvent: false,
            },
            on: {
              focus: _vm.handleFocus,
              input: function (value) {
                return (_vm.userInput = value)
              },
              change: _vm.handleChange,
            },
            nativeOn: {
              keydown: function ($event) {
                return _vm.handleKeydown.apply(null, arguments)
              },
              mouseenter: function ($event) {
                return _vm.handleMouseEnter.apply(null, arguments)
              },
              mouseleave: function ($event) {
                _vm.showClose = false
              },
            },
          },
          "fks-input",
          _vm.firstInputId,
          false
        ),
        [
          _c("i", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.pickerReadonly,
                expression: "!pickerReadonly",
              },
            ],
            staticClass: "fks-input__icon",
            class: _vm.triggerClass,
            attrs: { slot: "suffix" },
            on: { click: _vm.handleFocus },
            slot: "suffix",
          }),
          _vm.haveTrigger
            ? _c("i", {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: !_vm.pickerReadonly,
                    expression: "!pickerReadonly",
                  },
                ],
                staticClass: "fks-input__icon",
                class: [_vm.showClose ? "" + _vm.clearIcon : ""],
                attrs: { slot: "suffix" },
                on: { click: _vm.handleClickIcon },
                slot: "suffix",
              })
            : _vm._e(),
        ]
      )
    : _c(
        "div",
        {
          directives: [
            {
              name: "clickoutside",
              rawName: "v-clickoutside",
              value: _vm.handleClose,
              expression: "handleClose",
            },
          ],
          ref: "reference",
          staticClass: "fks-date-editor fks-range-editor fks-input__inner",
          class: [
            "fks-date-editor--" + _vm.type,
            _vm.pickerSize ? "fks-range-editor--" + _vm.pickerSize : "",
            _vm.pickerDisabled ? "is-disabled" : "",
            _vm.pickerVisible ? "is-active" : "",
          ],
          on: {
            click: _vm.handleRangeClick,
            mouseenter: _vm.handleMouseEnter,
            mouseleave: function ($event) {
              _vm.showClose = false
            },
            keydown: _vm.handleKeydown,
          },
        },
        [
          _c(
            "input",
            _vm._b(
              {
                staticClass: "fks-range-input",
                attrs: {
                  autocomplete: "off",
                  placeholder: _vm.startPlaceholder,
                  disabled: _vm.pickerDisabled,
                  readonly: !_vm.editable || _vm.pickerReadonly,
                  name: _vm.name && _vm.name[0],
                },
                domProps: { value: _vm.displayValue && _vm.displayValue[0] },
                on: {
                  input: _vm.handleStartInput,
                  change: _vm.handleStartChange,
                  focus: _vm.handleFocus,
                },
              },
              "input",
              _vm.firstInputId,
              false
            )
          ),
          _vm._t("range-separator", function () {
            return [
              _c("span", { staticClass: "fks-range-separator" }, [
                _vm._v(_vm._s(_vm.rangeSeparator)),
              ]),
            ]
          }),
          _c(
            "input",
            _vm._b(
              {
                staticClass: "fks-range-input",
                attrs: {
                  autocomplete: "off",
                  placeholder: _vm.endPlaceholder,
                  disabled: _vm.pickerDisabled,
                  readonly: !_vm.editable || _vm.pickerReadonly,
                  name: _vm.name && _vm.name[1],
                },
                domProps: { value: _vm.displayValue && _vm.displayValue[1] },
                on: {
                  input: _vm.handleEndInput,
                  change: _vm.handleEndChange,
                  focus: _vm.handleFocus,
                },
              },
              "input",
              _vm.secondInputId,
              false
            )
          ),
          _vm.haveTrigger
            ? _c("i", {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: !_vm.pickerReadonly,
                    expression: "!pickerReadonly",
                  },
                ],
                staticClass: "fks-input__icon fks-range__close-icon",
                class: [_vm.showClose ? "" + _vm.clearIcon : ""],
                on: { click: _vm.handleClickIcon },
              })
            : _vm._e(),
          _c("i", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.pickerReadonly,
                expression: "!pickerReadonly",
              },
            ],
            class: ["fks-input__icon", "fks-range__icon", _vm.triggerClass],
          }),
        ],
        2
      )
}
var pickervue_type_template_id_b37f393c_staticRenderFns = []
pickervue_type_template_id_b37f393c_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue?vue&type=template&id=b37f393c&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/date-util"
var date_util_ = __webpack_require__(0);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/picker.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








var NewPopper = {
  props: {
    appendToBody: vue_popper_default.a.props.appendToBody,
    offset: vue_popper_default.a.props.offset,
    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
    arrowOffset: vue_popper_default.a.props.arrowOffset
  },
  methods: vue_popper_default.a.methods,
  data: function data() {
    return merge_default()({ visibleArrow: false }, vue_popper_default.a.data);
  },

  beforeDestroy: vue_popper_default.a.beforeDestroy
};

var DEFAULT_FORMATS = {
  date: 'yyyy-MM-dd',
  month: 'yyyy-MM',
  datetime: 'yyyy-MM-dd HH:mm:ss',
  time: 'HH:mm:ss',
  week: 'yyyywWW',
  timerange: 'HH:mm:ss',
  daterange: 'yyyy-MM-dd',
  monthrange: 'yyyy-MM',
  datetimerange: 'yyyy-MM-dd HH:mm:ss',
  year: 'yyyy'
};
var HAVE_TRIGGER_TYPES = ['date', 'datetime', 'time', 'time-select', 'week', 'month', 'year', 'daterange', 'monthrange', 'timerange', 'datetimerange', 'dates'];
var pickervue_type_script_lang_js_DATE_FORMATTER = function DATE_FORMATTER(value, format) {
  var offset = external_vue_default.a.prototype.$storage.get('basicOffset') || 0;
  if (format === 'timestamp') return value.getTime() + 3600000 * offset;
  return Object(date_util_["formatDate"])(value, format);
};
var pickervue_type_script_lang_js_DATE_PARSER = function DATE_PARSER(text, format) {
  if (format === 'timestamp') return new Date(Number(text));
  return Object(date_util_["parseDate"])(text, format);
};
var RANGE_FORMATTER = function RANGE_FORMATTER(value, format) {
  if (Array.isArray(value) && value.length === 2) {
    var start = value[0];
    var end = value[1];

    if (start && end) {
      return [pickervue_type_script_lang_js_DATE_FORMATTER(start, format), pickervue_type_script_lang_js_DATE_FORMATTER(end, format)];
    }
  }
  return '';
};
var RANGE_PARSER = function RANGE_PARSER(array, format, separator) {
  if (!Array.isArray(array)) {
    array = array.split(separator);
  }
  if (array.length === 2) {
    var range1 = array[0];
    var range2 = array[1];

    return [pickervue_type_script_lang_js_DATE_PARSER(range1, format), pickervue_type_script_lang_js_DATE_PARSER(range2, format)];
  }
  return [];
};
var TYPE_VALUE_RESOLVER_MAP = {
  default: {
    formatter: function formatter(value) {
      if (!value) return '';
      return '' + value;
    },
    parser: function parser(text) {
      if (text === undefined || text === '') return null;
      return text;
    }
  },
  week: {
    formatter: function formatter(value, format) {
      var week = Object(date_util_["getWeekNumber"])(value);
      var month = value.getMonth();
      var trueDate = new Date(value);
      if (week === 1 && month === 11) {
        trueDate.setHours(0, 0, 0, 0);
        trueDate.setDate(trueDate.getDate() + 3 - (trueDate.getDay() + 6) % 7);
      }
      var date = Object(date_util_["formatDate"])(trueDate, format);

      date = /WW/.test(date) ? date.replace(/WW/, week < 10 ? '0' + week : week) : date.replace(/W/, week);
      return date;
    },
    parser: function parser(text, format) {
      // parse as if a normal date
      return TYPE_VALUE_RESOLVER_MAP.date.parser(text, format);
    }
  },
  date: {
    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
    parser: pickervue_type_script_lang_js_DATE_PARSER
  },
  datetime: {
    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
    parser: pickervue_type_script_lang_js_DATE_PARSER
  },
  daterange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  monthrange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  datetimerange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  timerange: {
    formatter: RANGE_FORMATTER,
    parser: RANGE_PARSER
  },
  time: {
    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
    parser: pickervue_type_script_lang_js_DATE_PARSER
  },
  month: {
    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
    parser: pickervue_type_script_lang_js_DATE_PARSER
  },
  year: {
    formatter: pickervue_type_script_lang_js_DATE_FORMATTER,
    parser: pickervue_type_script_lang_js_DATE_PARSER
  },
  number: {
    formatter: function formatter(value) {
      if (!value) return '';
      return '' + value;
    },
    parser: function parser(text) {
      var result = Number(text);

      if (!isNaN(text)) {
        return result;
      } else {
        return null;
      }
    }
  },
  dates: {
    formatter: function formatter(value, format) {
      return value.map(function (date) {
        return pickervue_type_script_lang_js_DATE_FORMATTER(date, format);
      });
    },
    parser: function parser(value, format) {
      return (typeof value === 'string' ? value.split(', ') : value).map(function (date) {
        return date instanceof Date ? date : pickervue_type_script_lang_js_DATE_PARSER(date, format);
      });
    }
  }
};
var PLACEMENT_MAP = {
  left: 'bottom-start',
  center: 'bottom',
  right: 'bottom-end'
};

var parseAsFormatAndType = function parseAsFormatAndType(value, customFormat, type) {
  var rangeSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '-';

  if (!value) return null;
  var parser = (TYPE_VALUE_RESOLVER_MAP[type] || TYPE_VALUE_RESOLVER_MAP['default']).parser;
  var format = customFormat || DEFAULT_FORMATS[type];
  return parser(value, format, rangeSeparator);
};

var formatAsFormatAndType = function formatAsFormatAndType(value, customFormat, type) {
  if (!value) return null;
  var formatter = (TYPE_VALUE_RESOLVER_MAP[type] || TYPE_VALUE_RESOLVER_MAP['default']).formatter;
  var format = customFormat || DEFAULT_FORMATS[type];
  return formatter(value, format);
};

/*
 * Considers:
 *   1. Date object
 *   2. date string
 *   3. array of 1 or 2
 */
var valueEquals = function valueEquals(a, b) {
  // considers Date object and string
  var dateEquals = function dateEquals(a, b) {
    var aIsDate = a instanceof Date;
    var bIsDate = b instanceof Date;
    if (aIsDate && bIsDate) {
      return a.getTime() === b.getTime();
    }
    if (!aIsDate && !bIsDate) {
      return a === b;
    }
    return false;
  };

  var aIsArray = a instanceof Array;
  var bIsArray = b instanceof Array;
  if (aIsArray && bIsArray) {
    if (a.length !== b.length) {
      return false;
    }
    return a.every(function (item, index) {
      return dateEquals(item, b[index]);
    });
  }
  if (!aIsArray && !bIsArray) {
    return dateEquals(a, b);
  }
  return false;
};

var isString = function isString(val) {
  return typeof val === 'string' || val instanceof String;
};

var pickervue_type_script_lang_js_validator = function validator(val) {
  // either: String, Array of String, null / undefined
  return val === null || val === undefined || isString(val) || Array.isArray(val) && val.length === 2 && val.every(isString);
};

/* harmony default export */ var pickervue_type_script_lang_js_ = ({
  mixins: [emitter_default.a, NewPopper],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    size: String,
    format: String,
    valueFormat: String,
    readonly: Boolean,
    placeholder: String,
    startPlaceholder: String,
    endPlaceholder: String,
    suffixIcon: String,
    clearIcon: {
      type: String,
      default: 'fks-icon-circle-close'
    },
    name: {
      default: '',
      validator: pickervue_type_script_lang_js_validator
    },
    disabled: Boolean,
    clearable: {
      type: Boolean,
      default: true
    },
    id: {
      default: '',
      validator: pickervue_type_script_lang_js_validator
    },
    popperClass: String,
    editable: {
      type: Boolean,
      default: true
    },
    align: {
      type: String,
      default: 'left'
    },
    value: {},
    defaultValue: {},
    defaultTime: {},
    rangeSeparator: {
      default: '-'
    },
    pickerOptions: {},
    unlinkPanels: Boolean,
    validateEvent: {
      type: Boolean,
      default: true
    }
  },

  components: { FksInput: input_default.a },

  directives: { Clickoutside: clickoutside_default.a },

  data: function data() {
    return {
      pickerVisible: false,
      showClose: false,
      userInput: null,
      valueOnOpen: null, // value when picker opens, used to determine whether to emit change
      unwatchPickerOptions: null
    };
  },


  watch: {
    pickerVisible: function pickerVisible(val) {
      if (this.pickerReadonly || this.pickerDisabled) return;
      if (val) {
        this.showPicker();
        this.valueOnOpen = Array.isArray(this.value) ? [].concat(this.value) : this.value;
      } else {
        this.hidePicker();
        this.emitChange(this.value);
        this.userInput = null;
        if (this.validateEvent) {
          this.dispatch('FksFormItem', 'fks.form.blur');
        }
        this.$emit('blur', this);
        this.blur();
      }
    },

    parsedValue: {
      immediate: true,
      handler: function handler(val) {
        if (this.picker) {
          this.picker.value = val;
        }
      }
    },
    defaultValue: function defaultValue(val) {
      // NOTE: should eventually move to jsx style picker + panel ?
      if (this.picker) {
        this.picker.defaultValue = val;
      }
    },
    value: function value(val, oldVal) {
      if (!valueEquals(val, oldVal) && !this.pickerVisible && this.validateEvent) {
        this.dispatch('FksFormItem', 'fks.form.change', val);
      }
    }
  },

  computed: {
    ranged: function ranged() {
      return this.type.indexOf('range') > -1;
    },
    reference: function reference() {
      var reference = this.$refs.reference;
      return reference.$el || reference;
    },
    refInput: function refInput() {
      if (this.reference) {
        return [].slice.call(this.reference.querySelectorAll('input'));
      }
      return [];
    },
    valueIsEmpty: function valueIsEmpty() {
      var val = this.value;
      if (Array.isArray(val)) {
        for (var i = 0, len = val.length; i < len; i++) {
          if (val[i]) {
            return false;
          }
        }
      } else {
        if (val) {
          return false;
        }
      }
      return true;
    },
    triggerClass: function triggerClass() {
      return this.suffixIcon || (this.type.indexOf('time') !== -1 ? 'fks-icon-time' : 'fks-icon-date');
    },
    selectionMode: function selectionMode() {
      if (this.type === 'week') {
        return 'week';
      } else if (this.type === 'month') {
        return 'month';
      } else if (this.type === 'year') {
        return 'year';
      } else if (this.type === 'dates') {
        return 'dates';
      }

      return 'day';
    },
    haveTrigger: function haveTrigger() {
      if (typeof this.showTrigger !== 'undefined') {
        return this.showTrigger;
      }
      return HAVE_TRIGGER_TYPES.indexOf(this.type) !== -1;
    },
    displayValue: function displayValue() {
      var formattedValue = formatAsFormatAndType(this.parsedValue, this.format, this.type, this.rangeSeparator);
      if (Array.isArray(this.userInput)) {
        return [this.userInput[0] || formattedValue && formattedValue[0] || '', this.userInput[1] || formattedValue && formattedValue[1] || ''];
      } else if (this.userInput !== null) {
        return this.userInput;
      } else if (formattedValue) {
        return this.type === 'dates' ? formattedValue.join(', ') : formattedValue;
      } else {
        return '';
      }
    },
    parsedValue: function parsedValue() {
      if (!this.value) return this.value; // component value is not set
      if (this.type === 'time-select') return this.value; // time-select does not require parsing, this might change in next major version

      var valueIsDateObject = Object(date_util_["isDateObject"])(this.value) || Array.isArray(this.value) && this.value.every(date_util_["isDateObject"]);
      if (valueIsDateObject) {
        return this.value;
      }

      if (this.valueFormat) {
        return parseAsFormatAndType(this.value, this.valueFormat, this.type, this.rangeSeparator) || this.value;
      }

      // NOTE: deal with common but incorrect usage, should remove in next major version
      // user might provide string / timestamp without value-format, coerce them into date (or array of date)
      return Array.isArray(this.value) ? this.value.map(function (val) {
        return new Date(val);
      }) : new Date(this.value);
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    pickerSize: function pickerSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    pickerDisabled: function pickerDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    pickerReadonly: function pickerReadonly() {
      return this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    firstInputId: function firstInputId() {
      var obj = {};
      var id = void 0;
      if (this.ranged) {
        id = this.id && this.id[0];
      } else {
        id = this.id;
      }
      if (id) obj.id = id;
      return obj;
    },
    secondInputId: function secondInputId() {
      var obj = {};
      var id = void 0;
      if (this.ranged) {
        id = this.id && this.id[1];
      }
      if (id) obj.id = id;
      return obj;
    }
  },

  created: function created() {
    // vue-popper
    this.popperOptions = {
      boundariesPadding: 0,
      gpuAcceleration: false
    };
    this.placement = PLACEMENT_MAP[this.align] || PLACEMENT_MAP.left;

    this.$on('fieldReset', this.handleFieldReset);
  },


  methods: {
    focus: function focus() {
      if (!this.ranged) {
        this.$refs.reference.focus();
      } else {
        this.handleFocus();
      }
    },
    blur: function blur() {
      this.refInput.forEach(function (input) {
        return input.blur();
      });
    },


    // {parse, formatTo} Value deals maps component value with internal Date
    parseValue: function parseValue(value) {
      var isParsed = Object(date_util_["isDateObject"])(value) || Array.isArray(value) && value.every(date_util_["isDateObject"]);
      if (this.valueFormat && !isParsed) {
        return parseAsFormatAndType(value, this.valueFormat, this.type, this.rangeSeparator) || value;
      } else {
        return value;
      }
    },
    formatToValue: function formatToValue(date) {
      var isFormattable = Object(date_util_["isDateObject"])(date) || Array.isArray(date) && date.every(date_util_["isDateObject"]);
      if (this.valueFormat && isFormattable) {
        return formatAsFormatAndType(date, this.valueFormat, this.type, this.rangeSeparator);
      } else {
        return date;
      }
    },


    // {parse, formatTo} String deals with user input
    parseString: function parseString(value) {
      var type = Array.isArray(value) ? this.type : this.type.replace('range', '');
      return parseAsFormatAndType(value, this.format, type);
    },
    formatToString: function formatToString(value) {
      var type = Array.isArray(value) ? this.type : this.type.replace('range', '');
      return formatAsFormatAndType(value, this.format, type);
    },
    handleMouseEnter: function handleMouseEnter() {
      if (this.pickerReadonly || this.pickerDisabled) return;
      if (!this.valueIsEmpty && this.clearable) {
        this.showClose = true;
      }
    },
    handleChange: function handleChange() {
      if (this.userInput) {
        var value = this.parseString(this.displayValue);
        if (value) {
          this.picker.value = value;
          if (this.isValidValue(value)) {
            this.emitInput(value);
            this.userInput = null;
          }
        }
      }
      if (this.userInput === '') {
        this.emitInput(null);
        this.emitChange(null);
        this.userInput = null;
      }
    },
    handleStartInput: function handleStartInput(event) {
      if (this.userInput) {
        this.userInput = [event.target.value, this.userInput[1]];
      } else {
        this.userInput = [event.target.value, null];
      }
    },
    handleEndInput: function handleEndInput(event) {
      if (this.userInput) {
        this.userInput = [this.userInput[0], event.target.value];
      } else {
        this.userInput = [null, event.target.value];
      }
    },
    handleStartChange: function handleStartChange(event) {
      var value = this.parseString(this.userInput && this.userInput[0]);
      if (value) {
        this.userInput = [this.formatToString(value), this.displayValue[1]];
        var newValue = [value, this.picker.value && this.picker.value[1]];
        this.picker.value = newValue;
        if (this.isValidValue(newValue)) {
          this.emitInput(newValue);
          this.userInput = null;
        }
      }
    },
    handleEndChange: function handleEndChange(event) {
      var value = this.parseString(this.userInput && this.userInput[1]);
      if (value) {
        this.userInput = [this.displayValue[0], this.formatToString(value)];
        var newValue = [this.picker.value && this.picker.value[0], value];
        this.picker.value = newValue;
        if (this.isValidValue(newValue)) {
          this.emitInput(newValue);
          this.userInput = null;
        }
      }
    },
    handleClickIcon: function handleClickIcon(event) {
      if (this.pickerReadonly || this.pickerDisabled) return;
      if (this.showClose) {
        this.valueOnOpen = this.value;
        event.stopPropagation();
        this.emitInput(null);
        this.emitChange(null);
        this.showClose = false;
        if (this.picker && typeof this.picker.handleClear === 'function') {
          this.picker.handleClear();
        }
      } else {
        this.pickerVisible = !this.pickerVisible;
      }
    },
    handleClose: function handleClose() {
      if (!this.pickerVisible) return;
      this.pickerVisible = false;

      if (this.type === 'dates') {
        // restore to former value
        var oldValue = parseAsFormatAndType(this.valueOnOpen, this.valueFormat, this.type, this.rangeSeparator) || this.valueOnOpen;
        this.emitInput(oldValue);
      }
    },
    handleFieldReset: function handleFieldReset(initialValue) {
      this.userInput = initialValue === '' ? null : initialValue;
    },
    handleFocus: function handleFocus() {
      var type = this.type;

      if (HAVE_TRIGGER_TYPES.indexOf(type) !== -1 && !this.pickerVisible) {
        this.pickerVisible = true;
      }
      this.$emit('focus', this);
    },
    handleKeydown: function handleKeydown(event) {
      var _this = this;

      var keyCode = event.keyCode;

      // ESC
      if (keyCode === 27) {
        this.pickerVisible = false;
        event.stopPropagation();
        return;
      }

      // Tab
      if (keyCode === 9) {
        if (!this.ranged) {
          this.handleChange();
          this.pickerVisible = this.picker.visible = false;
          this.blur();
          event.stopPropagation();
        } else {
          // user may change focus between two input
          setTimeout(function () {
            if (_this.refInput.indexOf(document.activeElement) === -1) {
              _this.pickerVisible = false;
              _this.blur();
              event.stopPropagation();
            }
          }, 0);
        }
        return;
      }

      // Enter
      if (keyCode === 13) {
        if (this.userInput === '' || this.isValidValue(this.parseString(this.displayValue))) {
          this.handleChange();
          this.pickerVisible = this.picker.visible = false;
          this.blur();
        }
        event.stopPropagation();
        return;
      }

      // if user is typing, do not let picker handle key input
      if (this.userInput) {
        event.stopPropagation();
        return;
      }

      // delegate other keys to panel
      if (this.picker && this.picker.handleKeydown) {
        this.picker.handleKeydown(event);
      }
    },
    handleRangeClick: function handleRangeClick() {
      var type = this.type;

      if (HAVE_TRIGGER_TYPES.indexOf(type) !== -1 && !this.pickerVisible) {
        this.pickerVisible = true;
      }
      this.$emit('focus', this);
    },
    hidePicker: function hidePicker() {
      if (this.picker) {
        this.picker.resetView && this.picker.resetView();
        this.pickerVisible = this.picker.visible = false;
        this.destroyPopper();
      }
    },
    showPicker: function showPicker() {
      var _this2 = this;

      if (this.$isServer) return;
      if (!this.picker) {
        this.mountPicker();
      }
      this.pickerVisible = this.picker.visible = true;

      this.updatePopper();

      this.picker.value = this.parsedValue;
      this.picker.resetView && this.picker.resetView();

      this.$nextTick(function () {
        _this2.picker.adjustSpinners && _this2.picker.adjustSpinners();
      });
    },
    mountPicker: function mountPicker() {
      var _this3 = this;

      this.picker = new external_vue_default.a(this.panel).$mount();
      this.picker.defaultValue = this.defaultValue;
      this.picker.defaultTime = this.defaultTime;
      this.picker.popperClass = this.popperClass;
      this.popperElm = this.picker.$el;
      this.picker.width = this.reference.getBoundingClientRect().width;
      this.picker.showTime = this.type === 'datetime' || this.type === 'datetimerange';
      this.picker.selectionMode = this.selectionMode;
      this.picker.unlinkPanels = this.unlinkPanels;
      this.picker.arrowControl = this.arrowControl || this.timeArrowControl || false;
      this.$watch('format', function (format) {
        _this3.picker.format = format;
      });

      var updateOptions = function updateOptions() {
        var options = _this3.pickerOptions;

        if (options && options.selectableRange) {
          var ranges = options.selectableRange;
          var parser = TYPE_VALUE_RESOLVER_MAP.datetimerange.parser;
          var format = DEFAULT_FORMATS.timerange;

          ranges = Array.isArray(ranges) ? ranges : [ranges];
          _this3.picker.selectableRange = ranges.map(function (range) {
            return parser(range, format, _this3.rangeSeparator);
          });
        }

        for (var option in options) {
          if (options.hasOwnProperty(option) &&
          // 忽略 time-picker 的该配置项
          option !== 'selectableRange') {
            _this3.picker[option] = options[option];
          }
        }

        // main format must prevail over undocumented pickerOptions.format
        if (_this3.format) {
          _this3.picker.format = _this3.format;
        }
      };
      updateOptions();
      this.unwatchPickerOptions = this.$watch('pickerOptions', function () {
        return updateOptions();
      }, { deep: true });
      this.$el.appendChild(this.picker.$el);
      this.picker.resetView && this.picker.resetView();

      this.picker.$on('dodestroy', this.doDestroy);
      this.picker.$on('pick', function () {
        var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        _this3.userInput = null;
        _this3.pickerVisible = _this3.picker.visible = visible;
        _this3.emitInput(date);
        _this3.picker.resetView && _this3.picker.resetView();
      });

      this.picker.$on('select-range', function (start, end, pos) {
        if (_this3.refInput.length === 0) return;
        if (!pos || pos === 'min') {
          _this3.refInput[0].setSelectionRange(start, end);
          _this3.refInput[0].focus();
        } else if (pos === 'max') {
          _this3.refInput[1].setSelectionRange(start, end);
          _this3.refInput[1].focus();
        }
      });
    },
    unmountPicker: function unmountPicker() {
      if (this.picker) {
        this.picker.$destroy();
        this.picker.$off();
        if (typeof this.unwatchPickerOptions === 'function') {
          this.unwatchPickerOptions();
        }
        this.picker.$el.parentNode.removeChild(this.picker.$el);
      }
    },
    emitChange: function emitChange(val) {
      // determine user real change only
      if (!valueEquals(val, this.valueOnOpen)) {
        this.$emit('change', val);
        this.valueOnOpen = val;
        if (this.validateEvent) {
          this.dispatch('FksFormItem', 'fks.form.change', val);
        }
      }
    },
    emitInput: function emitInput(val) {
      var formatted = this.formatToValue(val);
      if (!valueEquals(this.value, formatted)) {
        this.$emit('input', formatted);
      }
    },
    isValidValue: function isValidValue(value) {
      if (!this.picker) {
        this.mountPicker();
      }
      if (this.picker.isValidValue) {
        return value && this.picker.isValidValue(value);
      } else {
        return true;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_pickervue_type_script_lang_js_ = (pickervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/picker.vue





/* normalize component */

var picker_component = normalizeComponent(
  src_pickervue_type_script_lang_js_,
  pickervue_type_template_id_b37f393c_render,
  pickervue_type_template_id_b37f393c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var picker = (picker_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date.vue?vue&type=template&id=787f483f&
var datevue_type_template_id_787f483f_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: { "after-enter": _vm.handleEnter, "after-leave": _vm.handleLeave },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-picker-panel fks-date-picker fks-popper",
          class: [
            {
              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts,
              "has-time": _vm.showTime,
            },
            _vm.popperClass,
          ],
        },
        [
          _c(
            "div",
            { staticClass: "fks-picker-panel__body-wrapper" },
            [
              _vm._t("sidebar"),
              _vm.shortcuts
                ? _c(
                    "div",
                    { staticClass: "fks-picker-panel__sidebar" },
                    _vm._l(_vm.shortcuts, function (shortcut, key) {
                      return _c(
                        "button",
                        {
                          key: key,
                          staticClass: "fks-picker-panel__shortcut",
                          attrs: { type: "button" },
                          on: {
                            click: function ($event) {
                              return _vm.handleShortcutClick(shortcut)
                            },
                          },
                        },
                        [_vm._v(_vm._s(shortcut.text))]
                      )
                    }),
                    0
                  )
                : _vm._e(),
              _c("div", { staticClass: "fks-picker-panel__body" }, [
                _vm.showTime
                  ? _c("div", { staticClass: "fks-date-picker__time-header" }, [
                      _c(
                        "span",
                        { staticClass: "fks-date-picker__editor-wrap" },
                        [
                          _c("fks-input", {
                            attrs: {
                              placeholder: _vm.t("fks.datepicker.selectDate"),
                              value: _vm.visibleDate,
                              size: "small",
                            },
                            on: {
                              input: function (val) {
                                return (_vm.userInputDate = val)
                              },
                              change: _vm.handleVisibleDateChange,
                            },
                          }),
                        ],
                        1
                      ),
                      _c(
                        "span",
                        {
                          directives: [
                            {
                              name: "clickoutside",
                              rawName: "v-clickoutside",
                              value: _vm.handleTimePickClose,
                              expression: "handleTimePickClose",
                            },
                          ],
                          staticClass: "fks-date-picker__editor-wrap",
                        },
                        [
                          _c("fks-input", {
                            ref: "input",
                            attrs: {
                              placeholder: _vm.t("fks.datepicker.selectTime"),
                              value: _vm.visibleTime,
                              size: "small",
                            },
                            on: {
                              focus: function ($event) {
                                _vm.timePickerVisible = true
                              },
                              input: function (val) {
                                return (_vm.userInputTime = val)
                              },
                              change: _vm.handleVisibleTimeChange,
                            },
                          }),
                          _c("time-picker", {
                            ref: "timepicker",
                            attrs: {
                              "time-arrow-control": _vm.arrowControl,
                              visible: _vm.timePickerVisible,
                            },
                            on: {
                              pick: _vm.handleTimePick,
                              mounted: _vm.proxyTimePickerDataProperties,
                            },
                          }),
                        ],
                        1
                      ),
                    ])
                  : _vm._e(),
                _c(
                  "div",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.currentView !== "time",
                        expression: "currentView !== 'time'",
                      },
                    ],
                    staticClass: "fks-date-picker__header",
                    class: {
                      "fks-date-picker__header--bordered":
                        _vm.currentView === "year" ||
                        _vm.currentView === "month",
                    },
                  },
                  [
                    _c("button", {
                      staticClass:
                        "fks-picker-panel__icon-btn fks-date-picker__prev-btn fks-icon-d-arrow-left",
                      attrs: {
                        type: "button",
                        "aria-label": _vm.t("fks.datepicker.prevYear"),
                      },
                      on: { click: _vm.prevYear },
                    }),
                    _c("button", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.currentView === "date",
                          expression: "currentView === 'date'",
                        },
                      ],
                      staticClass:
                        "fks-picker-panel__icon-btn fks-date-picker__prev-btn fks-icon-arrow-left",
                      attrs: {
                        type: "button",
                        "aria-label": _vm.t("fks.datepicker.prevMonth"),
                      },
                      on: { click: _vm.prevMonth },
                    }),
                    _c(
                      "span",
                      {
                        staticClass: "fks-date-picker__header-label",
                        attrs: { role: "button" },
                        on: { click: _vm.showYearPicker },
                      },
                      [_vm._v(_vm._s(_vm.yearLabel))]
                    ),
                    _c(
                      "span",
                      {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.currentView === "date",
                            expression: "currentView === 'date'",
                          },
                        ],
                        staticClass: "fks-date-picker__header-label",
                        class: { active: _vm.currentView === "month" },
                        attrs: { role: "button" },
                        on: { click: _vm.showMonthPicker },
                      },
                      [
                        _vm._v(
                          _vm._s(
                            _vm.t("fks.datepicker.month" + (_vm.month + 1))
                          )
                        ),
                      ]
                    ),
                    _c("button", {
                      staticClass:
                        "fks-picker-panel__icon-btn fks-date-picker__next-btn fks-icon-d-arrow-right",
                      attrs: {
                        type: "button",
                        "aria-label": _vm.t("fks.datepicker.nextYear"),
                      },
                      on: { click: _vm.nextYear },
                    }),
                    _c("button", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.currentView === "date",
                          expression: "currentView === 'date'",
                        },
                      ],
                      staticClass:
                        "fks-picker-panel__icon-btn fks-date-picker__next-btn fks-icon-arrow-right",
                      attrs: {
                        type: "button",
                        "aria-label": _vm.t("fks.datepicker.nextMonth"),
                      },
                      on: { click: _vm.nextMonth },
                    }),
                  ]
                ),
                _c(
                  "div",
                  { staticClass: "fks-picker-panel__content" },
                  [
                    _c("date-table", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.currentView === "date",
                          expression: "currentView === 'date'",
                        },
                      ],
                      attrs: {
                        "selection-mode": _vm.selectionMode,
                        "first-day-of-week": _vm.firstDayOfWeek,
                        value: _vm.value,
                        "default-value": _vm.defaultValue
                          ? new Date(_vm.defaultValue)
                          : null,
                        date: _vm.date,
                        "cell-class-name": _vm.cellClassName,
                        "disabled-date": _vm.disabledDate,
                      },
                      on: { pick: _vm.handleDatePick },
                    }),
                    _c("year-table", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.currentView === "year",
                          expression: "currentView === 'year'",
                        },
                      ],
                      attrs: {
                        value: _vm.value,
                        "default-value": _vm.defaultValue
                          ? new Date(_vm.defaultValue)
                          : null,
                        date: _vm.date,
                        "disabled-date": _vm.disabledDate,
                      },
                      on: { pick: _vm.handleYearPick },
                    }),
                    _c("month-table", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.currentView === "month",
                          expression: "currentView === 'month'",
                        },
                      ],
                      attrs: {
                        value: _vm.value,
                        "default-value": _vm.defaultValue
                          ? new Date(_vm.defaultValue)
                          : null,
                        date: _vm.date,
                        "disabled-date": _vm.disabledDate,
                      },
                      on: { pick: _vm.handleMonthPick },
                    }),
                  ],
                  1
                ),
              ]),
            ],
            2
          ),
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.footerVisible && _vm.currentView === "date",
                  expression: "footerVisible && currentView === 'date'",
                },
              ],
              staticClass: "fks-picker-panel__footer",
            },
            [
              _c(
                "fks-button",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.selectionMode !== "dates",
                      expression: "selectionMode !== 'dates'",
                    },
                  ],
                  staticClass: "fks-picker-panel__link-btn",
                  attrs: { size: "mini", type: "text" },
                  on: { click: _vm.changeToNow },
                },
                [_vm._v(_vm._s(_vm.t("fks.datepicker.now")))]
              ),
              _c(
                "fks-button",
                {
                  staticClass: "fks-picker-panel__link-btn",
                  attrs: { plain: "", size: "mini" },
                  on: { click: _vm.confirm },
                },
                [_vm._v(_vm._s(_vm.t("fks.datepicker.confirm")))]
              ),
            ],
            1
          ),
        ]
      ),
    ]
  )
}
var datevue_type_template_id_787f483f_staticRenderFns = []
datevue_type_template_id_787f483f_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue?vue&type=template&id=787f483f&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time.vue?vue&type=template&id=67a98f24&
var timevue_type_template_id_67a98f24_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: {
        "after-leave": function ($event) {
          return _vm.$emit("dodestroy")
        },
      },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-time-panel fks-popper",
          class: _vm.popperClass,
        },
        [
          _c(
            "div",
            {
              staticClass: "fks-time-panel__content",
              class: { "has-seconds": _vm.showSeconds },
            },
            [
              _c("time-spinner", {
                ref: "spinner",
                attrs: {
                  "arrow-control": _vm.useArrow,
                  "show-seconds": _vm.showSeconds,
                  "am-pm-mode": _vm.amPmMode,
                  date: _vm.date,
                },
                on: {
                  change: _vm.handleChange,
                  "select-range": _vm.setSelectionRange,
                },
              }),
            ],
            1
          ),
          _c("div", { staticClass: "fks-time-panel__footer" }, [
            _c(
              "button",
              {
                staticClass: "fks-time-panel__btn cancel",
                attrs: { type: "button" },
                on: { click: _vm.handleCancel },
              },
              [_vm._v(_vm._s(_vm.t("fks.datepicker.cancel")))]
            ),
            _c(
              "button",
              {
                staticClass: "fks-time-panel__btn",
                class: { confirm: !_vm.disabled },
                attrs: { type: "button" },
                on: {
                  click: function ($event) {
                    return _vm.handleConfirm()
                  },
                },
              },
              [_vm._v(_vm._s(_vm.t("fks.datepicker.confirm")))]
            ),
          ]),
        ]
      ),
    ]
  )
}
var timevue_type_template_id_67a98f24_staticRenderFns = []
timevue_type_template_id_67a98f24_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue?vue&type=template&id=67a98f24&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/time-spinner.vue?vue&type=template&id=570d5ef1&
var time_spinnervue_type_template_id_570d5ef1_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-time-spinner",
      class: { "has-seconds": _vm.showSeconds },
    },
    [
      !_vm.arrowControl
        ? [
            _c(
              "fks-scrollbar",
              {
                ref: "hours",
                staticClass: "fks-time-spinner__wrapper",
                attrs: {
                  "wrap-style": "max-height: inherit;",
                  "view-class": "fks-time-spinner__list",
                  noresize: "",
                  tag: "ul",
                },
                nativeOn: {
                  mouseenter: function ($event) {
                    return _vm.emitSelectRange("hours")
                  },
                  mousemove: function ($event) {
                    return _vm.adjustCurrentSpinner("hours")
                  },
                },
              },
              _vm._l(_vm.hoursList, function (disabled, hour) {
                return _c(
                  "li",
                  {
                    key: hour,
                    staticClass: "fks-time-spinner__item",
                    class: { active: hour === _vm.hours, disabled: disabled },
                    on: {
                      click: function ($event) {
                        return _vm.handleClick("hours", {
                          value: hour,
                          disabled: disabled,
                        })
                      },
                    },
                  },
                  [
                    _vm._v(
                      _vm._s(
                        ("0" + (_vm.amPmMode ? hour % 12 || 12 : hour)).slice(
                          -2
                        )
                      ) + _vm._s(_vm.amPm(hour))
                    ),
                  ]
                )
              }),
              0
            ),
            _c(
              "fks-scrollbar",
              {
                ref: "minutes",
                staticClass: "fks-time-spinner__wrapper",
                attrs: {
                  "wrap-style": "max-height: inherit;",
                  "view-class": "fks-time-spinner__list",
                  noresize: "",
                  tag: "ul",
                },
                nativeOn: {
                  mouseenter: function ($event) {
                    return _vm.emitSelectRange("minutes")
                  },
                  mousemove: function ($event) {
                    return _vm.adjustCurrentSpinner("minutes")
                  },
                },
              },
              _vm._l(_vm.minutesList, function (enabled, key) {
                return _c(
                  "li",
                  {
                    key: key,
                    staticClass: "fks-time-spinner__item",
                    class: { active: key === _vm.minutes, disabled: !enabled },
                    on: {
                      click: function ($event) {
                        return _vm.handleClick("minutes", {
                          value: key,
                          disabled: false,
                        })
                      },
                    },
                  },
                  [_vm._v(_vm._s(("0" + key).slice(-2)))]
                )
              }),
              0
            ),
            _c(
              "fks-scrollbar",
              {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: _vm.showSeconds,
                    expression: "showSeconds",
                  },
                ],
                ref: "seconds",
                staticClass: "fks-time-spinner__wrapper",
                attrs: {
                  "wrap-style": "max-height: inherit;",
                  "view-class": "fks-time-spinner__list",
                  noresize: "",
                  tag: "ul",
                },
                nativeOn: {
                  mouseenter: function ($event) {
                    return _vm.emitSelectRange("seconds")
                  },
                  mousemove: function ($event) {
                    return _vm.adjustCurrentSpinner("seconds")
                  },
                },
              },
              _vm._l(60, function (second, key) {
                return _c(
                  "li",
                  {
                    key: key,
                    staticClass: "fks-time-spinner__item",
                    class: { active: key === _vm.seconds },
                    on: {
                      click: function ($event) {
                        return _vm.handleClick("seconds", {
                          value: key,
                          disabled: false,
                        })
                      },
                    },
                  },
                  [_vm._v(_vm._s(("0" + key).slice(-2)))]
                )
              }),
              0
            ),
          ]
        : _vm._e(),
      _vm.arrowControl
        ? [
            _c(
              "div",
              {
                staticClass: "fks-time-spinner__wrapper is-arrow",
                on: {
                  mouseenter: function ($event) {
                    return _vm.emitSelectRange("hours")
                  },
                },
              },
              [
                _c("i", {
                  directives: [
                    {
                      name: "repeat-click",
                      rawName: "v-repeat-click",
                      value: _vm.decrease,
                      expression: "decrease",
                    },
                  ],
                  staticClass: "fks-time-spinner__arrow fks-icon-arrow-up",
                }),
                _c("i", {
                  directives: [
                    {
                      name: "repeat-click",
                      rawName: "v-repeat-click",
                      value: _vm.increase,
                      expression: "increase",
                    },
                  ],
                  staticClass: "fks-time-spinner__arrow fks-icon-arrow-down",
                }),
                _c(
                  "ul",
                  { ref: "hours", staticClass: "fks-time-spinner__list" },
                  _vm._l(_vm.arrowHourList, function (hour, key) {
                    return _c(
                      "li",
                      {
                        key: key,
                        staticClass: "fks-time-spinner__item",
                        class: {
                          active: hour === _vm.hours,
                          disabled: _vm.hoursList[hour],
                        },
                      },
                      [
                        _vm._v(
                          _vm._s(
                            hour === undefined
                              ? ""
                              : (
                                  "0" + (_vm.amPmMode ? hour % 12 || 12 : hour)
                                ).slice(-2) + _vm.amPm(hour)
                          )
                        ),
                      ]
                    )
                  }),
                  0
                ),
              ]
            ),
            _c(
              "div",
              {
                staticClass: "fks-time-spinner__wrapper is-arrow",
                on: {
                  mouseenter: function ($event) {
                    return _vm.emitSelectRange("minutes")
                  },
                },
              },
              [
                _c("i", {
                  directives: [
                    {
                      name: "repeat-click",
                      rawName: "v-repeat-click",
                      value: _vm.decrease,
                      expression: "decrease",
                    },
                  ],
                  staticClass: "fks-time-spinner__arrow fks-icon-arrow-up",
                }),
                _c("i", {
                  directives: [
                    {
                      name: "repeat-click",
                      rawName: "v-repeat-click",
                      value: _vm.increase,
                      expression: "increase",
                    },
                  ],
                  staticClass: "fks-time-spinner__arrow fks-icon-arrow-down",
                }),
                _c(
                  "ul",
                  { ref: "minutes", staticClass: "fks-time-spinner__list" },
                  _vm._l(_vm.arrowMinuteList, function (minute, key) {
                    return _c(
                      "li",
                      {
                        key: key,
                        staticClass: "fks-time-spinner__item",
                        class: { active: minute === _vm.minutes },
                      },
                      [
                        _vm._v(
                          _vm._s(
                            minute === undefined ? "" : ("0" + minute).slice(-2)
                          )
                        ),
                      ]
                    )
                  }),
                  0
                ),
              ]
            ),
            _vm.showSeconds
              ? _c(
                  "div",
                  {
                    staticClass: "fks-time-spinner__wrapper is-arrow",
                    on: {
                      mouseenter: function ($event) {
                        return _vm.emitSelectRange("seconds")
                      },
                    },
                  },
                  [
                    _c("i", {
                      directives: [
                        {
                          name: "repeat-click",
                          rawName: "v-repeat-click",
                          value: _vm.decrease,
                          expression: "decrease",
                        },
                      ],
                      staticClass: "fks-time-spinner__arrow fks-icon-arrow-up",
                    }),
                    _c("i", {
                      directives: [
                        {
                          name: "repeat-click",
                          rawName: "v-repeat-click",
                          value: _vm.increase,
                          expression: "increase",
                        },
                      ],
                      staticClass:
                        "fks-time-spinner__arrow fks-icon-arrow-down",
                    }),
                    _c(
                      "ul",
                      { ref: "seconds", staticClass: "fks-time-spinner__list" },
                      _vm._l(_vm.arrowSecondList, function (second, key) {
                        return _c(
                          "li",
                          {
                            key: key,
                            staticClass: "fks-time-spinner__item",
                            class: { active: second === _vm.seconds },
                          },
                          [
                            _vm._v(
                              _vm._s(
                                second === undefined
                                  ? ""
                                  : ("0" + second).slice(-2)
                              )
                            ),
                          ]
                        )
                      }),
                      0
                    ),
                  ]
                )
              : _vm._e(),
          ]
        : _vm._e(),
    ],
    2
  )
}
var time_spinnervue_type_template_id_570d5ef1_staticRenderFns = []
time_spinnervue_type_template_id_570d5ef1_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue?vue&type=template&id=570d5ef1&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/time-spinner.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var time_spinnervue_type_script_lang_js_ = ({
  components: { FksScrollbar: scrollbar_default.a },

  directives: {
    repeatClick: repeat_click
  },

  props: {
    date: {},
    defaultValue: {}, // reserved for future use
    showSeconds: {
      type: Boolean,
      default: true
    },
    arrowControl: Boolean,
    amPmMode: {
      type: String,
      default: '' // 'a': am/pm; 'A': AM/PM
    }
  },

  computed: {
    hours: function hours() {
      return this.date.getHours();
    },
    minutes: function minutes() {
      return this.date.getMinutes();
    },
    seconds: function seconds() {
      return this.date.getSeconds();
    },
    hoursList: function hoursList() {
      return Object(date_util_["getRangeHours"])(this.selectableRange);
    },
    minutesList: function minutesList() {
      return Object(date_util_["getRangeMinutes"])(this.selectableRange, this.hours);
    },
    arrowHourList: function arrowHourList() {
      var hours = this.hours;
      return [hours > 0 ? hours - 1 : undefined, hours, hours < 23 ? hours + 1 : undefined];
    },
    arrowMinuteList: function arrowMinuteList() {
      var minutes = this.minutes;
      return [minutes > 0 ? minutes - 1 : undefined, minutes, minutes < 59 ? minutes + 1 : undefined];
    },
    arrowSecondList: function arrowSecondList() {
      var seconds = this.seconds;
      return [seconds > 0 ? seconds - 1 : undefined, seconds, seconds < 59 ? seconds + 1 : undefined];
    }
  },

  data: function data() {
    return {
      selectableRange: [],
      currentScrollbar: null
    };
  },
  mounted: function mounted() {
    var _this = this;

    this.$nextTick(function () {
      !_this.arrowControl && _this.bindScrollEvent();
    });
  },


  methods: {
    increase: function increase() {
      this.scrollDown(1);
    },
    decrease: function decrease() {
      this.scrollDown(-1);
    },
    modifyDateField: function modifyDateField(type, value) {
      switch (type) {
        case 'hours':
          this.$emit('change', Object(date_util_["modifyTime"])(this.date, value, this.minutes, this.seconds));
          break;
        case 'minutes':
          this.$emit('change', Object(date_util_["modifyTime"])(this.date, this.hours, value, this.seconds));
          break;
        case 'seconds':
          this.$emit('change', Object(date_util_["modifyTime"])(this.date, this.hours, this.minutes, value));
          break;
      }
    },
    handleClick: function handleClick(type, _ref) {
      var value = _ref.value,
          disabled = _ref.disabled;

      if (!disabled) {
        this.modifyDateField(type, value);
        this.emitSelectRange(type);
        this.adjustSpinner(type, value);
      }
    },
    emitSelectRange: function emitSelectRange(type) {
      if (type === 'hours') {
        this.$emit('select-range', 0, 2);
      } else if (type === 'minutes') {
        this.$emit('select-range', 3, 5);
      } else if (type === 'seconds') {
        this.$emit('select-range', 6, 8);
      }
      this.currentScrollbar = type;
    },
    bindScrollEvent: function bindScrollEvent() {
      var _this2 = this;

      var bindFuntion = function bindFuntion(type) {
        _this2.$refs[type].wrap.onscroll = function (e) {
          // TODO: scroll is emitted when set scrollTop programatically
          // should find better solutions in the future!
          _this2.handleScroll(type, e);
        };
      };
      bindFuntion('hours');
      bindFuntion('minutes');
      bindFuntion('seconds');
    },
    handleScroll: function handleScroll(type) {
      var value = Math.min(Math.round((this.$refs[type].wrap.scrollTop - (this.scrollBarHeight(type) * 0.5 - 10) / this.typeItemHeight(type) + 3) / this.typeItemHeight(type)), type === 'hours' ? 23 : 59);
      this.modifyDateField(type, value);
    },


    // NOTE: used by datetime / date-range panel
    //       renamed from adjustScrollTop
    //       should try to refactory it
    adjustSpinners: function adjustSpinners() {
      this.adjustSpinner('hours', this.hours);
      this.adjustSpinner('minutes', this.minutes);
      this.adjustSpinner('seconds', this.seconds);
    },
    adjustCurrentSpinner: function adjustCurrentSpinner(type) {
      this.adjustSpinner(type, this[type]);
    },
    adjustSpinner: function adjustSpinner(type, value) {
      if (this.arrowControl) return;
      var el = this.$refs[type].wrap;
      if (el) {
        el.scrollTop = Math.max(0, value * this.typeItemHeight(type));
      }
    },
    scrollDown: function scrollDown(step) {
      var _this3 = this;

      if (!this.currentScrollbar) {
        this.emitSelectRange('hours');
      }

      var label = this.currentScrollbar;
      var hoursList = this.hoursList;
      var now = this[label];

      if (this.currentScrollbar === 'hours') {
        var total = Math.abs(step);
        step = step > 0 ? 1 : -1;
        var length = hoursList.length;
        while (length-- && total) {
          now = (now + step + hoursList.length) % hoursList.length;
          if (hoursList[now]) {
            continue;
          }
          total--;
        }
        if (hoursList[now]) return;
      } else {
        now = (now + step + 60) % 60;
      }

      this.modifyDateField(label, now);
      this.adjustSpinner(label, now);
      this.$nextTick(function () {
        return _this3.emitSelectRange(_this3.currentScrollbar);
      });
    },
    amPm: function amPm(hour) {
      var shouldShowAmPm = this.amPmMode.toLowerCase() === 'a';
      if (!shouldShowAmPm) return '';
      var isCapital = this.amPmMode === 'A';
      var content = hour < 12 ? ' am' : ' pm';
      if (isCapital) content = content.toUpperCase();
      return content;
    },
    typeItemHeight: function typeItemHeight(type) {
      return this.$refs[type].$el.querySelector('li').offsetHeight;
    },
    scrollBarHeight: function scrollBarHeight(type) {
      return this.$refs[type].$el.offsetHeight;
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue?vue&type=script&lang=js&
 /* harmony default export */ var basic_time_spinnervue_type_script_lang_js_ = (time_spinnervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/basic/time-spinner.vue





/* normalize component */

var time_spinner_component = normalizeComponent(
  basic_time_spinnervue_type_script_lang_js_,
  time_spinnervue_type_template_id_570d5ef1_render,
  time_spinnervue_type_template_id_570d5ef1_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var time_spinner = (time_spinner_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var timevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  components: {
    TimeSpinner: time_spinner
  },

  props: {
    visible: Boolean,
    timeArrowControl: Boolean
  },

  watch: {
    visible: function visible(val) {
      var _this = this;

      if (val) {
        this.oldValue = this.value;
        this.$nextTick(function () {
          return _this.$refs.spinner.emitSelectRange('hours');
        });
      } else {
        this.needInitAdjust = true;
      }
    },
    value: function value(newVal) {
      var _this2 = this;

      var date = void 0;
      if (newVal instanceof Date) {
        date = Object(date_util_["limitTimeRange"])(newVal, this.selectableRange, this.format);
      } else if (!newVal) {
        date = this.defaultValue ? new Date(this.defaultValue) : new Date();
      }

      this.date = date;
      if (this.visible && this.needInitAdjust) {
        this.$nextTick(function (_) {
          return _this2.adjustSpinners();
        });
        this.needInitAdjust = false;
      }
    },
    selectableRange: function selectableRange(val) {
      this.$refs.spinner.selectableRange = val;
    },
    defaultValue: function defaultValue(val) {
      if (!Object(date_util_["isDate"])(this.value)) {
        this.date = val ? new Date(val) : new Date();
      }
    }
  },

  data: function data() {
    return {
      popperClass: '',
      format: 'HH:mm:ss',
      value: '',
      defaultValue: null,
      date: new Date(),
      oldValue: new Date(),
      selectableRange: [],
      selectionRange: [0, 2],
      disabled: false,
      arrowControl: false,
      needInitAdjust: true
    };
  },


  computed: {
    showSeconds: function showSeconds() {
      return (this.format || '').indexOf('ss') !== -1;
    },
    useArrow: function useArrow() {
      return this.arrowControl || this.timeArrowControl || false;
    },
    amPmMode: function amPmMode() {
      if ((this.format || '').indexOf('A') !== -1) return 'A';
      if ((this.format || '').indexOf('a') !== -1) return 'a';
      return '';
    }
  },

  methods: {
    handleCancel: function handleCancel() {
      this.$emit('pick', this.oldValue, false);
    },
    handleChange: function handleChange(date) {
      // this.visible avoids edge cases, when use scrolls during panel closing animation
      if (this.visible) {
        this.date = Object(date_util_["clearMilliseconds"])(date);
        // if date is out of range, do not emit
        if (this.isValidValue(this.date)) {
          this.$emit('pick', this.date, true);
        }
      }
    },
    setSelectionRange: function setSelectionRange(start, end) {
      this.$emit('select-range', start, end);
      this.selectionRange = [start, end];
    },
    handleConfirm: function handleConfirm() {
      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var first = arguments[1];

      if (first) return;
      var date = Object(date_util_["clearMilliseconds"])(Object(date_util_["limitTimeRange"])(this.date, this.selectableRange, this.format));
      this.$emit('pick', date, visible, first);
    },
    handleKeydown: function handleKeydown(event) {
      var keyCode = event.keyCode;
      var mapping = { 38: -1, 40: 1, 37: -1, 39: 1

        // Left or Right
      };if (keyCode === 37 || keyCode === 39) {
        var step = mapping[keyCode];
        this.changeSelectionRange(step);
        event.preventDefault();
        return;
      }

      // Up or Down
      if (keyCode === 38 || keyCode === 40) {
        var _step = mapping[keyCode];
        this.$refs.spinner.scrollDown(_step);
        event.preventDefault();
        return;
      }
    },
    isValidValue: function isValidValue(date) {
      return Object(date_util_["timeWithinRange"])(date, this.selectableRange, this.format);
    },
    adjustSpinners: function adjustSpinners() {
      return this.$refs.spinner.adjustSpinners();
    },
    changeSelectionRange: function changeSelectionRange(step) {
      var list = [0, 3].concat(this.showSeconds ? [6] : []);
      var mapping = ['hours', 'minutes'].concat(this.showSeconds ? ['seconds'] : []);
      var index = list.indexOf(this.selectionRange[0]);
      var next = (index + step + list.length) % list.length;
      this.$refs.spinner.emitSelectRange(mapping[next]);
    }
  },

  mounted: function mounted() {
    var _this3 = this;

    this.$nextTick(function () {
      return _this3.handleConfirm(true, true);
    });
    this.$emit('mounted');
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_timevue_type_script_lang_js_ = (timevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time.vue





/* normalize component */

var time_component = normalizeComponent(
  panel_timevue_type_script_lang_js_,
  timevue_type_template_id_67a98f24_render,
  timevue_type_template_id_67a98f24_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var panel_time = (time_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/year-table.vue?vue&type=template&id=67d2b8e0&
var year_tablevue_type_template_id_67d2b8e0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "table",
    { staticClass: "fks-year-table", on: { click: _vm.handleYearTableClick } },
    [
      _c("tbody", [
        _c("tr", [
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 0),
            },
            [_c("a", { staticClass: "cell" }, [_vm._v(_vm._s(_vm.startYear))])]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 1),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 1)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 2),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 2)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 3),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 3)),
              ]),
            ]
          ),
        ]),
        _c("tr", [
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 4),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 4)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 5),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 5)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 6),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 6)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 7),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 7)),
              ]),
            ]
          ),
        ]),
        _c("tr", [
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 8),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 8)),
              ]),
            ]
          ),
          _c(
            "td",
            {
              staticClass: "available",
              class: _vm.getCellStyle(_vm.startYear + 9),
            },
            [
              _c("a", { staticClass: "cell" }, [
                _vm._v(_vm._s(_vm.startYear + 9)),
              ]),
            ]
          ),
          _c("td"),
          _c("td"),
        ]),
      ]),
    ]
  )
}
var year_tablevue_type_template_id_67d2b8e0_staticRenderFns = []
year_tablevue_type_template_id_67d2b8e0_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue?vue&type=template&id=67d2b8e0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/year-table.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





var year_tablevue_type_script_lang_js_datesInYear = function datesInYear(year) {
  var numOfDays = Object(date_util_["getDayCountOfYear"])(year);
  var firstDay = new Date(year, 0, 1);
  return Object(date_util_["range"])(numOfDays).map(function (n) {
    return Object(date_util_["nextDate"])(firstDay, n);
  });
};

/* harmony default export */ var year_tablevue_type_script_lang_js_ = ({
  props: {
    disabledDate: {},
    value: {},
    defaultValue: {
      validator: function validator(val) {
        // null or valid Date Object
        return val === null || val instanceof Date && Object(date_util_["isDate"])(val);
      }
    },
    date: {}
  },

  computed: {
    startYear: function startYear() {
      return Math.floor(this.date.getFullYear() / 10) * 10;
    }
  },

  methods: {
    getCellStyle: function getCellStyle(year) {
      var style = {};
      var today = new Date();

      style.disabled = typeof this.disabledDate === 'function' ? year_tablevue_type_script_lang_js_datesInYear(year).every(this.disabledDate) : false;
      style.current = Object(util_["arrayFindIndex"])(Object(util_["coerceTruthyValueToArray"])(this.value), function (date) {
        return date.getFullYear() === year;
      }) >= 0;
      style.today = today.getFullYear() === year;
      style.default = this.defaultValue && this.defaultValue.getFullYear() === year;

      return style;
    },
    handleYearTableClick: function handleYearTableClick(event) {
      var target = event.target;
      if (target.tagName === 'A') {
        if (Object(dom_["hasClass"])(target.parentNode, 'disabled')) return;
        var year = target.textContent || target.innerText;
        this.$emit('pick', Number(year));
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue?vue&type=script&lang=js&
 /* harmony default export */ var basic_year_tablevue_type_script_lang_js_ = (year_tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/basic/year-table.vue





/* normalize component */

var year_table_component = normalizeComponent(
  basic_year_tablevue_type_script_lang_js_,
  year_tablevue_type_template_id_67d2b8e0_render,
  year_tablevue_type_template_id_67d2b8e0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var year_table = (year_table_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/month-table.vue?vue&type=template&id=52ec1c30&
var month_tablevue_type_template_id_52ec1c30_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "table",
    {
      staticClass: "fks-month-table",
      on: { click: _vm.handleMonthTableClick, mousemove: _vm.handleMouseMove },
    },
    [
      _c(
        "tbody",
        _vm._l(_vm.rows, function (row, key) {
          return _c(
            "tr",
            { key: key },
            _vm._l(row, function (cell, key) {
              return _c("td", { key: key, class: _vm.getCellStyle(cell) }, [
                _c("div", [
                  _c("a", { staticClass: "cell" }, [
                    _vm._v(
                      _vm._s(
                        _vm.t("fks.datepicker.months." + _vm.months[cell.text])
                      )
                    ),
                  ]),
                ]),
              ])
            }),
            0
          )
        }),
        0
      ),
    ]
  )
}
var month_tablevue_type_template_id_52ec1c30_staticRenderFns = []
month_tablevue_type_template_id_52ec1c30_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue?vue&type=template&id=52ec1c30&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/month-table.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//






var month_tablevue_type_script_lang_js_datesInMonth = function datesInMonth(year, month) {
  var numOfDays = Object(date_util_["getDayCountOfMonth"])(year, month);
  var firstDay = new Date(year, month, 1);
  return Object(date_util_["range"])(numOfDays).map(function (n) {
    return Object(date_util_["nextDate"])(firstDay, n);
  });
};

var clearDate = function clearDate(date) {
  return new Date(date.getFullYear(), date.getMonth());
};

var getMonthTimestamp = function getMonthTimestamp(time) {
  if (typeof time === 'number' || typeof time === 'string') {
    return clearDate(new Date(time)).getTime();
  } else if (time instanceof Date) {
    return clearDate(time).getTime();
  } else {
    return NaN;
  }
};
/* harmony default export */ var month_tablevue_type_script_lang_js_ = ({
  props: {
    disabledDate: {},
    value: {},
    selectionMode: {
      default: 'month'
    },
    minDate: {},

    maxDate: {},
    defaultValue: {
      validator: function validator(val) {
        // null or valid Date Object
        return val === null || Object(date_util_["isDate"])(val) || Array.isArray(val) && val.every(date_util_["isDate"]);
      }
    },
    date: {},
    rangeState: {
      default: function _default() {
        return {
          endDate: null,
          selecting: false
        };
      }
    }
  },

  mixins: [locale_default.a],

  watch: {
    'rangeState.endDate': function rangeStateEndDate(newVal) {
      this.markRange(this.minDate, newVal);
    },
    minDate: function minDate(newVal, oldVal) {
      if (getMonthTimestamp(newVal) !== getMonthTimestamp(oldVal)) {
        this.markRange(this.minDate, this.maxDate);
      }
    },
    maxDate: function maxDate(newVal, oldVal) {
      if (getMonthTimestamp(newVal) !== getMonthTimestamp(oldVal)) {
        this.markRange(this.minDate, this.maxDate);
      }
    }
  },

  data: function data() {
    return {
      months: ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'],
      tableRows: [[], [], []],
      lastRow: null,
      lastColumn: null
    };
  },


  methods: {
    cellMatchesDate: function cellMatchesDate(cell, date) {
      var value = new Date(date);
      return this.date.getFullYear() === value.getFullYear() && Number(cell.text) === value.getMonth();
    },
    getCellStyle: function getCellStyle(cell) {
      var _this = this;

      var style = {};
      var year = this.date.getFullYear();
      var today = new Date();
      var month = cell.text;
      var defaultValue = this.defaultValue ? Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue] : [];
      style.disabled = typeof this.disabledDate === 'function' ? month_tablevue_type_script_lang_js_datesInMonth(year, month).every(this.disabledDate) : false;
      style.current = Object(util_["arrayFindIndex"])(Object(util_["coerceTruthyValueToArray"])(this.value), function (date) {
        return date.getFullYear() === year && date.getMonth() === month;
      }) >= 0;
      style.today = today.getFullYear() === year && today.getMonth() === month;
      style.default = defaultValue.some(function (date) {
        return _this.cellMatchesDate(cell, date);
      });

      if (cell.inRange) {
        style['in-range'] = true;

        if (cell.start) {
          style['start-date'] = true;
        }

        if (cell.end) {
          style['end-date'] = true;
        }
      }
      return style;
    },
    getMonthOfCell: function getMonthOfCell(month) {
      var year = this.date.getFullYear();
      return new Date(year, month, 1);
    },
    markRange: function markRange(minDate, maxDate) {
      minDate = getMonthTimestamp(minDate);
      maxDate = getMonthTimestamp(maxDate) || minDate;var _ref = [Math.min(minDate, maxDate), Math.max(minDate, maxDate)];
      minDate = _ref[0];
      maxDate = _ref[1];

      var rows = this.rows;
      for (var i = 0, k = rows.length; i < k; i++) {
        var row = rows[i];
        for (var j = 0, l = row.length; j < l; j++) {
          var cell = row[j];
          var index = i * 4 + j;
          var time = new Date(this.date.getFullYear(), index).getTime();

          cell.inRange = minDate && time >= minDate && time <= maxDate;
          cell.start = minDate && time === minDate;
          cell.end = maxDate && time === maxDate;
        }
      }
    },
    handleMouseMove: function handleMouseMove(event) {
      if (!this.rangeState.selecting) return;

      var target = event.target;
      if (target.tagName === 'A') {
        target = target.parentNode.parentNode;
      }
      if (target.tagName === 'DIV') {
        target = target.parentNode;
      }
      if (target.tagName !== 'TD') return;

      var row = target.parentNode.rowIndex;
      var column = target.cellIndex;
      // can not select disabled date
      if (this.rows[row][column].disabled) return;

      // only update rangeState when mouse moves to a new cell
      // this avoids frequent Date object creation and improves performance
      if (row !== this.lastRow || column !== this.lastColumn) {
        this.lastRow = row;
        this.lastColumn = column;
        this.$emit('changerange', {
          minDate: this.minDate,
          maxDate: this.maxDate,
          rangeState: {
            selecting: true,
            endDate: this.getMonthOfCell(row * 4 + column)
          }
        });
      }
    },
    handleMonthTableClick: function handleMonthTableClick(event) {
      var target = event.target;
      if (target.tagName === 'A') {
        target = target.parentNode.parentNode;
      }
      if (target.tagName === 'DIV') {
        target = target.parentNode;
      }
      if (target.tagName !== 'TD') return;
      if (Object(dom_["hasClass"])(target, 'disabled')) return;
      var column = target.cellIndex;
      var row = target.parentNode.rowIndex;
      var month = row * 4 + column;
      var newDate = this.getMonthOfCell(month);
      if (this.selectionMode === 'range') {
        if (!this.rangeState.selecting) {
          this.$emit('pick', { minDate: newDate, maxDate: null });
          this.rangeState.selecting = true;
        } else {
          if (newDate >= this.minDate) {
            this.$emit('pick', { minDate: this.minDate, maxDate: newDate });
          } else {
            this.$emit('pick', { minDate: newDate, maxDate: this.minDate });
          }
          this.rangeState.selecting = false;
        }
      } else {
        this.$emit('pick', month);
      }
    }
  },

  computed: {
    rows: function rows() {
      var _this2 = this;

      // TODO: refactory rows / getCellClasses
      var rows = this.tableRows;
      var disabledDate = this.disabledDate;
      var selectedDate = [];
      var now = getMonthTimestamp(new Date());

      for (var i = 0; i < 3; i++) {
        var row = rows[i];

        var _loop = function _loop(j) {
          var cell = row[j];
          if (!cell) {
            cell = {
              row: i,
              column: j,
              type: 'normal',
              inRange: false,
              start: false,
              end: false
            };
          }

          cell.type = 'normal';

          var index = i * 4 + j;
          var time = new Date(_this2.date.getFullYear(), index).getTime();
          cell.inRange = time >= getMonthTimestamp(_this2.minDate) && time <= getMonthTimestamp(_this2.maxDate);
          cell.start = _this2.minDate && time === getMonthTimestamp(_this2.minDate);
          cell.end = _this2.maxDate && time === getMonthTimestamp(_this2.maxDate);
          var isToday = time === now;

          if (isToday) {
            cell.type = 'today';
          }
          cell.text = index;
          var cellDate = new Date(time);
          cell.disabled = typeof disabledDate === 'function' && disabledDate(cellDate);
          cell.selected = Object(util_["arrayFind"])(selectedDate, function (date) {
            return date.getTime() === cellDate.getTime();
          });

          _this2.$set(row, j, cell);
        };

        for (var j = 0; j < 4; j++) {
          _loop(j);
        }
      }
      return rows;
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue?vue&type=script&lang=js&
 /* harmony default export */ var basic_month_tablevue_type_script_lang_js_ = (month_tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/basic/month-table.vue





/* normalize component */

var month_table_component = normalizeComponent(
  basic_month_tablevue_type_script_lang_js_,
  month_tablevue_type_template_id_52ec1c30_render,
  month_tablevue_type_template_id_52ec1c30_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var month_table = (month_table_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/date-table.vue?vue&type=template&id=838e9708&
var date_tablevue_type_template_id_838e9708_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "table",
    {
      staticClass: "fks-date-table",
      class: { "is-week-mode": _vm.selectionMode === "week" },
      attrs: { cellspacing: "0", cellpadding: "0" },
      on: { click: _vm.handleClick, mousemove: _vm.handleMouseMove },
    },
    [
      _c(
        "tbody",
        [
          _c(
            "tr",
            [
              _vm.showWeekNumber
                ? _c("th", [_vm._v(_vm._s(_vm.t("fks.datepicker.week")))])
                : _vm._e(),
              _vm._l(_vm.WEEKS, function (week, key) {
                return _c("th", { key: key }, [
                  _vm._v(_vm._s(_vm.t("fks.datepicker.weeks." + week))),
                ])
              }),
            ],
            2
          ),
          _vm._l(_vm.rows, function (row, key) {
            return _c(
              "tr",
              {
                key: key,
                staticClass: "fks-date-table__row",
                class: { current: _vm.isWeekActive(row[1]) },
              },
              _vm._l(row, function (cell, key) {
                return _c("td", { key: key, class: _vm.getCellClasses(cell) }, [
                  _c("div", [_c("span", [_vm._v(_vm._s(cell.text))])]),
                ])
              }),
              0
            )
          }),
        ],
        2
      ),
    ]
  )
}
var date_tablevue_type_template_id_838e9708_staticRenderFns = []
date_tablevue_type_template_id_838e9708_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue?vue&type=template&id=838e9708&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/basic/date-table.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





var _WEEKS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
var date_tablevue_type_script_lang_js_getDateTimestamp = function getDateTimestamp(time) {
  if (typeof time === 'number' || typeof time === 'string') {
    return Object(date_util_["clearTime"])(new Date(time)).getTime();
  } else if (time instanceof Date) {
    return Object(date_util_["clearTime"])(time).getTime();
  } else {
    return NaN;
  }
};

// remove the first element that satisfies `pred` from arr
// return a new array if modification occurs
// return the original array otherwise
var date_tablevue_type_script_lang_js_removeFromArray = function removeFromArray(arr, pred) {
  var idx = typeof pred === 'function' ? Object(util_["arrayFindIndex"])(arr, pred) : arr.indexOf(pred);
  return idx >= 0 ? [].concat(arr.slice(0, idx), arr.slice(idx + 1)) : arr;
};

/* harmony default export */ var date_tablevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  props: {
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: function validator(val) {
        return val >= 1 && val <= 7;
      }
    },

    value: {},

    defaultValue: {
      validator: function validator(val) {
        // either: null, valid Date object, Array of valid Date objects
        return val === null || Object(date_util_["isDate"])(val) || Array.isArray(val) && val.every(date_util_["isDate"]);
      }
    },

    date: {},

    selectionMode: {
      default: 'day'
    },

    showWeekNumber: {
      type: Boolean,
      default: false
    },

    disabledDate: {},

    cellClassName: {},

    minDate: {},

    maxDate: {},

    rangeState: {
      default: function _default() {
        return {
          endDate: null,
          selecting: false
        };
      }
    }
  },

  computed: {
    offsetDay: function offsetDay() {
      var week = this.firstDayOfWeek;
      // 周日为界限，左右偏移的天数，3217654 例如周一就是 -1，目的是调整前两行日期的位置
      return week > 3 ? 7 - week : -week;
    },
    WEEKS: function WEEKS() {
      var week = this.firstDayOfWeek;
      return _WEEKS.concat(_WEEKS).slice(week, week + 7);
    },
    year: function year() {
      return this.date.getFullYear();
    },
    month: function month() {
      return this.date.getMonth();
    },
    startDate: function startDate() {
      return Object(date_util_["getStartDateOfMonth"])(this.year, this.month);
    },
    rows: function rows() {
      var _this = this;

      // TODO: refactory rows / getCellClasses
      var date = new Date(this.year, this.month, 1);
      var day = Object(date_util_["getFirstDayOfMonth"])(date); // day of first day
      var dateCountOfMonth = Object(date_util_["getDayCountOfMonth"])(date.getFullYear(), date.getMonth());
      var dateCountOfLastMonth = Object(date_util_["getDayCountOfMonth"])(date.getFullYear(), date.getMonth() === 0 ? 11 : date.getMonth() - 1);

      day = day === 0 ? 7 : day;

      var offset = this.offsetDay;
      var rows = this.tableRows;
      var count = 1;

      var startDate = this.startDate;
      var disabledDate = this.disabledDate;
      var cellClassName = this.cellClassName;
      var selectedDate = this.selectionMode === 'dates' ? Object(util_["coerceTruthyValueToArray"])(this.value) : [];
      var now = date_tablevue_type_script_lang_js_getDateTimestamp(new Date());

      for (var i = 0; i < 6; i++) {
        var row = rows[i];

        if (this.showWeekNumber) {
          if (!row[0]) {
            row[0] = {
              type: 'week',
              text: Object(date_util_["getWeekNumber"])(Object(date_util_["nextDate"])(startDate, i * 7 + 1))
            };
          }
        }

        var _loop = function _loop(j) {
          var cell = row[_this.showWeekNumber ? j + 1 : j];
          if (!cell) {
            cell = {
              row: i,
              column: j,
              type: 'normal',
              inRange: false,
              start: false,
              end: false
            };
          }

          cell.type = 'normal';

          var index = i * 7 + j;
          var time = Object(date_util_["nextDate"])(startDate, index - offset).getTime();
          cell.inRange = time >= date_tablevue_type_script_lang_js_getDateTimestamp(_this.minDate) && time <= date_tablevue_type_script_lang_js_getDateTimestamp(_this.maxDate);
          cell.start = _this.minDate && time === date_tablevue_type_script_lang_js_getDateTimestamp(_this.minDate);
          cell.end = _this.maxDate && time === date_tablevue_type_script_lang_js_getDateTimestamp(_this.maxDate);
          var isToday = time === now;

          if (isToday) {
            cell.type = 'today';
          }

          if (i >= 0 && i <= 1) {
            var numberOfDaysFromPreviousMonth = day + offset < 0 ? 7 + day + offset : day + offset;

            if (j + i * 7 >= numberOfDaysFromPreviousMonth) {
              cell.text = count++;
            } else {
              cell.text = dateCountOfLastMonth - (numberOfDaysFromPreviousMonth - j % 7) + 1 + i * 7;
              cell.type = 'prev-month';
            }
          } else {
            if (count <= dateCountOfMonth) {
              cell.text = count++;
            } else {
              cell.text = count++ - dateCountOfMonth;
              cell.type = 'next-month';
            }
          }

          var cellDate = new Date(time);
          cell.disabled = typeof disabledDate === 'function' && disabledDate(cellDate);
          cell.selected = Object(util_["arrayFind"])(selectedDate, function (date) {
            return date.getTime() === cellDate.getTime();
          });
          cell.customClass = typeof cellClassName === 'function' && cellClassName(cellDate);
          _this.$set(row, _this.showWeekNumber ? j + 1 : j, cell);
        };

        for (var j = 0; j < 7; j++) {
          _loop(j);
        }

        if (this.selectionMode === 'week') {
          var start = this.showWeekNumber ? 1 : 0;
          var end = this.showWeekNumber ? 7 : 6;
          var isWeekActive = this.isWeekActive(row[start + 1]);

          row[start].inRange = isWeekActive;
          row[start].start = isWeekActive;
          row[end].inRange = isWeekActive;
          row[end].end = isWeekActive;
        }
      }

      return rows;
    }
  },

  watch: {
    'rangeState.endDate': function rangeStateEndDate(newVal) {
      this.markRange(this.minDate, newVal);
    },
    minDate: function minDate(newVal, oldVal) {
      if (date_tablevue_type_script_lang_js_getDateTimestamp(newVal) !== date_tablevue_type_script_lang_js_getDateTimestamp(oldVal)) {
        this.markRange(this.minDate, this.maxDate);
      }
    },
    maxDate: function maxDate(newVal, oldVal) {
      if (date_tablevue_type_script_lang_js_getDateTimestamp(newVal) !== date_tablevue_type_script_lang_js_getDateTimestamp(oldVal)) {
        this.markRange(this.minDate, this.maxDate);
      }
    }
  },

  data: function data() {
    return {
      tableRows: [[], [], [], [], [], []],
      lastRow: null,
      lastColumn: null
    };
  },


  methods: {
    cellMatchesDate: function cellMatchesDate(cell, date) {
      var value = new Date(date);
      return this.year === value.getFullYear() && this.month === value.getMonth() && Number(cell.text) === value.getDate();
    },
    getCellClasses: function getCellClasses(cell) {
      var _this2 = this;

      var selectionMode = this.selectionMode;
      var defaultValue = this.defaultValue ? Array.isArray(this.defaultValue) ? this.defaultValue : [this.defaultValue] : [];

      var classes = [];
      if ((cell.type === 'normal' || cell.type === 'today') && !cell.disabled) {
        classes.push('available');
        if (cell.type === 'today') {
          classes.push('today');
        }
      } else {
        classes.push(cell.type);
      }

      if (cell.type === 'normal' && defaultValue.some(function (date) {
        return _this2.cellMatchesDate(cell, date);
      })) {
        classes.push('default');
      }

      if (selectionMode === 'day' && (cell.type === 'normal' || cell.type === 'today') && this.cellMatchesDate(cell, this.value)) {
        classes.push('current');
      }

      if (cell.inRange && (cell.type === 'normal' || cell.type === 'today' || this.selectionMode === 'week')) {
        classes.push('in-range');

        if (cell.start) {
          classes.push('start-date');
        }

        if (cell.end) {
          classes.push('end-date');
        }
      }

      if (cell.disabled) {
        classes.push('disabled');
      }

      if (cell.selected) {
        classes.push('selected');
      }

      if (cell.customClass) {
        classes.push(cell.customClass);
      }

      return classes.join(' ');
    },
    getDateOfCell: function getDateOfCell(row, column) {
      var offsetFromStart = row * 7 + (column - (this.showWeekNumber ? 1 : 0)) - this.offsetDay;
      return Object(date_util_["nextDate"])(this.startDate, offsetFromStart);
    },
    isWeekActive: function isWeekActive(cell) {
      if (this.selectionMode !== 'week') return false;
      var newDate = new Date(this.year, this.month, 1);
      var year = newDate.getFullYear();
      var month = newDate.getMonth();

      if (cell.type === 'prev-month') {
        newDate.setMonth(month === 0 ? 11 : month - 1);
        newDate.setFullYear(month === 0 ? year - 1 : year);
      }

      if (cell.type === 'next-month') {
        newDate.setMonth(month === 11 ? 0 : month + 1);
        newDate.setFullYear(month === 11 ? year + 1 : year);
      }

      newDate.setDate(parseInt(cell.text, 10));

      if (Object(date_util_["isDate"])(this.value)) {
        var dayOffset = (this.value.getDay() - this.firstDayOfWeek + 7) % 7 - 1;
        var weekDate = Object(date_util_["prevDate"])(this.value, dayOffset);
        return weekDate.getTime() === newDate.getTime();
      }
      return false;
    },
    markRange: function markRange(minDate, maxDate) {
      minDate = date_tablevue_type_script_lang_js_getDateTimestamp(minDate);
      maxDate = date_tablevue_type_script_lang_js_getDateTimestamp(maxDate) || minDate;var _ref = [Math.min(minDate, maxDate), Math.max(minDate, maxDate)];
      minDate = _ref[0];
      maxDate = _ref[1];


      var startDate = this.startDate;
      var rows = this.rows;
      for (var i = 0, k = rows.length; i < k; i++) {
        var row = rows[i];
        for (var j = 0, l = row.length; j < l; j++) {
          if (this.showWeekNumber && j === 0) continue;

          var _cell = row[j];
          var index = i * 7 + j + (this.showWeekNumber ? -1 : 0);
          var time = Object(date_util_["nextDate"])(startDate, index - this.offsetDay).getTime();

          _cell.inRange = minDate && time >= minDate && time <= maxDate;
          _cell.start = minDate && time === minDate;
          _cell.end = maxDate && time === maxDate;
        }
      }
    },
    handleMouseMove: function handleMouseMove(event) {
      if (!this.rangeState.selecting) return;

      var target = event.target;
      if (target.tagName === 'SPAN') {
        target = target.parentNode.parentNode;
      }
      if (target.tagName === 'DIV') {
        target = target.parentNode;
      }
      if (target.tagName !== 'TD') return;

      var row = target.parentNode.rowIndex - 1;
      var column = target.cellIndex;

      // can not select disabled date
      if (this.rows[row][column].disabled) return;

      // only update rangeState when mouse moves to a new cell
      // this avoids frequent Date object creation and improves performance
      if (row !== this.lastRow || column !== this.lastColumn) {
        this.lastRow = row;
        this.lastColumn = column;
        this.$emit('changerange', {
          minDate: this.minDate,
          maxDate: this.maxDate,
          rangeState: {
            selecting: true,
            endDate: this.getDateOfCell(row, column)
          }
        });
      }
    },
    handleClick: function handleClick(event) {
      var target = event.target;
      if (target.tagName === 'SPAN') {
        target = target.parentNode.parentNode;
      }
      if (target.tagName === 'DIV') {
        target = target.parentNode;
      }

      if (target.tagName !== 'TD') return;

      var row = target.parentNode.rowIndex - 1;
      var column = this.selectionMode === 'week' ? 1 : target.cellIndex;
      var cell = this.rows[row][column];

      if (cell.disabled || cell.type === 'week') return;

      var newDate = this.getDateOfCell(row, column);

      if (this.selectionMode === 'range') {
        if (!this.rangeState.selecting) {
          this.$emit('pick', { minDate: newDate, maxDate: null });
          this.rangeState.selecting = true;
        } else {
          if (newDate >= this.minDate) {
            this.$emit('pick', { minDate: this.minDate, maxDate: newDate });
          } else {
            this.$emit('pick', { minDate: newDate, maxDate: this.minDate });
          }
          this.rangeState.selecting = false;
        }
      } else if (this.selectionMode === 'day') {
        this.$emit('pick', newDate);
      } else if (this.selectionMode === 'week') {
        var weekNumber = Object(date_util_["getWeekNumber"])(newDate);
        var value = newDate.getFullYear() + 'w' + weekNumber;
        this.$emit('pick', {
          year: newDate.getFullYear(),
          week: weekNumber,
          value: value,
          date: newDate
        });
      } else if (this.selectionMode === 'dates') {
        var _value = this.value || [];
        var newValue = cell.selected ? date_tablevue_type_script_lang_js_removeFromArray(_value, function (date) {
          return date.getTime() === newDate.getTime();
        }) : [].concat(_value, [newDate]);
        this.$emit('pick', newValue);
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue?vue&type=script&lang=js&
 /* harmony default export */ var basic_date_tablevue_type_script_lang_js_ = (date_tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/basic/date-table.vue





/* normalize component */

var date_table_component = normalizeComponent(
  basic_date_tablevue_type_script_lang_js_,
  date_tablevue_type_template_id_838e9708_render,
  date_tablevue_type_template_id_838e9708_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var date_table = (date_table_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//











/* harmony default export */ var datevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  directives: { Clickoutside: clickoutside_default.a },

  watch: {
    showTime: function showTime(val) {
      var _this = this;

      /* istanbul ignore if */
      if (!val) return;
      this.$nextTick(function (_) {
        var inputElm = _this.$refs.input.$el;
        if (inputElm) {
          _this.pickerWidth = inputElm.getBoundingClientRect().width + 10;
        }
      });
    },
    value: function value(val) {
      if (this.selectionMode === 'dates' && this.value) return;
      if (Object(date_util_["isDate"])(val)) {
        this.date = new Date(val);
      } else {
        this.date = this.getDefaultValue();
      }
    },
    defaultValue: function defaultValue(val) {
      if (!Object(date_util_["isDate"])(this.value)) {
        this.date = val ? new Date(val) : new Date();
      }
    },
    timePickerVisible: function timePickerVisible(val) {
      var _this2 = this;

      if (val) this.$nextTick(function () {
        return _this2.$refs.timepicker.adjustSpinners();
      });
    },
    selectionMode: function selectionMode(newVal) {
      if (newVal === 'month') {
        /* istanbul ignore next */
        if (this.currentView !== 'year' || this.currentView !== 'month') {
          this.currentView = 'month';
        }
      } else if (newVal === 'dates') {
        this.currentView = 'date';
      }
    }
  },

  methods: {
    proxyTimePickerDataProperties: function proxyTimePickerDataProperties() {
      var _this3 = this;

      var format = function format(timeFormat) {
        _this3.$refs.timepicker.format = timeFormat;
      };
      var value = function value(_value) {
        _this3.$refs.timepicker.value = _value;
      };
      var date = function date(_date) {
        _this3.$refs.timepicker.date = _date;
      };
      var selectableRange = function selectableRange(_selectableRange) {
        _this3.$refs.timepicker.selectableRange = _selectableRange;
      };

      this.$watch('value', value);
      this.$watch('date', date);
      this.$watch('selectableRange', selectableRange);

      format(this.timeFormat);
      value(this.value);
      date(this.date);
      selectableRange(this.selectableRange);
    },
    handleClear: function handleClear() {
      this.date = this.getDefaultValue();
      this.$emit('pick', null);
    },
    emit: function emit(value) {
      var _this4 = this;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (!value) {
        this.$emit.apply(this, ['pick', value].concat(args));
      } else if (Array.isArray(value)) {
        var dates = value.map(function (date) {
          return _this4.showTime ? Object(date_util_["clearMilliseconds"])(date) : Object(date_util_["clearTime"])(date);
        });
        this.$emit.apply(this, ['pick', dates].concat(args));
      } else {
        this.$emit.apply(this, ['pick', this.showTime ? Object(date_util_["clearMilliseconds"])(value) : Object(date_util_["clearTime"])(value)].concat(args));
      }
      this.userInputDate = null;
      this.userInputTime = null;
    },


    // resetDate() {
    //   this.date = new Date(this.date);
    // },

    showMonthPicker: function showMonthPicker() {
      this.currentView = 'month';
    },
    showYearPicker: function showYearPicker() {
      this.currentView = 'year';
    },


    // XXX: 没用到
    // handleLabelClick() {
    //   if (this.currentView === 'date') {
    //     this.showMonthPicker();
    //   } else if (this.currentView === 'month') {
    //     this.showYearPicker();
    //   }
    // },

    prevMonth: function prevMonth() {
      this.date = Object(date_util_["prevMonth"])(this.date);
    },
    nextMonth: function nextMonth() {
      this.date = Object(date_util_["nextMonth"])(this.date);
    },
    prevYear: function prevYear() {
      if (this.currentView === 'year') {
        this.date = Object(date_util_["prevYear"])(this.date, 10);
      } else {
        this.date = Object(date_util_["prevYear"])(this.date);
      }
    },
    nextYear: function nextYear() {
      if (this.currentView === 'year') {
        this.date = Object(date_util_["nextYear"])(this.date, 10);
      } else {
        this.date = Object(date_util_["nextYear"])(this.date);
      }
    },
    handleShortcutClick: function handleShortcutClick(shortcut) {
      if (shortcut.onClick) {
        shortcut.onClick(this);
      }
    },
    handleTimePick: function handleTimePick(value, visible, first) {
      if (Object(date_util_["isDate"])(value)) {
        var newDate = this.value ? Object(date_util_["modifyTime"])(this.value, value.getHours(), value.getMinutes(), value.getSeconds()) : Object(date_util_["modifyWithTimeString"])(this.getDefaultValue(), this.defaultTime);
        this.date = newDate;
        this.emit(this.date, true);
      } else {
        this.emit(value, true);
      }
      if (!first) {
        this.timePickerVisible = visible;
      }
    },
    handleTimePickClose: function handleTimePickClose() {
      this.timePickerVisible = false;
    },
    handleMonthPick: function handleMonthPick(month) {
      if (this.selectionMode === 'month') {
        this.date = Object(date_util_["modifyDate"])(this.date, this.year, month, 1);
        this.emit(this.date);
      } else {
        this.date = Object(date_util_["changeYearMonthAndClampDate"])(this.date, this.year, month);
        // TODO: should emit intermediate value ??
        // this.emit(this.date);
        this.currentView = 'date';
      }
    },
    handleDatePick: function handleDatePick(value) {
      if (this.selectionMode === 'day') {
        var newDate = this.value ? Object(date_util_["modifyDate"])(this.value, value.getFullYear(), value.getMonth(), value.getDate()) : Object(date_util_["modifyWithTimeString"])(value, this.defaultTime);
        // change default time while out of selectableRange
        if (!this.checkDateWithinRange(newDate)) {
          newDate = Object(date_util_["modifyDate"])(this.selectableRange[0][0], value.getFullYear(), value.getMonth(), value.getDate());
        }
        this.date = newDate;
        this.emit(this.date, this.showTime);
      } else if (this.selectionMode === 'week') {
        this.emit(value.date);
      } else if (this.selectionMode === 'dates') {
        this.emit(value, true); // set false to keep panel open
      }
    },
    handleYearPick: function handleYearPick(year) {
      if (this.selectionMode === 'year') {
        this.date = Object(date_util_["modifyDate"])(this.date, year, 0, 1);
        this.emit(this.date);
      } else {
        this.date = Object(date_util_["changeYearMonthAndClampDate"])(this.date, year, this.month);
        // TODO: should emit intermediate value ??
        // this.emit(this.date, true);
        this.currentView = 'month';
      }
    },
    changeToNow: function changeToNow() {
      // NOTE: not a permanent solution
      //       consider disable "now" button in the future
      if ((!this.disabledDate || !this.disabledDate(new Date())) && this.checkDateWithinRange(new Date())) {
        this.date = new Date();
        this.emit(this.date);
      }
    },
    confirm: function confirm() {
      if (this.selectionMode === 'dates') {
        this.emit(this.value);
      } else {
        // value were emitted in handle{Date,Time}Pick, nothing to update here
        // deal with the scenario where: user opens the picker, then confirm without doing anything
        var value = this.value ? this.value : Object(date_util_["modifyWithTimeString"])(this.getDefaultValue(), this.defaultTime);
        this.date = new Date(value); // refresh date
        this.emit(value);
      }
    },
    resetView: function resetView() {
      if (this.selectionMode === 'month') {
        this.currentView = 'month';
      } else if (this.selectionMode === 'year') {
        this.currentView = 'year';
      } else {
        this.currentView = 'date';
      }
    },
    handleEnter: function handleEnter() {
      document.body.addEventListener('keydown', this.handleKeydown);
    },
    handleLeave: function handleLeave() {
      this.$emit('dodestroy');
      document.body.removeEventListener('keydown', this.handleKeydown);
    },
    handleKeydown: function handleKeydown(event) {
      var keyCode = event.keyCode;
      var list = [38, 40, 37, 39];
      if (this.visible && !this.timePickerVisible) {
        if (list.indexOf(keyCode) !== -1) {
          this.handleKeyControl(keyCode);
          event.stopPropagation();
          event.preventDefault();
        }
        if (keyCode === 13 && this.userInputDate === null && this.userInputTime === null) {
          // Enter
          this.emit(this.date, false);
        }
      }
    },
    handleKeyControl: function handleKeyControl(keyCode) {
      var mapping = {
        year: {
          38: -4,
          40: 4,
          37: -1,
          39: 1,
          offset: function offset(date, step) {
            return date.setFullYear(date.getFullYear() + step);
          }
        },
        month: {
          38: -4,
          40: 4,
          37: -1,
          39: 1,
          offset: function offset(date, step) {
            return date.setMonth(date.getMonth() + step);
          }
        },
        week: {
          38: -1,
          40: 1,
          37: -1,
          39: 1,
          offset: function offset(date, step) {
            return date.setDate(date.getDate() + step * 7);
          }
        },
        day: {
          38: -7,
          40: 7,
          37: -1,
          39: 1,
          offset: function offset(date, step) {
            return date.setDate(date.getDate() + step);
          }
        }
      };
      var mode = this.selectionMode;
      var year = 3.1536e10;
      var now = this.date.getTime();
      var newDate = new Date(this.date.getTime());
      while (Math.abs(now - newDate.getTime()) <= year) {
        var map = mapping[mode];
        map.offset(newDate, map[keyCode]);
        if (typeof this.disabledDate === 'function' && this.disabledDate(newDate)) {
          continue;
        }
        this.date = newDate;
        this.$emit('pick', newDate, true);
        break;
      }
    },
    handleVisibleTimeChange: function handleVisibleTimeChange(value) {
      var time = Object(date_util_["parseDate"])(value, this.timeFormat);
      if (time && this.checkDateWithinRange(time)) {
        this.date = Object(date_util_["modifyDate"])(time, this.year, this.month, this.monthDate);
        this.userInputTime = null;
        this.$refs.timepicker.value = this.date;
        this.timePickerVisible = false;
        this.emit(this.date, true);
      }
    },
    handleVisibleDateChange: function handleVisibleDateChange(value) {
      var date = Object(date_util_["parseDate"])(value, this.dateFormat);
      if (date) {
        if (typeof this.disabledDate === 'function' && this.disabledDate(date)) {
          return;
        }
        this.date = Object(date_util_["modifyTime"])(date, this.date.getHours(), this.date.getMinutes(), this.date.getSeconds());
        this.userInputDate = null;
        this.resetView();
        this.emit(this.date, true);
      }
    },
    isValidValue: function isValidValue(value) {
      return value && !isNaN(value) && (typeof this.disabledDate === 'function' ? !this.disabledDate(value) : true) && this.checkDateWithinRange(value);
    },
    getDefaultValue: function getDefaultValue() {
      // if default-value is set, return it
      // otherwise, return now (the moment this method gets called)
      return this.defaultValue ? new Date(this.defaultValue) : new Date();
    },
    checkDateWithinRange: function checkDateWithinRange(date) {
      return this.selectableRange.length > 0 ? Object(date_util_["timeWithinRange"])(date, this.selectableRange, this.format || 'HH:mm:ss') : true;
    }
  },

  components: {
    TimePicker: panel_time,
    YearTable: year_table,
    MonthTable: month_table,
    DateTable: date_table,
    FksInput: input_default.a,
    FksButton: button_default.a
  },

  data: function data() {
    return {
      popperClass: '',
      date: new Date(),
      value: '',
      defaultValue: null, // use getDefaultValue() for time computation
      defaultTime: null,
      showTime: false,
      selectionMode: 'day',
      shortcuts: '',
      visible: false,
      currentView: 'date',
      disabledDate: '',
      cellClassName: '',
      selectableRange: [],
      firstDayOfWeek: 7,
      showWeekNumber: false,
      timePickerVisible: false,
      format: '',
      arrowControl: false,
      userInputDate: null,
      userInputTime: null
    };
  },


  computed: {
    year: function year() {
      return this.date.getFullYear();
    },
    month: function month() {
      return this.date.getMonth();
    },
    week: function week() {
      return Object(date_util_["getWeekNumber"])(this.date);
    },
    monthDate: function monthDate() {
      return this.date.getDate();
    },
    footerVisible: function footerVisible() {
      return this.showTime || this.selectionMode === 'dates';
    },
    visibleTime: function visibleTime() {
      if (this.userInputTime !== null) {
        return this.userInputTime;
      } else {
        return Object(date_util_["formatDate"])(this.value || this.defaultValue, this.timeFormat);
      }
    },
    visibleDate: function visibleDate() {
      if (this.userInputDate !== null) {
        return this.userInputDate;
      } else {
        return Object(date_util_["formatDate"])(this.value || this.defaultValue, this.dateFormat);
      }
    },
    yearLabel: function yearLabel() {
      var yearTranslation = this.t('fks.datepicker.year');
      if (this.currentView === 'year') {
        var startYear = Math.floor(this.year / 10) * 10;
        if (yearTranslation) {
          return startYear + ' ' + yearTranslation + ' - ' + (startYear + 9) + ' ' + yearTranslation;
        }
        return startYear + ' - ' + (startYear + 9);
      }
      return this.year + ' ' + yearTranslation;
    },
    timeFormat: function timeFormat() {
      if (this.format) {
        return Object(date_util_["extractTimeFormat"])(this.format);
      } else {
        return 'HH:mm:ss';
      }
    },
    dateFormat: function dateFormat() {
      if (this.format) {
        return Object(date_util_["extractDateFormat"])(this.format);
      } else {
        return 'yyyy-MM-dd';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_datevue_type_script_lang_js_ = (datevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/date.vue





/* normalize component */

var date_component = normalizeComponent(
  panel_datevue_type_script_lang_js_,
  datevue_type_template_id_787f483f_render,
  datevue_type_template_id_787f483f_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var panel_date = (date_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date-range.vue?vue&type=template&id=ffe94b4c&
var date_rangevue_type_template_id_ffe94b4c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: {
        "after-leave": function ($event) {
          return _vm.$emit("dodestroy")
        },
      },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-picker-panel fks-date-range-picker fks-popper",
          class: [
            {
              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts,
              "has-time": _vm.showTime,
            },
            _vm.popperClass,
          ],
        },
        [
          _c(
            "div",
            { staticClass: "fks-picker-panel__body-wrapper" },
            [
              _vm._t("sidebar"),
              _vm.shortcuts
                ? _c(
                    "div",
                    { staticClass: "fks-picker-panel__sidebar" },
                    _vm._l(_vm.shortcuts, function (shortcut, key) {
                      return _c(
                        "button",
                        {
                          key: key,
                          staticClass: "fks-picker-panel__shortcut",
                          attrs: { type: "button" },
                          on: {
                            click: function ($event) {
                              return _vm.handleShortcutClick(shortcut)
                            },
                          },
                        },
                        [_vm._v(_vm._s(shortcut.text))]
                      )
                    }),
                    0
                  )
                : _vm._e(),
              _c("div", { staticClass: "fks-picker-panel__body" }, [
                _vm.showTime
                  ? _c(
                      "div",
                      { staticClass: "fks-date-range-picker__time-header" },
                      [
                        _c(
                          "span",
                          {
                            staticClass: "fks-date-range-picker__editors-wrap",
                          },
                          [
                            _c(
                              "span",
                              {
                                staticClass:
                                  "fks-date-range-picker__time-picker-wrap",
                              },
                              [
                                _c("fks-input", {
                                  ref: "minInput",
                                  staticClass: "fks-date-range-picker__editor",
                                  attrs: {
                                    size: "small",
                                    disabled: _vm.rangeState.selecting,
                                    placeholder: _vm.t(
                                      "fks.datepicker.startDate"
                                    ),
                                    value: _vm.minVisibleDate,
                                  },
                                  on: {
                                    input: function (val) {
                                      return _vm.handleDateInput(val, "min")
                                    },
                                    change: function (val) {
                                      return _vm.handleDateChange(val, "min")
                                    },
                                  },
                                }),
                              ],
                              1
                            ),
                            _c(
                              "span",
                              {
                                directives: [
                                  {
                                    name: "clickoutside",
                                    rawName: "v-clickoutside",
                                    value: _vm.handleMinTimeClose,
                                    expression: "handleMinTimeClose",
                                  },
                                ],
                                staticClass:
                                  "fks-date-range-picker__time-picker-wrap",
                              },
                              [
                                _c("fks-input", {
                                  staticClass: "fks-date-range-picker__editor",
                                  attrs: {
                                    size: "small",
                                    disabled: _vm.rangeState.selecting,
                                    placeholder: _vm.t(
                                      "fks.datepicker.startTime"
                                    ),
                                    value: _vm.minVisibleTime,
                                  },
                                  on: {
                                    focus: function ($event) {
                                      _vm.minTimePickerVisible = true
                                    },
                                    input: function (val) {
                                      return _vm.handleTimeInput(val, "min")
                                    },
                                    change: function (val) {
                                      return _vm.handleTimeChange(val, "min")
                                    },
                                  },
                                }),
                                _c("time-picker", {
                                  ref: "minTimePicker",
                                  attrs: {
                                    "time-arrow-control": _vm.arrowControl,
                                    visible: _vm.minTimePickerVisible,
                                  },
                                  on: {
                                    pick: _vm.handleMinTimePick,
                                    mounted: function ($event) {
                                      _vm.$refs.minTimePicker.format =
                                        _vm.timeFormat
                                    },
                                  },
                                }),
                              ],
                              1
                            ),
                          ]
                        ),
                        _c("span", { staticClass: "fks-icon-arrow-right" }),
                        _c(
                          "span",
                          {
                            staticClass:
                              "fks-date-range-picker__editors-wrap is-right",
                          },
                          [
                            _c(
                              "span",
                              {
                                staticClass:
                                  "fks-date-range-picker__time-picker-wrap",
                              },
                              [
                                _c("fks-input", {
                                  staticClass: "fks-date-range-picker__editor",
                                  attrs: {
                                    size: "small",
                                    disabled: _vm.rangeState.selecting,
                                    placeholder: _vm.t(
                                      "fks.datepicker.endDate"
                                    ),
                                    value: _vm.maxVisibleDate,
                                    readonly: !_vm.minDate,
                                  },
                                  on: {
                                    input: function (val) {
                                      return _vm.handleDateInput(val, "max")
                                    },
                                    change: function (val) {
                                      return _vm.handleDateChange(val, "max")
                                    },
                                  },
                                }),
                              ],
                              1
                            ),
                            _c(
                              "span",
                              {
                                directives: [
                                  {
                                    name: "clickoutside",
                                    rawName: "v-clickoutside",
                                    value: _vm.handleMaxTimeClose,
                                    expression: "handleMaxTimeClose",
                                  },
                                ],
                                staticClass:
                                  "fks-date-range-picker__time-picker-wrap",
                              },
                              [
                                _c("fks-input", {
                                  staticClass: "fks-date-range-picker__editor",
                                  attrs: {
                                    size: "small",
                                    disabled: _vm.rangeState.selecting,
                                    placeholder: _vm.t(
                                      "fks.datepicker.endTime"
                                    ),
                                    value: _vm.maxVisibleTime,
                                    readonly: !_vm.minDate,
                                  },
                                  on: {
                                    focus: function ($event) {
                                      _vm.minDate &&
                                        (_vm.maxTimePickerVisible = true)
                                    },
                                    input: function (val) {
                                      return _vm.handleTimeInput(val, "max")
                                    },
                                    change: function (val) {
                                      return _vm.handleTimeChange(val, "max")
                                    },
                                  },
                                }),
                                _c("time-picker", {
                                  ref: "maxTimePicker",
                                  attrs: {
                                    "time-arrow-control": _vm.arrowControl,
                                    visible: _vm.maxTimePickerVisible,
                                  },
                                  on: {
                                    pick: _vm.handleMaxTimePick,
                                    mounted: function ($event) {
                                      _vm.$refs.maxTimePicker.format =
                                        _vm.timeFormat
                                    },
                                  },
                                }),
                              ],
                              1
                            ),
                          ]
                        ),
                      ]
                    )
                  : _vm._e(),
                _c(
                  "div",
                  {
                    staticClass:
                      "fks-picker-panel__content fks-date-range-picker__content is-left",
                  },
                  [
                    _c(
                      "div",
                      { staticClass: "fks-date-range-picker__header" },
                      [
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-d-arrow-left",
                          attrs: { type: "button" },
                          on: { click: _vm.leftPrevYear },
                        }),
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-arrow-left",
                          attrs: { type: "button" },
                          on: { click: _vm.leftPrevMonth },
                        }),
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-d-arrow-right",
                              class: { "is-disabled": !_vm.enableYearArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableYearArrow,
                              },
                              on: { click: _vm.leftNextYear },
                            })
                          : _vm._e(),
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-arrow-right",
                              class: { "is-disabled": !_vm.enableMonthArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableMonthArrow,
                              },
                              on: { click: _vm.leftNextMonth },
                            })
                          : _vm._e(),
                        _c("div", [_vm._v(_vm._s(_vm.leftLabel))]),
                      ]
                    ),
                    _c("date-table", {
                      attrs: {
                        "selection-mode": "range",
                        date: _vm.leftDate,
                        "default-value": _vm.defaultValue,
                        "min-date": _vm.minDate,
                        "max-date": _vm.maxDate,
                        "range-state": _vm.rangeState,
                        "disabled-date": _vm.disabledDate,
                        "cell-class-name": _vm.cellClassName,
                        "first-day-of-week": _vm.firstDayOfWeek,
                      },
                      on: {
                        changerange: _vm.handleChangeRange,
                        pick: _vm.handleRangePick,
                      },
                    }),
                  ],
                  1
                ),
                _c(
                  "div",
                  {
                    staticClass:
                      "fks-picker-panel__content fks-date-range-picker__content is-right",
                  },
                  [
                    _c(
                      "div",
                      { staticClass: "fks-date-range-picker__header" },
                      [
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-d-arrow-left",
                              class: { "is-disabled": !_vm.enableYearArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableYearArrow,
                              },
                              on: { click: _vm.rightPrevYear },
                            })
                          : _vm._e(),
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-arrow-left",
                              class: { "is-disabled": !_vm.enableMonthArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableMonthArrow,
                              },
                              on: { click: _vm.rightPrevMonth },
                            })
                          : _vm._e(),
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-d-arrow-right",
                          attrs: { type: "button" },
                          on: { click: _vm.rightNextYear },
                        }),
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-arrow-right",
                          attrs: { type: "button" },
                          on: { click: _vm.rightNextMonth },
                        }),
                        _c("div", [_vm._v(_vm._s(_vm.rightLabel))]),
                      ]
                    ),
                    _c("date-table", {
                      attrs: {
                        "selection-mode": "range",
                        date: _vm.rightDate,
                        "default-value": _vm.defaultValue,
                        "min-date": _vm.minDate,
                        "max-date": _vm.maxDate,
                        "range-state": _vm.rangeState,
                        "disabled-date": _vm.disabledDate,
                        "cell-class-name": _vm.cellClassName,
                        "first-day-of-week": _vm.firstDayOfWeek,
                      },
                      on: {
                        changerange: _vm.handleChangeRange,
                        pick: _vm.handleRangePick,
                      },
                    }),
                  ],
                  1
                ),
              ]),
            ],
            2
          ),
          _vm.showTime
            ? _c(
                "div",
                { staticClass: "fks-picker-panel__footer" },
                [
                  _c(
                    "fks-button",
                    {
                      staticClass: "fks-picker-panel__link-btn",
                      attrs: { size: "mini", type: "text" },
                      on: { click: _vm.handleClear },
                    },
                    [_vm._v(_vm._s(_vm.t("fks.datepicker.clear")))]
                  ),
                  _c(
                    "fks-button",
                    {
                      staticClass: "fks-picker-panel__link-btn",
                      attrs: {
                        plain: "",
                        size: "mini",
                        disabled: _vm.btnDisabled,
                      },
                      on: {
                        click: function ($event) {
                          return _vm.handleConfirm(false)
                        },
                      },
                    },
                    [_vm._v(_vm._s(_vm.t("fks.datepicker.confirm")))]
                  ),
                ],
                1
              )
            : _vm._e(),
        ]
      ),
    ]
  )
}
var date_rangevue_type_template_id_ffe94b4c_staticRenderFns = []
date_rangevue_type_template_id_ffe94b4c_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue?vue&type=template&id=ffe94b4c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/date-range.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









var date_rangevue_type_script_lang_js_calcDefaultValue = function calcDefaultValue(defaultValue) {
  if (Array.isArray(defaultValue)) {
    return [new Date(defaultValue[0]), new Date(defaultValue[1])];
  } else if (defaultValue) {
    return [new Date(defaultValue), Object(date_util_["nextDate"])(new Date(defaultValue), 1)];
  } else {
    return [new Date(), Object(date_util_["nextDate"])(new Date(), 1)];
  }
};

/* harmony default export */ var date_rangevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  directives: { Clickoutside: clickoutside_default.a },

  computed: {
    btnDisabled: function btnDisabled() {
      return !(this.minDate && this.maxDate && !this.selecting && this.isValidValue([this.minDate, this.maxDate]));
    },
    leftLabel: function leftLabel() {
      return this.leftDate.getFullYear() + ' ' + this.t('fks.datepicker.year') + ' ' + this.t('fks.datepicker.month' + (this.leftDate.getMonth() + 1));
    },
    rightLabel: function rightLabel() {
      return this.rightDate.getFullYear() + ' ' + this.t('fks.datepicker.year') + ' ' + this.t('fks.datepicker.month' + (this.rightDate.getMonth() + 1));
    },
    leftYear: function leftYear() {
      return this.leftDate.getFullYear();
    },
    leftMonth: function leftMonth() {
      return this.leftDate.getMonth();
    },
    leftMonthDate: function leftMonthDate() {
      return this.leftDate.getDate();
    },
    rightYear: function rightYear() {
      return this.rightDate.getFullYear();
    },
    rightMonth: function rightMonth() {
      return this.rightDate.getMonth();
    },
    rightMonthDate: function rightMonthDate() {
      return this.rightDate.getDate();
    },
    minVisibleDate: function minVisibleDate() {
      if (this.dateUserInput.min !== null) return this.dateUserInput.min;
      if (this.minDate) return Object(date_util_["formatDate"])(this.minDate, this.dateFormat);
      return '';
    },
    maxVisibleDate: function maxVisibleDate() {
      if (this.dateUserInput.max !== null) return this.dateUserInput.max;
      if (this.maxDate || this.minDate) return Object(date_util_["formatDate"])(this.maxDate || this.minDate, this.dateFormat);
      return '';
    },
    minVisibleTime: function minVisibleTime() {
      if (this.timeUserInput.min !== null) return this.timeUserInput.min;
      if (this.minDate) return Object(date_util_["formatDate"])(this.minDate, this.timeFormat);
      return '';
    },
    maxVisibleTime: function maxVisibleTime() {
      if (this.timeUserInput.max !== null) return this.timeUserInput.max;
      if (this.maxDate || this.minDate) return Object(date_util_["formatDate"])(this.maxDate || this.minDate, this.timeFormat);
      return '';
    },
    timeFormat: function timeFormat() {
      if (this.format) {
        return Object(date_util_["extractTimeFormat"])(this.format);
      } else {
        return 'HH:mm:ss';
      }
    },
    dateFormat: function dateFormat() {
      if (this.format) {
        return Object(date_util_["extractDateFormat"])(this.format);
      } else {
        return 'yyyy-MM-dd';
      }
    },
    enableMonthArrow: function enableMonthArrow() {
      var nextMonth = (this.leftMonth + 1) % 12;
      var yearOffset = this.leftMonth + 1 >= 12 ? 1 : 0;
      return this.unlinkPanels && new Date(this.leftYear + yearOffset, nextMonth) < new Date(this.rightYear, this.rightMonth);
    },
    enableYearArrow: function enableYearArrow() {
      return this.unlinkPanels && this.rightYear * 12 + this.rightMonth - (this.leftYear * 12 + this.leftMonth + 1) >= 12;
    }
  },

  data: function data() {
    return {
      popperClass: '',
      value: [],
      defaultValue: null,
      defaultTime: null,
      minDate: '',
      maxDate: '',
      leftDate: new Date(),
      rightDate: Object(date_util_["nextMonth"])(new Date()),
      rangeState: {
        endDate: null,
        selecting: false,
        row: null,
        column: null
      },
      showTime: false,
      shortcuts: '',
      visible: '',
      disabledDate: '',
      cellClassName: '',
      firstDayOfWeek: 7,
      minTimePickerVisible: false,
      maxTimePickerVisible: false,
      format: '',
      arrowControl: false,
      unlinkPanels: false,
      dateUserInput: {
        min: null,
        max: null
      },
      timeUserInput: {
        min: null,
        max: null
      }
    };
  },


  watch: {
    minDate: function minDate(val) {
      var _this = this;

      this.dateUserInput.min = null;
      this.timeUserInput.min = null;
      this.$nextTick(function () {
        if (_this.$refs.maxTimePicker && _this.maxDate && _this.maxDate < _this.minDate) {
          var format = 'HH:mm:ss';
          _this.$refs.maxTimePicker.selectableRange = [[Object(date_util_["parseDate"])(Object(date_util_["formatDate"])(_this.minDate, format), format), Object(date_util_["parseDate"])('23:59:59', format)]];
        }
      });
      if (val && this.$refs.minTimePicker) {
        this.$refs.minTimePicker.date = val;
        this.$refs.minTimePicker.value = val;
      }
    },
    maxDate: function maxDate(val) {
      this.dateUserInput.max = null;
      this.timeUserInput.max = null;
      if (val && this.$refs.maxTimePicker) {
        this.$refs.maxTimePicker.date = val;
        this.$refs.maxTimePicker.value = val;
      }
    },
    minTimePickerVisible: function minTimePickerVisible(val) {
      var _this2 = this;

      if (val) {
        this.$nextTick(function () {
          _this2.$refs.minTimePicker.date = _this2.minDate;
          _this2.$refs.minTimePicker.value = _this2.minDate;
          _this2.$refs.minTimePicker.adjustSpinners();
        });
      }
    },
    maxTimePickerVisible: function maxTimePickerVisible(val) {
      var _this3 = this;

      if (val) {
        this.$nextTick(function () {
          _this3.$refs.maxTimePicker.date = _this3.maxDate;
          _this3.$refs.maxTimePicker.value = _this3.maxDate;
          _this3.$refs.maxTimePicker.adjustSpinners();
        });
      }
    },
    value: function value(newVal) {
      if (!newVal) {
        this.minDate = null;
        this.maxDate = null;
      } else if (Array.isArray(newVal)) {
        this.minDate = Object(date_util_["isDate"])(newVal[0]) ? new Date(newVal[0]) : null;
        this.maxDate = Object(date_util_["isDate"])(newVal[1]) ? new Date(newVal[1]) : null;
        if (this.minDate) {
          this.leftDate = this.minDate;
          if (this.unlinkPanels && this.maxDate) {
            var minDateYear = this.minDate.getFullYear();
            var minDateMonth = this.minDate.getMonth();
            var maxDateYear = this.maxDate.getFullYear();
            var maxDateMonth = this.maxDate.getMonth();
            this.rightDate = minDateYear === maxDateYear && minDateMonth === maxDateMonth ? Object(date_util_["nextMonth"])(this.maxDate) : this.maxDate;
          } else {
            this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
          }
        } else {
          this.leftDate = date_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
          this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
        }
      }
    },
    defaultValue: function defaultValue(val) {
      if (!Array.isArray(this.value)) {
        var _calcDefaultValue = date_rangevue_type_script_lang_js_calcDefaultValue(val),
            left = _calcDefaultValue[0],
            right = _calcDefaultValue[1];

        this.leftDate = left;
        this.rightDate = val && val[1] && this.unlinkPanels ? right : Object(date_util_["nextMonth"])(this.leftDate);
      }
    }
  },

  methods: {
    handleClear: function handleClear() {
      this.minDate = null;
      this.maxDate = null;
      this.leftDate = date_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
      this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
      this.$emit('pick', null);
    },
    handleChangeRange: function handleChangeRange(val) {
      this.minDate = val.minDate;
      this.maxDate = val.maxDate;
      this.rangeState = val.rangeState;
    },
    handleDateInput: function handleDateInput(value, type) {
      this.dateUserInput[type] = value;
      if (value.length !== this.dateFormat.length) return;
      var parsedValue = Object(date_util_["parseDate"])(value, this.dateFormat);

      if (parsedValue) {
        if (typeof this.disabledDate === 'function' && this.disabledDate(new Date(parsedValue))) {
          return;
        }
        if (type === 'min') {
          this.minDate = Object(date_util_["modifyDate"])(this.minDate || new Date(), parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
          this.leftDate = new Date(parsedValue);
          if (!this.unlinkPanels) {
            this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
          }
        } else {
          this.maxDate = Object(date_util_["modifyDate"])(this.maxDate || new Date(), parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
          this.rightDate = new Date(parsedValue);
          if (!this.unlinkPanels) {
            this.leftDate = Object(date_util_["prevMonth"])(parsedValue);
          }
        }
      }
    },
    handleDateChange: function handleDateChange(value, type) {
      var parsedValue = Object(date_util_["parseDate"])(value, this.dateFormat);
      if (parsedValue) {
        if (type === 'min') {
          this.minDate = Object(date_util_["modifyDate"])(this.minDate, parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
          if (this.minDate > this.maxDate) {
            this.maxDate = this.minDate;
          }
        } else {
          this.maxDate = Object(date_util_["modifyDate"])(this.maxDate, parsedValue.getFullYear(), parsedValue.getMonth(), parsedValue.getDate());
          if (this.maxDate < this.minDate) {
            this.minDate = this.maxDate;
          }
        }
      }
    },
    handleTimeInput: function handleTimeInput(value, type) {
      var _this4 = this;

      this.timeUserInput[type] = value;
      if (value.length !== this.timeFormat.length) return;
      var parsedValue = Object(date_util_["parseDate"])(value, this.timeFormat);

      if (parsedValue) {
        if (type === 'min') {
          this.minDate = Object(date_util_["modifyTime"])(this.minDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
          this.$nextTick(function (_) {
            return _this4.$refs.minTimePicker.adjustSpinners();
          });
        } else {
          this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
          this.$nextTick(function (_) {
            return _this4.$refs.maxTimePicker.adjustSpinners();
          });
        }
      }
    },
    handleTimeChange: function handleTimeChange(value, type) {
      var parsedValue = Object(date_util_["parseDate"])(value, this.timeFormat);
      if (parsedValue) {
        if (type === 'min') {
          this.minDate = Object(date_util_["modifyTime"])(this.minDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
          if (this.minDate > this.maxDate) {
            this.maxDate = this.minDate;
          }
          this.$refs.minTimePicker.value = this.minDate;
          this.minTimePickerVisible = false;
        } else {
          this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, parsedValue.getHours(), parsedValue.getMinutes(), parsedValue.getSeconds());
          if (this.maxDate < this.minDate) {
            this.minDate = this.maxDate;
          }
          this.$refs.maxTimePicker.value = this.minDate;
          this.maxTimePickerVisible = false;
        }
      }
    },
    handleRangePick: function handleRangePick(val) {
      var _this5 = this;

      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var defaultTime = this.defaultTime || [];
      var minDate = Object(date_util_["modifyWithTimeString"])(val.minDate, defaultTime[0]);
      var maxDate = Object(date_util_["modifyWithTimeString"])(val.maxDate, defaultTime[1]);

      if (this.maxDate === maxDate && this.minDate === minDate) {
        return;
      }
      this.onPick && this.onPick(val);
      this.maxDate = maxDate;
      this.minDate = minDate;

      // workaround for https://github.com/ElemeFE/element/issues/7539, should remove this block when we don't have to care about Chromium 55 - 57
      setTimeout(function () {
        _this5.maxDate = maxDate;
        _this5.minDate = minDate;
      }, 10);
      if (!close || this.showTime) return;
      this.handleConfirm();
    },
    handleShortcutClick: function handleShortcutClick(shortcut) {
      if (shortcut.onClick) {
        shortcut.onClick(this);
      }
    },
    handleMinTimePick: function handleMinTimePick(value, visible, first) {
      this.minDate = this.minDate || new Date();
      if (value) {
        this.minDate = Object(date_util_["modifyTime"])(this.minDate, value.getHours(), value.getMinutes(), value.getSeconds());
      }

      if (!first) {
        this.minTimePickerVisible = visible;
      }

      if (!this.maxDate || this.maxDate && this.maxDate.getTime() < this.minDate.getTime()) {
        this.maxDate = new Date(this.minDate);
      }
    },
    handleMinTimeClose: function handleMinTimeClose() {
      this.minTimePickerVisible = false;
    },
    handleMaxTimePick: function handleMaxTimePick(value, visible, first) {
      if (this.maxDate && value) {
        this.maxDate = Object(date_util_["modifyTime"])(this.maxDate, value.getHours(), value.getMinutes(), value.getSeconds());
      }

      if (!first) {
        this.maxTimePickerVisible = visible;
      }

      if (this.maxDate && this.minDate && this.minDate.getTime() > this.maxDate.getTime()) {
        this.minDate = new Date(this.maxDate);
      }
    },
    handleMaxTimeClose: function handleMaxTimeClose() {
      this.maxTimePickerVisible = false;
    },


    // leftPrev*, rightNext* need to take care of `unlinkPanels`
    leftPrevYear: function leftPrevYear() {
      this.leftDate = Object(date_util_["prevYear"])(this.leftDate);
      if (!this.unlinkPanels) {
        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
      }
    },
    leftPrevMonth: function leftPrevMonth() {
      this.leftDate = Object(date_util_["prevMonth"])(this.leftDate);
      if (!this.unlinkPanels) {
        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
      }
    },
    rightNextYear: function rightNextYear() {
      if (!this.unlinkPanels) {
        this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
      } else {
        this.rightDate = Object(date_util_["nextYear"])(this.rightDate);
      }
    },
    rightNextMonth: function rightNextMonth() {
      if (!this.unlinkPanels) {
        this.leftDate = Object(date_util_["nextMonth"])(this.leftDate);
        this.rightDate = Object(date_util_["nextMonth"])(this.leftDate);
      } else {
        this.rightDate = Object(date_util_["nextMonth"])(this.rightDate);
      }
    },


    // leftNext*, rightPrev* are called when `unlinkPanels` is true
    leftNextYear: function leftNextYear() {
      this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
    },
    leftNextMonth: function leftNextMonth() {
      this.leftDate = Object(date_util_["nextMonth"])(this.leftDate);
    },
    rightPrevYear: function rightPrevYear() {
      this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
    },
    rightPrevMonth: function rightPrevMonth() {
      this.rightDate = Object(date_util_["prevMonth"])(this.rightDate);
    },
    handleConfirm: function handleConfirm() {
      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.isValidValue([this.minDate, this.maxDate])) {
        this.$emit('pick', [this.minDate, this.maxDate], visible);
      }
    },
    isValidValue: function isValidValue(value) {
      return Array.isArray(value) && value && value[0] && value[1] && Object(date_util_["isDate"])(value[0]) && Object(date_util_["isDate"])(value[1]) && value[0].getTime() <= value[1].getTime() && (typeof this.disabledDate === 'function' ? !this.disabledDate(value[0]) && !this.disabledDate(value[1]) : true);
    },
    resetView: function resetView() {
      // NOTE: this is a hack to reset {min, max}Date on picker open.
      // TODO: correct way of doing so is to refactor {min, max}Date to be dependent on value and internal selection state
      //       an alternative would be resetView whenever picker becomes visible, should also investigate date-panel's resetView
      if (this.minDate && this.maxDate == null) this.rangeState.selecting = false;
      this.minDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[0]) : null;
      this.maxDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[1]) : null;
    }
  },

  components: { TimePicker: panel_time, DateTable: date_table, FksInput: input_default.a, FksButton: button_default.a }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_date_rangevue_type_script_lang_js_ = (date_rangevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/date-range.vue





/* normalize component */

var date_range_component = normalizeComponent(
  panel_date_rangevue_type_script_lang_js_,
  date_rangevue_type_template_id_ffe94b4c_render,
  date_rangevue_type_template_id_ffe94b4c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var date_range = (date_range_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/month-range.vue?vue&type=template&id=71c56f1a&
var month_rangevue_type_template_id_71c56f1a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: {
        "after-leave": function ($event) {
          return _vm.$emit("dodestroy")
        },
      },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-picker-panel fks-date-range-picker fks-popper",
          class: [
            {
              "has-sidebar": _vm.$slots.sidebar || _vm.shortcuts,
            },
            _vm.popperClass,
          ],
        },
        [
          _c(
            "div",
            { staticClass: "fks-picker-panel__body-wrapper" },
            [
              _vm._t("sidebar"),
              _vm.shortcuts
                ? _c(
                    "div",
                    { staticClass: "fks-picker-panel__sidebar" },
                    _vm._l(_vm.shortcuts, function (shortcut, key) {
                      return _c(
                        "button",
                        {
                          key: key,
                          staticClass: "fks-picker-panel__shortcut",
                          attrs: { type: "button" },
                          on: {
                            click: function ($event) {
                              return _vm.handleShortcutClick(shortcut)
                            },
                          },
                        },
                        [_vm._v(_vm._s(shortcut.text))]
                      )
                    }),
                    0
                  )
                : _vm._e(),
              _c("div", { staticClass: "fks-picker-panel__body" }, [
                _c(
                  "div",
                  {
                    staticClass:
                      "fks-picker-panel__content fks-date-range-picker__content is-left",
                  },
                  [
                    _c(
                      "div",
                      { staticClass: "fks-date-range-picker__header" },
                      [
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-d-arrow-left",
                          attrs: { type: "button" },
                          on: { click: _vm.leftPrevYear },
                        }),
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-d-arrow-right",
                              class: { "is-disabled": !_vm.enableYearArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableYearArrow,
                              },
                              on: { click: _vm.leftNextYear },
                            })
                          : _vm._e(),
                        _c("div", [_vm._v(_vm._s(_vm.leftLabel))]),
                      ]
                    ),
                    _c("month-table", {
                      attrs: {
                        "selection-mode": "range",
                        date: _vm.leftDate,
                        "default-value": _vm.defaultValue,
                        "min-date": _vm.minDate,
                        "max-date": _vm.maxDate,
                        "range-state": _vm.rangeState,
                        "disabled-date": _vm.disabledDate,
                      },
                      on: {
                        changerange: _vm.handleChangeRange,
                        pick: _vm.handleRangePick,
                      },
                    }),
                  ],
                  1
                ),
                _c(
                  "div",
                  {
                    staticClass:
                      "fks-picker-panel__content fks-date-range-picker__content is-right",
                  },
                  [
                    _c(
                      "div",
                      { staticClass: "fks-date-range-picker__header" },
                      [
                        _vm.unlinkPanels
                          ? _c("button", {
                              staticClass:
                                "fks-picker-panel__icon-btn fks-icon-d-arrow-left",
                              class: { "is-disabled": !_vm.enableYearArrow },
                              attrs: {
                                type: "button",
                                disabled: !_vm.enableYearArrow,
                              },
                              on: { click: _vm.rightPrevYear },
                            })
                          : _vm._e(),
                        _c("button", {
                          staticClass:
                            "fks-picker-panel__icon-btn fks-icon-d-arrow-right",
                          attrs: { type: "button" },
                          on: { click: _vm.rightNextYear },
                        }),
                        _c("div", [_vm._v(_vm._s(_vm.rightLabel))]),
                      ]
                    ),
                    _c("month-table", {
                      attrs: {
                        "selection-mode": "range",
                        date: _vm.rightDate,
                        "default-value": _vm.defaultValue,
                        "min-date": _vm.minDate,
                        "max-date": _vm.maxDate,
                        "range-state": _vm.rangeState,
                        "disabled-date": _vm.disabledDate,
                      },
                      on: {
                        changerange: _vm.handleChangeRange,
                        pick: _vm.handleRangePick,
                      },
                    }),
                  ],
                  1
                ),
              ]),
            ],
            2
          ),
        ]
      ),
    ]
  )
}
var month_rangevue_type_template_id_71c56f1a_staticRenderFns = []
month_rangevue_type_template_id_71c56f1a_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue?vue&type=template&id=71c56f1a&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/month-range.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








var month_rangevue_type_script_lang_js_calcDefaultValue = function calcDefaultValue(defaultValue) {
  if (Array.isArray(defaultValue)) {
    return [new Date(defaultValue[0]), new Date(defaultValue[1])];
  } else if (defaultValue) {
    return [new Date(defaultValue), Object(date_util_["nextMonth"])(new Date(defaultValue))];
  } else {
    return [new Date(), Object(date_util_["nextMonth"])(new Date())];
  }
};
/* harmony default export */ var month_rangevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  directives: { Clickoutside: clickoutside_default.a },

  computed: {
    btnDisabled: function btnDisabled() {
      return !(this.minDate && this.maxDate && !this.selecting && this.isValidValue([this.minDate, this.maxDate]));
    },
    leftLabel: function leftLabel() {
      return this.leftDate.getFullYear() + ' ' + this.t('fks.datepicker.year');
    },
    rightLabel: function rightLabel() {
      return this.rightDate.getFullYear() + ' ' + this.t('fks.datepicker.year');
    },
    leftYear: function leftYear() {
      return this.leftDate.getFullYear();
    },
    rightYear: function rightYear() {
      return this.rightDate.getFullYear() === this.leftDate.getFullYear() ? this.leftDate.getFullYear() + 1 : this.rightDate.getFullYear();
    },
    enableYearArrow: function enableYearArrow() {
      return this.unlinkPanels && this.rightYear > this.leftYear + 1;
    }
  },

  data: function data() {
    return {
      popperClass: '',
      value: [],
      defaultValue: null,
      defaultTime: null,
      minDate: '',
      maxDate: '',
      leftDate: new Date(),
      rightDate: Object(date_util_["nextYear"])(new Date()),
      rangeState: {
        endDate: null,
        selecting: false,
        row: null,
        column: null
      },
      shortcuts: '',
      visible: '',
      disabledDate: '',
      format: '',
      arrowControl: false,
      unlinkPanels: false
    };
  },


  watch: {
    value: function value(newVal) {
      if (!newVal) {
        this.minDate = null;
        this.maxDate = null;
      } else if (Array.isArray(newVal)) {
        this.minDate = Object(date_util_["isDate"])(newVal[0]) ? new Date(newVal[0]) : null;
        this.maxDate = Object(date_util_["isDate"])(newVal[1]) ? new Date(newVal[1]) : null;
        if (this.minDate) {
          this.leftDate = this.minDate;
          if (this.unlinkPanels && this.maxDate) {
            var minDateYear = this.minDate.getFullYear();
            var maxDateYear = this.maxDate.getFullYear();
            this.rightDate = minDateYear === maxDateYear ? Object(date_util_["nextYear"])(this.maxDate) : this.maxDate;
          } else {
            this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
          }
        } else {
          this.leftDate = month_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
          this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
        }
      }
    },
    defaultValue: function defaultValue(val) {
      if (!Array.isArray(this.value)) {
        var _calcDefaultValue = month_rangevue_type_script_lang_js_calcDefaultValue(val),
            left = _calcDefaultValue[0],
            right = _calcDefaultValue[1];

        this.leftDate = left;
        this.rightDate = val && val[1] && left.getFullYear() !== right.getFullYear() && this.unlinkPanels ? right : Object(date_util_["nextYear"])(this.leftDate);
      }
    }
  },

  methods: {
    handleClear: function handleClear() {
      this.minDate = null;
      this.maxDate = null;
      this.leftDate = month_rangevue_type_script_lang_js_calcDefaultValue(this.defaultValue)[0];
      this.rightDate = Object(date_util_["nextYear"])(this.leftDate);
      this.$emit('pick', null);
    },
    handleChangeRange: function handleChangeRange(val) {
      this.minDate = val.minDate;
      this.maxDate = val.maxDate;
      this.rangeState = val.rangeState;
    },
    handleRangePick: function handleRangePick(val) {
      var _this = this;

      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      var defaultTime = this.defaultTime || [];
      var minDate = Object(date_util_["modifyWithTimeString"])(val.minDate, defaultTime[0]);
      var maxDate = Object(date_util_["modifyWithTimeString"])(val.maxDate, defaultTime[1]);
      if (this.maxDate === maxDate && this.minDate === minDate) {
        return;
      }
      this.onPick && this.onPick(val);
      this.maxDate = maxDate;
      this.minDate = minDate;

      // workaround for https://github.com/ElemeFE/element/issues/7539, should remove this block when we don't have to care about Chromium 55 - 57
      setTimeout(function () {
        _this.maxDate = maxDate;
        _this.minDate = minDate;
      }, 10);
      if (!close) return;
      this.handleConfirm();
    },
    handleShortcutClick: function handleShortcutClick(shortcut) {
      if (shortcut.onClick) {
        shortcut.onClick(this);
      }
    },


    // leftPrev*, rightNext* need to take care of `unlinkPanels`
    leftPrevYear: function leftPrevYear() {
      this.leftDate = Object(date_util_["prevYear"])(this.leftDate);
      if (!this.unlinkPanels) {
        this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
      }
    },
    rightNextYear: function rightNextYear() {
      if (!this.unlinkPanels) {
        this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
      }
      this.rightDate = Object(date_util_["nextYear"])(this.rightDate);
    },


    // leftNext*, rightPrev* are called when `unlinkPanels` is true
    leftNextYear: function leftNextYear() {
      this.leftDate = Object(date_util_["nextYear"])(this.leftDate);
    },
    rightPrevYear: function rightPrevYear() {
      this.rightDate = Object(date_util_["prevYear"])(this.rightDate);
    },
    handleConfirm: function handleConfirm() {
      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.isValidValue([this.minDate, this.maxDate])) {
        this.$emit('pick', [this.minDate, this.maxDate], visible);
      }
    },
    isValidValue: function isValidValue(value) {
      return Array.isArray(value) && value && value[0] && value[1] && Object(date_util_["isDate"])(value[0]) && Object(date_util_["isDate"])(value[1]) && value[0].getTime() <= value[1].getTime() && (typeof this.disabledDate === 'function' ? !this.disabledDate(value[0]) && !this.disabledDate(value[1]) : true);
    },
    resetView: function resetView() {
      // NOTE: this is a hack to reset {min, max}Date on picker open.
      // TODO: correct way of doing so is to refactor {min, max}Date to be dependent on value and internal selection state
      //       an alternative would be resetView whenever picker becomes visible, should also investigate date-panel's resetView
      this.minDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[0]) : null;
      this.maxDate = this.value && Object(date_util_["isDate"])(this.value[0]) ? new Date(this.value[1]) : null;
    }
  },

  components: { MonthTable: month_table, FksInput: input_default.a, FksButton: button_default.a }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_month_rangevue_type_script_lang_js_ = (month_rangevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/month-range.vue





/* normalize component */

var month_range_component = normalizeComponent(
  panel_month_rangevue_type_script_lang_js_,
  month_rangevue_type_template_id_71c56f1a_render,
  month_rangevue_type_template_id_71c56f1a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var month_range = (month_range_component.exports);
// CONCATENATED MODULE: ./packages/date-picker/src/picker/date-picker.js





var date_picker_getPanel = function getPanel(type) {
  if (type === 'daterange' || type === 'datetimerange') {
    return date_range;
  } else if (type === 'monthrange') {
    return month_range;
  }
  return panel_date;
};

/* harmony default export */ var date_picker = ({
  mixins: [picker],

  name: 'FksDatePicker',

  props: {
    type: {
      type: String,
      default: 'date'
    },
    timeArrowControl: Boolean
  },

  watch: {
    type: function type(_type) {
      if (this.picker) {
        this.unmountPicker();
        this.panel = date_picker_getPanel(_type);
        this.mountPicker();
      } else {
        this.panel = date_picker_getPanel(_type);
      }
    }
  },

  created: function created() {
    this.panel = date_picker_getPanel(this.type);
  }
});
// CONCATENATED MODULE: ./packages/date-picker/index.js


/* istanbul ignore next */
date_picker.install = function install(Vue) {
  Vue.component(date_picker.name, date_picker);
};

/* harmony default export */ var packages_date_picker = (date_picker);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-select.vue?vue&type=template&id=7fee08e8&
var time_selectvue_type_template_id_7fee08e8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: {
        "before-enter": _vm.handleMenuEnter,
        "after-leave": function ($event) {
          return _vm.$emit("dodestroy")
        },
      },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          ref: "popper",
          staticClass: "fks-picker-panel time-select fks-popper",
          class: _vm.popperClass,
          style: { width: _vm.width + "px" },
        },
        [
          _c(
            "fks-scrollbar",
            {
              attrs: {
                noresize: "",
                "wrap-class": "fks-picker-panel__content",
              },
            },
            _vm._l(_vm.items, function (item) {
              return _c(
                "div",
                {
                  key: item.value,
                  staticClass: "time-select-item",
                  class: {
                    selected: _vm.value === item.value,
                    disabled: item.disabled,
                    default: item.value === _vm.defaultValue,
                  },
                  attrs: { disabled: item.disabled },
                  on: {
                    click: function ($event) {
                      return _vm.handleClick(item)
                    },
                  },
                },
                [_vm._v(_vm._s(item.value))]
              )
            }),
            0
          ),
        ],
        1
      ),
    ]
  )
}
var time_selectvue_type_template_id_7fee08e8_staticRenderFns = []
time_selectvue_type_template_id_7fee08e8_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue?vue&type=template&id=7fee08e8&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-select.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




var parseTime = function parseTime(time) {
  var values = (time || '').split(':');
  if (values.length >= 2) {
    var hours = parseInt(values[0], 10);
    var minutes = parseInt(values[1], 10);

    return {
      hours: hours,
      minutes: minutes
    };
  }
  /* istanbul ignore next */
  return null;
};

var compareTime = function compareTime(time1, time2) {
  var value1 = parseTime(time1);
  var value2 = parseTime(time2);

  var minutes1 = value1.minutes + value1.hours * 60;
  var minutes2 = value2.minutes + value2.hours * 60;

  if (minutes1 === minutes2) {
    return 0;
  }

  return minutes1 > minutes2 ? 1 : -1;
};

var formatTime = function formatTime(time) {
  return (time.hours < 10 ? '0' + time.hours : time.hours) + ':' + (time.minutes < 10 ? '0' + time.minutes : time.minutes);
};

var nextTime = function nextTime(time, step) {
  var timeValue = parseTime(time);
  var stepValue = parseTime(step);

  var next = {
    hours: timeValue.hours,
    minutes: timeValue.minutes
  };

  next.minutes += stepValue.minutes;
  next.hours += stepValue.hours;

  next.hours += Math.floor(next.minutes / 60);
  next.minutes = next.minutes % 60;

  return formatTime(next);
};

/* harmony default export */ var time_selectvue_type_script_lang_js_ = ({
  components: { FksScrollbar: scrollbar_default.a },

  watch: {
    value: function value(val) {
      var _this = this;

      if (!val) return;
      this.$nextTick(function () {
        return _this.scrollToOption();
      });
    }
  },

  methods: {
    handleClick: function handleClick(item) {
      if (!item.disabled) {
        this.$emit('pick', item.value);
      }
    },
    handleClear: function handleClear() {
      this.$emit('pick', null);
    },
    scrollToOption: function scrollToOption() {
      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '.selected';

      var menu = this.$refs.popper.querySelector('.fks-picker-panel__content');
      scroll_into_view_default()(menu, menu.querySelector(selector));
    },
    handleMenuEnter: function handleMenuEnter() {
      var _this2 = this;

      var selected = this.items.map(function (item) {
        return item.value;
      }).indexOf(this.value) !== -1;
      var hasDefault = this.items.map(function (item) {
        return item.value;
      }).indexOf(this.defaultValue) !== -1;
      var option = selected && '.selected' || hasDefault && '.default' || '.time-select-item:not(.disabled)';
      this.$nextTick(function () {
        return _this2.scrollToOption(option);
      });
    },
    scrollDown: function scrollDown(step) {
      var items = this.items;
      var length = items.length;
      var total = items.length;
      var index = items.map(function (item) {
        return item.value;
      }).indexOf(this.value);
      while (total--) {
        index = (index + step + length) % length;
        if (!items[index].disabled) {
          this.$emit('pick', items[index].value, true);
          return;
        }
      }
    },
    isValidValue: function isValidValue(date) {
      return this.items.filter(function (item) {
        return !item.disabled;
      }).map(function (item) {
        return item.value;
      }).indexOf(date) !== -1;
    },
    handleKeydown: function handleKeydown(event) {
      var keyCode = event.keyCode;
      if (keyCode === 38 || keyCode === 40) {
        var mapping = { 40: 1, 38: -1 };
        var offset = mapping[keyCode.toString()];
        this.scrollDown(offset);
        event.stopPropagation();
        return;
      }
    }
  },

  data: function data() {
    return {
      popperClass: '',
      start: '09:00',
      end: '18:00',
      step: '00:30',
      value: '',
      defaultValue: '',
      visible: false,
      minTime: '',
      maxTime: '',
      width: 0
    };
  },


  computed: {
    items: function items() {
      var start = this.start;
      var end = this.end;
      var step = this.step;

      var result = [];

      if (start && end && step) {
        var current = start;
        while (compareTime(current, end) <= 0) {
          result.push({
            value: current,
            disabled: compareTime(current, this.minTime || '-1:-1') <= 0 || compareTime(current, this.maxTime || '100:100') >= 0
          });
          current = nextTime(current, step);
        }
      }

      return result;
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_time_selectvue_type_script_lang_js_ = (time_selectvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-select.vue





/* normalize component */

var time_select_component = normalizeComponent(
  panel_time_selectvue_type_script_lang_js_,
  time_selectvue_type_template_id_7fee08e8_render,
  time_selectvue_type_template_id_7fee08e8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var time_select = (time_select_component.exports);
// CONCATENATED MODULE: ./packages/date-picker/src/picker/time-select.js



/* harmony default export */ var picker_time_select = ({
  mixins: [picker],

  name: 'FksTimeSelect',

  componentName: 'FksTimeSelect',

  props: {
    type: {
      type: String,
      default: 'time-select'
    }
  },

  beforeCreate: function beforeCreate() {
    this.panel = time_select;
  }
});
// CONCATENATED MODULE: ./packages/time-select/index.js


/* istanbul ignore next */
picker_time_select.install = function (Vue) {
  Vue.component(picker_time_select.name, picker_time_select);
};

/* harmony default export */ var packages_time_select = (picker_time_select);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-range.vue?vue&type=template&id=686d255b&
var time_rangevue_type_template_id_686d255b_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: {
        "after-leave": function ($event) {
          return _vm.$emit("dodestroy")
        },
      },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-time-range-picker fks-picker-panel fks-popper",
          class: _vm.popperClass,
        },
        [
          _c("div", { staticClass: "fks-time-range-picker__content" }, [
            _c("div", { staticClass: "fks-time-range-picker__cell" }, [
              _c("div", { staticClass: "fks-time-range-picker__header" }, [
                _vm._v(_vm._s(_vm.t("fks.datepicker.startTime"))),
              ]),
              _c(
                "div",
                {
                  staticClass:
                    "fks-time-range-picker__body fks-time-panel__content",
                  class: {
                    "has-seconds": _vm.showSeconds,
                    "is-arrow": _vm.arrowControl,
                  },
                },
                [
                  _c("time-spinner", {
                    ref: "minSpinner",
                    attrs: {
                      "show-seconds": _vm.showSeconds,
                      "am-pm-mode": _vm.amPmMode,
                      "arrow-control": _vm.arrowControl,
                      date: _vm.minDate,
                    },
                    on: {
                      change: _vm.handleMinChange,
                      "select-range": _vm.setMinSelectionRange,
                    },
                  }),
                ],
                1
              ),
            ]),
            _c("div", { staticClass: "fks-time-range-picker__cell" }, [
              _c("div", { staticClass: "fks-time-range-picker__header" }, [
                _vm._v(_vm._s(_vm.t("fks.datepicker.endTime"))),
              ]),
              _c(
                "div",
                {
                  staticClass:
                    "fks-time-range-picker__body fks-time-panel__content",
                  class: {
                    "has-seconds": _vm.showSeconds,
                    "is-arrow": _vm.arrowControl,
                  },
                },
                [
                  _c("time-spinner", {
                    ref: "maxSpinner",
                    attrs: {
                      "show-seconds": _vm.showSeconds,
                      "am-pm-mode": _vm.amPmMode,
                      "arrow-control": _vm.arrowControl,
                      date: _vm.maxDate,
                    },
                    on: {
                      change: _vm.handleMaxChange,
                      "select-range": _vm.setMaxSelectionRange,
                    },
                  }),
                ],
                1
              ),
            ]),
          ]),
          _c("div", { staticClass: "fks-time-panel__footer" }, [
            _c(
              "button",
              {
                staticClass: "fks-time-panel__btn cancel",
                attrs: { type: "button" },
                on: {
                  click: function ($event) {
                    return _vm.handleCancel()
                  },
                },
              },
              [_vm._v(_vm._s(_vm.t("fks.datepicker.cancel")))]
            ),
            _c(
              "button",
              {
                staticClass: "fks-time-panel__btn confirm",
                attrs: { type: "button", disabled: _vm.btnDisabled },
                on: {
                  click: function ($event) {
                    return _vm.handleConfirm()
                  },
                },
              },
              [_vm._v(_vm._s(_vm.t("fks.datepicker.confirm")))]
            ),
          ]),
        ]
      ),
    ]
  )
}
var time_rangevue_type_template_id_686d255b_staticRenderFns = []
time_rangevue_type_template_id_686d255b_render._withStripped = true


// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue?vue&type=template&id=686d255b&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/date-picker/src/panel/time-range.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





var MIN_TIME = Object(date_util_["parseDate"])('00:00:00', 'HH:mm:ss');
var MAX_TIME = Object(date_util_["parseDate"])('23:59:59', 'HH:mm:ss');

var time_rangevue_type_script_lang_js_minTimeOfDay = function minTimeOfDay(date) {
  return Object(date_util_["modifyDate"])(MIN_TIME, date.getFullYear(), date.getMonth(), date.getDate());
};

var time_rangevue_type_script_lang_js_maxTimeOfDay = function maxTimeOfDay(date) {
  return Object(date_util_["modifyDate"])(MAX_TIME, date.getFullYear(), date.getMonth(), date.getDate());
};

// increase time by amount of milliseconds, but within the range of day
var advanceTime = function advanceTime(date, amount) {
  return new Date(Math.min(date.getTime() + amount, time_rangevue_type_script_lang_js_maxTimeOfDay(date).getTime()));
};

/* harmony default export */ var time_rangevue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  components: { TimeSpinner: time_spinner },

  computed: {
    showSeconds: function showSeconds() {
      return (this.format || '').indexOf('ss') !== -1;
    },
    offset: function offset() {
      return this.showSeconds ? 11 : 8;
    },
    spinner: function spinner() {
      return this.selectionRange[0] < this.offset ? this.$refs.minSpinner : this.$refs.maxSpinner;
    },
    btnDisabled: function btnDisabled() {
      return this.minDate.getTime() > this.maxDate.getTime();
    },
    amPmMode: function amPmMode() {
      if ((this.format || '').indexOf('A') !== -1) return 'A';
      if ((this.format || '').indexOf('a') !== -1) return 'a';
      return '';
    }
  },

  data: function data() {
    return {
      popperClass: '',
      minDate: new Date(),
      maxDate: new Date(),
      value: [],
      oldValue: [new Date(), new Date()],
      defaultValue: null,
      format: 'HH:mm:ss',
      visible: false,
      selectionRange: [0, 2],
      arrowControl: false
    };
  },


  watch: {
    value: function value(_value) {
      if (Array.isArray(_value)) {
        this.minDate = new Date(_value[0]);
        this.maxDate = new Date(_value[1]);
      } else {
        if (Array.isArray(this.defaultValue)) {
          this.minDate = new Date(this.defaultValue[0]);
          this.maxDate = new Date(this.defaultValue[1]);
        } else if (this.defaultValue) {
          this.minDate = new Date(this.defaultValue);
          this.maxDate = advanceTime(new Date(this.defaultValue), 60 * 60 * 1000);
        } else {
          this.minDate = new Date();
          this.maxDate = advanceTime(new Date(), 60 * 60 * 1000);
        }
      }
    },
    visible: function visible(val) {
      var _this = this;

      if (val) {
        this.oldValue = this.value;
        this.$nextTick(function () {
          return _this.$refs.minSpinner.emitSelectRange('hours');
        });
      }
    }
  },

  methods: {
    handleClear: function handleClear() {
      this.$emit('pick', null);
    },
    handleCancel: function handleCancel() {
      this.$emit('pick', this.oldValue);
    },
    handleMinChange: function handleMinChange(date) {
      this.minDate = Object(date_util_["clearMilliseconds"])(date);
      this.handleChange();
    },
    handleMaxChange: function handleMaxChange(date) {
      this.maxDate = Object(date_util_["clearMilliseconds"])(date);
      this.handleChange();
    },
    handleChange: function handleChange() {
      if (this.isValidValue([this.minDate, this.maxDate])) {
        this.$refs.minSpinner.selectableRange = [[time_rangevue_type_script_lang_js_minTimeOfDay(this.minDate), this.maxDate]];
        this.$refs.maxSpinner.selectableRange = [[this.minDate, time_rangevue_type_script_lang_js_maxTimeOfDay(this.maxDate)]];
        this.$emit('pick', [this.minDate, this.maxDate], true);
      }
    },
    setMinSelectionRange: function setMinSelectionRange(start, end) {
      this.$emit('select-range', start, end, 'min');
      this.selectionRange = [start, end];
    },
    setMaxSelectionRange: function setMaxSelectionRange(start, end) {
      this.$emit('select-range', start, end, 'max');
      this.selectionRange = [start + this.offset, end + this.offset];
    },
    handleConfirm: function handleConfirm() {
      var visible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      var minSelectableRange = this.$refs.minSpinner.selectableRange;
      var maxSelectableRange = this.$refs.maxSpinner.selectableRange;

      this.minDate = Object(date_util_["limitTimeRange"])(this.minDate, minSelectableRange, this.format);
      this.maxDate = Object(date_util_["limitTimeRange"])(this.maxDate, maxSelectableRange, this.format);

      this.$emit('pick', [this.minDate, this.maxDate], visible);
    },
    adjustSpinners: function adjustSpinners() {
      this.$refs.minSpinner.adjustSpinners();
      this.$refs.maxSpinner.adjustSpinners();
    },
    changeSelectionRange: function changeSelectionRange(step) {
      var list = this.showSeconds ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];
      var mapping = ['hours', 'minutes'].concat(this.showSeconds ? ['seconds'] : []);
      var index = list.indexOf(this.selectionRange[0]);
      var next = (index + step + list.length) % list.length;
      var half = list.length / 2;
      if (next < half) {
        this.$refs.minSpinner.emitSelectRange(mapping[next]);
      } else {
        this.$refs.maxSpinner.emitSelectRange(mapping[next - half]);
      }
    },
    isValidValue: function isValidValue(date) {
      return Array.isArray(date) && Object(date_util_["timeWithinRange"])(this.minDate, this.$refs.minSpinner.selectableRange) && Object(date_util_["timeWithinRange"])(this.maxDate, this.$refs.maxSpinner.selectableRange);
    },
    handleKeydown: function handleKeydown(event) {
      var keyCode = event.keyCode;
      var mapping = { 38: -1, 40: 1, 37: -1, 39: 1

        // Left or Right
      };if (keyCode === 37 || keyCode === 39) {
        var step = mapping[keyCode];
        this.changeSelectionRange(step);
        event.preventDefault();
        return;
      }

      // Up or Down
      if (keyCode === 38 || keyCode === 40) {
        var _step = mapping[keyCode];
        this.spinner.scrollDown(_step);
        event.preventDefault();
        return;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue?vue&type=script&lang=js&
 /* harmony default export */ var panel_time_rangevue_type_script_lang_js_ = (time_rangevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/date-picker/src/panel/time-range.vue





/* normalize component */

var time_range_component = normalizeComponent(
  panel_time_rangevue_type_script_lang_js_,
  time_rangevue_type_template_id_686d255b_render,
  time_rangevue_type_template_id_686d255b_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var time_range = (time_range_component.exports);
// CONCATENATED MODULE: ./packages/date-picker/src/picker/time-picker.js




/* harmony default export */ var time_picker = ({
  mixins: [picker],

  name: 'FksTimePicker',

  props: {
    isRange: Boolean,
    arrowControl: Boolean
  },

  data: function data() {
    return {
      type: ''
    };
  },


  watch: {
    isRange: function isRange(_isRange) {
      if (this.picker) {
        this.unmountPicker();
        this.type = _isRange ? 'timerange' : 'time';
        this.panel = _isRange ? time_range : panel_time;
        this.mountPicker();
      } else {
        this.type = _isRange ? 'timerange' : 'time';
        this.panel = _isRange ? time_range : panel_time;
      }
    }
  },

  created: function created() {
    this.type = this.isRange ? 'timerange' : 'time';
    this.panel = this.isRange ? time_range : panel_time;
  }
});
// CONCATENATED MODULE: ./packages/time-picker/index.js


/* istanbul ignore next */
time_picker.install = function (Vue) {
  Vue.component(time_picker.name, time_picker);
};

/* harmony default export */ var packages_time_picker = (time_picker);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/popconfirm/src/main.vue?vue&type=template&id=6780302c&
var mainvue_type_template_id_6780302c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-popover",
    _vm._b(
      {
        attrs: { trigger: "click" },
        model: {
          value: _vm.visible,
          callback: function ($$v) {
            _vm.visible = $$v
          },
          expression: "visible",
        },
      },
      "fks-popover",
      _vm.$attrs,
      false
    ),
    [
      _vm.visible
        ? _c("div", { staticClass: "fks-popconfirm" }, [
            _c("p", { staticClass: "fks-popconfirm__main" }, [
              !_vm.hideIcon
                ? _c("i", {
                    staticClass: "fks-popconfirm__icon",
                    class: _vm.icon,
                    style: { color: _vm.iconColor },
                  })
                : _vm._e(),
              _vm._v("\n      " + _vm._s(_vm.title) + "\n    "),
            ]),
            _c(
              "div",
              { staticClass: "fks-popconfirm__action" },
              [
                _c(
                  "fks-button",
                  {
                    attrs: { size: "mini", type: _vm.cancelButtonType },
                    on: { click: _vm.cancel },
                  },
                  [_vm._v(_vm._s(_vm.cancelButtonText))]
                ),
                _c(
                  "fks-button",
                  {
                    attrs: { size: "mini", type: _vm.confirmButtonType },
                    on: { click: _vm.confirm },
                  },
                  [_vm._v(_vm._s(_vm.confirmButtonText))]
                ),
              ],
              1
            ),
          ])
        : _vm._e(),
      _vm._t("reference", null, { slot: "reference" }),
    ],
    2
  )
}
var mainvue_type_template_id_6780302c_staticRenderFns = []
mainvue_type_template_id_6780302c_render._withStripped = true


// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue?vue&type=template&id=6780302c&

// EXTERNAL MODULE: external "fawkes-lib/lib/popover"
var popover_ = __webpack_require__(52);
var popover_default = /*#__PURE__*/__webpack_require__.n(popover_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/popconfirm/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var mainvue_type_script_lang_js_ = ({
  name: "FksPopconfirm",
  props: {
    title: {
      type: String
    },
    confirmButtonText: {
      type: String,
      default: Object(lib_locale_["t"])("fks.popconfirm.confirmButtonText")
    },
    cancelButtonText: {
      type: String,
      default: Object(lib_locale_["t"])("fks.popconfirm.cancelButtonText")
    },
    confirmButtonType: {
      type: String,
      default: "primary"
    },
    cancelButtonType: {
      type: String,
      default: "text"
    },
    icon: {
      type: String,
      default: "fks-icon-question"
    },
    iconColor: {
      type: String,
      default: "#f90"
    },
    hideIcon: {
      type: Boolean,
      default: false
    }
  },
  components: {
    FksPopover: popover_default.a,
    FksButton: button_default.a
  },
  data: function data() {
    return {
      visible: false
    };
  },

  methods: {
    confirm: function confirm() {
      this.visible = false;
      this.$emit("onConfirm");
    },
    cancel: function cancel() {
      this.visible = false;
      this.$emit("onCancel");
    }
  }
});
// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/popconfirm/src/main.vue





/* normalize component */

var main_component = normalizeComponent(
  src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_6780302c_render,
  mainvue_type_template_id_6780302c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var main = (main_component.exports);
// CONCATENATED MODULE: ./packages/popconfirm/index.js


/* istanbul ignore next */
main.install = function (Vue) {
  Vue.component(main.name, main);
};

/* harmony default export */ var popconfirm = (main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/affix/src/index.vue?vue&type=template&id=48058b9f&
var srcvue_type_template_id_48058b9f_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { ref: "root", staticClass: "fks-affix", style: _vm.rootStyle },
    [
      _c(
        "div",
        {
          class: { "fks-affix--fixed": _vm.state.fixed },
          style: _vm.affixStyle,
        },
        [_vm._t("default")],
        2
      ),
    ]
  )
}
var srcvue_type_template_id_48058b9f_staticRenderFns = []
srcvue_type_template_id_48058b9f_render._withStripped = true


// CONCATENATED MODULE: ./packages/affix/src/index.vue?vue&type=template&id=48058b9f&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/affix/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//




/* harmony default export */ var srcvue_type_script_lang_js_ = ({
  name: 'FksAffix',
  props: {
    zIndex: {
      type: Number,
      default: 100
    },
    target: {
      type: String,
      default: ''
    },
    offset: {
      type: Number,
      default: 0
    },
    position: {
      type: String,
      default: 'top'
    }
  },
  emits: ['scroll', 'change'],
  data: function data() {
    return {
      root: {},
      scrollContainer: {},
      targett: {},
      state: {
        fixed: false,
        height: 0, // height of root
        width: 0, // width of root
        scrollTop: 0, // scrollTop of documentElement
        clientHeight: 0, // clientHeight of documentElement
        transform: 0
      }
    };
  },

  computed: {
    rootStyle: function rootStyle() {
      return {
        height: this.state.fixed ? this.state.height + 'px' : '',
        width: this.state.fixed ? this.state.width + 'px' : ''
      };
    },
    affixStyle: function affixStyle() {
      if (!this.state.fixed) {
        return;
      }
      var offset = this.offset ? this.offset + 'px' : 0;
      var transform = this.state.transform ? 'translateY(' + this.state.transform + 'px)' : '';

      return {
        height: this.state.height + 'px',
        width: this.state.width + 'px',
        top: this.position === 'top' ? offset : '',
        bottom: this.position === 'bottom' ? offset : '',
        transform: transform,
        zIndex: this.zIndex
      };
    }
  },
  mounted: function mounted() {
    if (this.target) {
      this.targett.value = document.querySelector(this.target);
      if (!this.targett.value) {
        throw new Error('target is not existed: ' + this.target);
      }
    } else {
      this.$set(this.targett, 'value', document.documentElement);
    }

    this.scrollContainer.value = Object(dom_["getScrollContainer"])(this.$refs.root);

    Object(dom_["on"])(this.scrollContainer.value, 'scroll', this.onScroll);

    Object(resize_event_["addResizeListener"])(this.$refs.root, this.updateState);
  },

  methods: {
    updateState: function updateState() {
      var rootRect = this.$refs.root.getBoundingClientRect();

      var targetRect = this.targett.value.getBoundingClientRect();
      this.state.height = rootRect.height;
      this.state.width = rootRect.width;
      this.state.scrollTop = this.scrollContainer.value === window ? document.documentElement.scrollTop : this.scrollContainer.value.scrollTop;
      this.state.clientHeight = document.documentElement.clientHeight;
      if (this.position === 'top') {
        if (this.target) {
          var difference = targetRect.bottom - this.offset - this.state.height;
          this.state.fixed = this.offset > rootRect.top && targetRect.bottom > 0;
          this.state.transform = difference < 0 ? difference : 0;
        } else {
          this.state.fixed = this.offset > rootRect.top;
        }
      } else {
        if (this.target) {
          var _difference = this.state.clientHeight - targetRect.top - this.offset - this.state.height;
          this.state.fixed = this.state.clientHeight - this.offset < rootRect.bottom && this.state.clientHeight > targetRect.top;
          this.state.transform = _difference < 0 ? -_difference : 0;
        } else {
          this.state.fixed = this.state.clientHeight - this.offset < rootRect.bottom;
        }
      }
    },
    onScroll: function onScroll() {
      this.updateState();
      this.$emit('scroll', {
        scrollTop: this.state.scrollTop,
        fixed: this.state.fixed
      });
    }
  },
  watch: {
    'state.fixed': function stateFixed(val) {
      this.$emit('change', val);
    }
  },
  beforeMount: function beforeMount() {
    Object(dom_["off"])(this.scrollContainer.value, 'scroll', this.onScroll);
    Object(resize_event_["removeResizeListener"])(this.$refs.root, this.updateState);
  }
});
// CONCATENATED MODULE: ./packages/affix/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var affix_srcvue_type_script_lang_js_ = (srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/affix/src/index.vue





/* normalize component */

var affix_src_component = normalizeComponent(
  affix_srcvue_type_script_lang_js_,
  srcvue_type_template_id_48058b9f_render,
  srcvue_type_template_id_48058b9f_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src = (affix_src_component.exports);
// CONCATENATED MODULE: ./packages/affix/index.js
/*
 * @Author: gao_m3
 * @Date: 2021-03-31 09:35:31
 * @LastEditors: 
 * @LastEditTime: 2021-03-31 09:36:43
 * @Descripttion: 
 */



src.install = function (Vue) {
  Vue.component(src.name, src);
};

/* harmony default export */ var affix = (src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/chunk-upload/src/index.vue?vue&type=template&id=38217788&
var srcvue_type_template_id_38217788_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-chunk-upload" },
    [
      _c(
        "div",
        { attrs: { id: "picker" } },
        [_vm._t("default", null, { disabled: _vm.uploadDisabled })],
        2
      ),
      this.fileArr.length || this.echoFileArr.length
        ? _c("upload-list", {
            attrs: {
              fileArr: _vm.fileArr,
              echoFileArr: _vm.echoFileArr,
              percentage: _vm.percentage,
              proColor: _vm.proColor,
              disabled: _vm.uploadDisabled,
              showDownload: _vm.showDownload,
              handleDownload: _vm.onDownload,
            },
            on: {
              "update:fileArr": function ($event) {
                _vm.fileArr = $event
              },
              "update:file-arr": function ($event) {
                _vm.fileArr = $event
              },
              "update:echoFileArr": function ($event) {
                _vm.echoFileArr = $event
              },
              "update:echo-file-arr": function ($event) {
                _vm.echoFileArr = $event
              },
              "update:percentage": function ($event) {
                _vm.percentage = $event
              },
              cancelFile: _vm.cancelFile,
            },
          })
        : _vm._e(),
    ],
    1
  )
}
var srcvue_type_template_id_38217788_staticRenderFns = []
srcvue_type_template_id_38217788_render._withStripped = true


// CONCATENATED MODULE: ./packages/chunk-upload/src/index.vue?vue&type=template&id=38217788&

// EXTERNAL MODULE: external "webuploader"
var external_webuploader_ = __webpack_require__(27);
var external_webuploader_default = /*#__PURE__*/__webpack_require__.n(external_webuploader_);

// EXTERNAL MODULE: external "js-md5"
var external_js_md5_ = __webpack_require__(53);
var external_js_md5_default = /*#__PURE__*/__webpack_require__.n(external_js_md5_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/chunk-upload/src/UploadList/index.vue?vue&type=template&id=2bb6bd40&
var UploadListvue_type_template_id_2bb6bd40_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _vm.fileArr.length || _vm.echoFileArr.length
      ? _c(
          "ul",
          { staticClass: "upload-list" },
          [
            _vm._l(_vm.echoFileArr, function (fileObj, index) {
              return _c(
                "li",
                { key: fileObj.id, staticClass: "list-fileObj" },
                [
                  _c(
                    "a",
                    { staticClass: "fileObj-a" },
                    [
                      _c("fks-icon", {
                        staticStyle: {
                          "font-size": "25px",
                          "margin-right": "7px",
                        },
                        attrs: { "icon-class": _vm.fileType(fileObj.fileName) },
                      }),
                      _c("div", { staticClass: "info-box" }, [
                        _c("div", { staticClass: "file-name" }, [
                          _vm._v(
                            "\n            " +
                              _vm._s(fileObj.fileName) +
                              "\n          "
                          ),
                        ]),
                        _c("div", { staticClass: "file-size" }, [
                          _vm._v(
                            _vm._s(_vm._f("formatFileSize")(fileObj.size))
                          ),
                        ]),
                      ]),
                    ],
                    1
                  ),
                  !_vm.disabled
                    ? _c("i", {
                        staticClass: "fks-icon-close isActive",
                        on: {
                          click: function ($event) {
                            return _vm.deleteEchoFile(fileObj, index)
                          },
                        },
                      })
                    : _vm._e(),
                  _vm.showDownload
                    ? _c("i", {
                        staticClass: "fks-icon-download",
                        on: {
                          click: function ($event) {
                            return _vm.handleDownload(fileObj)
                          },
                        },
                      })
                    : _vm._e(),
                ]
              )
            }),
            _vm._l(_vm.fileArr, function (fileObj, index) {
              return _c("li", { key: index, staticClass: "list-fileObj" }, [
                _c(
                  "a",
                  { staticClass: "fileObj-a" },
                  [
                    _c("fks-icon", {
                      staticStyle: {
                        "font-size": "25px",
                        "margin-right": "7px",
                      },
                      attrs: { "icon-class": _vm.fileType(fileObj.name) },
                    }),
                    _c("div", { staticClass: "info-box" }, [
                      _c("div", { staticClass: "file-name" }, [
                        _vm._v(
                          "\n            " +
                            _vm._s(fileObj.name) +
                            "\n          "
                        ),
                      ]),
                      _c("div", { staticClass: "file-size" }, [
                        _vm._v(_vm._s(_vm._f("formatFileSize")(fileObj.size))),
                      ]),
                    ]),
                  ],
                  1
                ),
                _vm.percentage[_vm.getKey(fileObj)] < 100
                  ? _c(
                      "div",
                      { staticClass: "fileObj-per" },
                      [
                        _c("fks-progress", {
                          attrs: {
                            percentage: _vm.percentage[_vm.getKey(fileObj)],
                            "show-text": false,
                            "stroke-width": 4,
                            color: _vm.proColor,
                          },
                        }),
                      ],
                      1
                    )
                  : _vm._e(),
                !_vm.disabled
                  ? _c("i", {
                      staticClass: "fks-icon-close isActive",
                      on: {
                        click: function ($event) {
                          return _vm.close(fileObj, index)
                        },
                      },
                    })
                  : _vm._e(),
                _vm.showDownload && _vm.percentage[_vm.getKey(fileObj)] === 100
                  ? _c("i", {
                      staticClass: "fks-icon-download",
                      on: {
                        click: function ($event) {
                          return _vm.handleDownload(fileObj)
                        },
                      },
                    })
                  : _vm._e(),
              ])
            }),
          ],
          2
        )
      : _vm._e(),
  ])
}
var UploadListvue_type_template_id_2bb6bd40_staticRenderFns = []
UploadListvue_type_template_id_2bb6bd40_render._withStripped = true


// CONCATENATED MODULE: ./packages/chunk-upload/src/UploadList/index.vue?vue&type=template&id=2bb6bd40&

// EXTERNAL MODULE: external "axios"
var external_axios_ = __webpack_require__(31);
var external_axios_default = /*#__PURE__*/__webpack_require__.n(external_axios_);

// EXTERNAL MODULE: external "qs"
var external_qs_ = __webpack_require__(54);
var external_qs_default = /*#__PURE__*/__webpack_require__.n(external_qs_);

// EXTERNAL MODULE: external "crypto-js/hmac-sha1"
var hmac_sha1_ = __webpack_require__(42);
var hmac_sha1_default = /*#__PURE__*/__webpack_require__.n(hmac_sha1_);

// EXTERNAL MODULE: external "crypto-js/enc-base64"
var enc_base64_ = __webpack_require__(43);
var enc_base64_default = /*#__PURE__*/__webpack_require__.n(enc_base64_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/types"
var types_ = __webpack_require__(17);

// CONCATENATED MODULE: ./src/utils/util.js
var utils_util_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };




var util_hasOwnProperty = Object.prototype.hasOwnProperty;

function noop() {}

function util_hasOwn(obj, key) {
  return util_hasOwnProperty.call(obj, key);
}

function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to;
}
/**
 * @description 生成UUID
 * @param {Integer} len uuid长度
 * @param {Integer} radix uuid基数
 * @returns {String} UUID
 */
function uuid(len, radix) {
  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');
  var uuid = [],
      i = void 0;
  radix = radix || chars.length;

  if (len) {
    // Compact form
    for (i = 0; i < len; i++) {
      uuid[i] = chars[0 | Math.random() * radix];
    }
  } else {
    // rfc4122, version 4 form
    var r = void 0;
    // rfc4122 requires these characters
    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';
    uuid[14] = '4';
    // Fill in random data.  At i==19 set the high bits of clock sequence as
    // per rfc4122, sec. 4.1.5
    for (i = 0; i < 36; i++) {
      if (!uuid[i]) {
        r = 0 | Math.random() * 16;
        uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];
      }
    }
  }
  return uuid.join('');
}

function toObject(arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res;
}

var getValueByPath = function getValueByPath(object, prop) {
  prop = prop || '';
  var paths = prop.split('.');
  var current = object;
  var result = null;
  for (var i = 0, j = paths.length; i < j; i++) {
    var path = paths[i];
    if (!current) break;

    if (i === j - 1) {
      result = current[path];
      break;
    }
    current = current[path];
  }
  return result;
};

function getPropByPath(obj, path, strict) {
  var tempObj = obj;
  path = path.replace(/\[(\w+)\]/g, '.$1');
  path = path.replace(/^\./, '');

  var keyArr = path.split('.');
  var i = 0;
  for (var len = keyArr.length; i < len - 1; ++i) {
    if (!tempObj && !strict) break;
    var key = keyArr[i];
    if (key in tempObj) {
      tempObj = tempObj[key];
    } else {
      if (strict) {
        throw new Error('please transfer a valid prop path to form item!');
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i],
    v: tempObj ? tempObj[keyArr[i]] : null
  };
}

var generateId = function generateId() {
  return Math.floor(Math.random() * 10000);
};

var util_valueEquals = function valueEquals(a, b) {
  // see: https://stackoverflow.com/questions/3115982/how-to-check-if-two-arrays-are-equal-with-javascript
  if (a === b) return true;
  if (!(a instanceof Array)) return false;
  if (!(b instanceof Array)) return false;
  if (a.length !== b.length) return false;
  for (var i = 0; i !== a.length; ++i) {
    if (a[i] !== b[i]) return false;
  }
  return true;
};

var escapeRegexpString = function escapeRegexpString() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return String(value).replace(/[|\\{}()[\]^$+*?.]/g, '\\$&');
};

// TODO: use native Array.find, Array.findIndex when IE support is dropped
var arrayFindIndex = function arrayFindIndex(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return i;
    }
  }
  return -1;
};

var arrayFind = function arrayFind(arr, pred) {
  var idx = arrayFindIndex(arr, pred);
  return idx !== -1 ? arr[idx] : undefined;
};
var treeFind = function treeFind(arr, pred) {
  for (var i = 0; i !== arr.length; ++i) {
    if (pred(arr[i])) {
      return arr[i];
    } else if (Array.isArray(arr[i].children) && arr[i].children.length > 0) {
      var res = treeFind(arr[i].children, pred);
      if (res) return res;
    }
  }
  return undefined;
};
// coerce truthy value to array
var coerceTruthyValueToArray = function coerceTruthyValueToArray(val) {
  if (Array.isArray(val)) {
    return val;
  } else if (val) {
    return [val];
  } else {
    return [];
  }
};

var util_isIE = function isIE() {
  return !external_vue_default.a.prototype.$isServer && !isNaN(Number(document.documentMode));
};

var util_isEdge = function isEdge() {
  return !external_vue_default.a.prototype.$isServer && navigator.userAgent.indexOf('Edge') > -1;
};

var util_isFirefox = function isFirefox() {
  return !external_vue_default.a.prototype.$isServer && !!window.navigator.userAgent.match(/firefox/i);
};

var autoprefixer = function autoprefixer(style) {
  if ((typeof style === 'undefined' ? 'undefined' : utils_util_typeof(style)) !== 'object') return style;
  var rules = ['transform', 'transition', 'animation'];
  var prefixes = ['ms-', 'webkit-'];
  rules.forEach(function (rule) {
    var value = style[rule];
    if (rule && value) {
      prefixes.forEach(function (prefix) {
        style[prefix + rule] = value;
      });
    }
  });
  return style;
};

var kebabCase = function kebabCase(str) {
  var hyphenateRE = /([^-])([A-Z])/g;
  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
};

var util_capitalize = function capitalize(str) {
  if (!Object(types_["isString"])(str)) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var util_looseEqual = function looseEqual(a, b) {
  var isObjectA = Object(types_["isObject"])(a);
  var isObjectB = Object(types_["isObject"])(b);
  if (isObjectA && isObjectB) {
    return JSON.stringify(a) === JSON.stringify(b);
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
};

var arrayEquals = function arrayEquals(arrayA, arrayB) {
  arrayA = arrayA || [];
  arrayB = arrayB || [];

  if (arrayA.length !== arrayB.length) {
    return false;
  }

  for (var i = 0; i < arrayA.length; i++) {
    if (!util_looseEqual(arrayA[i], arrayB[i])) {
      return false;
    }
  }

  return true;
};

var util_isEqual = function isEqual(value1, value2) {
  if (Array.isArray(value1) && Array.isArray(value2)) {
    return arrayEquals(value1, value2);
  }
  return util_looseEqual(value1, value2);
};

var util_isEmpty = function isEmpty(val) {
  // null or undefined
  if (val == null) return true;

  if (typeof val === 'boolean') return false;

  if (typeof val === 'number') return !val;

  if (val instanceof Error) return val.message === '';

  switch (Object.prototype.toString.call(val)) {
    // String or Array
    case '[object String]':
    case '[object Array]':
      return !val.length;

    // Map or Set or File
    case '[object File]':
    case '[object Map]':
    case '[object Set]':
      {
        return !val.size;
      }
    // Plain Object
    case '[object Object]':
      {
        return !Object.keys(val).length;
      }
  }

  return false;
};

function rafThrottle(fn) {
  var locked = false;
  return function () {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (locked) return;
    locked = true;
    window.requestAnimationFrame(function (_) {
      fn.apply(_this, args);
      locked = false;
    });
  };
}

function objToArray(obj) {
  if (Array.isArray(obj)) {
    return obj;
  }
  return util_isEmpty(obj) ? [] : [obj];
}
// CONCATENATED MODULE: ./src/utils/sign.js
var sign_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Author: gao_m3
 * @Date: 2021-03-29 17:51:08
 * @LastEditors: wei_jt@ecidi.com
 * @LastEditTime: 2022-03-31 09:36:48
 * @Descripttion: 
 */




var CLIENT = 'fawkes'; //'dca84d27aeaa6783b6405fd222a2897a'//应用id
var CLIENT_SECRET = 'fawkes_secret'; //'73af5c8eb55cd81e696f97ec8151cf5eafa62ce2659c0139ebda3dec41e18594'
var dayjs = __webpack_require__(45);
//获取加密后的url参数字符串
var sign_getUrl = function getUrl(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 30;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (util_isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  var encodeSign = encodeURIComponent(sign);
  return paramstr + "&sign=" + encodeSign;
};

//获取加密后的参数对象
var sign_getSign = function getSign(rest) {
  var Params = "";
  var ts = dayjs().unix();
  var ttl = 180;
  var obj = rest;
  Params += "ts=" + ts + "&ttl=" + ttl + "&uid=" + CLIENT + (util_isEmpty(obj) ? '' : "&" + objTransUrlParams(obj));
  var ParamArr = sortUrlParams(Params);
  ParamArr = objKeySort(ParamArr);
  var paramstr = [];
  for (var i in ParamArr) {
    paramstr.push(i + "=" + ParamArr[i]);
  }
  paramstr = paramstr.join("&");
  var signWordArray = hmac_sha1_default()(paramstr, CLIENT_SECRET);
  var sign = enc_base64_default.a.stringify(signWordArray);
  return sign_extends({ sign: sign, ts: ts, ttl: ttl, uid: CLIENT }, ParamArr);
};

var objKeySort = function objKeySort(obj) {
  var newkey = Object.keys(obj).sort();
  var newObj = {};
  for (var i = 0; i < newkey.length; i++) {
    newObj[newkey[i]] = obj[newkey[i]];
  }
  return newObj;
};

var sortUrlParams = function sortUrlParams(str) {
  if (typeof str !== 'string') {
    return {};
  }
  var paramObj = {};
  var paramArr = decodeURI(str).split('&');
  // let paramArr = str.split('&');
  for (var i = 0; i < paramArr.length; i++) {
    var tmp = paramArr[i].split('=');
    var key = tmp[0];
    var value = tmp[1] || "";
    //if (typeof value === 'string' && isNaN(Number(value)) === false && value !== "") {
    //  value = Number(value);
    //}
    if (typeof paramObj[key] === 'undefined') {
      paramObj[key] = value;
    } else {
      var newValue = Array.isArray(paramObj[key]) ? paramObj[key] : [paramObj[key]];
      newValue.push(value);
      paramObj[key] = newValue;
    }
  }
  return paramObj;
};

var objTransUrlParams = function objTransUrlParams(obj) {
  var params = [];
  Object.keys(obj).forEach(function (key) {
    var value = obj[key];
    if (typeof value === 'undefined') {
      value = '';
    }
    params.push([key, value].join('='));
  });
  return params.join('&');
};


// CONCATENATED MODULE: ./src/utils/request.js
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-05 16:35:39
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-10 15:06:30
 * @Description: 请求配置
 */

 //qs一般装了axios就自带不用再装，如果没有，自己安装下
 //签名校验

//开发环境添加代理前缀
var request_prefix = '../api';
if (false) {}

var request = external_axios_default.a.create({
  baseURL: request_prefix, //这里配置你自己的url
  transformRequest: [function (data) {
    data = external_qs_default.a.stringify(data); //序列化参数
    return data;
  }],
  withCredentials: true // 允许携带cookie
});
var pending = []; //声明一个数组用于存储每个ajax请求的取消函数和ajax标识

var cancelToken = external_axios_default.a.CancelToken;

var removePending = function removePending(config) {
  for (var p in pending) {
    if (config.remove) {
      //当当前请求在数组中存在时执行函数体
      pending[p].f(); //执行取消操作
      pending.splice(p, 1); //把这条记录从数组中移除
    }
  }
};
//添加请求拦截器
request.interceptors.request.use(function (config) {
  removePending(config); //在一个ajax发送前执行一下取消操作
  config.cancelToken = new cancelToken(function (c) {
    //这里的ajax标识我是用请求地址&请求方式拼接的字符串，当然你可以选择其他的一些方式
    if (config.remove) {
      pending.push({
        u: config.url + '&' + config.method,
        f: c
      });
    }
  });
  config.params = sign_getSign(config.params);
  // config.headers['Fawkes-Auth'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6ImZhd2tlcyIsInVzZXJfbmFtZSI6IndlaV9qdCIsInNleCI6IueUtyIsInVzZXJObyI6IjIwMTgyNzMiLCJ1c2VyTmFtZSI6IndlaV9qdCIsImNsaWVudF9pZCI6ImZhd2tlcyIsImxpY2Vuc2UiOiJwb3dlcmVkIGJ5IGZhd2tlcyIsImF1ZCI6WyJvYXV0aDItcmVzb3VyY2UiLCJvYXV0aDItc2VydmVyIl0sInBob25lIjoiMTM3MzU4OTk3NDEiLCJzY29wZSI6WyJhbGwiXSwidGVuYW50SWQiOjEwMDAwMCwidXNlckZ1bGxuYW1lIjoi6Z-m6ZSm5rabIiwiaWQiOiIxMTkwMTUzNDcyMTkyODkyOTg1IiwiZXhwIjoxNTk5NzE3NjA0LCJqdGkiOiI0ODM5OGRiYy03OWM2LTQ5NDUtYTI4MC1mZDdkOWMzYTY5YzciLCJlbWFpbCI6IndlaV9qdEBlY2lkaS5jb20ifQ.LqK4UszX71C89SpMSo6MTKtfWB2v5ow0-jjrUZb3iiA'

  return config;
}, function (error) {
  return Promise.reject(error);
});
//添加响应拦截器
request.interceptors.response.use(function (res) {
  removePending(res.config); //在一个ajax响应后再执行一下取消操作，把已经完成的请求从pending中移除
  return res.data;
}, function (error) {
  return {
    // data: {
    //   errmsg: error.message
    // }
  };
});
/* harmony default export */ var utils_request = (request);
// CONCATENATED MODULE: ./packages/chunk-upload/src/UploadList/api.js
/*
 * @Description: 
 * @Author: ye_xf
 * @Date: 2020-09-28 18:10:08
 * @LastEditTime: 2021-09-03 10:44:03
 * @LastEditors: Please set LastEditors
 * @Reference: 
 */



//根据文件token和文件组grouptoken删除文件，token删除单文件，grouptoken删除文件组
function deleteFile(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/file",
        method: "delete",
        data: data,
        transformRequest: [function (data) {
            return JSON.stringify(data);
        }],
        headers: {
            'Content-Type': 'application/json;charset=UTF-8'
        }
    });
}
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/chunk-upload/src/UploadList/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



//文件类型对应图标对象
var fileTypeIcon = {
  jpg: 'doc_img',
  jpeg: 'doc_img',
  png: 'doc_img',
  gif: 'doc_img',
  bmp: 'doc_img',
  txt: 'doc_txt',
  css: 'doc_code',
  html: 'doc_html',
  xlsx: 'doc_excel',
  exe: 'doc_exe',
  iso: 'doc_iso',
  ppt: 'doc_ppt',
  pptx: 'doc_ppt',
  zip: 'doc_zip',
  rar: 'doc_zip',
  pdf: 'doc_pdf',
  doc: 'doc_word',
  docx: 'doc_word',
  dir: 'doc_folder'
};

/* harmony default export */ var UploadListvue_type_script_lang_js_ = ({
  name: 'UploadList',
  components: {},
  props: {
    //已选文件数组
    fileArr: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    //回显文件数组
    echoFileArr: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    //文件的实时上传进度
    percentage: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    //进度条颜色
    proColor: {
      type: String,
      default: 'rgb(64, 158, 255)'
    },
    disabled: {
      type: Boolean,
      default: false
    },
    showDownload: {
      type: Boolean,
      default: true
    },
    handleDownload: {
      type: Function,
      default: function _default() {}
    }
  },
  data: function data() {
    return {};
  },

  filters: {
    //格式化文件大小
    formatFileSize: function formatFileSize(value) {
      if (value == null || value == '' || value == '0') {
        return '-';
      }
      var unitArr = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
      var index = 0;
      var srcsize = parseFloat(value);
      index = Math.floor(Math.log(srcsize) / Math.log(1024));
      var size = srcsize / Math.pow(1024, index);
      size = size.toFixed(2); // 保留的小数位数
      return size + unitArr[index];
    }
  },
  watch: {},
  computed: {},
  methods: {
    //根据文件类型确定图标样式
    fileType: function fileType(filename) {
      var fileA = filename.split('.');
      var type = 'doc_blank';
      Object.keys(fileTypeIcon).forEach(function (key) {
        if (key == fileA[fileA.length - 1].toLowerCase()) {
          type = fileTypeIcon[key];
        }
      });
      return type;
    },
    getKey: function getKey(fileObj) {
      return fileObj.name + '&' + fileObj.lastModifiedDate;
    },

    //取消分片上传/删除已上传文件
    close: function close(fileObj, index) {
      var _this = this;

      var key = this.getKey(fileObj);

      if (this.percentage[key] < 100) {
        this.$emit('cancelFile', fileObj); //分片上传取消
      } else {
        var data = {
          f8s: new Array(fileObj.fileToken)
        };

        deleteFile(data).then(function (res) {
          if (res.status) {
            _this.fileArr.splice(index, 1);
            _this.$emit('update:fileArr', _this.fileArr);

            delete _this.percentage[key];
            _this.$emit('update:percentage', _this.percentage);
          }
        }).catch(function (err) {
          _this.$message.error('文件删除失败：' + err);
        });
      }
    },

    //删除回显的文件
    deleteEchoFile: function deleteEchoFile(fileObj, index) {
      var _this2 = this;

      var data = {
        f8s: new Array(fileObj.fileToken)
      };

      deleteFile(data).then(function (res) {
        if (res.status) {
          _this2.echoFileArr.splice(index, 1);
          _this2.$emit('update:echoFileArr', _this2.echoFileArr);
        }
      }).catch(function (err) {
        _this2.$message.error('文件删除失败：' + err);
      });
    }
  },
  created: function created() {},
  mounted: function mounted() {}
});
// CONCATENATED MODULE: ./packages/chunk-upload/src/UploadList/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_UploadListvue_type_script_lang_js_ = (UploadListvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/chunk-upload/src/UploadList/index.vue





/* normalize component */

var UploadList_component = normalizeComponent(
  src_UploadListvue_type_script_lang_js_,
  UploadListvue_type_template_id_2bb6bd40_render,
  UploadListvue_type_template_id_2bb6bd40_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var UploadList = (UploadList_component.exports);
// CONCATENATED MODULE: ./packages/chunk-upload/src/api.js
var api_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/*
 * @Description: 
 * @Author: ye_xf
 * @Date: 2020-09-28 18:10:08
 * @LastEditTime: 2022-10-11 15:48:53
 * @LastEditors: wei_jt@ecidi.com
 * @Reference: 
 */


//获取当前文件的上传情况
function getUploadInfo(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/secondPass",
        method: "post",
        params: api_extends({}, data)
    });
}

//获取当前上传文件唯一标识
function getUploadId(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/uploadId",
        method: "get",
        params: api_extends({}, data)
    });
}

//获取当前文件已上传的分片列表
function getFileBlockList(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/parts",
        method: "get",
        params: api_extends({}, data)
    });
}

//分片上传
// export function uploadFileBlock(data) {
//     return request({
//         url: "/sys-storage/bigFile",
//         method: "post",
//         data
//     });
// }

//取消上传，清空相关信息
function deleteFileInfo(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: '/sys-storage/abort/burst',
        method: 'delete',
        params: api_extends({}, data)
    });
}

//分片上传完成，合并文件
function mergeFile(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/bigFile/together",
        method: "post",
        data: data,
        transformRequest: [function (data) {
            return JSON.stringify(data);
        }],
        headers: {
            'Content-Type': 'application/json;charset=UTF-8'
        }
    });
}

//查询文件组信息
function getGroupFileInfo(data) {
    return (external_vue_default.a.prototype.$axios || utils_request)({
        url: "/sys-storage/file",
        method: "post",
        data: data,
        transformRequest: [function (data) {
            return JSON.stringify(data);
        }],
        headers: {
            'Content-Type': 'application/json;charset=UTF-8'
        }
    });
}
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/chunk-upload/src/index.vue?vue&type=script&lang=js&
var srcvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









/* harmony default export */ var chunk_upload_srcvue_type_script_lang_js_ = ({
  name: 'FksChunkUpload',
  mixins: [emitter_default.a],
  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },
  components: {
    UploadList: UploadList
  },
  props: {
    // 文件组标识
    value: {
      type: String,
      default: ''
    },
    // 允许上传的文件类型
    accept: {
      type: Array,
      default: null
    },
    // 文件上传的最大数量
    fileNumLimit: {
      type: Number,
      default: 1
    },
    // 文件大小限制
    fileSingleSizeLimit: {
      type: Number,
      default: null
    },
    // 传递给后端的参数
    info: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    // 是否允许上传时选择多个文件
    isMultiple: {
      type: Boolean,
      default: false
    },
    // 文件分片大小
    fileBlockSize: {
      type: Number,
      default: 100 * 1024 * 1024 // 100M
    },
    minFileSize: {
      type: Number,
      default: 5 * 1024 * 1024
    },
    onDownload: {
      type: Function
    },
    drag: {
      type: Boolean,
      default: false
    },
    dragArea: {
      type: String,
      default: '#drag-area'
    },
    showDownload: {
      type: Boolean,
      default: true
    },
    disabled: {
      type: Boolean,
      default: false
    },
    readonly: {
      type: Boolean,
      default: false
    }

  },
  data: function data() {
    return {
      // window.navigator.onLine：H5新增对象，true表示在线
      isLine: navigator.onLine, // 当前网络状态
      btnId: '#picker', // 上传按钮id
      uploader: '', // webUploader对象
      accessToken: this.$storage.get('access_token'),
      url:  false ? undefined : '../api/sys-storage/bigFile', // 文件上传地址
      paramArr: {}, // 保存文件参数
      fileBlockListObj: {}, // 保存当前已上传的分片文件信息，文件合并时传递给后端
      blockInfoObj: {}, // 断点续传时暂存已上传的分片信息
      fileArr: [], // 已选文件数组
      echoFileArr: [], // 回显文件数组
      percentage: {}, // 上传进度
      md5Obj: {}, // 文件MD5信息
      groupToken: '',
      isPassSecond: {}, // 当前是否处于极速秒传状态
      e9y: '' // 指定文件上传的服务器
    };
  },

  computed: {
    // 格式化文件类型数组
    getAccept: function getAccept() {
      var arrs = this.accept;
      var exteensions = '';
      var mimeTypes = '';
      arrs.forEach(function (value) {
        exteensions += value + ', ';
        mimeTypes += '.' + value + ', ';
      });
      return {
        // 允许的文件格式
        exteensions: exteensions,
        mimeTypes: mimeTypes
      };
    },

    // 上传进度条的颜色
    proColor: function proColor() {
      return this.isLine ? 'rgb(64, 158, 255)' : 'rgb(144, 147, 153)';
    },
    uploadDisabled: function uploadDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },
  watch: {
    isLine: function isLine(val) {
      if (val) {
        this.$emit('lineChange', true);
        this.upload(null); // 重新上传

        // this.getFiles()
      } else {
        this.$emit('lineChange', false);
        this.stop(null); // 暂停上传

        // this.getFiles()
      }
    },

    uploadDisabled: {
      handler: function handler(val) {
        var _this2 = this;

        // 初始化webUploader
        if (!val && !this.uploader) {
          this.$nextTick(function () {
            _this2.initWebUpload();
          });
        }
        var input = document.querySelector(this.btnId + ' input');
        input && (input.disabled = val);
      },

      immediate: true
    }
  },
  methods: {
    // 获取当前网络状态
    getLineStatus: function getLineStatus(e) {
      this.isLine = e.type === 'online';
    },

    // 获取文件key
    getFileKey: function getFileKey(fileObj) {
      return fileObj.name + '&' + fileObj.lastModifiedDate;
    },

    // 获取文件的md5Key
    getMd5Key: function getMd5Key(fileObj) {
      var key = fileObj.name + fileObj.size + fileObj.lastModifiedDate; // 文件名+文件大小+最后修改时间戳

      return new Promise(function (res) {
        var md5Key = external_js_md5_default()(key);
        res(md5Key);
      });
    },

    // 修改暂存的信息
    amendInfo: function amendInfo(fileObj, key, isCancel) {
      var _this3 = this;

      this.reset(); // 重置队列

      this.fileArr.some(function (file, index) {
        if (file === fileObj) {
          _this3.fileArr.splice(index, 1);
          return true; // 中断循环
        }
      });

      delete this.percentage[key];
      delete this.md5Obj[key];
      delete this.fileBlockListObj[key];

      this.blockInfoObj = {};
    },

    // 初始化
    initWebUpload: function initWebUpload() {
      var _this4 = this;

      var dndData = this.drag && this.dragArea ? {
        dnd: this.dragArea,
        disableGlobalDnd: true
      } : {};
      this.uploader = external_webuploader_default.a.create(srcvue_type_script_lang_js_extends({
        auto: true, // 选择文件后自动上传
        // swf: './static/Uploader.swf', //swf文件路径
        server: this.url, // 文件上传地址
        pick: {
          id: this.btnId, // 文件上传的按钮
          multiple: this.isMultiple // 是否允许上传时选择多个文件
          // innerHTML: '上传' //指定按钮文字
        },
        accept: this.accept ? this.getAccept : '', // 允许上传的文件格式
        // threads: 1, //分片上传并发数 默认值：3
        fileNumLimit: this.fileNumLimit, // 限制上传文件总数
        fileSingleSizeLimit: this.fileSingleSizeLimit, // 限制单个上传文件的大小
        chunked: true, // 分片上传
        chunkSize: this.fileBlockSize, // 分片大小 插件默认值：5M
        // chunkRetry: false, //当前分片的最大重传次数 默认值：2
        // prepareNextFile: true, //上传当前文件时预处理下一文件 默认值：false
        duplicate: true, // 重复上传
        formData: { e9y: this.e9y } }, dndData));
      // 当文件被加入到队列前触发
      this.uploader.on('beforeFileQueued', function (fileObj) {
        var key = _this4.getFileKey(fileObj);
        if (_this4.uploadDisabled) {
          return false;
        }
        if (_this4.percentage[key]) {
          _this4.$message.error('相同文件请勿重复上传');
          _this4.$emit('uploadError', 1, fileObj, '相同文件请勿重复上传');
          return false;
        } else if (_this4.fileArr.length + _this4.echoFileArr.length >= _this4.fileNumLimit) {
          _this4.$message.error('上传文件的数量超出限制');
          _this4.$emit('uploadError', 1, fileObj, '上传文件的数量超出限制');
          return false;
        } else if (fileObj.size === 0) {
          _this4.$message.error('请勿上传空文件');
          _this4.$emit('uploadError', 1, fileObj, '请勿上传空文件');
          return false;
        } else if (fileObj.size < _this4.minFileSize) {
          var num = (Math.trunc(_this4.minFileSize / 1024 / 1024 * 100) / 100).toFixed(2);
          _this4.$message.error('\u4E0A\u4F20\u6587\u4EF6\u5927\u5C0F\u9700\u5927\u4E8E' + num + 'MB');
          _this4.$emit('uploadError', 1, fileObj, '\u4E0A\u4F20\u6587\u4EF6\u5927\u5C0F\u9700\u5927\u4E8E' + num + 'MB');
          return false;
        }

        _this4.fileArr.push(fileObj);
        _this4.$set(_this4.percentage, key, 1);
      });

      // 当文件被加入到队列后触发
      this.uploader.on('fileQueued', function (file) {});

      // 文件开始上传前触发，一个文件只会触发一次
      this.uploader.on('uploadStart', function (file) {
        _this4.$emit('uploadStart', file);
      });

      // 当前文件的分片在发送前触发
      this.uploader.on('uploadBeforeSend', function (fileObj, data, headers) {
        headers['Fawkes-Auth'] = _this4.accessToken;
      });

      // 上传过程中触发，更新上传进度
      this.uploader.on('uploadProgress', function (fileObj, progress) {
        var key = _this4.getFileKey(fileObj);
        _this4.$emit('uploadProgress', fileObj, progress);
        var num = Math.round(progress * 100);
        if (_this4.percentage[key] && _this4.percentage[key] > num) {
          return;
        }
        if (num == 100) {
          _this4.$set(_this4.percentage, key, 99);
        } else _this4.$set(_this4.percentage, key, num);
      });

      // 当分片文件上传到服务端响应后触发
      this.uploader.on('uploadAccept', function (fileBlockObj, res) {
        if (!res.status) {
          var _fileObj = fileBlockObj.file; // 获取当前分片的主文件
          var key = _this4.getFileKey(_fileObj);

          _this4.amendInfo(_fileObj, key); // 修改暂存的信息

          _this4.$emit('uploadError', 2, _fileObj, res);
        }
      });

      // 完整文件上传成功时触发：通知后台进行文件合并
      this.uploader.on('uploadSuccess', function (fileObj, response) {
        var key = _this4.getFileKey(fileObj);
        // 容错：处理上传进度误差
        if (_this4.percentage[key] < 100) {
          _this4.percentage[key] = 100;
        }
        // 极速秒传时不需要通知合并
        if (_this4.isPassSecond[key]) {
          _this4.$emit('uploadSuccess', fileObj, '极速秒传成功');
          // this.reset(); // 重置队列
          return;
        }

        var data = {
          e9y: _this4.e9y,
          md5: _this4.md5Obj[key],
          list: _this4.fileBlockListObj[key],
          uploadId: _this4.paramArr[key].uploadId,
          objectName: _this4.paramArr[key].objectName,
          fileName: fileObj.name,
          fileSize: fileObj.size,
          groupToken: _this4.groupToken,
          info: _this4.info
        };
        mergeFile(data).then(function (res) {
          if (res.status) {
            _this4.fileArr.some(function (file, index) {
              if (file === fileObj) {
                _this4.$set(_this4.fileArr[index], 'fileToken', res.data.fileToken);
                return true; // 中断循环
              }
            });

            delete _this4.fileBlockListObj[key];

            _this4.blockInfoObj = {};

            // this.reset(); // 重置队列

            _this4.$emit('uploadSuccess', fileObj, res);
          } else {
            _this4.amendInfo(fileObj, key);
            _this4.$emit('uploadError', 3, fileObj, res);
          }
        }).catch(function (error) {
          _this4.$emit('uploadError', 3, fileObj, error);
        });
      });
      this.uploader.on('uploadFinished', function () {
        _this4.$emit('uploadFinished');
        _this4.reset();
      });
      // 文件上传出错时触发
      this.uploader.on('uploadError', function (fileObj, reason) {
        // 放过断网引起的error
        if (reason && reason.statusText === 'abort') {
          return;
        }

        var key = _this4.getFileKey(fileObj);

        _this4.amendInfo(fileObj, key); // 修改暂存的信息

        _this4.$emit('uploadError', 2, fileObj, reason);
      });

      // 内置错误类型
      this.uploader.on('error', function (type) {
        var errorMessage = void 0;

        if (type === 'F_EXCEED_SIZE') {
          errorMessage = '上传文件的大小不能超过' + _this4.fileSingleSizeLimit / (1024 * 1000) + 'M';
        } else if (type === 'Q_EXCEED_NUM_LIMIT') {
          errorMessage = '文件并发上传数量超出限制';
        } else if (type === 'Q_TYPE_DENIED') {
          errorMessage = '上传文件的类型超出限制';
        } else {
          errorMessage = '文件上传出错，请检查后重新上传';
        }

        var fileObj = _this4.fileArr.pop(); // 删除已选文件数组中新增的文件

        var key = _this4.getFileKey(fileObj);
        delete _this4.percentage[key];

        _this4.$emit('uploadError', 1, null, errorMessage);
      });

      // 完整文件上传完成时触发：无论上传成功或上传失败
      this.uploader.on('uploadComplete', function (file, response) {
        // 检查当前文件的所有分片是否上传完成
        if (!_this4.uploader.isInProgress(file)) {
          // 当前文件的所有分片已上传完成
          // 开始上传下一个文件
          _this4.uploader.uploadNext();
        }
      });
    },

    // 开始文件上传：从初始状态调用开始上传流程或从暂停状态调用，继续上传流程
    upload: function upload(fileObj) {
      if (!fileObj) {
        this.uploader.upload();
      } else {
        this.uploader.upload(fileObj.id);
      }
    },

    // 暂停文件上传：第一个参数为是否中断当前正在上传的文件，若第一个参数是文件，则只暂停指定文件
    stop: function stop(fileObj) {
      this.uploader.stop(true); // 暂停队列中所有的文件
      // this.uploader.stop(fileObj, true) //暂停指定文件：个人认为源码存在bug，无法正常使用，只能对单个分片的文件生效
    },

    // 重试上传
    retry: function retry(fileObj) {
      this.uploader.retry();
      // this.uploader.retry(fileObj)
    },

    // 重置队列
    reset: function reset() {
      this.uploader.reset();
    },

    // 取消（从上传列表中删除）并中断文件上传 - 主动取消
    cancelFile: function cancelFile(fileObj) {
      var key = this.getFileKey(fileObj);

      this.uploader.cancelFile(fileObj);

      this.amendInfo(fileObj, key);
      if (!this.isPassSecond[key] && this.paramArr[key]) {

        var data = {
          objectName: this.paramArr[key].objectName,
          uploadId: this.paramArr[key].uploadId,
          endPointKey: this.e9y
        };
        // 通知后台清空对应文件信息
        deleteFileInfo(data);
      }
      this.$emit('uploadCancel', fileObj);
    },

    // 在队列中移除文件，默认标记文件状态为已取消，若第二个参数为true,则会从队列中移除
    removeFile: function removeFile(fileObj, bool) {
      if (bool) {
        this.uploader.removeFile(fileObj.id, bool);
      } else {
        this.uploader.removeFile(fileObj.id);
      }
    }
  },
  created: function created() {
    var _this5 = this;

    if (!this.value) {
      this.groupToken = Object(util_["uuid"])(16, 32);
      this.$emit('input', this.groupToken);
      return;
    }

    this.groupToken = this.value;

    var data = {
      g9s: new Array(this.groupToken)
    };

    // 获取已上传的文件组信息
    getGroupFileInfo(data).then(function (res) {
      if (res.status && res.data) {
        res.data.forEach(function (file) {
          _this5.echoFileArr.push(file);
        });
      }
    });
  },
  mounted: function mounted() {
    var _this6 = this;

    var _this = this;

    window.addEventListener('online', this.getLineStatus); // 网络由异常状态到正常状态
    window.addEventListener('offline', this.getLineStatus); // 网络有正常状态到异常状态

    external_webuploader_default.a.Uploader.register({
      name: 'bsf',
      // 文件开始上传前触发
      'before-send-file': function beforeSendFile(fileObj) {
        var deferred = external_webuploader_default.a.Deferred();

        var key = _this.getFileKey(fileObj);

        _this.getMd5Key(fileObj).then(function (md5) {
          _this.$set(_this.md5Obj, key, md5); // 保存文件的md5Key

          var data = {
            fileName: fileObj.name,
            fileSize: fileObj.size,
            md5: md5,
            g9s: _this.groupToken
          };

          getUploadInfo(data).then(function (res) {
            if (!res.status) {
              // 异常状态：文件类型不符合后端限制等情况
              _this6.$message.error(res.message);
              _this.$emit('uploadError', 4, fileObj, res);
              _this.amendInfo(fileObj, key);
              deferred.reject(); // 注意：会触发webUpload的uploadError
            } else if (res.data.resultType === 0) {
              // 极速秒传
              _this.isPassSecond[key] = true;
              _this.$set(_this.percentage, key, 99);

              _this.fileArr.some(function (file, index) {
                if (file === fileObj) {
                  _this.$set(_this.fileArr[index], 'fileToken', res.data.sysOssVO.fileToken);
                  return true; // 中断循环
                }
              });
              _this.uploader.skipFile(fileObj); // 跳过当前文件
              _this.uploader.trigger('uploadProgress', fileObj, 1);
              // _this.uploader.trigger('uploadSuccess', fileObj);
              // _this.uploader.trigger('uploadComplete', fileObj);
              deferred.resolve();
            } else if (res.data.resultType === 2) {
              // 断点续传
              var _data = {
                objectName: res.data.bigFileVO.objectName,
                uploadId: res.data.bigFileVO.uploadId,
                endPointKey: _this.e9y
              };

              _this.$set(_this.paramArr, key, {
                objectName: res.data.bigFileVO.objectName,
                uploadId: res.data.bigFileVO.uploadId
              });

              // 完整文件 <= 分片大小时，需要手动添加chunk参数
              if (fileObj.size <= _this.fileBlockSize) {
                _this.uploader.options.formData.chunk = 0;
              }

              // 获取当前文件已上传的分片列表
              getFileBlockList(_data).then(function (res) {
                if (res.status) {
                  // 暂存已上传分片信息
                  res.data.forEach(function (item) {
                    _this.$set(_this.blockInfoObj, item.etag, item.size + '-' + item.partNumber);
                  });

                  deferred.resolve();
                } else {
                  _this.$emit('uploadError', 4, fileObj, res);
                  _this.amendInfo(fileObj, key);
                  deferred.reject();
                }
              });
            } else {
              // 普通上传
              var _data2 = {
                fileName: fileObj.name,
                md5: md5,
                e9y: _this.e9y
              };

              // 获取当前上传文件唯一标识
              getUploadId(_data2).then(function (res) {
                if (res.status) {
                  _this.$set(_this.paramArr, key, {
                    objectName: res.data.objectName,
                    uploadId: res.data.uploadId
                  });

                  // 完整文件 <= 分片大小时，需要手动添加chunk参数
                  if (fileObj.size <= _this.fileBlockSize) {
                    _this.uploader.options.formData.chunk = 0;
                  }

                  deferred.resolve();
                } else {
                  _this.$emit('uploadError', 4, fileObj, res);
                  _this.amendInfo(fileObj, key);
                  deferred.reject();
                }
              }).catch(function (error) {
                _this.$emit('uploadError', 4, fileObj, error);
                _this.amendInfo(fileObj, key);
              });
            }
          }).catch(function (error) {
            _this.$emit('uploadError', 4, fileObj, error);
            _this.amendInfo(fileObj, key);
            deferred.reject();
          });
        }).catch(function (error) {
          _this.$emit('uploadError', 2, fileObj, '文件的md5Key计算出错');
          _this.amendInfo(fileObj, key);
        });

        return deferred.promise(); // 继续执行分片上传
      }
    });

    external_webuploader_default.a.Uploader.register({
      name: 'bs',
      // 分片文件在发送前触发：检查当前分片是否已经上传 断点续传
      'before-send': function beforeSend(fileBlock) {
        var deferred = external_webuploader_default.a.Deferred();
        var key = _this6.getFileKey(fileBlock.file);
        _this.uploader.options.formData.uploadId = _this.paramArr[key].uploadId; // 文件唯一标识
        _this.uploader.options.formData.objectName = _this.paramArr[key].objectName;

        _this.uploader.md5File(fileBlock.blob).then(function (md5) {
          if (!_this.fileBlockListObj[key]) {
            _this.$set(_this.fileBlockListObj, key, new Array({
              etag: md5,
              number: fileBlock.chunk + 1
            }));
          } else {
            _this.fileBlockListObj[key].push({
              etag: md5,
              number: fileBlock.chunk + 1
            });
          }

          if (_this.blockInfoObj[md5]) {
            deferred.reject(); // 跳过当前分片 注意：不会触发webUpload的uploadError
          } else {
            _this.uploader.options.formData.uploadId = _this.paramArr[key].uploadId; // 文件唯一标识
            _this.uploader.options.formData.objectName = _this.paramArr[key].objectName;
            deferred.resolve();
          }
        }).catch(function (error) {
          _this.$emit('uploadError', 2, fileObj, '分片的md5计算出错');
          _this.amendInfo(fileObj, key);
        });

        return deferred.promise(); // 继续执行分片上传
      }
    });
  },
  beforeDestroy: function beforeDestroy() {
    window.removeEventListener('online', this.getLineStatus);
    window.removeEventListener('offline', this.getLineStatus);

    external_webuploader_default.a.Uploader.unRegister('bsf');
    external_webuploader_default.a.Uploader.unRegister('bs');
  }
});
// CONCATENATED MODULE: ./packages/chunk-upload/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_chunk_upload_srcvue_type_script_lang_js_ = (chunk_upload_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/chunk-upload/src/index.vue





/* normalize component */

var chunk_upload_src_component = normalizeComponent(
  packages_chunk_upload_srcvue_type_script_lang_js_,
  srcvue_type_template_id_38217788_render,
  srcvue_type_template_id_38217788_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var chunk_upload_src = (chunk_upload_src_component.exports);
// CONCATENATED MODULE: ./packages/chunk-upload/index.js
/*
 * @Author: gao_m3
 * @Date: 2021-08-30 15:32:48
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-08-30 15:34:44
 * @Descripttion:
 */


/* istanbul ignore next */
chunk_upload_src.install = function (Vue) {
  Vue.component(chunk_upload_src.name, chunk_upload_src);
};

/* harmony default export */ var chunk_upload = (chunk_upload_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/index.vue?vue&type=template&id=54af1e64&
var srcvue_type_template_id_54af1e64_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-empty" }, [
    _c(
      "div",
      { staticClass: "fks-empty__image", style: _vm.imageStyle },
      [
        _vm.image
          ? _c("img", {
              attrs: { src: _vm.image, ondragstart: "return false" },
            })
          : _vm._t("image", function () {
              return [_c("img-empty")]
            }),
      ],
      2
    ),
    _c(
      "div",
      { staticClass: "fks-empty__description" },
      [
        _vm.$slots.description
          ? _vm._t("description")
          : _c("p", [_vm._v(_vm._s(_vm.emptyDescription))]),
      ],
      2
    ),
    _vm.$slots.default
      ? _c("div", { staticClass: "fks-empty__bottom" }, [_vm._t("default")], 2)
      : _vm._e(),
  ])
}
var srcvue_type_template_id_54af1e64_staticRenderFns = []
srcvue_type_template_id_54af1e64_render._withStripped = true


// CONCATENATED MODULE: ./packages/empty/src/index.vue?vue&type=template&id=54af1e64&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/img-empty.vue?vue&type=template&id=65086994&
var img_emptyvue_type_template_id_65086994_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "svg",
    {
      attrs: {
        viewBox: "0 0 79 86",
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
      },
    },
    [
      _c(
        "defs",
        [
          _c(
            "linearGradient",
            {
              attrs: {
                id: "linearGradient-1-" + _vm.id,
                x1: "38.8503086%",
                y1: "0%",
                x2: "61.1496914%",
                y2: "100%",
              },
            },
            [
              _c("stop", { attrs: { "stop-color": "#FCFCFD", offset: "0%" } }),
              _c("stop", {
                attrs: { "stop-color": "#EEEFF3", offset: "100%" },
              }),
            ],
            1
          ),
          _c(
            "linearGradient",
            {
              attrs: {
                id: "linearGradient-2-" + _vm.id,
                x1: "0%",
                y1: "9.5%",
                x2: "100%",
                y2: "90.5%",
              },
            },
            [
              _c("stop", { attrs: { "stop-color": "#FCFCFD", offset: "0%" } }),
              _c("stop", {
                attrs: { "stop-color": "#E9EBEF", offset: "100%" },
              }),
            ],
            1
          ),
          _c("rect", {
            attrs: {
              id: "path-3-" + _vm.id,
              x: "0",
              y: "0",
              width: "17",
              height: "36",
            },
          }),
        ],
        1
      ),
      _c(
        "g",
        {
          attrs: {
            id: "Illustrations",
            stroke: "none",
            "stroke-width": "1",
            fill: "none",
            "fill-rule": "evenodd",
          },
        },
        [
          _c(
            "g",
            {
              attrs: {
                id: "B-type",
                transform: "translate(-1268.000000, -535.000000)",
              },
            },
            [
              _c(
                "g",
                {
                  attrs: {
                    id: "Group-2",
                    transform: "translate(1268.000000, 535.000000)",
                  },
                },
                [
                  _c("path", {
                    attrs: {
                      id: "Oval-Copy-2",
                      d: "M39.5,86 C61.3152476,86 79,83.9106622 79,81.3333333 C79,78.7560045 57.3152476,78 35.5,78 C13.6847524,78 0,78.7560045 0,81.3333333 C0,83.9106622 17.6847524,86 39.5,86 Z",
                      fill: "#F7F8FC",
                    },
                  }),
                  _c("polygon", {
                    attrs: {
                      id: "Rectangle-Copy-14",
                      fill: "#E5E7E9",
                      transform:
                        "translate(27.500000, 51.500000) scale(1, -1) translate(-27.500000, -51.500000) ",
                      points: "13 58 53 58 42 45 2 45",
                    },
                  }),
                  _c(
                    "g",
                    {
                      attrs: {
                        id: "Group-Copy",
                        transform:
                          "translate(34.500000, 31.500000) scale(-1, 1) rotate(-25.000000) translate(-34.500000, -31.500000) translate(7.000000, 10.000000)",
                      },
                    },
                    [
                      _c("polygon", {
                        attrs: {
                          id: "Rectangle-Copy-10",
                          fill: "#E5E7E9",
                          transform:
                            "translate(11.500000, 5.000000) scale(1, -1) translate(-11.500000, -5.000000) ",
                          points: "2.84078316e-14 3 18 3 23 7 5 7",
                        },
                      }),
                      _c("polygon", {
                        attrs: {
                          id: "Rectangle-Copy-11",
                          fill: "#EDEEF2",
                          points:
                            "-3.69149156e-15 7 38 7 38 43 -3.69149156e-15 43",
                        },
                      }),
                      _c("rect", {
                        attrs: {
                          id: "Rectangle-Copy-12",
                          fill: "url(#linearGradient-1-" + _vm.id + ")",
                          transform:
                            "translate(46.500000, 25.000000) scale(-1, 1) translate(-46.500000, -25.000000) ",
                          x: "38",
                          y: "7",
                          width: "17",
                          height: "36",
                        },
                      }),
                      _c("polygon", {
                        attrs: {
                          id: "Rectangle-Copy-13",
                          fill: "#F8F9FB",
                          transform:
                            "translate(39.500000, 3.500000) scale(-1, 1) translate(-39.500000, -3.500000) ",
                          points:
                            "24 7 41 7 55 -3.63806207e-12 38 -3.63806207e-12",
                        },
                      }),
                    ]
                  ),
                  _c("rect", {
                    attrs: {
                      id: "Rectangle-Copy-15",
                      fill: "url(#linearGradient-2-" + _vm.id + ")",
                      x: "13",
                      y: "45",
                      width: "40",
                      height: "36",
                    },
                  }),
                  _c(
                    "g",
                    {
                      attrs: {
                        id: "Rectangle-Copy-17",
                        transform: "translate(53.000000, 45.000000)",
                      },
                    },
                    [
                      _c(
                        "mask",
                        { attrs: { id: "mask-4-" + _vm.id, fill: "white" } },
                        [
                          _c("use", {
                            attrs: { "xlink:href": "#path-3-" + _vm.id },
                          }),
                        ]
                      ),
                      _c("use", {
                        attrs: {
                          id: "Mask",
                          fill: "#E0E3E9",
                          transform:
                            "translate(8.500000, 18.000000) scale(-1, 1) translate(-8.500000, -18.000000) ",
                          "xlink:href": "#path-3-" + _vm.id,
                        },
                      }),
                      _c("polygon", {
                        attrs: {
                          id: "Rectangle-Copy",
                          fill: "#D5D7DE",
                          mask: "url(#mask-4-" + _vm.id + ")",
                          transform:
                            "translate(12.000000, 9.000000) scale(-1, 1) translate(-12.000000, -9.000000) ",
                          points: "7 0 24 0 20 18 -1.70530257e-13 16",
                        },
                      }),
                    ]
                  ),
                  _c("polygon", {
                    attrs: {
                      id: "Rectangle-Copy-18",
                      fill: "#F8F9FB",
                      transform:
                        "translate(66.000000, 51.500000) scale(-1, 1) translate(-66.000000, -51.500000) ",
                      points: "62 45 79 45 70 58 53 58",
                    },
                  }),
                ]
              ),
            ]
          ),
        ]
      ),
    ]
  )
}
var img_emptyvue_type_template_id_65086994_staticRenderFns = []
img_emptyvue_type_template_id_65086994_render._withStripped = true


// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue?vue&type=template&id=65086994&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/img-empty.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var img_emptyvue_type_script_lang_js_id = 0;
/* harmony default export */ var img_emptyvue_type_script_lang_js_ = ({
  name: 'ImgEmpty',
  data: function data() {
    return {
      id: ++img_emptyvue_type_script_lang_js_id
    };
  }
});
// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_img_emptyvue_type_script_lang_js_ = (img_emptyvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/empty/src/img-empty.vue





/* normalize component */

var img_empty_component = normalizeComponent(
  src_img_emptyvue_type_script_lang_js_,
  img_emptyvue_type_template_id_65086994_render,
  img_emptyvue_type_template_id_65086994_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var img_empty = (img_empty_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/empty/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var empty_srcvue_type_script_lang_js_ = ({
  name: 'FksEmpty',
  components: {
    ImgEmpty: img_empty
  },
  props: {
    image: {
      type: String,
      default: ''
    },
    imageSize: Number,
    description: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    return {};
  },

  computed: {
    emptyDescription: function emptyDescription() {
      return this.description || Object(lib_locale_["t"])('fks.table.emptyText');
    },
    imageStyle: function imageStyle() {
      return {
        width: this.imageSize ? this.imageSize + 'px' : ''
      };
    }
  }
});
// CONCATENATED MODULE: ./packages/empty/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_empty_srcvue_type_script_lang_js_ = (empty_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/empty/src/index.vue





/* normalize component */

var empty_src_component = normalizeComponent(
  packages_empty_srcvue_type_script_lang_js_,
  srcvue_type_template_id_54af1e64_render,
  srcvue_type_template_id_54af1e64_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var empty_src = (empty_src_component.exports);
// CONCATENATED MODULE: ./packages/empty/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
empty_src.install = function (Vue) {
  Vue.component(empty_src.name, empty_src);
};

// 默认导出组件
/* harmony default export */ var empty = (empty_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/space/src/item.vue?vue&type=template&id=1cd07e00&
var itemvue_type_template_id_1cd07e00_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { class: _vm.classes }, [_vm._t("default")], 2)
}
var itemvue_type_template_id_1cd07e00_staticRenderFns = []
itemvue_type_template_id_1cd07e00_render._withStripped = true


// CONCATENATED MODULE: ./packages/space/src/item.vue?vue&type=template&id=1cd07e00&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/space/src/item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var itemvue_type_script_lang_js_ = ({
  name: 'FksSpace',
  props: {
    prefixCls: {
      type: String,
      default: 'fks-space'
    }
  },
  computed: {
    classes: function classes() {
      return this.prefixCls + '__item';
    }
  }
});
// CONCATENATED MODULE: ./packages/space/src/item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_itemvue_type_script_lang_js_ = (itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/space/src/item.vue





/* normalize component */

var item_component = normalizeComponent(
  src_itemvue_type_script_lang_js_,
  itemvue_type_template_id_1cd07e00_render,
  itemvue_type_template_id_1cd07e00_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_item = (item_component.exports);
// CONCATENATED MODULE: ./packages/space/index.js


/* istanbul ignore next */
src_item.install = function (Vue) {
  Vue.component(src_item.name, src_item);
};

/* harmony default export */ var space = (src_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=template&id=8f112ff2&
var mainvue_type_template_id_8f112ff2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "span",
    [
      _c(
        "transition",
        {
          attrs: { name: _vm.transition },
          on: {
            "after-enter": _vm.handleAfterEnter,
            "after-leave": _vm.handleAfterLeave,
          },
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: !_vm.disabled && _vm.showPopper,
                  expression: "!disabled && showPopper",
                },
              ],
              ref: "popper",
              staticClass: "fks-popover fks-popper",
              class: [
                _vm.popperClass,
                _vm.content && "fks-popover--plain",
                _vm.placement,
              ],
              style:
                !_vm.disabled && _vm.showPopper
                  ? { width: _vm.width + "px" }
                  : {
                      width: _vm.width + "px",
                      visibility: "hidden",
                      position: "absolute",
                    },
              attrs: {
                role: "tooltip",
                id: _vm.tooltipId,
                "aria-hidden":
                  _vm.disabled || !_vm.showPopper ? "true" : "false",
              },
            },
            [
              _vm.title
                ? _c("div", {
                    staticClass: "fks-popover__title",
                    domProps: { textContent: _vm._s(_vm.title) },
                  })
                : _vm._e(),
              _vm._t("default", function () {
                return [_vm._v(_vm._s(_vm.content))]
              }),
            ],
            2
          ),
        ]
      ),
      _vm._t("reference"),
    ],
    2
  )
}
var mainvue_type_template_id_8f112ff2_staticRenderFns = []
mainvue_type_template_id_8f112ff2_render._withStripped = true


// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=template&id=8f112ff2&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/popover/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var popover_src_mainvue_type_script_lang_js_ = ({
  name: 'FksPopover',

  mixins: [vue_popper_default.a],

  props: {
    trigger: {
      type: String,
      default: 'click',
      validator: function validator(value) {
        return ['click', 'focus', 'hover', 'manual'].indexOf(value) > -1;
      }
    },
    openDelay: {
      type: Number,
      default: 0
    },
    closeDelay: {
      type: Number,
      default: 200
    },
    title: String,
    disabled: Boolean,
    content: String,
    reference: {},
    popperClass: String,
    width: {},
    visibleArrow: {
      default: true
    },
    arrowOffset: {
      type: Number,
      default: 0
    },
    transition: {
      type: String,
      default: 'fade-in-linear'
    },
    tabindex: {
      type: Number,
      default: 0
    }
  },

  computed: {
    tooltipId: function tooltipId() {
      return 'fks-popover-' + Object(util_["generateId"])();
    }
  },
  watch: {
    showPopper: function showPopper(val) {
      if (this.disabled) {
        return;
      }
      val ? this.$emit('show') : this.$emit('hide');
    }
  },

  mounted: function mounted() {
    var _this = this;

    var reference = this.referenceElm = this.reference || this.$refs.reference;
    var popper = this.popper || this.$refs.popper;

    if (!reference && this.$slots.reference && this.$slots.reference[0]) {
      reference = this.referenceElm = this.$slots.reference[0].elm;
    }
    // 可访问性
    if (reference) {
      Object(dom_["addClass"])(reference, 'fks-popover__reference');
      reference.setAttribute('aria-describedby', this.tooltipId);
      reference.setAttribute('tabindex', this.tabindex); // tab序列
      popper.setAttribute('tabindex', 0);

      if (this.trigger !== 'click') {
        Object(dom_["on"])(reference, 'focusin', function () {
          _this.handleFocus();
          var instance = reference.__vue__;
          if (instance && typeof instance.focus === 'function') {
            instance.focus();
          }
        });
        Object(dom_["on"])(popper, 'focusin', this.handleFocus);
        Object(dom_["on"])(reference, 'focusout', this.handleBlur);
        Object(dom_["on"])(popper, 'focusout', this.handleBlur);
      }
      Object(dom_["on"])(reference, 'keydown', this.handleKeydown);
      Object(dom_["on"])(reference, 'click', this.handleClick);
    }
    if (this.trigger === 'click') {
      Object(dom_["on"])(reference, 'click', this.doToggle);
      Object(dom_["on"])(document, 'click', this.handleDocumentClick);
    } else if (this.trigger === 'hover') {
      Object(dom_["on"])(reference, 'mouseenter', this.handleMouseEnter);
      Object(dom_["on"])(popper, 'mouseenter', this.handleMouseEnter);
      Object(dom_["on"])(reference, 'mouseleave', this.handleMouseLeave);
      Object(dom_["on"])(popper, 'mouseleave', this.handleMouseLeave);
    } else if (this.trigger === 'focus') {
      if (this.tabindex < 0) {
        console.warn('[FawkesLib Warn][Popover]a negative taindex means that the element cannot be focused by tab key');
      }
      if (reference.querySelector('input, textarea')) {
        Object(dom_["on"])(reference, 'focusin', this.doShow);
        Object(dom_["on"])(reference, 'focusout', this.doClose);
      } else {
        Object(dom_["on"])(reference, 'mousedown', this.doShow);
        Object(dom_["on"])(reference, 'mouseup', this.doClose);
      }
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.cleanup();
  },
  deactivated: function deactivated() {
    this.cleanup();
  },


  methods: {
    doToggle: function doToggle() {
      this.showPopper = !this.showPopper;
    },
    doShow: function doShow() {
      this.showPopper = true;
    },
    doClose: function doClose() {
      this.showPopper = false;
    },
    handleFocus: function handleFocus() {
      Object(dom_["addClass"])(this.referenceElm, 'focusing');
      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = true;
    },
    handleClick: function handleClick() {
      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
    },
    handleBlur: function handleBlur() {
      Object(dom_["removeClass"])(this.referenceElm, 'focusing');
      if (this.trigger === 'click' || this.trigger === 'focus') this.showPopper = false;
    },
    handleMouseEnter: function handleMouseEnter() {
      var _this2 = this;

      clearTimeout(this._timer);
      if (this.openDelay) {
        this._timer = setTimeout(function () {
          _this2.showPopper = true;
        }, this.openDelay);
      } else {
        this.showPopper = true;
      }
    },
    handleKeydown: function handleKeydown(ev) {
      if (ev.keyCode === 27 && this.trigger !== 'manual') {
        // esc
        this.doClose();
      }
    },
    handleMouseLeave: function handleMouseLeave() {
      var _this3 = this;

      clearTimeout(this._timer);
      if (this.closeDelay) {
        this._timer = setTimeout(function () {
          _this3.showPopper = false;
        }, this.closeDelay);
      } else {
        this.showPopper = false;
      }
    },
    handleDocumentClick: function handleDocumentClick(e) {
      var reference = this.reference || this.$refs.reference;
      var popper = this.popper || this.$refs.popper;

      if (!reference && this.$slots.reference && this.$slots.reference[0]) {
        reference = this.referenceElm = this.$slots.reference[0].elm;
      }
      if (!this.$el || !reference || this.$el.contains(e.target) || reference.contains(e.target) || !popper || popper.contains(e.target)) return;
      this.showPopper = false;
    },
    handleAfterEnter: function handleAfterEnter() {
      this.$emit('after-enter');
    },
    handleAfterLeave: function handleAfterLeave() {
      this.$emit('after-leave');
      this.doDestroy();
    },
    cleanup: function cleanup() {
      if (this.openDelay || this.closeDelay) {
        clearTimeout(this._timer);
      }
    }
  },

  destroyed: function destroyed() {
    var reference = this.reference;

    Object(dom_["off"])(reference, 'click', this.doToggle);
    Object(dom_["off"])(reference, 'mouseup', this.doClose);
    Object(dom_["off"])(reference, 'mousedown', this.doShow);
    Object(dom_["off"])(reference, 'focusin', this.doShow);
    Object(dom_["off"])(reference, 'focusout', this.doClose);
    Object(dom_["off"])(reference, 'mousedown', this.doShow);
    Object(dom_["off"])(reference, 'mouseup', this.doClose);
    Object(dom_["off"])(reference, 'mouseleave', this.handleMouseLeave);
    Object(dom_["off"])(reference, 'mouseenter', this.handleMouseEnter);
    Object(dom_["off"])(document, 'click', this.handleDocumentClick);
  }
});
// CONCATENATED MODULE: ./packages/popover/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_popover_src_mainvue_type_script_lang_js_ = (popover_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/popover/src/main.vue





/* normalize component */

var src_main_component = normalizeComponent(
  packages_popover_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_8f112ff2_render,
  mainvue_type_template_id_8f112ff2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_main = (src_main_component.exports);
// CONCATENATED MODULE: ./packages/popover/src/directive.js
var getReference = function getReference(el, binding, vnode) {
  var _ref = binding.expression ? binding.value : binding.arg;
  var popper = vnode.context.$refs[_ref];
  if (popper) {
    if (Array.isArray(popper)) {
      popper[0].$refs.reference = el;
    } else {
      popper.$refs.reference = el;
    }
  }
};

/* harmony default export */ var directive = ({
  bind: function bind(el, binding, vnode) {
    getReference(el, binding, vnode);
  },
  inserted: function inserted(el, binding, vnode) {
    getReference(el, binding, vnode);
  }
});
// CONCATENATED MODULE: ./packages/popover/index.js




external_vue_default.a.directive('popover', directive);

/* istanbul ignore next */
src_main.install = function (Vue) {
  Vue.directive('popover', directive);
  Vue.component(src_main.name, src_main);
};
src_main.directive = directive;

/* harmony default export */ var popover = (src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/index.vue?vue&type=template&id=533cd52f&
var srcvue_type_template_id_533cd52f_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    _vm._b(
      { class: ["fks-skeleton", _vm.animated ? "is-animated" : ""] },
      "div",
      _vm.$attrs,
      false
    ),
    [
      _vm._l(_vm.count, function (i) {
        return _c(
          "div",
          { key: i },
          [
            _vm.loading
              ? _vm._t("template", function () {
                  return [
                    _c("fks-skeleton-item", {
                      staticClass: "is-first",
                      attrs: { variant: "p" },
                    }),
                    _vm._l(_vm.rows, function (item) {
                      return _c("fks-skeleton-item", {
                        key: item,
                        class: {
                          "fks-skeleton__paragraph": true,
                          "is-last": item === _vm.rows && _vm.rows > 1,
                        },
                        attrs: { variant: _vm.variant },
                      })
                    }),
                  ]
                })
              : _vm._e(),
          ],
          2
        )
      }),
      _c("div", [_vm._t("default", null, null, _vm.$attrs)], 2),
    ],
    2
  )
}
var srcvue_type_template_id_533cd52f_staticRenderFns = []
srcvue_type_template_id_533cd52f_render._withStripped = true


// CONCATENATED MODULE: ./packages/skeleton/src/index.vue?vue&type=template&id=533cd52f&

// EXTERNAL MODULE: external "fawkes-lib/lib/skeleton-item"
var skeleton_item_ = __webpack_require__(55);
var skeleton_item_default = /*#__PURE__*/__webpack_require__.n(skeleton_item_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


//import { useThrottleRender } from '@element-plus/hooks'

/* harmony default export */ var skeleton_srcvue_type_script_lang_js_ = ({
  name: 'FksSkeleton',
  components: {
    SkeletonItem: skeleton_item_default.a
  },
  props: {
    variant: {
      type: String,
      default: 'text'
    },
    animated: {
      type: Boolean,
      default: false
    },
    count: {
      type: Number,
      default: 1
    },
    rows: {
      type: Number,
      default: 3
    },
    loading: {
      type: Boolean,
      default: true
    },
    throttle: {
      type: Number
    }
    // setup(props) {
    //   const innerLoading = computed(() => {
    //     return props.loading
    //   })

    //   const uiLoading = useThrottleRender(innerLoading, props.throttle)

    //   return {
    //     uiLoading
    //   }
    // }
  } });
// CONCATENATED MODULE: ./packages/skeleton/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_skeleton_srcvue_type_script_lang_js_ = (skeleton_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/skeleton/src/index.vue





/* normalize component */

var skeleton_src_component = normalizeComponent(
  packages_skeleton_srcvue_type_script_lang_js_,
  srcvue_type_template_id_533cd52f_render,
  srcvue_type_template_id_533cd52f_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var skeleton_src = (skeleton_src_component.exports);
// CONCATENATED MODULE: ./packages/skeleton/index.js


/* istanbul ignore next */
skeleton_src.install = function (Vue) {
  Vue.component(skeleton_src.name, skeleton_src);
};

/* harmony default export */ var skeleton = (skeleton_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton-item/src/index.vue?vue&type=template&id=59acb244&
var srcvue_type_template_id_59acb244_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { class: ["fks-skeleton__item", "fks-skeleton__" + _vm.variant] },
    [_vm.variant === "image" ? _c("img-placeholder") : _vm._e()],
    1
  )
}
var srcvue_type_template_id_59acb244_staticRenderFns = []
srcvue_type_template_id_59acb244_render._withStripped = true


// CONCATENATED MODULE: ./packages/skeleton-item/src/index.vue?vue&type=template&id=59acb244&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton-item/src/img-placeholder.vue?vue&type=template&id=b6137d8a&
var img_placeholdervue_type_template_id_b6137d8a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "svg",
    {
      attrs: { viewBox: "0 0 1024 1024", xmlns: "http://www.w3.org/2000/svg" },
    },
    [
      _c("path", {
        attrs: {
          d: "M64 896V128h896v768H64z m64-128l192-192 116.352 116.352L640 448l256 307.2V192H128v576z m224-480a96 96 0 1 1-0.064 192.064A96 96 0 0 1 352 288z",
        },
      }),
    ]
  )
}
var img_placeholdervue_type_template_id_b6137d8a_staticRenderFns = []
img_placeholdervue_type_template_id_b6137d8a_render._withStripped = true


// CONCATENATED MODULE: ./packages/skeleton-item/src/img-placeholder.vue?vue&type=template&id=b6137d8a&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton-item/src/img-placeholder.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var img_placeholdervue_type_script_lang_js_ = ({
  name: 'ImgPlaceholder'
});
// CONCATENATED MODULE: ./packages/skeleton-item/src/img-placeholder.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_img_placeholdervue_type_script_lang_js_ = (img_placeholdervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/skeleton-item/src/img-placeholder.vue





/* normalize component */

var img_placeholder_component = normalizeComponent(
  src_img_placeholdervue_type_script_lang_js_,
  img_placeholdervue_type_template_id_b6137d8a_render,
  img_placeholdervue_type_template_id_b6137d8a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var img_placeholder = (img_placeholder_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/skeleton-item/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var skeleton_item_srcvue_type_script_lang_js_ = ({
  name: 'FksSkeletonItem',
  components: {
    ImgPlaceholder: img_placeholder
  },
  props: {
    variant: {
      type: String,
      default: 'text'
    }
  }
});
// CONCATENATED MODULE: ./packages/skeleton-item/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_skeleton_item_srcvue_type_script_lang_js_ = (skeleton_item_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/skeleton-item/src/index.vue





/* normalize component */

var skeleton_item_src_component = normalizeComponent(
  packages_skeleton_item_srcvue_type_script_lang_js_,
  srcvue_type_template_id_59acb244_render,
  srcvue_type_template_id_59acb244_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var skeleton_item_src = (skeleton_item_src_component.exports);
// CONCATENATED MODULE: ./packages/skeleton-item/index.js


/* istanbul ignore next */
skeleton_item_src.install = function (Vue) {
  Vue.component(skeleton_item_src.name, skeleton_item_src);
};

/* harmony default export */ var skeleton_item = (skeleton_item_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/quarter-picker/src/index.vue?vue&type=template&id=55b00947&
var srcvue_type_template_id_55b00947_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-quarter-picker" },
    [
      _c("mark", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.showSeason,
            expression: "showSeason",
          },
        ],
        staticClass: "fks-quarter-picker_mark",
        on: {
          click: function ($event) {
            $event.stopPropagation()
            _vm.showSeason = false
          },
        },
      }),
      _c(
        "fks-input",
        {
          attrs: {
            placeholder: _vm.placeholder,
            disabled: _vm.qpDisabled,
            readonly: _vm.qpReadonly,
          },
          on: {
            focus: function ($event) {
              _vm.qpReadonly
                ? (_vm.showSeason = false)
                : (_vm.showSeason = true)
            },
          },
          model: {
            value: _vm.showValue,
            callback: function ($$v) {
              _vm.showValue = $$v
            },
            expression: "showValue",
          },
        },
        [
          _c("i", {
            staticClass: "fks-input__icon fks-icon-date",
            attrs: { slot: "suffix" },
            slot: "suffix",
          }),
        ]
      ),
      _c(
        "fks-card",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showSeason,
              expression: "showSeason",
            },
          ],
          staticClass: "fks-quarter-picker_box-card",
        },
        [
          _c(
            "div",
            {
              staticClass: "clearfix fks-quarter-picker_yearBtn",
              attrs: { slot: "header" },
              slot: "header",
            },
            [
              _c("button", {
                staticClass:
                  "fks-picker-panel__icon-btn fks-date-picker__prev-btn fks-icon-d-arrow-left",
                attrs: { type: "button", "aria-label": "前一年" },
                on: { click: _vm.prev },
              }),
              _c(
                "span",
                {
                  staticClass: "fks-date-picker__header-label",
                  attrs: { role: "button" },
                },
                [_vm._v(_vm._s(_vm.year) + "年")]
              ),
              _c("button", {
                staticClass:
                  "fks-picker-panel__icon-btn fks-date-picker__next-btn fks-icon-d-arrow-right",
                attrs: { type: "button", "aria-label": "后一年" },
                on: { click: _vm.next },
              }),
            ]
          ),
          _c(
            "div",
            { staticClass: "fks-quarter-picker_text item" },
            [
              _c(
                "fks-button",
                {
                  staticClass: "_left",
                  staticStyle: {
                    width: "40%",
                    color: "#606266",
                    float: "left",
                  },
                  attrs: { type: "text", size: "medium" },
                  on: {
                    click: function ($event) {
                      return _vm.selectSeason(0)
                    },
                  },
                },
                [_vm._v("第一季度")]
              ),
              _c(
                "fks-button",
                {
                  staticClass: "_right",
                  staticStyle: {
                    float: "right",
                    width: "40%",
                    color: "#606266",
                  },
                  attrs: { type: "text", size: "medium" },
                  on: {
                    click: function ($event) {
                      return _vm.selectSeason(1)
                    },
                  },
                },
                [_vm._v("第二季度")]
              ),
            ],
            1
          ),
          _c(
            "div",
            { staticClass: "text item" },
            [
              _c(
                "fks-button",
                {
                  staticClass: "_left",
                  staticStyle: {
                    width: "40%",
                    color: "#606266",
                    float: "left",
                  },
                  attrs: { type: "text", size: "medium" },
                  on: {
                    click: function ($event) {
                      return _vm.selectSeason(2)
                    },
                  },
                },
                [_vm._v("第三季度")]
              ),
              _c(
                "fks-button",
                {
                  staticClass: "_right",
                  staticStyle: {
                    float: "right",
                    width: "40%",
                    color: "#606266",
                  },
                  attrs: { type: "text", size: "medium" },
                  on: {
                    click: function ($event) {
                      return _vm.selectSeason(3)
                    },
                  },
                },
                [_vm._v("第四季度")]
              ),
            ],
            1
          ),
        ]
      ),
    ],
    1
  )
}
var srcvue_type_template_id_55b00947_staticRenderFns = []
srcvue_type_template_id_55b00947_render._withStripped = true


// CONCATENATED MODULE: ./packages/quarter-picker/src/index.vue?vue&type=template&id=55b00947&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/quarter-picker/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var quarter_picker_srcvue_type_script_lang_js_ = ({
  name: 'FksQuarterPicker',
  componentName: 'FksQuarterPicker',
  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    valueArr: {
      default: function _default() {
        return ['01-03', '04-06', '07-09', '10-12'];
      },
      type: Array
    },
    getValue: {
      default: function _default() {},
      type: Function
    },
    data: {
      default: '',
      type: String
    },
    placeholder: {
      default: '请选择季度',
      type: String
    },
    disabled: {
      default: false,
      type: Boolean
    },
    readonly: {
      default: false,
      type: Boolean
    }
  },
  data: function data() {
    return {
      showSeason: false,
      season: '',
      year: new Date().getFullYear(),
      showValue: ''
    };
  },
  mounted: function mounted() {
    if (this.data) {
      var value = this.data;
      var arr = value.split('-');
      this.year = arr[0].slice(0, 4);
      var str = arr[0].slice(4, 6) + '-' + arr[1].slice(4, 6);
      var arrAll = this.valueArr;
      this.showValue = this.year + '\u5E74' + (arrAll.indexOf(str) + 1) + '\u5B63\u5EA6';
    }
  },
  created: function created() {
    console.log(this.data);
  },

  watch: {
    data: function data(value, oldValue) {
      console.log('watch data');
      var arr = value.split('-');
      this.year = arr[0].slice(0, 4);
      console.log('str');
      var str = arr[0].slice(4, 6) + '-' + arr[1].slice(4, 6);
      console.log(str);
      var arrAll = this.valueArr;
      this.showValue = this.year + '\u5E74' + (arrAll.indexOf(str) + 1) + '\u5B63\u5EA6';
    }
  },
  computed: {
    qpDisabled: function qpDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    qpReadonly: function qpReadonly() {
      return this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },
  methods: {
    one: function one() {
      this.showSeason = false;
    },
    prev: function prev() {
      this.year = this.year * 1 - 1;
    },
    next: function next() {
      this.year = this.year * 1 + 1;
    },
    selectSeason: function selectSeason(i) {
      var that = this;
      that.season = i + 1;
      var arr = that.valueArr[i].split('-');
      that.getValue(that.year + arr[0] + '-' + that.year + arr[1]);
      that.showSeason = false;
      this.showValue = this.year + '\u5E74' + this.season + '\u5B63\u5EA6';
      this.$emit('change', this.showValue, this.year, arr[0], arr[1]);
    },
    getLastDay: function getLastDay(year, month) {
      var new_year = year; //取当前的年份
      var new_month = month++; //取下一个月的第一天，方便计算（最后一天不固定）
      if (month > 12) {
        new_month -= 12; //月份减
        new_year++; //年份增
      }
      var new_date = new Date(new_year, new_month, 1); //取当年当月中的第一天
      return new Date(new_date.getTime() - 1000 * 60 * 60 * 24).getDate(); //获取当月最后一天日期
    }
  }
});
// CONCATENATED MODULE: ./packages/quarter-picker/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_quarter_picker_srcvue_type_script_lang_js_ = (quarter_picker_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/quarter-picker/src/index.vue





/* normalize component */

var quarter_picker_src_component = normalizeComponent(
  packages_quarter_picker_srcvue_type_script_lang_js_,
  srcvue_type_template_id_55b00947_render,
  srcvue_type_template_id_55b00947_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var quarter_picker_src = (quarter_picker_src_component.exports);
// CONCATENATED MODULE: ./packages/quarter-picker/index.js
/*
 * @Author: gao_m3
 * @Date: 2021-03-15 14:41:09
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-15 14:41:10
 * @Descripttion:
 */


// 为组件提供 install 安装方法，供按需引入
quarter_picker_src.install = function (Vue) {
  Vue.component(quarter_picker_src.name, quarter_picker_src);
};

// 默认导出组件
/* harmony default export */ var quarter_picker = (quarter_picker_src);
// CONCATENATED MODULE: ./packages/tooltip/src/main.js






/* harmony default export */ var tooltip_src_main = ({
  name: 'FksTooltip',

  mixins: [vue_popper_default.a],

  props: {
    openDelay: {
      type: Number,
      default: 0
    },
    disabled: Boolean,
    manual: Boolean,
    effect: {
      type: String,
      default: 'dark'
    },
    arrowOffset: {
      type: Number,
      default: 0
    },
    popperClass: String,
    content: String,
    visibleArrow: {
      default: true
    },
    transition: {
      type: String,
      default: 'fks-fade-in-linear'
    },
    popperOptions: {
      default: function _default() {
        return {
          boundariesPadding: 10,
          gpuAcceleration: false
        };
      }
    },
    enterable: {
      type: Boolean,
      default: true
    },
    hideAfter: {
      type: Number,
      default: 0
    },
    tabindex: {
      type: Number,
      default: 0
    }
  },

  data: function data() {
    return {
      tooltipId: 'fks-tooltip-' + Object(util_["generateId"])(),
      timeoutPending: null,
      focusing: false
    };
  },
  beforeCreate: function beforeCreate() {
    var _this = this;

    if (this.$isServer) return;

    this.popperVM = new external_vue_default.a({
      data: { node: '' },
      render: function render(h) {
        return this.node;
      }
    }).$mount();

    this.debounceClose = debounce_default()(200, function () {
      return _this.handleClosePopper();
    });
  },
  render: function render(h) {
    var _this2 = this;

    if (this.popperVM) {
      this.popperVM.node = h(
        'transition',
        {
          attrs: {
            name: this.transition
          },
          on: {
            'afterLeave': this.doDestroy
          }
        },
        [h(
          'div',
          {
            on: {
              'mouseleave': function mouseleave() {
                _this2.setExpectedState(false);_this2.debounceClose();
              },
              'mouseenter': function mouseenter() {
                _this2.setExpectedState(true);
              }
            },

            ref: 'popper',
            attrs: { role: 'tooltip',
              id: this.tooltipId,
              'aria-hidden': this.disabled || !this.showPopper ? 'true' : 'false'
            },
            directives: [{
              name: 'show',
              value: !this.disabled && this.showPopper
            }],

            'class': ['fks-tooltip__popper', 'is-' + this.effect, this.popperClass] },
          [this.$slots.content || this.content]
        )]
      );
    }

    var firstElement = this.getFirstElement();
    if (!firstElement) return null;

    var data = firstElement.data = firstElement.data || {};
    data.staticClass = this.addTooltipClass(data.staticClass);

    return firstElement;
  },
  mounted: function mounted() {
    var _this3 = this;

    this.referenceElm = this.$el;
    if (this.$el.nodeType === 1) {
      this.$el.setAttribute('aria-describedby', this.tooltipId);
      this.$el.setAttribute('tabindex', this.tabindex);
      Object(dom_["on"])(this.referenceElm, 'mouseenter', this.show);
      Object(dom_["on"])(this.referenceElm, 'mouseleave', this.hide);
      Object(dom_["on"])(this.referenceElm, 'focus', function () {
        if (!_this3.$slots.default || !_this3.$slots.default.length) {
          _this3.handleFocus();
          return;
        }
        var instance = _this3.$slots.default[0].componentInstance;
        if (instance && instance.focus) {
          instance.focus();
        } else {
          _this3.handleFocus();
        }
      });
      Object(dom_["on"])(this.referenceElm, 'blur', this.handleBlur);
      Object(dom_["on"])(this.referenceElm, 'click', this.removeFocusing);
    }
    // fix issue https://github.com/ElemeFE/element/issues/14424
    if (this.value && this.popperVM) {
      this.popperVM.$nextTick(function () {
        if (_this3.value) {
          _this3.updatePopper();
        }
      });
    }
  },

  watch: {
    focusing: function focusing(val) {
      if (val) {
        Object(dom_["addClass"])(this.referenceElm, 'focusing');
      } else {
        Object(dom_["removeClass"])(this.referenceElm, 'focusing');
      }
    }
  },
  methods: {
    show: function show() {
      this.setExpectedState(true);
      this.handleShowPopper();
    },
    hide: function hide() {
      this.setExpectedState(false);
      this.debounceClose();
    },
    handleFocus: function handleFocus() {
      this.focusing = true;
      this.show();
    },
    handleBlur: function handleBlur() {
      this.focusing = false;
      this.hide();
    },
    removeFocusing: function removeFocusing() {
      this.focusing = false;
    },
    addTooltipClass: function addTooltipClass(prev) {
      if (!prev) {
        return 'fks-tooltip';
      } else {
        return 'fks-tooltip ' + prev.replace('fks-tooltip', '');
      }
    },
    handleShowPopper: function handleShowPopper() {
      var _this4 = this;

      if (!this.expectedState || this.manual) return;
      clearTimeout(this.timeout);
      this.timeout = setTimeout(function () {
        _this4.showPopper = true;
      }, this.openDelay);

      if (this.hideAfter > 0) {
        this.timeoutPending = setTimeout(function () {
          _this4.showPopper = false;
        }, this.hideAfter);
      }
    },
    handleClosePopper: function handleClosePopper() {
      if (this.enterable && this.expectedState || this.manual) return;
      clearTimeout(this.timeout);

      if (this.timeoutPending) {
        clearTimeout(this.timeoutPending);
      }
      this.showPopper = false;

      if (this.disabled) {
        this.doDestroy();
      }
    },
    setExpectedState: function setExpectedState(expectedState) {
      if (expectedState === false) {
        clearTimeout(this.timeoutPending);
      }
      this.expectedState = expectedState;
    },
    getFirstElement: function getFirstElement() {
      var slots = this.$slots.default;
      if (!Array.isArray(slots)) return null;
      var element = null;
      for (var index = 0; index < slots.length; index++) {
        if (slots[index] && slots[index].tag) {
          element = slots[index];
        };
      }
      return element;
    }
  },

  beforeDestroy: function beforeDestroy() {
    this.popperVM && this.popperVM.$destroy();
  },
  destroyed: function destroyed() {
    var reference = this.referenceElm;
    if (reference.nodeType === 1) {
      Object(dom_["off"])(reference, 'mouseenter', this.show);
      Object(dom_["off"])(reference, 'mouseleave', this.hide);
      Object(dom_["off"])(reference, 'focus', this.handleFocus);
      Object(dom_["off"])(reference, 'blur', this.handleBlur);
      Object(dom_["off"])(reference, 'click', this.removeFocusing);
    }
  }
});
// CONCATENATED MODULE: ./packages/tooltip/index.js


/* istanbul ignore next */
tooltip_src_main.install = function (Vue) {
  Vue.component(tooltip_src_main.name, tooltip_src_main);
};

/* harmony default export */ var packages_tooltip = (tooltip_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/message-box/src/main.vue?vue&type=template&id=40f3e820&
var mainvue_type_template_id_40f3e820_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "msgbox-fade" } }, [
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.visible,
            expression: "visible",
          },
        ],
        staticClass: "fks-message-box__wrapper",
        attrs: {
          tabindex: "-1",
          role: "dialog",
          "aria-modal": "true",
          "aria-label": _vm.title || "dialog",
        },
        on: {
          click: function ($event) {
            if ($event.target !== $event.currentTarget) {
              return null
            }
            return _vm.handleWrapperClick.apply(null, arguments)
          },
        },
      },
      [
        _c(
          "div",
          {
            staticClass: "fks-message-box",
            class: [_vm.customClass, _vm.center && "fks-message-box--center"],
          },
          [
            _vm.title !== null
              ? _c("div", { staticClass: "fks-message-box__header" }, [
                  _c("div", { staticClass: "fks-message-box__title" }, [
                    _vm.icon && !_vm.center && _vm.message !== ""
                      ? _c("div", {
                          class: ["fks-message-box__status", _vm.icon],
                        })
                      : _vm._e(),
                    _vm.icon && _vm.center
                      ? _c("div", {
                          class: ["fks-message-box__status", _vm.icon],
                        })
                      : _vm._e(),
                    _c("span", [_vm._v(_vm._s(_vm.title))]),
                  ]),
                  _vm.showClose
                    ? _c(
                        "button",
                        {
                          staticClass: "fks-message-box__headerbtn",
                          attrs: { type: "button", "aria-label": "Close" },
                          on: {
                            click: function ($event) {
                              return _vm.handleAction(
                                _vm.distinguishCancelAndClose
                                  ? "close"
                                  : "cancel"
                              )
                            },
                            keydown: function ($event) {
                              if (
                                !$event.type.indexOf("key") &&
                                _vm._k(
                                  $event.keyCode,
                                  "enter",
                                  13,
                                  $event.key,
                                  "Enter"
                                )
                              ) {
                                return null
                              }
                              return _vm.handleAction(
                                _vm.distinguishCancelAndClose
                                  ? "close"
                                  : "cancel"
                              )
                            },
                          },
                        },
                        [
                          _c("i", {
                            staticClass:
                              "fks-message-box__close fks-icon-close",
                          }),
                        ]
                      )
                    : _vm._e(),
                ])
              : _vm._e(),
            _c("div", { staticClass: "fks-message-box__content" }, [
              _c("div", { staticClass: "fks-message-box__container" }, [
                _vm.message !== ""
                  ? _c(
                      "div",
                      { staticClass: "fks-message-box__message" },
                      [
                        _vm._t("default", function () {
                          return [
                            !_vm.dangerouslyUseHTMLString
                              ? _c("p", [_vm._v(_vm._s(_vm.message))])
                              : _c("p", {
                                  domProps: { innerHTML: _vm._s(_vm.message) },
                                }),
                          ]
                        }),
                      ],
                      2
                    )
                  : _vm._e(),
              ]),
              _c(
                "div",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.showInput,
                      expression: "showInput",
                    },
                  ],
                  staticClass: "fks-message-box__input",
                },
                [
                  _c("fks-input", {
                    ref: "input",
                    attrs: {
                      type: _vm.inputType,
                      placeholder: _vm.inputPlaceholder,
                    },
                    nativeOn: {
                      keydown: function ($event) {
                        if (
                          !$event.type.indexOf("key") &&
                          _vm._k(
                            $event.keyCode,
                            "enter",
                            13,
                            $event.key,
                            "Enter"
                          )
                        ) {
                          return null
                        }
                        return _vm.handleInputEnter.apply(null, arguments)
                      },
                    },
                    model: {
                      value: _vm.inputValue,
                      callback: function ($$v) {
                        _vm.inputValue = $$v
                      },
                      expression: "inputValue",
                    },
                  }),
                  _c(
                    "div",
                    {
                      staticClass: "fks-message-box__errormsg",
                      style: {
                        visibility: !!_vm.editorErrorMessage
                          ? "visible"
                          : "hidden",
                      },
                    },
                    [
                      _vm._v(
                        "\n            " +
                          _vm._s(_vm.editorErrorMessage) +
                          "\n          "
                      ),
                    ]
                  ),
                ],
                1
              ),
            ]),
            _c(
              "div",
              { staticClass: "fks-message-box__btns" },
              [
                _vm.showCancelButton
                  ? _c(
                      "fks-button",
                      {
                        staticClass: "fks-button--cancel",
                        class: [_vm.cancelButtonClasses],
                        attrs: {
                          loading: _vm.cancelButtonLoading,
                          round: _vm.roundButton,
                          icon: _vm.deleteMode ? "fks-icon-close" : "",
                          size: "small",
                        },
                        on: {
                          keydown: function ($event) {
                            if (
                              !$event.type.indexOf("key") &&
                              _vm._k(
                                $event.keyCode,
                                "enter",
                                13,
                                $event.key,
                                "Enter"
                              )
                            ) {
                              return null
                            }
                            return _vm.handleAction("cancel")
                          },
                        },
                        nativeOn: {
                          click: function ($event) {
                            return _vm.handleAction("cancel")
                          },
                        },
                      },
                      [
                        _vm._v(
                          _vm._s(
                            _vm.cancelButtonText ||
                              _vm.t("fks.messagebox.cancel")
                          )
                        ),
                      ]
                    )
                  : _vm._e(),
                _c(
                  "fks-button",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value: _vm.showConfirmButton,
                        expression: "showConfirmButton",
                      },
                    ],
                    ref: "confirm",
                    class: [_vm.confirmButtonClasses],
                    attrs: {
                      loading: _vm.confirmButtonLoading,
                      round: _vm.roundButton,
                      size: "small",
                    },
                    on: {
                      keydown: function ($event) {
                        if (
                          !$event.type.indexOf("key") &&
                          _vm._k(
                            $event.keyCode,
                            "enter",
                            13,
                            $event.key,
                            "Enter"
                          )
                        ) {
                          return null
                        }
                        return _vm.handleAction("confirm")
                      },
                    },
                    nativeOn: {
                      click: function ($event) {
                        return _vm.handleAction("confirm")
                      },
                    },
                  },
                  [
                    _vm.deleteMode
                      ? _c("i", {
                          staticClass: "fks-icon-delete",
                          staticStyle: { "margin-right": "8px" },
                        })
                      : _vm._e(),
                    _vm._v(
                      _vm._s(
                        _vm.confirmButtonText || _vm.t("fks.messagebox.confirm")
                      )
                    ),
                  ]
                ),
              ],
              1
            ),
          ]
        ),
      ]
    ),
  ])
}
var mainvue_type_template_id_40f3e820_staticRenderFns = []
mainvue_type_template_id_40f3e820_render._withStripped = true


// CONCATENATED MODULE: ./packages/message-box/src/main.vue?vue&type=template&id=40f3e820&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/aria-dialog"
var aria_dialog_ = __webpack_require__(56);
var aria_dialog_default = /*#__PURE__*/__webpack_require__.n(aria_dialog_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/message-box/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//









var messageBox = void 0;
var typeMap = {
  success: 'success',
  info: 'info',
  warning: 'warning',
  error: 'error'
};

/* harmony default export */ var message_box_src_mainvue_type_script_lang_js_ = ({
  mixins: [popup_default.a, locale_default.a],

  props: {
    modal: {
      default: true
    },
    lockScroll: {
      default: true
    },
    showClose: {
      type: Boolean,
      default: true
    },
    closeOnClickModal: {
      default: true
    },
    closeOnPressEscape: {
      default: true
    },
    closeOnHashChange: {
      default: true
    },
    center: {
      default: false,
      type: Boolean
    },
    roundButton: {
      default: false,
      type: Boolean
    }
  },

  components: {
    FksInput: input_default.a,
    FksButton: button_default.a
  },

  computed: {
    icon: function icon() {
      var type = this.type,
          iconClass = this.iconClass;

      return iconClass || (type && typeMap[type] ? 'fks-icon-' + typeMap[type] : '');
    },
    confirmButtonClasses: function confirmButtonClasses() {
      return 'fks-button--primary ' + this.confirmButtonClass;
    },
    cancelButtonClasses: function cancelButtonClasses() {
      return '' + this.cancelButtonClass;
    }
  },

  methods: {
    getSafeClose: function getSafeClose() {
      var _this = this;

      var currentId = this.uid;
      return function () {
        _this.$nextTick(function () {
          if (currentId === _this.uid) _this.doClose();
        });
      };
    },
    doClose: function doClose() {
      var _this2 = this;

      if (!this.visible) return;
      this.visible = false;
      this._closing = true;
      this.onClose && this.onClose();
      messageBox.closeDialog(); // 解绑
      if (this.lockScroll) {
        setTimeout(this.restoreBodyStyle, 200);
      }
      this.opened = false;

      this.doAfterClose();
      setTimeout(function () {
        if (_this2.action) _this2.callback(_this2.action, _this2);

        // 关闭后防止重复触发enter，将焦点移出
        var el = document.activeElement;
        el.blur();
        setTimeout(function () {
          return el.focus();
        }, 400);
      });
    },
    handleWrapperClick: function handleWrapperClick() {
      if (this.closeOnClickModal) {
        this.handleAction(this.distinguishCancelAndClose ? 'close' : 'cancel');
      }
    },
    handleInputEnter: function handleInputEnter() {
      if (this.inputType !== 'textarea') {
        return this.handleAction('confirm');
      }
    },
    handleAction: function handleAction(action) {
      if (this.$type === 'prompt' && action === 'confirm' && !this.validate()) {
        return;
      }
      this.action = action;
      if (typeof this.beforeClose === 'function') {
        this.close = this.getSafeClose();
        this.beforeClose(action, this, this.close);
      } else {
        this.doClose();
      }
    },
    validate: function validate() {
      if (this.$type === 'prompt') {
        var inputPattern = this.inputPattern;
        if (inputPattern && !inputPattern.test(this.inputValue || '')) {
          this.editorErrorMessage = this.inputErrorMessage || Object(lib_locale_["t"])('fks.messagebox.error');
          Object(dom_["addClass"])(this.getInputElement(), 'invalid');
          return false;
        }
        var inputValidator = this.inputValidator;
        if (typeof inputValidator === 'function') {
          var validateResult = inputValidator(this.inputValue);
          if (validateResult === false) {
            this.editorErrorMessage = this.inputErrorMessage || Object(lib_locale_["t"])('fks.messagebox.error');
            Object(dom_["addClass"])(this.getInputElement(), 'invalid');
            return false;
          }
          if (typeof validateResult === 'string') {
            this.editorErrorMessage = validateResult;
            Object(dom_["addClass"])(this.getInputElement(), 'invalid');
            return false;
          }
        }
      }
      this.editorErrorMessage = '';
      Object(dom_["removeClass"])(this.getInputElement(), 'invalid');
      return true;
    },
    getFirstFocus: function getFirstFocus() {
      var btn = this.$el.querySelector('.fks-message-box__btns .fks-button');
      var title = this.$el.querySelector('.fks-message-box__btns .fks-message-box__title');
      return btn || title;
    },
    getInputElement: function getInputElement() {
      var inputRefs = this.$refs.input.$refs;
      return inputRefs.input || inputRefs.textarea;
    },
    handleClose: function handleClose() {
      this.handleAction('close');
    }
  },

  watch: {
    inputValue: {
      immediate: true,
      handler: function handler(val) {
        var _this3 = this;

        this.$nextTick(function (_) {
          if (_this3.$type === 'prompt' && val !== null) {
            _this3.validate();
          }
        });
      }
    },
    visible: function visible(val) {
      var _this4 = this;

      if (val) {
        this.uid++;
        if (this.deleteMode) {
          this.type = 'warning';
          this.confirmButtonClass = 'fks-button--danger';
          this.cancelButtonClass = 'fks-button--cancel';
        }

        if (this.$type === 'alert' || this.$type === 'confirm') {
          this.$nextTick(function () {
            _this4.$refs.confirm.$el.focus();
          });
        }
        this.focusAfterClosed = document.activeElement;
        messageBox = new aria_dialog_default.a(this.$el, this.focusAfterClosed, this.getFirstFocus());
      }

      // prompt
      if (this.$type !== 'prompt') return;
      if (val) {
        setTimeout(function () {
          if (_this4.$refs.input && _this4.$refs.input.$el) {
            _this4.getInputElement().focus();
          }
        }, 500);
      } else {
        this.editorErrorMessage = '';
        Object(dom_["removeClass"])(this.getInputElement(), 'invalid');
      }
    }
  },
  mounted: function mounted() {
    var _this5 = this;

    this.$nextTick(function () {
      // document.onkeydown = function (event) {
      //   return false
      // }
      if (_this5.closeOnHashChange) {
        window.addEventListener('hashchange', _this5.close);
      }
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.closeOnHashChange) {
      window.removeEventListener('hashchange', this.close);
    }
    setTimeout(function () {
      messageBox.closeDialog();
    });
  },
  data: function data() {
    return {
      uid: 1,
      title: undefined,
      message: '',
      type: '',
      iconClass: '',
      customClass: '',
      showInput: false,
      inputValue: null,
      inputPlaceholder: '',
      inputType: 'text',
      inputPattern: null,
      inputValidator: null,
      inputErrorMessage: '',
      showConfirmButton: true,
      showCancelButton: false,
      action: '',
      confirmButtonText: '',
      cancelButtonText: '',
      confirmButtonLoading: false,
      cancelButtonLoading: false,
      confirmButtonClass: '',
      confirmButtonDisabled: false,
      cancelButtonClass: '',
      editorErrorMessage: null,
      callback: null,
      dangerouslyUseHTMLString: false,
      focusAfterClosed: null,
      isOnComposition: false,
      distinguishCancelAndClose: false,
      deleteMode: false //提供删除确认模式
    };
  }
});
// CONCATENATED MODULE: ./packages/message-box/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_message_box_src_mainvue_type_script_lang_js_ = (message_box_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/message-box/src/main.vue





/* normalize component */

var message_box_src_main_component = normalizeComponent(
  packages_message_box_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_40f3e820_render,
  mainvue_type_template_id_40f3e820_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var message_box_src_main = (message_box_src_main_component.exports);
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/vdom"
var vdom_ = __webpack_require__(26);

// CONCATENATED MODULE: ./packages/message-box/src/main.js
var main_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var main_defaults = {
  title: null,
  message: '',
  type: '',
  iconClass: '',
  showInput: false,
  showClose: true,
  modalFade: true,
  lockScroll: true,
  closeOnClickModal: true,
  closeOnPressEscape: true,
  closeOnHashChange: true,
  inputValue: null,
  inputPlaceholder: '',
  inputType: 'text',
  inputPattern: null,
  inputValidator: null,
  inputErrorMessage: '',
  showConfirmButton: true,
  showCancelButton: false,
  confirmButtonPosition: 'right',
  confirmButtonHighlight: false,
  cancelButtonHighlight: false,
  confirmButtonText: '',
  cancelButtonText: '',
  confirmButtonClass: '',
  cancelButtonClass: '',
  customClass: '',
  beforeClose: null,
  dangerouslyUseHTMLString: false,
  center: false,
  roundButton: false,
  distinguishCancelAndClose: false
};






var MessageBoxConstructor = external_vue_default.a.extend(message_box_src_main);

var currentMsg = void 0,
    main_instance = void 0;
var msgQueue = [];

var defaultCallback = function defaultCallback(action) {
  if (currentMsg) {
    var callback = currentMsg.callback;
    if (typeof callback === 'function') {
      if (main_instance.showInput) {
        callback(main_instance.inputValue, action);
      } else {
        callback(action);
      }
    }
    if (currentMsg.resolve) {
      if (action === 'confirm') {
        if (main_instance.showInput) {
          currentMsg.resolve({ value: main_instance.inputValue, action: action });
        } else {
          currentMsg.resolve(action);
        }
      } else if (currentMsg.reject && (action === 'cancel' || action === 'close')) {
        currentMsg.reject(action);
      }
    }
  }
};

var initInstance = function initInstance() {
  main_instance = new MessageBoxConstructor({
    el: document.createElement('div')
  });

  main_instance.callback = defaultCallback;
};

var main_showNextMsg = function showNextMsg() {
  if (!main_instance) {
    initInstance();
  }
  main_instance.action = '';
  // deleteMode 复位
  main_instance.deleteMode = false;
  if (!main_instance.visible || main_instance.closeTimer) {
    if (msgQueue.length > 0) {
      currentMsg = msgQueue.shift();

      var options = currentMsg.options;
      for (var prop in options) {
        if (options.hasOwnProperty(prop)) {
          main_instance[prop] = options[prop];
        }
      }
      if (options.callback === undefined) {
        main_instance.callback = defaultCallback;
      }

      var oldCb = main_instance.callback;
      main_instance.callback = function (action, instance) {
        oldCb(action, instance);
        showNextMsg();
      };
      if (Object(vdom_["isVNode"])(main_instance.message)) {
        main_instance.$slots.default = [main_instance.message];
        main_instance.message = null;
      } else {
        delete main_instance.$slots.default;
      }
      ['modal', 'showClose', 'closeOnClickModal', 'closeOnPressEscape', 'closeOnHashChange'].forEach(function (prop) {
        if (main_instance[prop] === undefined) {
          main_instance[prop] = true;
        }
      });
      document.body.appendChild(main_instance.$el);

      external_vue_default.a.nextTick(function () {
        main_instance.visible = true;
      });
    }
  }
};

var main_MessageBox = function MessageBox(options, callback) {
  if (external_vue_default.a.prototype.$isServer) return;
  if (typeof options === 'string' || Object(vdom_["isVNode"])(options)) {
    options = {
      message: options
    };
    if (typeof arguments[1] === 'string') {
      options.title = arguments[1];
    }
  } else if (options.callback && !callback) {
    callback = options.callback;
  }

  if (typeof Promise !== 'undefined') {
    return new Promise(function (resolve, reject) {
      // eslint-disable-line
      msgQueue.push({
        options: merge_default()({}, main_defaults, MessageBox.defaults, options),
        callback: callback,
        resolve: resolve,
        reject: reject
      });

      main_showNextMsg();
    });
  } else {
    msgQueue.push({
      options: merge_default()({}, main_defaults, MessageBox.defaults, options),
      callback: callback
    });

    main_showNextMsg();
  }
};

main_MessageBox.setDefaults = function (defaults) {
  main_MessageBox.defaults = defaults;
};

main_MessageBox.alert = function (message, title, options) {
  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
    options = title;
    title = '';
  } else if (title === undefined) {
    title = '';
  }
  return main_MessageBox(merge_default()({
    title: title,
    message: message,
    $type: 'alert',
    closeOnPressEscape: false,
    closeOnClickModal: false
  }, options));
};

main_MessageBox.confirm = function (message, title, options) {
  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
    options = title;
    title = '';
  } else if (title === undefined) {
    title = '';
  }
  return main_MessageBox(merge_default()({
    title: title,
    message: message,
    $type: 'confirm',
    showCancelButton: true
  }, options));
};

main_MessageBox.prompt = function (message, title, options) {
  if ((typeof title === 'undefined' ? 'undefined' : main_typeof(title)) === 'object') {
    options = title;
    title = '';
  } else if (title === undefined) {
    title = '';
  }
  return main_MessageBox(merge_default()({
    title: title,
    message: message,
    showCancelButton: true,
    showInput: true,
    $type: 'prompt'
  }, options));
};

main_MessageBox.close = function () {
  main_instance.doClose();
  main_instance.visible = false;
  msgQueue = [];
  currentMsg = null;
};

/* harmony default export */ var packages_message_box_src_main = (main_MessageBox);

// CONCATENATED MODULE: ./packages/message-box/index.js

/* harmony default export */ var message_box = (packages_message_box_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb.vue?vue&type=template&id=f4f14570&
var breadcrumbvue_type_template_id_f4f14570_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-breadcrumb",
      attrs: { "aria-label": "Breadcrumb", role: "navigation" },
    },
    [_vm._t("default")],
    2
  )
}
var breadcrumbvue_type_template_id_f4f14570_staticRenderFns = []
breadcrumbvue_type_template_id_f4f14570_render._withStripped = true


// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue?vue&type=template&id=f4f14570&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb.vue?vue&type=script&lang=js&
//
//
//
//
//

/* harmony default export */ var breadcrumbvue_type_script_lang_js_ = ({
  name: 'FksBreadcrumb',

  props: {
    separator: {
      type: String,
      default: '/'
    },
    separatorClass: {
      type: String,
      default: ''
    }
  },

  provide: function provide() {
    return {
      fksBreadcrumb: this
    };
  },
  mounted: function mounted() {
    var items = this.$el.querySelectorAll('.fks-breadcrumb__item');
    if (items.length) {
      items[items.length - 1].setAttribute('aria-current', 'page');
    }
  }
});
// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_breadcrumbvue_type_script_lang_js_ = (breadcrumbvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb.vue





/* normalize component */

var breadcrumb_component = normalizeComponent(
  src_breadcrumbvue_type_script_lang_js_,
  breadcrumbvue_type_template_id_f4f14570_render,
  breadcrumbvue_type_template_id_f4f14570_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var breadcrumb = (breadcrumb_component.exports);
// CONCATENATED MODULE: ./packages/breadcrumb/index.js


/* istanbul ignore next */
breadcrumb.install = function (Vue) {
  Vue.component(breadcrumb.name, breadcrumb);
};

/* harmony default export */ var packages_breadcrumb = (breadcrumb);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=template&id=137742a6&
var breadcrumb_itemvue_type_template_id_137742a6_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("span", { staticClass: "fks-breadcrumb__item" }, [
    _c(
      "span",
      {
        ref: "link",
        class: ["fks-breadcrumb__inner", _vm.to ? "is-link" : ""],
        attrs: { role: "link" },
      },
      [_vm._t("default")],
      2
    ),
    _vm.separatorClass
      ? _c("i", {
          staticClass: "fks-breadcrumb__separator",
          class: _vm.separatorClass,
        })
      : _c(
          "span",
          {
            staticClass: "fks-breadcrumb__separator",
            attrs: { role: "presentation" },
          },
          [_vm._v(_vm._s(_vm.separator))]
        ),
  ])
}
var breadcrumb_itemvue_type_template_id_137742a6_staticRenderFns = []
breadcrumb_itemvue_type_template_id_137742a6_render._withStripped = true


// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=template&id=137742a6&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//

/* harmony default export */ var breadcrumb_itemvue_type_script_lang_js_ = ({
  name: 'FksBreadcrumbItem',
  props: {
    to: {},
    replace: Boolean
  },
  data: function data() {
    return {
      separator: '',
      separatorClass: ''
    };
  },


  inject: ['fksBreadcrumb'],

  mounted: function mounted() {
    var _this = this;

    this.separator = this.fksBreadcrumb.separator;
    this.separatorClass = this.fksBreadcrumb.separatorClass;
    var link = this.$refs.link;
    link.setAttribute('role', 'link');
    link.addEventListener('click', function (_) {
      var to = _this.to,
          $router = _this.$router;

      if (!to || !$router) return;
      _this.replace ? $router.replace(to) : $router.push(to);
    });
  }
});
// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_breadcrumb_itemvue_type_script_lang_js_ = (breadcrumb_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/breadcrumb/src/breadcrumb-item.vue





/* normalize component */

var breadcrumb_item_component = normalizeComponent(
  src_breadcrumb_itemvue_type_script_lang_js_,
  breadcrumb_itemvue_type_template_id_137742a6_render,
  breadcrumb_itemvue_type_template_id_137742a6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var breadcrumb_item = (breadcrumb_item_component.exports);
// CONCATENATED MODULE: ./packages/breadcrumb-item/index.js


/* istanbul ignore next */
breadcrumb_item.install = function (Vue) {
  Vue.component(breadcrumb_item.name, breadcrumb_item);
};

/* harmony default export */ var packages_breadcrumb_item = (breadcrumb_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form.vue?vue&type=template&id=0672cf8a&
var formvue_type_template_id_0672cf8a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "form",
    {
      staticClass: "fks-form",
      class: [
        "fks-form--label-" + _vm.labelPositionByLang,
        { "fks-form--inline": _vm.inline },
      ],
    },
    [_vm._t("default")],
    2
  )
}
var formvue_type_template_id_0672cf8a_staticRenderFns = []
formvue_type_template_id_0672cf8a_render._withStripped = true


// CONCATENATED MODULE: ./packages/form/src/form.vue?vue&type=template&id=0672cf8a&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var formvue_type_script_lang_js_ = ({
  name: 'FksForm',

  componentName: 'FksForm',

  provide: function provide() {
    return {
      fksForm: this
    };
  },


  props: {
    model: Object,
    rules: Object,
    labelPosition: {
      type: String,
      default: ''
    },
    labelWidth: {
      type: String,
      default: '120px'
    },
    labelSuffix: {
      type: String,
      default: ''
    },
    inline: Boolean,
    inlineMessage: Boolean,
    statusIcon: Boolean,
    showMessage: {
      type: Boolean,
      default: true
    },
    size: String,
    disabled: Boolean,
    validateOnRuleChange: {
      //改为默认false
      type: Boolean,
      default: false
    },
    hideRequiredAsterisk: {
      type: Boolean,
      default: false
    },
    flowConfig: {
      //记录各个prop编辑状态
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  watch: {
    rules: function rules() {
      // remove then add event listeners on form-item after form rules change
      this.fields.forEach(function (field) {
        field.removeValidateEvents();
        field.addValidateEvents();
      });

      if (this.validateOnRuleChange) {
        this.validate(function () {});
      }
    }
  },
  computed: {
    autoLabelWidth: function autoLabelWidth() {
      if (!this.potentialLabelWidthArr.length) return 0;
      var max = Math.max.apply(Math, this.potentialLabelWidthArr);
      return max ? max + 'px' : '';
    },

    /*根据语言切换标签位置*/
    labelPositionByLang: function labelPositionByLang() {
      if (this.labelPosition) {
        return this.labelPosition;
      }
      if (this.$lang) {
        return this.$lang.includes('zh') ? 'right' : 'top';
      }
      return 'right';
    }
  },
  data: function data() {
    return {
      fields: [],
      potentialLabelWidthArr: [] // use this array to calculate auto width
    };
  },
  created: function created() {
    var _this = this;

    this.$on('fks.form.addField', function (field) {
      if (field) {
        _this.fields.push(field);
        field.order = _this.fields.length; //记录每个field位置
      }
    });
    /* istanbul ignore next */
    this.$on('fks.form.removeField', function (field) {
      if (field.prop) {
        _this.fields.splice(_this.fields.indexOf(field), 1);
      }
    });
  },

  methods: {
    resetFields: function resetFields() {
      if (!this.model) {
        console.warn('[Element Warn][Form]model is required for resetFields to work.');
        return;
      }
      this.fields.forEach(function (field) {
        field.resetField();
      });
    },
    clearValidate: function clearValidate() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var fields = props.length ? typeof props === 'string' ? this.fields.filter(function (field) {
        return props === field.prop;
      }) : this.fields.filter(function (field) {
        return props.indexOf(field.prop) > -1;
      }) : this.fields;
      fields.forEach(function (field) {
        field.clearValidate();
      });
    },
    validate: function validate(callback) {
      var _this2 = this;

      if (!this.model) {
        console.warn('[FawkesLib Warn][Form]model is required for validate to work!');
        return;
      }

      var promise = void 0;
      // if no callback, return promise
      if (typeof callback !== 'function' && window.Promise) {
        promise = new window.Promise(function (resolve, reject) {
          callback = function callback(valid) {
            valid ? resolve(valid) : reject(valid);
          };
        });
      }

      var valid = true;
      var count = 0;
      // 如果需要验证的fields为空，调用验证时立刻返回callback
      if (this.fields.length === 0 && callback) {
        callback(true);
      }
      var invalidFields = {};
      this.fields.forEach(function (field) {
        field.validate('', function (message, field) {
          if (message) {
            valid = false;
          }
          invalidFields = merge_default()({}, invalidFields, field);
          if (typeof callback === 'function' && ++count === _this2.fields.length) {
            callback(valid, invalidFields);
          }
        });
      });

      if (promise) {
        return promise;
      }
    },
    validateField: function validateField(props, cb) {
      props = [].concat(props);
      var fields = this.fields.filter(function (field) {
        return props.indexOf(field.prop) !== -1;
      });
      if (!fields.length) {
        console.warn('[Element Warn]please pass correct props!');
        return;
      }

      fields.forEach(function (field) {
        field.validate('', cb);
      });
    },
    getLabelWidthIndex: function getLabelWidthIndex(width) {
      var index = this.potentialLabelWidthArr.indexOf(width);
      // it's impossible
      if (index === -1) {
        throw new Error('[ElementForm]unpected width ', width);
      }
      return index;
    },
    registerLabelWidth: function registerLabelWidth(val, oldVal) {
      if (val && oldVal) {
        var index = this.getLabelWidthIndex(oldVal);
        this.potentialLabelWidthArr.splice(index, 1, val);
      } else if (val) {
        this.potentialLabelWidthArr.push(val);
      }
    },
    deregisterLabelWidth: function deregisterLabelWidth(val) {
      var index = this.getLabelWidthIndex(val);
      this.potentialLabelWidthArr.splice(index, 1);
    }
  }
});
// CONCATENATED MODULE: ./packages/form/src/form.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_formvue_type_script_lang_js_ = (formvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/form/src/form.vue





/* normalize component */

var form_component = normalizeComponent(
  src_formvue_type_script_lang_js_,
  formvue_type_template_id_0672cf8a_render,
  formvue_type_template_id_0672cf8a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_form = (form_component.exports);
// CONCATENATED MODULE: ./packages/form/index.js


/* istanbul ignore next */
src_form.install = function (Vue) {
  Vue.component(src_form.name, src_form);
};

/* harmony default export */ var packages_form = (src_form);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form-item.vue?vue&type=template&id=eb63998c&
var form_itemvue_type_template_id_eb63998c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "show",
          rawName: "v-show",
          value: _vm.visible,
          expression: "visible",
        },
      ],
      staticClass: "fks-form-item fks-form-item",
      class: [
        {
          "fks-form-item--feedback": _vm.fksForm && _vm.fksForm.statusIcon,
          "is-error": _vm.validateState === "error",
          "is-validating": _vm.validateState === "validating",
          "is-success": _vm.validateState === "success",
          "is-required": _vm.isRequired || _vm.required,
          "is-no-asterisk": _vm.fksForm && _vm.fksForm.hideRequiredAsterisk,
        },
        _vm.sizeClass ? "fks-form-item--" + _vm.sizeClass : "",
      ],
      style: _vm.itemStyle,
    },
    [
      _c(
        "label-wrap",
        {
          attrs: {
            "is-auto-width": _vm.labelStyle && _vm.labelStyle.width === "auto",
            "update-all": _vm.form.labelWidth === "auto",
          },
        },
        [
          _vm.$slots.label
            ? _c(
                "label",
                {
                  ref: "label",
                  staticClass: "fks-form-item__label",
                  style: _vm.labelStyle,
                  attrs: { for: _vm.labelFor },
                },
                [_vm._t("label")],
                2
              )
            : _vm.label
            ? _c("label", {
                ref: "label",
                staticClass: "fks-form-item__label",
                style: _vm.labelStyle,
                attrs: { for: _vm.labelFor },
                domProps: {
                  innerHTML: _vm._s(
                    _vm.label.replace("\\n", "<br/>") + _vm.form.labelSuffix
                  ),
                },
              })
            : _vm._e(),
        ]
      ),
      _c(
        "div",
        { staticClass: "fks-form-item__content", style: _vm.contentStyle },
        [
          _vm._t("default"),
          _c(
            "transition",
            { attrs: { name: "fks-zoom-in-top" } },
            [
              _vm.validateState === "error" &&
              _vm.showMessage &&
              _vm.form.showMessage
                ? _vm._t(
                    "error",
                    function () {
                      return [
                        _c(
                          "div",
                          {
                            staticClass: "fks-form-item__error",
                            class: {
                              "fks-form-item__error--inline":
                                typeof _vm.inlineMessage === "boolean"
                                  ? _vm.inlineMessage
                                  : (_vm.fksForm &&
                                      _vm.fksForm.inlineMessage) ||
                                    false,
                            },
                          },
                          [
                            _vm._v(
                              "\n          " +
                                _vm._s(_vm.validateMessage) +
                                "\n        "
                            ),
                          ]
                        ),
                      ]
                    },
                    { error: _vm.validateMessage }
                  )
                : _vm._e(),
            ],
            2
          ),
        ],
        2
      ),
    ],
    1
  )
}
var form_itemvue_type_template_id_eb63998c_staticRenderFns = []
form_itemvue_type_template_id_eb63998c_render._withStripped = true


// CONCATENATED MODULE: ./packages/form/src/form-item.vue?vue&type=template&id=eb63998c&

// EXTERNAL MODULE: external "async-validator"
var external_async_validator_ = __webpack_require__(57);
var external_async_validator_default = /*#__PURE__*/__webpack_require__.n(external_async_validator_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/label-wrap.vue?vue&type=script&lang=js&

/* harmony default export */ var label_wrapvue_type_script_lang_js_ = ({
  props: {
    isAutoWidth: Boolean,
    updateAll: Boolean
  },

  inject: ['fksForm', 'fksFormItem'],

  render: function render() {
    var h = arguments[0];

    var slots = this.$slots.default;
    if (!slots) return null;
    if (this.isAutoWidth) {
      var autoLabelWidth = this.fksForm.autoLabelWidth;
      var style = {};
      if (autoLabelWidth && autoLabelWidth !== 'auto') {
        var marginLeft = parseInt(autoLabelWidth, 10) - this.computedWidth;
        if (marginLeft) {
          style.marginLeft = marginLeft + 'px';
        }
      }
      return h(
        'div',
        { 'class': 'fks-form-item__label-wrap', style: style },
        [slots]
      );
    } else {
      return slots[0];
    }
  },


  methods: {
    getLabelWidth: function getLabelWidth() {
      if (this.$el && this.$el.firstElementChild) {
        var computedWidth = window.getComputedStyle(this.$el.firstElementChild).width;
        return Math.ceil(parseFloat(computedWidth));
      } else {
        return 0;
      }
    },
    updateLabelWidth: function updateLabelWidth() {
      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'update';

      if (this.$slots.default && this.isAutoWidth && this.$el.firstElementChild) {
        if (action === 'update') {
          this.computedWidth = this.getLabelWidth();
        } else if (action === 'remove') {
          this.fksForm.deregisterLabelWidth(this.computedWidth);
        }
      }
    }
  },

  watch: {
    computedWidth: function computedWidth(val, oldVal) {
      if (this.updateAll) {
        this.fksForm.registerLabelWidth(val, oldVal);
        this.fksFormItem.updateComputedLabelWidth(val);
      }
    }
  },

  data: function data() {
    return {
      computedWidth: 0
    };
  },
  mounted: function mounted() {
    this.updateLabelWidth('update');
  },
  updated: function updated() {
    this.updateLabelWidth('update');
  },
  beforeDestroy: function beforeDestroy() {
    this.updateLabelWidth('remove');
  }
});
// CONCATENATED MODULE: ./packages/form/src/label-wrap.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_label_wrapvue_type_script_lang_js_ = (label_wrapvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/form/src/label-wrap.vue
var label_wrap_render, label_wrap_staticRenderFns




/* normalize component */

var label_wrap_component = normalizeComponent(
  src_label_wrapvue_type_script_lang_js_,
  label_wrap_render,
  label_wrap_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var label_wrap = (label_wrap_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/form/src/form-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var form_itemvue_type_script_lang_js_ = ({
  name: 'FksFormItem',

  componentName: 'FksFormItem',

  mixins: [emitter_default.a, locale_default.a],

  provide: function provide() {
    return {
      fksFormItem: this
    };
  },


  inject: ['fksForm'],

  props: {
    label: String,
    labelWidth: String,
    prop: String,
    required: {
      type: Boolean,
      default: undefined
    },
    rules: [Object, Array],
    error: String,
    validateStatus: String,
    for: String,
    inlineMessage: {
      type: [String, Boolean],
      default: ''
    },
    showMessage: {
      type: Boolean,
      default: true
    },
    size: String,
    span: {
      type: Number,
      default: 24
    },
    lead: Boolean
  },
  components: {
    // use this component to calculate auto width
    LabelWrap: label_wrap
  },
  watch: {
    error: {
      immediate: true,
      handler: function handler(value) {
        this.validateMessage = value;
        this.validateState = value ? 'error' : '';
      }
    },
    validateStatus: function validateStatus(value) {
      this.validateState = value;
    },

    lead: {
      immediate: true,
      handler: function handler() {
        var _this = this;

        this.$nextTick(function () {
          if (_this.lead) {
            var newNode = document.createElement('br');
            var parentNode = _this.$el.parentNode;
            parentNode.insertBefore(newNode, _this.$el);
          } else {
            if (_this.$el.previousElementSibling && _this.$el.previousElementSibling.tagName == 'BR') {
              _this.$el.previousElementSibling.remove();
            }
          }
        });
      }
    }
  },
  computed: {
    labelFor: function labelFor() {
      return this.for || this.prop;
    },
    itemStyle: function itemStyle() {
      /**添加表单项自定义宽度 */
      var ret = { width: this.span * 100 / 24 + '%' };

      if (this.span < 24) {
        if (this.lead) {
          if (this.order < this.form.fields.length && this.form.fields[this.order].lead) {
            ret.display = 'block';
          }
        }
      }
      return ret;
    },

    labelStyle: {
      get: function get() {
        var _this2 = this;

        /**修改表单项label样式 */
        if (this.form.labelPositionByLang === 'top') {
          // ret.padding = '4px'
          // this.ret.padding = '16px'
          this.$set(this.ret, 'line-height', '20px');
          delete this.ret.width;
          return this.ret;
        } else {
          if (this.ret['line-height'] == '20px') {
            delete this.ret['line-height'];
          }
          delete this.ret.padding;
        }

        var labelWidth = this.labelWidth || this.form.labelWidth;
        if (labelWidth && this.form.labelPositionByLang !== 'top') {
          this.ret.width = labelWidth;
          /**出现换行修改lineHeight */
          this.$nextTick(function () {
            if (_this2.$refs.label && _this2.$refs.label.offsetHeight > 36) {
              _this2.$set(_this2.ret, 'line-height', '18px');
            }
          });
        }
        return this.ret;
      },
      set: function set(val) {
        this.$set(this.ret, 'line-height', val);
      }
    },
    contentStyle: function contentStyle() {
      var ret = {};
      var label = this.label;
      if (this.form.labelPositionByLang === 'top' || this.form.inline) return ret;
      if (!label && !this.labelWidth && this.isNested) return ret;
      /**修改表单项内容区域样式 */
      var labelWidth = this.labelWidth || this.form.labelWidth;
      if (labelWidth === 'auto') {
        if (this.labelWidth === 'auto') {
          ret.marginLeft = this.computedLabelWidth;
        } else if (this.form.labelWidth === 'auto') {
          ret.marginLeft = this.fksForm.autoLabelWidth;
        }
      } else {
        ret.marginLeft = labelWidth;
      }
      return ret;
    },
    form: function form() {
      var parent = this.$parent;
      var parentName = parent.$options.componentName;
      while (parentName !== 'FksForm') {
        if (parentName === 'FksFormItem') {
          this.isNested = true;
        }
        parent = parent.$parent;
        parentName = parent.$options.componentName;
      }
      return parent;
    },
    fieldValue: function fieldValue() {
      var model = this.form.model;
      if (!model || !this.prop) {
        return;
      }

      var path = this.prop;
      if (path.indexOf(':') !== -1) {
        path = path.replace(/:/, '.');
      }

      return Object(util_["getPropByPath"])(model, path, true).v;
    },
    isRequired: function isRequired() {
      var rules = this.getRules();
      var isRequired = false;

      if (rules && rules.length) {
        rules.every(function (rule) {
          if (rule.required) {
            isRequired = true;
            return false;
          }
          return true;
        });
      }
      return isRequired;
    },
    _formSize: function _formSize() {
      return this.fksForm.size;
    },
    fksFormItemSize: function fksFormItemSize() {
      return this.size || this._formSize;
    },
    sizeClass: function sizeClass() {
      return this.fksFormItemSize || (this.$FAWKES || {}).size;
    },

    /**控制显影 */
    visible: function visible() {
      return !this.fksForm.flowConfig[this.prop] || this.fksForm.flowConfig[this.prop] != 'hide';
    },

    /**控制编辑 */
    disabled: function disabled() {
      return !!this.fksForm.flowConfig[this.prop] && this.fksForm.flowConfig[this.prop] == 'disabled';
    },

    /**控制只读 */
    readonly: function readonly() {
      return !!this.fksForm.flowConfig[this.prop] && this.fksForm.flowConfig[this.prop] == 'readonly';
    }
  },
  data: function data() {
    return {
      validateState: '',
      validateMessage: '',
      validateDisabled: false,
      validator: {},
      isNested: false,
      computedLabelWidth: '',
      order: 0, //在表单中的顺序
      ret: {}
    };
  },

  methods: {
    validate: function validate(trigger) {
      var _this3 = this;

      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : util_["noop"];

      this.validateDisabled = false;
      var rules = this.getFilteredRule(trigger);
      if ((!rules || rules.length === 0) && this.required === undefined) {
        callback();
        return true;
      }

      this.validateState = 'validating';

      var descriptor = {};
      if (rules && rules.length > 0) {
        rules.forEach(function (rule) {
          delete rule.trigger;
        });
      }
      descriptor[this.prop] = rules;

      var validator = new external_async_validator_default.a(descriptor);
      var model = {};

      model[this.prop] = this.fieldValue;

      //修改validator默认必填警告
      validator.messages({
        required: this.t('fks.form.required')
      });

      validator.validate(model, { firstFields: true }, function (errors, invalidFields) {
        _this3.validateState = !errors ? 'success' : 'error';
        _this3.validateMessage = errors ? rules[0].message ? errors[0].message : errors[0].message.replace(errors[0].field, '') //去除字段名称
        : '';

        callback(_this3.validateMessage, invalidFields);
        _this3.fksForm && _this3.fksForm.$emit('validate', _this3.prop, !errors, _this3.validateMessage || null);
      });
    },
    clearValidate: function clearValidate() {
      this.validateState = '';
      this.validateMessage = '';
      this.validateDisabled = false;
    },
    resetField: function resetField() {
      var _this4 = this;

      this.validateState = '';
      this.validateMessage = '';

      var model = this.form.model;
      var value = this.fieldValue;
      var path = this.prop;
      if (path.indexOf(':') !== -1) {
        path = path.replace(/:/, '.');
      }

      var prop = Object(util_["getPropByPath"])(model, path, true);

      this.validateDisabled = true;
      if (Array.isArray(value)) {
        prop.o[prop.k] = [].concat(this.initialValue);
      } else {
        prop.o[prop.k] = this.initialValue;
      }

      // reset validateDisabled after onFieldChange triggered
      this.$nextTick(function () {
        _this4.validateDisabled = false;
      });

      this.broadcast('FksTimeSelect', 'fieldReset', this.initialValue);
    },
    getRules: function getRules() {
      var formRules = this.form.rules;
      var selfRules = this.rules;
      var requiredRule = this.required !== undefined ? { required: !!this.required } : [];

      var prop = Object(util_["getPropByPath"])(formRules, this.prop || '');
      formRules = formRules ? prop.o[this.prop || ''] || prop.v : [];

      return [].concat(selfRules || formRules || []).concat(requiredRule);
    },
    getFilteredRule: function getFilteredRule(trigger) {
      var rules = this.getRules();

      return rules.filter(function (rule) {
        if (!rule.trigger || trigger === '') return true;
        if (Array.isArray(rule.trigger)) {
          return rule.trigger.indexOf(trigger) > -1;
        } else {
          return rule.trigger === trigger;
        }
      }).map(function (rule) {
        return merge_default()({}, rule);
      });
    },
    onFieldBlur: function onFieldBlur() {
      this.validate('blur');
    },
    onFieldChange: function onFieldChange() {
      if (this.validateDisabled) {
        this.validateDisabled = false;
        return;
      }

      this.validate('change');
    },
    updateComputedLabelWidth: function updateComputedLabelWidth(width) {
      this.computedLabelWidth = width ? width + 'px' : '';
    },
    addValidateEvents: function addValidateEvents() {
      var rules = this.getRules();

      if (rules.length || this.required !== undefined) {
        this.$on('fks.form.blur', this.onFieldBlur);
        this.$on('fks.form.change', this.onFieldChange);
      }
    },
    removeValidateEvents: function removeValidateEvents() {
      this.$off();
    }
  },
  mounted: function mounted() {
    if (this.prop) {
      this.dispatch('FksForm', 'fks.form.addField', [this]);
      var initialValue = this.fieldValue;
      if (Array.isArray(initialValue)) {
        initialValue = [].concat(initialValue);
      }
      Object.defineProperty(this, 'initialValue', {
        value: initialValue
      });

      this.addValidateEvents();
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.dispatch('FksForm', 'fks.form.removeField', [this]);
  }
});
// CONCATENATED MODULE: ./packages/form/src/form-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_form_itemvue_type_script_lang_js_ = (form_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/form/src/form-item.vue





/* normalize component */

var form_item_component = normalizeComponent(
  src_form_itemvue_type_script_lang_js_,
  form_itemvue_type_template_id_eb63998c_render,
  form_itemvue_type_template_id_eb63998c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var form_item = (form_item_component.exports);
// CONCATENATED MODULE: ./packages/form-item/index.js


/* istanbul ignore next */
form_item.install = function (Vue) {
  Vue.component(form_item.name, form_item);
};

/* harmony default export */ var packages_form_item = (form_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=template&id=3b17182e&
var tab_barvue_type_template_id_3b17182e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", {
    staticClass: "fks-tabs__active-bar",
    class: "is-" + _vm.rootTabs.tabPosition,
    style: _vm.barStyle,
  })
}
var tab_barvue_type_template_id_3b17182e_staticRenderFns = []
tab_barvue_type_template_id_3b17182e_render._withStripped = true


// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=template&id=3b17182e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&
//
//
//


/* harmony default export */ var tab_barvue_type_script_lang_js_ = ({
  name: 'TabBar',

  props: {
    tabs: Array
  },

  inject: ['rootTabs'],

  computed: {
    barStyle: {
      get: function get() {
        var _this = this;

        var style = {};
        var offset = 0;
        var tabSize = 0;
        var sizeName = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';
        var sizeDir = sizeName === 'width' ? 'x' : 'y';
        var firstUpperCase = function firstUpperCase(str) {
          return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {
            return L.toUpperCase();
          });
        };
        this.tabs.every(function (tab, index) {
          var $el = Object(util_["arrayFind"])(_this.$parent.$refs.tabs || [], function (t) {
            return t.id.replace('tab-', '') === tab.paneName;
          });
          if (!$el) {
            return false;
          }

          if (!tab.active) {
            offset += $el['client' + firstUpperCase(sizeName)];
            return true;
          } else {
            tabSize = $el['client' + firstUpperCase(sizeName)];
            var tabStyles = window.getComputedStyle($el);
            if (sizeName === 'width' && _this.tabs.length > 1) {
              tabSize -= parseFloat(tabStyles.paddingLeft) + parseFloat(tabStyles.paddingRight);
            }
            if (sizeName === 'width') {
              offset += parseFloat(tabStyles.paddingLeft);
            }
            return false;
          }
        });

        var transform = 'translate' + firstUpperCase(sizeDir) + '(' + offset + 'px)';
        style[sizeName] = tabSize + 'px';
        style.transform = transform;
        style.msTransform = transform;
        style.webkitTransform = transform;

        return style;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tab_barvue_type_script_lang_js_ = (tab_barvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue





/* normalize component */

var tab_bar_component = normalizeComponent(
  src_tab_barvue_type_script_lang_js_,
  tab_barvue_type_template_id_3b17182e_render,
  tab_barvue_type_template_id_3b17182e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tab_bar = (tab_bar_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&




function tab_navvue_type_script_lang_js_noop() {}
var tab_navvue_type_script_lang_js_firstUpperCase = function firstUpperCase(str) {
  return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {
    return L.toUpperCase();
  });
};

/* harmony default export */ var tab_navvue_type_script_lang_js_ = ({
  name: 'TabNav',

  components: {
    TabBar: tab_bar
  },

  inject: ['rootTabs'],

  props: {
    panes: Array,
    currentName: String,
    editable: Boolean,
    onTabClick: {
      type: Function,
      default: tab_navvue_type_script_lang_js_noop
    },
    onTabRemove: {
      type: Function,
      default: tab_navvue_type_script_lang_js_noop
    },
    type: String,
    stretch: Boolean
  },

  data: function data() {
    return {
      scrollable: false,
      navOffset: 0,
      isFocus: false,
      focusable: true
    };
  },


  computed: {
    navStyle: function navStyle() {
      var dir = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'X' : 'Y';
      return {
        transform: 'translate' + dir + '(-' + this.navOffset + 'px)'
      };
    },
    sizeName: function sizeName() {
      return ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';
    }
  },

  methods: {
    scrollPrev: function scrollPrev() {
      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
      var currentOffset = this.navOffset;

      if (!currentOffset) return;

      var newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;

      this.navOffset = newOffset;
    },
    scrollNext: function scrollNext() {
      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];
      var currentOffset = this.navOffset;

      if (navSize - currentOffset <= containerSize) return;

      var newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;

      this.navOffset = newOffset;
    },
    scrollToActiveTab: function scrollToActiveTab() {
      if (!this.scrollable) return;
      var nav = this.$refs.nav;
      var activeTab = this.$el.querySelector('.is-active');
      if (!activeTab) return;
      var navScroll = this.$refs.navScroll;
      var isHorizontal = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1;
      var activeTabBounding = activeTab.getBoundingClientRect();
      var navScrollBounding = navScroll.getBoundingClientRect();
      var maxOffset = isHorizontal ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;
      var currentOffset = this.navOffset;
      var newOffset = currentOffset;

      if (isHorizontal) {
        if (activeTabBounding.left < navScrollBounding.left) {
          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);
        }
        if (activeTabBounding.right > navScrollBounding.right) {
          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;
        }
      } else {
        if (activeTabBounding.top < navScrollBounding.top) {
          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);
        }
        if (activeTabBounding.bottom > navScrollBounding.bottom) {
          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);
        }
      }
      newOffset = Math.max(newOffset, 0);
      this.navOffset = Math.min(newOffset, maxOffset);
    },
    update: function update() {
      if (!this.$refs.nav) return;
      var sizeName = this.sizeName;
      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];
      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];
      var currentOffset = this.navOffset;

      if (containerSize < navSize) {
        var _currentOffset = this.navOffset;
        this.scrollable = this.scrollable || {};
        this.scrollable.prev = _currentOffset;
        this.scrollable.next = _currentOffset + containerSize < navSize;
        if (navSize - _currentOffset < containerSize) {
          this.navOffset = navSize - containerSize;
        }
      } else {
        this.scrollable = false;
        if (currentOffset > 0) {
          this.navOffset = 0;
        }
      }
    },
    changeTab: function changeTab(e) {
      var keyCode = e.keyCode;
      var nextIndex = void 0;
      var currentIndex = void 0,
          tabList = void 0;
      if ([37, 38, 39, 40].indexOf(keyCode) !== -1) {
        // 左右上下键更换tab
        tabList = e.currentTarget.querySelectorAll('[role=tab]');
        currentIndex = Array.prototype.indexOf.call(tabList, e.target);
      } else {
        return;
      }
      if (keyCode === 37 || keyCode === 38) {
        // left
        if (currentIndex === 0) {
          // first
          nextIndex = tabList.length - 1;
        } else {
          nextIndex = currentIndex - 1;
        }
      } else {
        // right
        if (currentIndex < tabList.length - 1) {
          // not last
          nextIndex = currentIndex + 1;
        } else {
          nextIndex = 0;
        }
      }
      tabList[nextIndex].focus(); // 改变焦点元素
      tabList[nextIndex].click(); // 选中下一个tab
      this.setFocus();
    },
    setFocus: function setFocus() {
      if (this.focusable) {
        this.isFocus = true;
      }
    },
    removeFocus: function removeFocus() {
      this.isFocus = false;
    },
    visibilityChangeHandler: function visibilityChangeHandler() {
      var _this = this;

      var visibility = document.visibilityState;
      if (visibility === 'hidden') {
        this.focusable = false;
      } else if (visibility === 'visible') {
        setTimeout(function () {
          _this.focusable = true;
        }, 50);
      }
    },
    windowBlurHandler: function windowBlurHandler() {
      this.focusable = false;
    },
    windowFocusHandler: function windowFocusHandler() {
      var _this2 = this;

      setTimeout(function () {
        _this2.focusable = true;
      }, 50);
    }
  },

  updated: function updated() {
    this.update();
  },
  render: function render(h) {
    var _this3 = this;

    var type = this.type,
        panes = this.panes,
        editable = this.editable,
        stretch = this.stretch,
        onTabClick = this.onTabClick,
        onTabRemove = this.onTabRemove,
        navStyle = this.navStyle,
        scrollable = this.scrollable,
        scrollNext = this.scrollNext,
        scrollPrev = this.scrollPrev,
        changeTab = this.changeTab,
        setFocus = this.setFocus,
        removeFocus = this.removeFocus;

    var scrollBtn = scrollable ? [h(
      'span',
      {
        'class': ['fks-tabs__nav-prev', scrollable.prev ? '' : 'is-disabled'],
        on: {
          'click': scrollPrev
        }
      },
      [h('i', { 'class': 'fks-icon-arrow-left' })]
    ), h(
      'span',
      {
        'class': ['fks-tabs__nav-next', scrollable.next ? '' : 'is-disabled'],
        on: {
          'click': scrollNext
        }
      },
      [h('i', { 'class': 'fks-icon-arrow-right' })]
    )] : null;

    var tabs = this._l(panes, function (pane, index) {
      var _ref;

      var tabName = pane.name || pane.index || index;
      var closable = pane.isClosable || editable;

      pane.index = '' + index;

      var btnClose = closable ? h('span', {
        'class': 'fks-icon-close',
        on: {
          'click': function click(ev) {
            onTabRemove(pane, ev);
          }
        }
      }) : null;

      var tabLabelContent = pane.$slots.label || pane.label;
      var tabindex = pane.active ? 0 : -1;
      return h(
        'div',
        {
          'class': (_ref = {
            'fks-tabs__item': true
          }, _ref['is-' + _this3.rootTabs.tabPosition] = true, _ref['is-active'] = pane.active, _ref['is-disabled'] = pane.disabled, _ref['is-closable'] = closable, _ref['is-focus'] = _this3.isFocus, _ref),
          attrs: { id: 'tab-' + tabName,

            'aria-controls': 'pane-' + tabName,
            role: 'tab',
            'aria-selected': pane.active,

            tabindex: tabindex
          },
          key: 'tab-' + tabName, ref: 'tabs', refInFor: true,
          on: {
            'focus': function focus() {
              setFocus();
            },
            'blur': function blur() {
              removeFocus();
            },
            'click': function click(ev) {
              removeFocus();
              onTabClick(pane, tabName, ev);
            },
            'keydown': function keydown(ev) {
              if (closable && (ev.keyCode === 46 || ev.keyCode === 8)) {
                onTabRemove(pane, ev);
              }
            }
          }
        },
        [tabLabelContent, btnClose]
      );
    });
    return h(
      'div',
      {
        'class': ['fks-tabs__nav-wrap', scrollable ? 'is-scrollable' : '', 'is-' + this.rootTabs.tabPosition]
      },
      [scrollBtn, h(
        'div',
        { 'class': ['fks-tabs__nav-scroll'], ref: 'navScroll' },
        [h(
          'div',
          {
            'class': ['fks-tabs__nav', 'is-' + this.rootTabs.tabPosition, stretch && ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'is-stretch' : ''],
            ref: 'nav',
            style: navStyle,
            attrs: { role: 'tablist'
            },
            on: {
              'keydown': changeTab
            }
          },
          [!type ? h('tab-bar', {
            attrs: { tabs: panes }
          }) : null, tabs]
        )]
      )]
    );
  },
  mounted: function mounted() {
    var _this4 = this;

    Object(resize_event_["addResizeListener"])(this.$el, this.update);
    document.addEventListener('visibilitychange', this.visibilityChangeHandler);
    window.addEventListener('blur', this.windowBlurHandler);
    window.addEventListener('focus', this.windowFocusHandler);
    setTimeout(function () {
      _this4.scrollToActiveTab();
    }, 0);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$el && this.update) Object(resize_event_["removeResizeListener"])(this.$el, this.update);
    document.removeEventListener('visibilitychange', this.visibilityChangeHandler);
    window.removeEventListener('blur', this.windowBlurHandler);
    window.removeEventListener('focus', this.windowFocusHandler);
  }
});
// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tab_navvue_type_script_lang_js_ = (tab_navvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue
var tab_nav_render, tab_nav_staticRenderFns




/* normalize component */

var tab_nav_component = normalizeComponent(
  src_tab_navvue_type_script_lang_js_,
  tab_nav_render,
  tab_nav_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tab_nav = (tab_nav_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tabs.vue?vue&type=script&lang=js&



/* harmony default export */ var tabsvue_type_script_lang_js_ = ({
  name: 'FksTabs',

  components: {
    TabNav: tab_nav
  },

  props: {
    type: String,
    activeName: String,
    closable: Boolean,
    addable: Boolean,
    value: {},
    editable: Boolean,
    tabPosition: {
      type: String,
      default: 'top'
    },
    beforeLeave: Function,
    stretch: Boolean
  },

  provide: function provide() {
    return {
      rootTabs: this
    };
  },
  data: function data() {
    return {
      currentName: this.value || this.activeName,
      panes: []
    };
  },


  watch: {
    activeName: function activeName(value) {
      this.setCurrentName(value);
    },
    value: function value(_value) {
      this.setCurrentName(_value);
    },
    currentName: function currentName(value) {
      var _this = this;

      if (this.$refs.nav) {
        this.$nextTick(function () {
          _this.$refs.nav.$nextTick(function (_) {
            _this.$refs.nav.scrollToActiveTab();
          });
        });
      }
    }
  },

  methods: {
    calcPaneInstances: function calcPaneInstances() {
      var _this2 = this;

      var isForceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.$slots.default) {
        var paneSlots = this.$slots.default.filter(function (vnode) {
          return vnode.tag && vnode.componentOptions && vnode.componentOptions.Ctor.options.name === 'FksTabPane';
        });
        // update indeed
        var panes = paneSlots.map(function (_ref) {
          var componentInstance = _ref.componentInstance;
          return componentInstance;
        });
        var panesChanged = !(panes.length === this.panes.length && panes.every(function (pane, index) {
          return pane === _this2.panes[index];
        }));
        if (isForceUpdate || panesChanged) {
          this.panes = panes;
        }
      } else if (this.panes.length !== 0) {
        this.panes = [];
      }
    },
    handleTabClick: function handleTabClick(tab, tabName, event) {
      if (tab.disabled) return;
      this.setCurrentName(tabName);
      this.$emit('tab-click', tab, event);
    },
    handleTabRemove: function handleTabRemove(pane, ev) {
      if (pane.disabled) return;
      ev.stopPropagation();
      this.$emit('edit', pane.name, 'remove');
      this.$emit('tab-remove', pane.name);
    },
    handleTabAdd: function handleTabAdd() {
      this.$emit('edit', null, 'add');
      this.$emit('tab-add');
    },
    setCurrentName: function setCurrentName(value) {
      var _this3 = this;

      var changeCurrentName = function changeCurrentName() {
        _this3.currentName = value;
        _this3.$emit('input', value);
      };
      if (this.currentName !== value && this.beforeLeave) {
        var before = this.beforeLeave(value, this.currentName);
        if (before && before.then) {
          before.then(function () {
            changeCurrentName();
            _this3.$refs.nav && _this3.$refs.nav.removeFocus();
          }, function () {
            // https://github.com/ElemeFE/element/pull/14816
            // ignore promise rejection in `before-leave` hook
          });
        } else if (before !== false) {
          changeCurrentName();
        }
      } else {
        changeCurrentName();
      }
    }
  },

  render: function render(h) {
    var _ref2;

    var type = this.type,
        handleTabClick = this.handleTabClick,
        handleTabRemove = this.handleTabRemove,
        handleTabAdd = this.handleTabAdd,
        currentName = this.currentName,
        panes = this.panes,
        editable = this.editable,
        addable = this.addable,
        tabPosition = this.tabPosition,
        stretch = this.stretch;


    var newButton = editable || addable ? h(
      'span',
      {
        'class': 'fks-tabs__new-tab',
        on: {
          'click': handleTabAdd,
          'keydown': function keydown(ev) {
            if (ev.keyCode === 13) {
              handleTabAdd();
            }
          }
        },
        attrs: {
          tabindex: '0'
        }
      },
      [h('i', { 'class': 'fks-icon-plus' })]
    ) : null;

    var navData = {
      props: {
        currentName: currentName,
        onTabClick: handleTabClick,
        onTabRemove: handleTabRemove,
        editable: editable,
        type: type,
        panes: panes,
        stretch: stretch
      },
      ref: 'nav'
    };
    var header = h(
      'div',
      { 'class': ['fks-tabs__header', 'is-' + tabPosition] },
      [newButton, h('tab-nav', navData)]
    );
    var panels = h(
      'div',
      { 'class': 'fks-tabs__content' },
      [this.$slots.default]
    );

    return h(
      'div',
      {
        'class': (_ref2 = {
          'fks-tabs': true,
          'fks-tabs--card': type === 'card'
        }, _ref2['fks-tabs--' + tabPosition] = true, _ref2['fks-tabs--border-card'] = type === 'border-card', _ref2)
      },
      [tabPosition !== 'bottom' ? [header, panels] : [panels, header]]
    );
  },
  created: function created() {
    if (!this.currentName) {
      this.setCurrentName('0');
    }

    this.$on('tab-nav-update', this.calcPaneInstances.bind(null, true));
  },
  mounted: function mounted() {
    this.calcPaneInstances();
  },
  updated: function updated() {
    this.calcPaneInstances();
  }
});
// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tabsvue_type_script_lang_js_ = (tabsvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue
var tabs_render, tabs_staticRenderFns




/* normalize component */

var tabs_component = normalizeComponent(
  src_tabsvue_type_script_lang_js_,
  tabs_render,
  tabs_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tabs = (tabs_component.exports);
// CONCATENATED MODULE: ./packages/tabs/index.js


/* istanbul ignore next */
tabs.install = function (Vue) {
  Vue.component(tabs.name, tabs);
};

/* harmony default export */ var packages_tabs = (tabs);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-pane.vue?vue&type=template&id=602749b6&
var tab_panevue_type_template_id_602749b6_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return !_vm.lazy || _vm.loaded || _vm.active
    ? _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.active,
              expression: "active",
            },
          ],
          staticClass: "fks-tab-pane",
          attrs: {
            role: "tabpanel",
            "aria-hidden": !_vm.active,
            id: "pane-" + _vm.paneName,
            "aria-labelledby": "tab-" + _vm.paneName,
          },
        },
        [_vm._t("default")],
        2
      )
    : _vm._e()
}
var tab_panevue_type_template_id_602749b6_staticRenderFns = []
tab_panevue_type_template_id_602749b6_render._withStripped = true


// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue?vue&type=template&id=602749b6&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-pane.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var tab_panevue_type_script_lang_js_ = ({
  name: 'FksTabPane',

  componentName: 'FksTabPane',

  props: {
    label: String,
    labelContent: Function,
    name: String,
    closable: Boolean,
    disabled: Boolean,
    lazy: Boolean
  },

  data: function data() {
    return {
      index: null,
      loaded: false
    };
  },


  computed: {
    isClosable: function isClosable() {
      return this.closable || this.$parent.closable;
    },
    active: function active() {
      var active = this.$parent.currentName === (this.name || this.index);
      if (active) {
        this.loaded = true;
      }
      return active;
    },
    paneName: function paneName() {
      return this.name || this.index;
    }
  },

  updated: function updated() {
    this.$parent.$emit('tab-nav-update');
  }
});
// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tab_panevue_type_script_lang_js_ = (tab_panevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tabs/src/tab-pane.vue





/* normalize component */

var tab_pane_component = normalizeComponent(
  src_tab_panevue_type_script_lang_js_,
  tab_panevue_type_template_id_602749b6_render,
  tab_panevue_type_template_id_602749b6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tab_pane = (tab_pane_component.exports);
// CONCATENATED MODULE: ./packages/tab-pane/index.js


/* istanbul ignore next */
tab_pane.install = function (Vue) {
  Vue.component(tab_pane.name, tab_pane);
};

/* harmony default export */ var packages_tab_pane = (tab_pane);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tag/src/tag.vue?vue&type=script&lang=js&

/* harmony default export */ var tagvue_type_script_lang_js_ = ({
  name: 'FksTag',
  props: {
    text: String,
    closable: Boolean,
    type: String,
    hit: Boolean,
    disableTransitions: Boolean,
    color: String,
    size: String,
    effect: {
      type: String,
      default: 'light',
      validator: function validator(val) {
        return ['dark', 'light', 'plain'].indexOf(val) !== -1;
      }
    }
  },
  methods: {
    handleClose: function handleClose(event) {
      event.stopPropagation();
      this.$emit('close', event);
    },
    handleClick: function handleClick(event) {
      this.$emit('click', event);
    }
  },
  computed: {
    tagSize: function tagSize() {
      return this.size || (this.$FAWKES || {}).size;
    }
  },
  render: function render(h) {
    var type = this.type,
        tagSize = this.tagSize,
        hit = this.hit,
        effect = this.effect;

    var classes = ['fks-tag', type ? 'fks-tag--' + type : '', tagSize ? 'fks-tag--' + tagSize : '', effect ? 'fks-tag--' + effect : '', hit && 'is-hit'];
    var tagEl = h(
      'span',
      {
        'class': classes,
        style: { backgroundColor: this.color },
        on: {
          'click': this.handleClick
        }
      },
      [this.$slots.default, this.closable && h('i', {
        'class': 'fks-tag__close fks-icon-close',
        on: {
          'click': this.handleClose
        }
      })]
    );

    return this.disableTransitions ? tagEl : h(
      'transition',
      {
        attrs: { name: 'fks-zoom-in-center' }
      },
      [tagEl]
    );
  }
});
// CONCATENATED MODULE: ./packages/tag/src/tag.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tagvue_type_script_lang_js_ = (tagvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tag/src/tag.vue
var tag_render, tag_staticRenderFns




/* normalize component */

var tag_component = normalizeComponent(
  src_tagvue_type_script_lang_js_,
  tag_render,
  tag_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tag = (tag_component.exports);
// CONCATENATED MODULE: ./packages/tag/index.js


/* istanbul ignore next */
tag.install = function (Vue) {
  Vue.component(tag.name, tag);
};

/* harmony default export */ var packages_tag = (tag);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree.vue?vue&type=template&id=f9f743fa&
var treevue_type_template_id_f9f743fa_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-tree",
      class: {
        "fks-tree--highlight-current": _vm.highlightCurrent,
        "is-dragging": !!_vm.dragState.draggingNode,
        "is-drop-not-allow": !_vm.dragState.allowDrop,
        "is-drop-inner": _vm.dragState.dropType === "inner",
      },
      attrs: { role: "tree" },
    },
    [
      _vm._l(_vm.root.childNodes, function (child) {
        return _c("fks-tree-node", {
          key: _vm.getNodeKey(child),
          attrs: {
            node: child,
            props: _vm.props,
            "render-after-expand": _vm.renderAfterExpand,
            "show-checkbox": _vm.showCheckbox,
            "render-content": _vm.renderContent,
          },
          on: { "node-expand": _vm.handleNodeExpand },
        })
      }),
      _vm.isEmpty
        ? _c("div", { staticClass: "fks-tree__empty-block" }, [
            _c("span", { staticClass: "fks-tree__empty-text" }, [
              _vm._v(_vm._s(_vm.emptyText || _vm.t("fks.tree.emptyText"))),
            ]),
          ])
        : _vm._e(),
      _c("div", {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.dragState.showDropIndicator,
            expression: "dragState.showDropIndicator",
          },
        ],
        ref: "dropIndicator",
        staticClass: "fks-tree__drop-indicator",
      }),
    ],
    2
  )
}
var treevue_type_template_id_f9f743fa_staticRenderFns = []
treevue_type_template_id_f9f743fa_render._withStripped = true


// CONCATENATED MODULE: ./packages/tree/src/tree.vue?vue&type=template&id=f9f743fa&

// CONCATENATED MODULE: ./packages/tree/src/model/util.js
/*
 * @Author: gao_m3
 * @Date: 2021-01-06 09:18:03
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-24 09:54:42
 * @Descripttion: 
 */
var NODE_KEY = '$treeNodeId';

var markNodeData = function markNodeData(node, data) {
  if (!data || data[NODE_KEY]) return;

  Object.defineProperty(data, NODE_KEY, {
    value: node.key ? node.key : node.id,
    enumerable: false,
    configurable: false,
    writable: false
  });
};

var util_getNodeKey = function getNodeKey(key, data) {
  if (!key) return data[NODE_KEY];
  return data[key];
};

var findNearestComponent = function findNearestComponent(element, componentName) {
  var target = element;
  while (target && target.tagName !== 'BODY') {
    if (target.__vue__ && target.__vue__.$options.name === componentName) {
      return target.__vue__;
    }
    target = target.parentNode;
  }
  return null;
};
// CONCATENATED MODULE: ./packages/tree/src/model/node.js
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function node_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





var getChildState = function getChildState(node) {
  var all = true;
  var none = true;
  var allWithoutDisable = true;
  for (var i = 0, j = node.length; i < j; i++) {
    var n = node[i];
    if (n.checked !== true || n.indeterminate) {
      all = false;
      if (!n.disabled) {
        allWithoutDisable = false;
      }
    }
    if (n.checked !== false || n.indeterminate) {
      none = false;
    }
  }

  return { all: all, none: none, allWithoutDisable: allWithoutDisable, half: !all && !none };
};

var reInitChecked = function reInitChecked(node) {
  if (node.childNodes.length === 0) return;

  var _getChildState = getChildState(node.childNodes),
      all = _getChildState.all,
      none = _getChildState.none,
      half = _getChildState.half;

  if (all) {
    node.checked = true;
    node.indeterminate = false;
  } else if (half) {
    node.checked = false;
    node.indeterminate = true;
  } else if (none) {
    node.checked = false;
    node.indeterminate = false;
  }

  var parent = node.parent;
  if (!parent || parent.level === 0) return;

  if (!node.store.checkStrictly) {
    reInitChecked(parent);
  }
};

var getPropertyFromData = function getPropertyFromData(node, prop) {
  var props = node.store.props;
  var data = node.data || {};
  var config = props[prop];

  if (typeof config === 'function') {
    return config(data, node);
  } else if (typeof config === 'string') {
    return data[config];
  } else if (typeof config === 'undefined') {
    var dataProp = data[prop];
    return dataProp === undefined ? '' : dataProp;
  }
};

var nodeIdSeed = 0;

var node_Node = function () {
  function Node(options) {
    node_classCallCheck(this, Node);

    this.id = nodeIdSeed++;
    this.text = null;
    this.checked = false;
    this.indeterminate = false;
    this.data = null;
    this.expanded = false;
    this.parent = null;
    this.visible = true;
    this.isCurrent = false;

    for (var name in options) {
      if (options.hasOwnProperty(name)) {
        this[name] = options[name];
      }
    }

    // internal
    this.level = 0;
    this.loaded = false;
    this.childNodes = [];
    this.loading = false;

    if (this.parent) {
      this.level = this.parent.level + 1;
    }

    var store = this.store;
    if (!store) {
      throw new Error('[Node]store is required!');
    }
    store.registerNode(this);

    var props = store.props;
    if (props && typeof props.isLeaf !== 'undefined') {
      var isLeaf = getPropertyFromData(this, 'isLeaf');
      if (typeof isLeaf === 'boolean') {
        this.isLeafByUser = isLeaf;
      }
    }

    if (store.lazy !== true && this.data) {
      this.setData(this.data);

      if (store.defaultExpandAll) {
        this.expanded = true;
      }
    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {
      this.expand();
    }
    if (!Array.isArray(this.data)) {
      markNodeData(this, this.data);
    }
    if (!this.data) return;
    var defaultExpandedKeys = store.defaultExpandedKeys;
    var key = store.key;
    if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {
      this.expand(null, store.autoExpandParent);
    }

    if (key && store.currentNodeKey !== undefined && this.key === store.currentNodeKey) {
      store.currentNode = this;
      store.currentNode.isCurrent = true;
    }

    if (store.lazy) {
      store._initDefaultCheckedNode(this);
    }

    this.updateLeafState();
  }

  Node.prototype.setData = function setData(data) {
    if (!Array.isArray(data)) {
      markNodeData(this, data);
    }

    this.data = data;
    this.childNodes = [];

    var children = void 0;
    if (this.level === 0 && this.data instanceof Array) {
      children = this.data;
    } else {
      children = getPropertyFromData(this, 'children') || [];
    }

    for (var i = 0, j = children.length; i < j; i++) {
      this.insertChild({ data: children[i] });
    }
  };

  Node.prototype.contains = function contains(target) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    var walk = function walk(parent) {
      var children = parent.childNodes || [];
      var result = false;
      for (var i = 0, j = children.length; i < j; i++) {
        var child = children[i];
        if (child === target || deep && walk(child)) {
          result = true;
          break;
        }
      }
      return result;
    };

    return walk(this);
  };

  Node.prototype.remove = function remove() {
    var parent = this.parent;
    if (parent) {
      parent.removeChild(this);
    }
  };

  Node.prototype.insertChild = function insertChild(child, index, batch) {
    if (!child) throw new Error('insertChild error: child is required.');

    if (!(child instanceof Node)) {
      if (!batch) {
        var children = this.getChildren(true);
        if (children.indexOf(child.data) === -1) {
          if (typeof index === 'undefined' || index < 0) {
            children.push(child.data);
          } else {
            children.splice(index, 0, child.data);
          }
        }
      }
      merge_default()(child, {
        parent: this,
        store: this.store
      });
      child = new Node(child);
    }

    child.level = this.level + 1;

    if (typeof index === 'undefined' || index < 0) {
      this.childNodes.push(child);
    } else {
      this.childNodes.splice(index, 0, child);
    }

    this.updateLeafState();
  };

  Node.prototype.insertBefore = function insertBefore(child, ref) {
    var index = void 0;
    if (ref) {
      index = this.childNodes.indexOf(ref);
    }
    this.insertChild(child, index);
  };

  Node.prototype.insertAfter = function insertAfter(child, ref) {
    var index = void 0;
    if (ref) {
      index = this.childNodes.indexOf(ref);
      if (index !== -1) index += 1;
    }
    this.insertChild(child, index);
  };

  Node.prototype.removeChild = function removeChild(child) {
    var children = this.getChildren() || [];
    var dataIndex = children.indexOf(child.data);
    if (dataIndex > -1) {
      children.splice(dataIndex, 1);
    }

    var index = this.childNodes.indexOf(child);

    if (index > -1) {
      this.store && this.store.deregisterNode(child);
      child.parent = null;
      this.childNodes.splice(index, 1);
    }

    this.updateLeafState();
  };

  Node.prototype.removeChildByData = function removeChildByData(data) {
    var targetNode = null;

    for (var i = 0; i < this.childNodes.length; i++) {
      if (this.childNodes[i].data === data) {
        targetNode = this.childNodes[i];
        break;
      }
    }

    if (targetNode) {
      this.removeChild(targetNode);
    }
  };

  Node.prototype.expand = function expand(callback, expandParent) {
    var _this = this;

    var done = function done() {
      if (expandParent) {
        var parent = _this.parent;
        while (parent.level > 0) {
          parent.expanded = true;
          parent = parent.parent;
        }
      }
      _this.expanded = true;
      if (callback) callback();
    };

    if (this.shouldLoadData()) {
      this.loadData(function (data) {
        if (data instanceof Array) {
          if (_this.checked) {
            _this.setChecked(true, true);
          } else if (!_this.store.checkStrictly) {
            reInitChecked(_this);
          }
          done();
        }
      });
    } else {
      done();
    }
  };

  Node.prototype.doCreateChildren = function doCreateChildren(array) {
    var _this2 = this;

    var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    array.forEach(function (item) {
      _this2.insertChild(merge_default()({ data: item }, defaultProps), undefined, true);
    });
  };

  Node.prototype.collapse = function collapse() {
    this.expanded = false;
  };

  Node.prototype.shouldLoadData = function shouldLoadData() {
    return this.store.lazy === true && this.store.load && !this.loaded;
  };

  Node.prototype.updateLeafState = function updateLeafState() {
    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== 'undefined') {
      this.isLeaf = this.isLeafByUser;
      return;
    }
    var childNodes = this.childNodes;
    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {
      this.isLeaf = !childNodes || childNodes.length === 0;
      return;
    }
    this.isLeaf = false;
  };

  Node.prototype.setChecked = function setChecked(value, deep, recursion, passValue) {
    var _this3 = this;

    this.indeterminate = value === 'half';
    this.checked = value === true;

    if (this.store.checkStrictly) return;

    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {
      var _getChildState2 = getChildState(this.childNodes),
          all = _getChildState2.all,
          allWithoutDisable = _getChildState2.allWithoutDisable;

      if (!this.isLeaf && !all && allWithoutDisable) {
        this.checked = false;
        value = false;
      }

      var handleDescendants = function handleDescendants() {
        if (deep) {
          var childNodes = _this3.childNodes;
          for (var i = 0, j = childNodes.length; i < j; i++) {
            var child = childNodes[i];
            passValue = passValue || value !== false;
            var isCheck = child.disabled ? child.checked : passValue;
            child.setChecked(isCheck, deep, true, passValue);
          }

          var _getChildState3 = getChildState(childNodes),
              half = _getChildState3.half,
              _all = _getChildState3.all;

          if (!_all) {
            _this3.checked = _all;
            _this3.indeterminate = half;
          }
        }
      };

      if (this.shouldLoadData()) {
        // Only work on lazy load data.
        this.loadData(function () {
          handleDescendants();
          reInitChecked(_this3);
        }, {
          checked: value !== false
        });
        return;
      } else {
        handleDescendants();
      }
    }

    var parent = this.parent;
    if (!parent || parent.level === 0) return;

    if (!recursion) {
      reInitChecked(parent);
    }
  };

  Node.prototype.getChildren = function getChildren() {
    var forceInit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    // this is data
    if (this.level === 0) return this.data;
    var data = this.data;
    if (!data) return null;

    var props = this.store.props;
    var children = 'children';
    if (props) {
      children = props.children || 'children';
    }

    if (data[children] === undefined) {
      data[children] = null;
    }

    if (forceInit && !data[children]) {
      data[children] = [];
    }

    return data[children];
  };

  Node.prototype.updateChildren = function updateChildren() {
    var _this4 = this;

    var newData = this.getChildren() || [];
    var oldData = this.childNodes.map(function (node) {
      return node.data;
    });

    var newDataMap = {};
    var newNodes = [];

    newData.forEach(function (item, index) {
      var key = item[NODE_KEY];
      var isNodeExists = !!key && Object(util_["arrayFindIndex"])(oldData, function (data) {
        return data[NODE_KEY] === key;
      }) >= 0;
      if (isNodeExists) {
        newDataMap[key] = { index: index, data: item };
      } else {
        newNodes.push({ index: index, data: item });
      }
    });

    if (!this.store.lazy) {
      oldData.forEach(function (item) {
        if (!newDataMap[item[NODE_KEY]]) _this4.removeChildByData(item);
      });
    }

    newNodes.forEach(function (_ref) {
      var index = _ref.index,
          data = _ref.data;

      _this4.insertChild({ data: data }, index);
    });

    this.updateLeafState();
  };

  Node.prototype.loadData = function loadData(callback) {
    var _this5 = this;

    var defaultProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {
      this.loading = true;

      var resolve = function resolve(children) {
        _this5.loaded = true;
        _this5.loading = false;
        _this5.childNodes = [];

        _this5.doCreateChildren(children, defaultProps);

        _this5.updateLeafState();
        if (callback) {
          callback.call(_this5, children);
        }
      };

      this.store.load(this, resolve);
    } else {
      if (callback) {
        callback.call(this);
      }
    }
  };

  _createClass(Node, [{
    key: 'label',
    get: function get() {
      return getPropertyFromData(this, 'label');
    }
  }, {
    key: 'key',
    get: function get() {
      var nodeKey = this.store.key;
      if (this.data) return this.data[nodeKey];
      return null;
    }
  }, {
    key: 'disabled',
    get: function get() {
      return getPropertyFromData(this, 'disabled');
    }
  }, {
    key: 'nextSibling',
    get: function get() {
      var parent = this.parent;
      if (parent) {
        var index = parent.childNodes.indexOf(this);
        if (index > -1) {
          return parent.childNodes[index + 1];
        }
      }
      return null;
    }
  }, {
    key: 'previousSibling',
    get: function get() {
      var parent = this.parent;
      if (parent) {
        var index = parent.childNodes.indexOf(this);
        if (index > -1) {
          return index > 0 ? parent.childNodes[index - 1] : null;
        }
      }
      return null;
    }
  }]);

  return Node;
}();

/* harmony default export */ var model_node = (node_Node);
// CONCATENATED MODULE: ./packages/tree/src/model/tree-store.js
var tree_store_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function tree_store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




var tree_store_TreeStore = function () {
  function TreeStore(options) {
    var _this = this;

    tree_store_classCallCheck(this, TreeStore);

    this.currentNode = null;
    this.currentNodeKey = null;

    for (var option in options) {
      if (options.hasOwnProperty(option)) {
        this[option] = options[option];
      }
    }

    this.nodesMap = {};

    this.root = new model_node({
      data: this.data,
      store: this
    });

    if (this.lazy && this.load) {
      var loadFn = this.load;
      loadFn(this.root, function (data) {
        _this.root.doCreateChildren(data);
        _this._initDefaultCheckedNodes();
      });
    } else {
      this._initDefaultCheckedNodes();
    }
  }

  TreeStore.prototype.filter = function filter(value) {
    var filterNodeMethod = this.filterNodeMethod;
    var lazy = this.lazy;
    var traverse = function traverse(node) {
      var childNodes = node.root ? node.root.childNodes : node.childNodes;

      childNodes.forEach(function (child) {
        child.visible = filterNodeMethod.call(child, value, child.data, child);

        traverse(child);
      });

      if (!node.visible && childNodes.length) {
        var allHidden = true;
        allHidden = !childNodes.some(function (child) {
          return child.visible;
        });

        if (node.root) {
          node.root.visible = allHidden === false;
        } else {
          node.visible = allHidden === false;
        }
      }
      if (!value) return;

      if (node.visible && !node.isLeaf && !lazy) node.expand();
    };

    traverse(this);
  };

  TreeStore.prototype.setData = function setData(newVal) {
    var instanceChanged = newVal !== this.root.data;
    if (instanceChanged) {
      this.root.setData(newVal);
      this._initDefaultCheckedNodes();
    } else {
      this.root.updateChildren();
    }
  };

  TreeStore.prototype.getNode = function getNode(data) {
    if (data instanceof model_node) return data;
    var key = (typeof data === 'undefined' ? 'undefined' : tree_store_typeof(data)) !== 'object' ? data : util_getNodeKey(this.key, data);
    return this.nodesMap[key] || null;
  };

  TreeStore.prototype.insertBefore = function insertBefore(data, refData) {
    var refNode = this.getNode(refData);
    refNode.parent.insertBefore({ data: data }, refNode);
  };

  TreeStore.prototype.insertAfter = function insertAfter(data, refData) {
    var refNode = this.getNode(refData);
    refNode.parent.insertAfter({ data: data }, refNode);
  };

  TreeStore.prototype.remove = function remove(data) {
    var node = this.getNode(data);

    if (node && node.parent) {
      if (node === this.currentNode) {
        this.currentNode = null;
      }
      node.parent.removeChild(node);
    }
  };

  TreeStore.prototype.append = function append(data, parentData) {
    var parentNode = parentData ? this.getNode(parentData) : this.root;

    if (parentNode) {
      parentNode.insertChild({ data: data });
    }
  };

  TreeStore.prototype._initDefaultCheckedNodes = function _initDefaultCheckedNodes() {
    var _this2 = this;

    var defaultCheckedKeys = this.defaultCheckedKeys || [];
    var nodesMap = this.nodesMap;

    defaultCheckedKeys.forEach(function (checkedKey) {
      var node = nodesMap[checkedKey];

      if (node) {
        node.setChecked(true, !_this2.checkStrictly);
      }
    });
  };

  TreeStore.prototype._initDefaultCheckedNode = function _initDefaultCheckedNode(node) {
    var defaultCheckedKeys = this.defaultCheckedKeys || [];

    if (defaultCheckedKeys.indexOf(node.key) !== -1) {
      node.setChecked(true, !this.checkStrictly);
    }
  };

  TreeStore.prototype.setDefaultCheckedKey = function setDefaultCheckedKey(newVal) {
    if (newVal !== this.defaultCheckedKeys) {
      this.defaultCheckedKeys = newVal;
      this._initDefaultCheckedNodes();
    }
  };

  TreeStore.prototype.registerNode = function registerNode(node) {
    var key = this.key;
    if (!key || !node || !node.data) return;

    var nodeKey = node.key;
    if (nodeKey !== undefined) this.nodesMap[node.key] = node;
  };

  TreeStore.prototype.deregisterNode = function deregisterNode(node) {
    var _this3 = this;

    var key = this.key;
    if (!key || !node || !node.data) return;

    node.childNodes.forEach(function (child) {
      _this3.deregisterNode(child);
    });

    delete this.nodesMap[node.key];
  };

  TreeStore.prototype.getCheckedNodes = function getCheckedNodes() {
    var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var includeHalfChecked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var checkedNodes = [];
    var traverse = function traverse(node) {
      var childNodes = node.root ? node.root.childNodes : node.childNodes;

      childNodes.forEach(function (child) {
        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {
          checkedNodes.push(child.data);
        }

        traverse(child);
      });
    };

    traverse(this);

    return checkedNodes;
  };

  TreeStore.prototype.getCheckedKeys = function getCheckedKeys() {
    var _this4 = this;

    var leafOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    return this.getCheckedNodes(leafOnly).map(function (data) {
      return (data || {})[_this4.key];
    });
  };

  TreeStore.prototype.getHalfCheckedNodes = function getHalfCheckedNodes() {
    var nodes = [];
    var traverse = function traverse(node) {
      var childNodes = node.root ? node.root.childNodes : node.childNodes;

      childNodes.forEach(function (child) {
        if (child.indeterminate) {
          nodes.push(child.data);
        }

        traverse(child);
      });
    };

    traverse(this);

    return nodes;
  };

  TreeStore.prototype.getHalfCheckedKeys = function getHalfCheckedKeys() {
    var _this5 = this;

    return this.getHalfCheckedNodes().map(function (data) {
      return (data || {})[_this5.key];
    });
  };

  TreeStore.prototype._getAllNodes = function _getAllNodes() {
    var allNodes = [];
    var nodesMap = this.nodesMap;
    for (var nodeKey in nodesMap) {
      if (nodesMap.hasOwnProperty(nodeKey)) {
        allNodes.push(nodesMap[nodeKey]);
      }
    }

    return allNodes;
  };

  TreeStore.prototype.updateChildren = function updateChildren(key, data) {
    var node = this.nodesMap[key];
    if (!node) return;
    var childNodes = node.childNodes;
    for (var i = childNodes.length - 1; i >= 0; i--) {
      var child = childNodes[i];
      this.remove(child.data);
    }
    for (var _i = 0, j = data.length; _i < j; _i++) {
      var _child = data[_i];
      this.append(_child, node.data);
    }
  };

  TreeStore.prototype._setCheckedKeys = function _setCheckedKeys(key) {
    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var checkedKeys = arguments[2];

    var allNodes = this._getAllNodes().sort(function (a, b) {
      return b.level - a.level;
    });
    var cache = Object.create(null);
    var keys = Object.keys(checkedKeys);
    allNodes.forEach(function (node) {
      return node.setChecked(false, false);
    });
    for (var i = 0, j = allNodes.length; i < j; i++) {
      var node = allNodes[i];
      var nodeKey = node.data[key].toString();
      var checked = keys.indexOf(nodeKey) > -1;
      if (!checked) {
        if (node.checked && !cache[nodeKey]) {
          node.setChecked(false, false);
        }
        continue;
      }

      var parent = node.parent;
      while (parent && parent.level > 0) {
        cache[parent.data[key]] = true;
        parent = parent.parent;
      }

      if (node.isLeaf || this.checkStrictly) {
        node.setChecked(true, false);
        continue;
      }
      node.setChecked(true, true);

      if (leafOnly) {
        (function () {
          node.setChecked(false, false);
          var traverse = function traverse(node) {
            var childNodes = node.childNodes;
            childNodes.forEach(function (child) {
              if (!child.isLeaf) {
                child.setChecked(false, false);
              }
              traverse(child);
            });
          };
          traverse(node);
        })();
      }
    }
  };

  TreeStore.prototype.setCheckedNodes = function setCheckedNodes(array) {
    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    var key = this.key;
    var checkedKeys = {};
    array.forEach(function (item) {
      checkedKeys[(item || {})[key]] = true;
    });

    this._setCheckedKeys(key, leafOnly, checkedKeys);
  };

  TreeStore.prototype.setCheckedKeys = function setCheckedKeys(keys) {
    var leafOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    this.defaultCheckedKeys = keys;
    var key = this.key;
    var checkedKeys = {};
    keys.forEach(function (key) {
      checkedKeys[key] = true;
    });

    this._setCheckedKeys(key, leafOnly, checkedKeys);
  };

  TreeStore.prototype.setDefaultExpandedKeys = function setDefaultExpandedKeys(keys) {
    var _this6 = this;

    keys = keys || [];
    this.defaultExpandedKeys = keys;

    keys.forEach(function (key) {
      var node = _this6.getNode(key);
      if (node) node.expand(null, _this6.autoExpandParent);
    });
  };

  TreeStore.prototype.setChecked = function setChecked(data, checked, deep) {
    var node = this.getNode(data);

    if (node) {
      node.setChecked(!!checked, deep);
    }
  };

  TreeStore.prototype.getCurrentNode = function getCurrentNode() {
    return this.currentNode;
  };

  TreeStore.prototype.setCurrentNode = function setCurrentNode(currentNode) {
    var prevCurrentNode = this.currentNode;
    if (prevCurrentNode) {
      prevCurrentNode.isCurrent = false;
    }
    this.currentNode = currentNode;
    this.currentNode.isCurrent = true;
  };

  TreeStore.prototype.setUserCurrentNode = function setUserCurrentNode(node) {
    var key = node[this.key];
    var currNode = this.nodesMap[key];
    this.setCurrentNode(currNode);
  };

  TreeStore.prototype.setCurrentNodeKey = function setCurrentNodeKey(key) {
    if (key === null || key === undefined) {
      this.currentNode && (this.currentNode.isCurrent = false);
      this.currentNode = null;
      return;
    }
    var node = this.getNode(key);
    if (node) {
      this.setCurrentNode(node);
    }
  };

  return TreeStore;
}();

/* harmony default export */ var tree_store = (tree_store_TreeStore);
;
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree-node.vue?vue&type=template&id=1b498f8a&
var tree_nodevue_type_template_id_1b498f8a_render = function () {
  var this$1 = this
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "show",
          rawName: "v-show",
          value: _vm.node.visible,
          expression: "node.visible",
        },
      ],
      ref: "node",
      staticClass: "fks-tree-node",
      class: {
        "is-expanded": _vm.expanded,
        "is-current": _vm.node.isCurrent,
        "is-hidden": !_vm.node.visible,
        "is-focusable": !_vm.node.disabled,
        "is-checked": !_vm.node.disabled && _vm.node.checked,
      },
      attrs: {
        role: "treeitem",
        tabindex: "-1",
        "aria-expanded": _vm.expanded,
        "aria-disabled": _vm.node.disabled,
        "aria-checked": _vm.node.checked,
        draggable: _vm.tree.draggable,
      },
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.handleClick.apply(null, arguments)
        },
        contextmenu: function ($event) {
          return this$1.handleContextMenu($event)
        },
        dragstart: function ($event) {
          $event.stopPropagation()
          return _vm.handleDragStart.apply(null, arguments)
        },
        dragover: function ($event) {
          $event.stopPropagation()
          return _vm.handleDragOver.apply(null, arguments)
        },
        dragend: function ($event) {
          $event.stopPropagation()
          return _vm.handleDragEnd.apply(null, arguments)
        },
        drop: function ($event) {
          $event.stopPropagation()
          return _vm.handleDrop.apply(null, arguments)
        },
      },
    },
    [
      _c(
        "div",
        {
          staticClass: "fks-tree-node__content",
          style: {
            "padding-left": (_vm.node.level - 1) * _vm.tree.indent + "px",
          },
        },
        [
          _c("span", {
            class: [
              {
                "is-leaf": _vm.node.isLeaf,
                expanded: !_vm.node.isLeaf && _vm.expanded,
              },
              "fks-tree-node__expand-icon",
              _vm.tree.iconClass ? _vm.tree.iconClass : "fks-icon-arrow-right",
            ],
            on: {
              click: function ($event) {
                $event.stopPropagation()
                return _vm.handleExpandIconClick.apply(null, arguments)
              },
            },
          }),
          _vm.tree.showIcon
            ? [
                _c("fks-icon", {
                  attrs: {
                    "class-name": "fks-tree-svg",
                    "icon-class": _vm.node.isLeaf
                      ? _vm.node.isCurrent
                        ? "click-node"
                        : "no-node"
                      : _vm.expanded
                      ? "expand-node"
                      : "has-node",
                  },
                }),
              ]
            : _vm._e(),
          _vm.showCheckbox
            ? _c("fks-checkbox", {
                attrs: {
                  indeterminate: _vm.node.indeterminate,
                  disabled: !!_vm.node.disabled,
                },
                on: { change: _vm.handleCheckChange },
                nativeOn: {
                  click: function ($event) {
                    $event.stopPropagation()
                  },
                },
                model: {
                  value: _vm.node.checked,
                  callback: function ($$v) {
                    _vm.$set(_vm.node, "checked", $$v)
                  },
                  expression: "node.checked",
                },
              })
            : _vm._e(),
          _vm.node.loading
            ? _c("span", {
                staticClass: "fks-tree-node__loading-icon fks-icon-loading",
              })
            : _vm._e(),
          _c("node-content", { attrs: { node: _vm.node } }),
        ],
        2
      ),
      _c("fks-collapse-transition", [
        !_vm.renderAfterExpand || _vm.childNodeRendered
          ? _c(
              "div",
              {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: _vm.expanded,
                    expression: "expanded",
                  },
                ],
                staticClass: "fks-tree-node__children",
                attrs: { role: "group", "aria-expanded": _vm.expanded },
              },
              _vm._l(_vm.node.childNodes, function (child) {
                return _c("fks-tree-node", {
                  key: _vm.getNodeKey(child),
                  attrs: {
                    "render-content": _vm.renderContent,
                    "render-after-expand": _vm.renderAfterExpand,
                    "show-checkbox": _vm.showCheckbox,
                    node: child,
                  },
                  on: { "node-expand": _vm.handleChildNodeExpand },
                })
              }),
              1
            )
          : _vm._e(),
      ]),
    ],
    1
  )
}
var tree_nodevue_type_template_id_1b498f8a_staticRenderFns = []
tree_nodevue_type_template_id_1b498f8a_render._withStripped = true


// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue?vue&type=template&id=1b498f8a&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree-node.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var tree_nodevue_type_script_lang_js_ = ({
  name: 'FksTreeNode',

  componentName: 'FksTreeNode',

  mixins: [emitter_default.a],

  props: {
    node: {
      default: function _default() {
        return {};
      }
    },
    props: {},
    renderContent: Function,
    renderAfterExpand: {
      type: Boolean,
      default: true
    },
    showCheckbox: {
      type: Boolean,
      default: false
    }
  },

  components: {
    FksCollapseTransition: collapse_transition_default.a,
    FksCheckbox: checkbox_default.a,
    NodeContent: {
      props: {
        node: {
          required: true
        }
      },
      render: function render(h) {
        var parent = this.$parent;
        var tree = parent.tree;
        var node = this.node;
        var data = node.data,
            store = node.store;

        return parent.renderContent ? parent.renderContent.call(parent._renderProxy, h, {
          _self: tree.$vnode.context,
          node: node,
          data: data,
          store: store
        }) : tree.$scopedSlots.default ? tree.$scopedSlots.default({ node: node, data: data }) : h(
          'span',
          { 'class': 'fks-tree-node__label', attrs: { title: node.label }
          },
          [node.label]
        );
      }
    }
  },

  data: function data() {
    return {
      tree: null,
      expanded: false,
      childNodeRendered: false,
      oldChecked: null,
      oldIndeterminate: null
    };
  },


  watch: {
    'node.indeterminate': function nodeIndeterminate(val) {
      this.handleSelectChange(this.node.checked, val);
    },
    'node.checked': function nodeChecked(val) {
      this.handleSelectChange(val, this.node.indeterminate);
    },
    'node.expanded': function nodeExpanded(val) {
      var _this = this;

      this.$nextTick(function () {
        return _this.expanded = val;
      });
      if (val) {
        this.childNodeRendered = true;
      }
    }
  },

  methods: {
    getNodeKey: function getNodeKey(node) {
      return util_getNodeKey(this.tree.nodeKey, node.data);
    },
    handleSelectChange: function handleSelectChange(checked, indeterminate) {
      if (this.oldChecked !== checked && this.oldIndeterminate !== indeterminate) {
        this.tree.$emit('check-change', this.node.data, checked, indeterminate);
      }
      this.oldChecked = checked;
      this.indeterminate = indeterminate;
    },
    handleClick: function handleClick() {
      var store = this.tree.store;
      store.setCurrentNode(this.node);
      this.tree.$emit('current-change', store.currentNode ? store.currentNode.data : null, store.currentNode);
      this.tree.currentNode = this;
      if (this.tree.expandOnClickNode) {
        this.handleExpandIconClick();
      }
      if (this.tree.checkOnClickNode && !this.node.disabled) {
        this.handleCheckChange(null, {
          target: { checked: !this.node.checked }
        });
      }
      this.tree.$emit('node-click', this.node.data, this.node, this);
      // setTimeout(() => {
      //   if (this.node.isLeaf) {
      //   let temp = document.getElementsByClassName('is-current')[0]
      //   let tempSvg = temp.getElementsByTagName('use')[0]
      //   tempSvg.href.baseVal="#icon-click-node"
      //   }
      // }, 100);
    },
    handleContextMenu: function handleContextMenu(event) {
      if (this.tree._events['node-contextmenu'] && this.tree._events['node-contextmenu'].length > 0) {
        event.stopPropagation();
        event.preventDefault();
      }
      this.tree.$emit('node-contextmenu', event, this.node.data, this.node, this);
    },
    handleExpandIconClick: function handleExpandIconClick() {
      if (this.node.isLeaf) return;
      if (this.expanded) {
        this.tree.$emit('node-collapse', this.node.data, this.node, this);
        this.node.collapse();
      } else {
        this.node.expand();
        this.$emit('node-expand', this.node.data, this.node, this);
      }
    },
    handleCheckChange: function handleCheckChange(value, ev) {
      var _this2 = this;

      this.node.setChecked(ev.target.checked, !this.tree.checkStrictly);
      this.$nextTick(function () {
        var store = _this2.tree.store;
        _this2.tree.$emit('check', _this2.node.data, {
          checkedNodes: store.getCheckedNodes(),
          checkedKeys: store.getCheckedKeys(),
          halfCheckedNodes: store.getHalfCheckedNodes(),
          halfCheckedKeys: store.getHalfCheckedKeys()
        });
      });
    },
    handleChildNodeExpand: function handleChildNodeExpand(nodeData, node, instance) {
      this.broadcast('FksTreeNode', 'tree-node-expand', node);
      this.tree.$emit('node-expand', nodeData, node, instance);
    },
    handleDragStart: function handleDragStart(event) {
      if (!this.tree.draggable) return;
      this.tree.$emit('tree-node-drag-start', event, this);
    },
    handleDragOver: function handleDragOver(event) {
      if (!this.tree.draggable) return;
      this.tree.$emit('tree-node-drag-over', event, this);
      event.preventDefault();
    },
    handleDrop: function handleDrop(event) {
      event.preventDefault();
    },
    handleDragEnd: function handleDragEnd(event) {
      if (!this.tree.draggable) return;
      this.tree.$emit('tree-node-drag-end', event, this);
    }
  },

  created: function created() {
    var _this3 = this;

    var parent = this.$parent;

    if (parent.isTree) {
      this.tree = parent;
    } else {
      this.tree = parent.tree;
    }

    var tree = this.tree;
    if (!tree) {
      console.warn("Can not find node's tree.");
    }

    var props = tree.props || {};
    var childrenKey = props['children'] || 'children';

    this.$watch('node.data.' + childrenKey, function () {
      _this3.node.updateChildren();
    });

    if (this.node.expanded) {
      this.expanded = true;
      this.childNodeRendered = true;
    }

    if (this.tree.accordion) {
      this.$on('tree-node-expand', function (node) {
        if (_this3.node !== node) {
          _this3.node.collapse();
        }
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_tree_nodevue_type_script_lang_js_ = (tree_nodevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tree/src/tree-node.vue





/* normalize component */

var tree_node_component = normalizeComponent(
  src_tree_nodevue_type_script_lang_js_,
  tree_nodevue_type_template_id_1b498f8a_render,
  tree_nodevue_type_template_id_1b498f8a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var tree_node = (tree_node_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tree/src/tree.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








/* harmony default export */ var treevue_type_script_lang_js_ = ({
  name: 'FksTree',

  mixins: [emitter_default.a, locale_default.a],

  components: {
    FksTreeNode: tree_node
  },

  data: function data() {
    return {
      store: null,
      root: null,
      currentNode: null,
      treeItems: null,
      checkboxItems: [],
      dragState: {
        showDropIndicator: false,
        draggingNode: null,
        dropNode: null,
        allowDrop: true
      }
    };
  },


  props: {
    data: {
      type: Array
    },
    emptyText: {
      type: String
    },
    renderAfterExpand: {
      type: Boolean,
      default: true
    },
    nodeKey: String,
    checkStrictly: Boolean,
    defaultExpandAll: Boolean,
    expandOnClickNode: {
      type: Boolean,
      default: true
    },
    checkOnClickNode: Boolean,
    checkDescendants: {
      type: Boolean,
      default: false
    },
    autoExpandParent: {
      type: Boolean,
      default: true
    },
    defaultCheckedKeys: Array,
    defaultExpandedKeys: Array,
    currentNodeKey: [String, Number],
    renderContent: Function,
    showCheckbox: {
      type: Boolean,
      default: false
    },
    draggable: {
      type: Boolean,
      default: false
    },
    allowDrag: Function,
    allowDrop: Function,
    props: {
      default: function _default() {
        return {
          children: 'children',
          label: 'label',
          disabled: 'disabled'
        };
      }
    },
    lazy: {
      type: Boolean,
      default: false
    },
    highlightCurrent: Boolean,
    load: Function,
    filterNodeMethod: Function,
    accordion: Boolean,
    indent: {
      type: Number,
      default: 18
    },
    iconClass: String,
    showIcon: Boolean //显示文件夹图标
  },

  computed: {
    children: {
      set: function set(value) {
        this.data = value;
      },
      get: function get() {
        return this.data;
      }
    },

    treeItemArray: function treeItemArray() {
      return Array.prototype.slice.call(this.treeItems);
    },
    isEmpty: function isEmpty() {
      var childNodes = this.root.childNodes;

      return !childNodes || childNodes.length === 0 || childNodes.every(function (_ref) {
        var visible = _ref.visible;
        return !visible;
      });
    }
  },

  watch: {
    defaultCheckedKeys: function defaultCheckedKeys(newVal) {
      this.store.setDefaultCheckedKey(newVal);
    },
    defaultExpandedKeys: function defaultExpandedKeys(newVal) {
      this.store.defaultExpandedKeys = newVal;
      this.store.setDefaultExpandedKeys(newVal);
    },
    data: function data(newVal) {
      this.store.setData(newVal);
    },
    checkboxItems: function checkboxItems(val) {
      Array.prototype.forEach.call(val, function (checkbox) {
        checkbox.setAttribute('tabindex', -1);
      });
    },
    checkStrictly: function checkStrictly(newVal) {
      this.store.checkStrictly = newVal;
    }
  },

  methods: {
    filter: function filter(value) {
      if (!this.filterNodeMethod) throw new Error('[Tree] filterNodeMethod is required when filter');
      this.store.filter(value);
    },
    getNodeKey: function getNodeKey(node) {
      return util_getNodeKey(this.nodeKey, node.data);
    },
    getNodePath: function getNodePath(data) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in getNodePath');
      var node = this.store.getNode(data);
      if (!node) return [];
      var path = [node.data];
      var parent = node.parent;
      while (parent && parent !== this.root) {
        path.push(parent.data);
        parent = parent.parent;
      }
      return path.reverse();
    },
    getCheckedNodes: function getCheckedNodes(leafOnly, includeHalfChecked) {
      return this.store.getCheckedNodes(leafOnly, includeHalfChecked);
    },
    getCheckedKeys: function getCheckedKeys(leafOnly) {
      return this.store.getCheckedKeys(leafOnly);
    },
    getCurrentNode: function getCurrentNode() {
      var currentNode = this.store.getCurrentNode();
      return currentNode ? currentNode.data : null;
    },
    getCurrentKey: function getCurrentKey() {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in getCurrentKey');
      var currentNode = this.getCurrentNode();
      return currentNode ? currentNode[this.nodeKey] : null;
    },
    setCheckedNodes: function setCheckedNodes(nodes, leafOnly) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCheckedNodes');
      this.store.setCheckedNodes(nodes, leafOnly);
    },
    setCheckedKeys: function setCheckedKeys(keys, leafOnly) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCheckedKeys');
      this.store.setCheckedKeys(keys, leafOnly);
    },
    setChecked: function setChecked(data, checked, deep) {
      this.store.setChecked(data, checked, deep);
    },
    getHalfCheckedNodes: function getHalfCheckedNodes() {
      return this.store.getHalfCheckedNodes();
    },
    getHalfCheckedKeys: function getHalfCheckedKeys() {
      return this.store.getHalfCheckedKeys();
    },
    setCurrentNode: function setCurrentNode(node) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCurrentNode');
      this.store.setUserCurrentNode(node);
    },
    setCurrentKey: function setCurrentKey(key) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in setCurrentKey');
      this.store.setCurrentNodeKey(key);
    },
    getNode: function getNode(data) {
      return this.store.getNode(data);
    },
    remove: function remove(data) {
      this.store.remove(data);
    },
    append: function append(data, parentNode) {
      this.store.append(data, parentNode);
    },
    insertBefore: function insertBefore(data, refNode) {
      this.store.insertBefore(data, refNode);
    },
    insertAfter: function insertAfter(data, refNode) {
      this.store.insertAfter(data, refNode);
    },
    handleNodeExpand: function handleNodeExpand(nodeData, node, instance) {
      this.broadcast('FksTreeNode', 'tree-node-expand', node);
      this.$emit('node-expand', nodeData, node, instance);
    },
    updateKeyChildren: function updateKeyChildren(key, data) {
      if (!this.nodeKey) throw new Error('[Tree] nodeKey is required in updateKeyChild');
      this.store.updateChildren(key, data);
    },
    initTabIndex: function initTabIndex() {
      this.treeItems = this.$el.querySelectorAll('.is-focusable[role=treeitem]');
      this.checkboxItems = this.$el.querySelectorAll('input[type=checkbox]');
      var checkedItem = this.$el.querySelectorAll('.is-checked[role=treeitem]');
      if (checkedItem.length) {
        checkedItem[0].setAttribute('tabindex', 0);
        return;
      }
      this.treeItems[0] && this.treeItems[0].setAttribute('tabindex', 0);
    },
    handleKeydown: function handleKeydown(ev) {
      var currentItem = ev.target;
      if (currentItem.className.indexOf('fks-tree-node') === -1) return;
      var keyCode = ev.keyCode;
      this.treeItems = this.$el.querySelectorAll('.is-focusable[role=treeitem]');
      var currentIndex = this.treeItemArray.indexOf(currentItem);
      var nextIndex = void 0;
      if ([38, 40].indexOf(keyCode) > -1) {
        // up、down
        ev.preventDefault();
        if (keyCode === 38) {
          // up
          nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;
        } else {
          nextIndex = currentIndex < this.treeItemArray.length - 1 ? currentIndex + 1 : 0;
        }
        this.treeItemArray[nextIndex].focus(); // 选中
      }
      if ([37, 39].indexOf(keyCode) > -1) {
        // left、right 展开
        ev.preventDefault();
        currentItem.click(); // 选中
      }
      var hasInput = currentItem.querySelector('[type="checkbox"]');
      if ([13, 32].indexOf(keyCode) > -1 && hasInput) {
        // space enter选中checkbox
        ev.preventDefault();
        hasInput.click();
      }
    }
  },

  created: function created() {
    var _this = this;

    this.isTree = true;

    this.store = new tree_store({
      key: this.nodeKey,
      data: this.data,
      lazy: this.lazy,
      props: this.props,
      load: this.load,
      currentNodeKey: this.currentNodeKey,
      checkStrictly: this.checkStrictly,
      checkDescendants: this.checkDescendants,
      defaultCheckedKeys: this.defaultCheckedKeys,
      defaultExpandedKeys: this.defaultExpandedKeys,
      autoExpandParent: this.autoExpandParent,
      defaultExpandAll: this.defaultExpandAll,
      filterNodeMethod: this.filterNodeMethod
    });

    this.root = this.store.root;

    var dragState = this.dragState;
    this.$on('tree-node-drag-start', function (event, treeNode) {
      if (typeof _this.allowDrag === 'function' && !_this.allowDrag(treeNode.node)) {
        event.preventDefault();
        return false;
      }
      event.dataTransfer.effectAllowed = 'move';

      // wrap in try catch to address IE's error when first param is 'text/plain'
      try {
        // setData is required for draggable to work in FireFox
        // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox
        event.dataTransfer.setData('text/plain', '');
      } catch (e) {}
      dragState.draggingNode = treeNode;
      _this.$emit('node-drag-start', treeNode.node, event);
    });

    this.$on('tree-node-drag-over', function (event, treeNode) {
      var dropNode = findNearestComponent(event.target, 'FksTreeNode');
      var oldDropNode = dragState.dropNode;
      if (oldDropNode && oldDropNode !== dropNode) {
        Object(dom_["removeClass"])(oldDropNode.$el, 'is-drop-inner');
      }
      var draggingNode = dragState.draggingNode;
      if (!draggingNode || !dropNode) return;

      var dropPrev = true;
      var dropInner = true;
      var dropNext = true;
      var userAllowDropInner = true;
      if (typeof _this.allowDrop === 'function') {
        dropPrev = _this.allowDrop(draggingNode.node, dropNode.node, 'prev');
        userAllowDropInner = dropInner = _this.allowDrop(draggingNode.node, dropNode.node, 'inner');
        dropNext = _this.allowDrop(draggingNode.node, dropNode.node, 'next');
      }
      event.dataTransfer.dropEffect = dropInner ? 'move' : 'none';
      if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {
        if (oldDropNode) {
          _this.$emit('node-drag-leave', draggingNode.node, oldDropNode.node, event);
        }
        _this.$emit('node-drag-enter', draggingNode.node, dropNode.node, event);
      }

      if (dropPrev || dropInner || dropNext) {
        dragState.dropNode = dropNode;
      }

      if (dropNode.node.nextSibling === draggingNode.node) {
        dropNext = false;
      }
      if (dropNode.node.previousSibling === draggingNode.node) {
        dropPrev = false;
      }
      if (dropNode.node.contains(draggingNode.node, false)) {
        dropInner = false;
      }
      if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {
        dropPrev = false;
        dropInner = false;
        dropNext = false;
      }

      var targetPosition = dropNode.$el.getBoundingClientRect();
      var treePosition = _this.$el.getBoundingClientRect();

      var dropType = void 0;
      var prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;
      var nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;

      var indicatorTop = -9999;
      var distance = event.clientY - targetPosition.top;
      if (distance < targetPosition.height * prevPercent) {
        dropType = 'before';
      } else if (distance > targetPosition.height * nextPercent) {
        dropType = 'after';
      } else if (dropInner) {
        dropType = 'inner';
      } else {
        dropType = 'none';
      }

      var iconPosition = dropNode.$el.querySelector('.fks-tree-node__expand-icon').getBoundingClientRect();
      var dropIndicator = _this.$refs.dropIndicator;
      if (dropType === 'before') {
        indicatorTop = iconPosition.top - treePosition.top;
      } else if (dropType === 'after') {
        indicatorTop = iconPosition.bottom - treePosition.top;
      }
      dropIndicator.style.top = indicatorTop + 'px';
      dropIndicator.style.left = iconPosition.right - treePosition.left + 'px';

      if (dropType === 'inner') {
        Object(dom_["addClass"])(dropNode.$el, 'is-drop-inner');
      } else {
        Object(dom_["removeClass"])(dropNode.$el, 'is-drop-inner');
      }

      dragState.showDropIndicator = dropType === 'before' || dropType === 'after';
      dragState.allowDrop = dragState.showDropIndicator || userAllowDropInner;
      dragState.dropType = dropType;
      _this.$emit('node-drag-over', draggingNode.node, dropNode.node, event);
    });

    this.$on('tree-node-drag-end', function (event) {
      var draggingNode = dragState.draggingNode,
          dropType = dragState.dropType,
          dropNode = dragState.dropNode;

      event.preventDefault();
      event.dataTransfer.dropEffect = 'move';

      if (draggingNode && dropNode) {
        var draggingNodeCopy = { data: draggingNode.node.data };
        if (dropType !== 'none') {
          draggingNode.node.remove();
        }
        if (dropType === 'before') {
          dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);
        } else if (dropType === 'after') {
          dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);
        } else if (dropType === 'inner') {
          dropNode.node.insertChild(draggingNodeCopy);
        }
        if (dropType !== 'none') {
          _this.store.registerNode(draggingNodeCopy);
        }

        Object(dom_["removeClass"])(dropNode.$el, 'is-drop-inner');

        _this.$emit('node-drag-end', draggingNode.node, dropNode.node, dropType, event);
        if (dropType !== 'none') {
          _this.$emit('node-drop', draggingNode.node, dropNode.node, dropType, event);
        }
      }
      if (draggingNode && !dropNode) {
        _this.$emit('node-drag-end', draggingNode.node, null, dropType, event);
      }

      dragState.showDropIndicator = false;
      dragState.draggingNode = null;
      dragState.dropNode = null;
      dragState.allowDrop = true;
    });
  },
  mounted: function mounted() {
    this.initTabIndex();
    this.$el.addEventListener('keydown', this.handleKeydown);
  },
  updated: function updated() {
    this.treeItems = this.$el.querySelectorAll('[role=treeitem]');
    this.checkboxItems = this.$el.querySelectorAll('input[type=checkbox]');
  }
});
// CONCATENATED MODULE: ./packages/tree/src/tree.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_treevue_type_script_lang_js_ = (treevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/tree/src/tree.vue





/* normalize component */

var tree_component = normalizeComponent(
  src_treevue_type_script_lang_js_,
  treevue_type_template_id_f9f743fa_render,
  treevue_type_template_id_f9f743fa_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_tree = (tree_component.exports);
// CONCATENATED MODULE: ./packages/tree/index.js


/* istanbul ignore next */
src_tree.install = function (Vue) {
  Vue.component(src_tree.name, src_tree);
};

/* harmony default export */ var packages_tree = (src_tree);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/alert/src/main.vue?vue&type=template&id=329f11a7&
var mainvue_type_template_id_329f11a7_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "fks-alert-fade" } }, [
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.visible,
            expression: "visible",
          },
        ],
        staticClass: "fks-alert",
        class: [
          _vm.typeClass,
          _vm.center ? "is-center" : "",
          "is-" + _vm.effect,
        ],
        attrs: { role: "alert" },
      },
      [
        _vm.showIcon
          ? _c("i", {
              staticClass: "fks-alert__icon",
              class: [_vm.iconClass, _vm.isBigIcon],
            })
          : _vm._e(),
        _c("div", { staticClass: "fks-alert__content" }, [
          _vm.title || _vm.$slots.title
            ? _c(
                "span",
                { staticClass: "fks-alert__title", class: [_vm.isBoldTitle] },
                [
                  _vm._t("title", function () {
                    return [_vm._v(_vm._s(_vm.title))]
                  }),
                ],
                2
              )
            : _vm._e(),
          _vm.$slots.default && !_vm.description
            ? _c(
                "p",
                { staticClass: "fks-alert__description" },
                [_vm._t("default")],
                2
              )
            : _vm._e(),
          _vm.description && !_vm.$slots.default
            ? _c("p", { staticClass: "fks-alert__description" }, [
                _vm._v(_vm._s(_vm.description)),
              ])
            : _vm._e(),
          _c(
            "i",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.closable,
                  expression: "closable",
                },
              ],
              staticClass: "fks-alert__closebtn",
              class: {
                "is-customed": _vm.closeText !== "",
                "fks-icon-close": _vm.closeText === "",
              },
              on: {
                click: function ($event) {
                  return _vm.close()
                },
              },
            },
            [_vm._v(_vm._s(_vm.closeText))]
          ),
        ]),
      ]
    ),
  ])
}
var mainvue_type_template_id_329f11a7_staticRenderFns = []
mainvue_type_template_id_329f11a7_render._withStripped = true


// CONCATENATED MODULE: ./packages/alert/src/main.vue?vue&type=template&id=329f11a7&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/alert/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var TYPE_CLASSES_MAP = {
  success: 'fks-icon-success',
  warning: 'fks-icon-warning',
  error: 'fks-icon-error'
};
/* harmony default export */ var alert_src_mainvue_type_script_lang_js_ = ({
  name: 'FksAlert',

  props: {
    title: {
      type: String,
      default: ''
    },
    description: {
      type: String,
      default: ''
    },
    type: {
      type: String,
      default: 'info'
    },
    closable: {
      type: Boolean,
      default: true
    },
    closeText: {
      type: String,
      default: ''
    },
    showIcon: Boolean,
    center: Boolean,
    effect: {
      type: String,
      default: 'light',
      validator: function validator(value) {
        return ['light', 'dark'].indexOf(value) !== -1;
      }
    }
  },

  data: function data() {
    return {
      visible: true
    };
  },


  methods: {
    close: function close() {
      this.visible = false;
      this.$emit('close');
    }
  },

  computed: {
    typeClass: function typeClass() {
      return 'fks-alert--' + this.type;
    },
    iconClass: function iconClass() {
      return TYPE_CLASSES_MAP[this.type] || 'fks-icon-info';
    },
    isBigIcon: function isBigIcon() {
      return this.description || this.$slots.default ? 'is-big' : '';
    },
    isBoldTitle: function isBoldTitle() {
      return this.description || this.$slots.default ? 'is-bold' : '';
    }
  }
});
// CONCATENATED MODULE: ./packages/alert/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_alert_src_mainvue_type_script_lang_js_ = (alert_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/alert/src/main.vue





/* normalize component */

var alert_src_main_component = normalizeComponent(
  packages_alert_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_329f11a7_render,
  mainvue_type_template_id_329f11a7_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var alert_src_main = (alert_src_main_component.exports);
// CONCATENATED MODULE: ./packages/alert/index.js


/* istanbul ignore next */
alert_src_main.install = function (Vue) {
  Vue.component(alert_src_main.name, alert_src_main);
};

/* harmony default export */ var packages_alert = (alert_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/notification/src/main.vue?vue&type=template&id=99f20ac2&
var mainvue_type_template_id_99f20ac2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "fks-notification-fade" } }, [
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.visible,
            expression: "visible",
          },
        ],
        class: [
          "fks-notification",
          _vm.customClass,
          _vm.horizontalClass,
          _vm.type,
        ],
        style: _vm.positionStyle,
        attrs: { role: "alert" },
        on: {
          mouseenter: function ($event) {
            return _vm.clearTimer()
          },
          mouseleave: function ($event) {
            return _vm.startTimer()
          },
          click: _vm.click,
        },
      },
      [
        _vm.type || _vm.iconClass
          ? _c("i", {
              staticClass: "fks-notification__icon",
              class: [_vm.typeClass, _vm.iconClass],
            })
          : _vm._e(),
        _c(
          "div",
          {
            staticClass: "fks-notification__group",
            class: { "is-with-icon": _vm.typeClass || _vm.iconClass },
          },
          [
            _c("h2", {
              staticClass: "fks-notification__title",
              domProps: { textContent: _vm._s(_vm.title) },
            }),
            _c(
              "div",
              {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: _vm.message,
                    expression: "message",
                  },
                ],
                staticClass: "fks-notification__content",
              },
              [
                _vm._t("default", function () {
                  return [
                    !_vm.dangerouslyUseHTMLString
                      ? _c("p", [_vm._v(_vm._s(_vm.message))])
                      : _c("p", {
                          domProps: { innerHTML: _vm._s(_vm.message) },
                        }),
                  ]
                }),
              ],
              2
            ),
            _vm.showClose
              ? _c("div", {
                  staticClass: "fks-notification__closeBtn fks-icon-close",
                  on: {
                    click: function ($event) {
                      $event.stopPropagation()
                      return _vm.close.apply(null, arguments)
                    },
                  },
                })
              : _vm._e(),
          ]
        ),
      ]
    ),
  ])
}
var mainvue_type_template_id_99f20ac2_staticRenderFns = []
mainvue_type_template_id_99f20ac2_render._withStripped = true


// CONCATENATED MODULE: ./packages/notification/src/main.vue?vue&type=template&id=99f20ac2&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/notification/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var mainvue_type_script_lang_js_typeMap = {
  success: 'success',
  info: 'info',
  warning: 'warning',
  error: 'error'
};

/* harmony default export */ var notification_src_mainvue_type_script_lang_js_ = ({
  data: function data() {
    return {
      visible: false,
      title: '',
      message: '',
      duration: 4500,
      type: '',
      showClose: true,
      customClass: '',
      iconClass: '',
      onClose: null,
      onClick: null,
      closed: false,
      verticalOffset: 0,
      timer: null,
      dangerouslyUseHTMLString: false,
      position: 'top-right'
    };
  },


  computed: {
    typeClass: function typeClass() {
      return this.type && mainvue_type_script_lang_js_typeMap[this.type] ? 'fks-icon-' + mainvue_type_script_lang_js_typeMap[this.type] : '';
    },
    horizontalClass: function horizontalClass() {
      return this.position.indexOf('right') > -1 ? 'right' : 'left';
    },
    verticalProperty: function verticalProperty() {
      return (/^top-/.test(this.position) ? 'top' : 'bottom'
      );
    },
    positionStyle: function positionStyle() {
      var _ref;

      return _ref = {}, _ref[this.verticalProperty] = this.verticalOffset + 'px', _ref;
    }
  },

  watch: {
    closed: function closed(newVal) {
      if (newVal) {
        this.visible = false;
        this.$el.addEventListener('transitionend', this.destroyElement);
      }
    }
  },

  methods: {
    destroyElement: function destroyElement() {
      this.$el.removeEventListener('transitionend', this.destroyElement);
      this.$destroy(true);
      this.$el.parentNode.removeChild(this.$el);
    },
    click: function click() {
      if (typeof this.onClick === 'function') {
        this.onClick();
      }
    },
    close: function close() {
      this.closed = true;
      if (typeof this.onClose === 'function') {
        this.onClose();
      }
    },
    clearTimer: function clearTimer() {
      clearTimeout(this.timer);
    },
    startTimer: function startTimer() {
      var _this = this;

      if (this.duration > 0) {
        this.timer = setTimeout(function () {
          if (!_this.closed) {
            _this.close();
          }
        }, this.duration);
      }
    },
    keydown: function keydown(e) {
      if (e.keyCode === 46 || e.keyCode === 8) {
        this.clearTimer(); // detele 取消倒计时
      } else if (e.keyCode === 27) {
        // esc关闭消息
        if (!this.closed) {
          this.close();
        }
      } else {
        this.startTimer(); // 恢复倒计时
      }
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    if (this.duration > 0) {
      this.timer = setTimeout(function () {
        if (!_this2.closed) {
          _this2.close();
        }
      }, this.duration);
    }
    document.addEventListener('keydown', this.keydown);
  },
  beforeDestroy: function beforeDestroy() {
    document.removeEventListener('keydown', this.keydown);
  }
});
// CONCATENATED MODULE: ./packages/notification/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_notification_src_mainvue_type_script_lang_js_ = (notification_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/notification/src/main.vue





/* normalize component */

var notification_src_main_component = normalizeComponent(
  packages_notification_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_99f20ac2_render,
  mainvue_type_template_id_99f20ac2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var notification_src_main = (notification_src_main_component.exports);
// CONCATENATED MODULE: ./packages/notification/src/main.js





var NotificationConstructor = external_vue_default.a.extend(notification_src_main);

var src_main_instance = void 0;
var instances = [];
var seed = 1;

var main_Notification = function Notification(options) {
  if (external_vue_default.a.prototype.$isServer) return;
  options = merge_default()({}, options);
  var userOnClose = options.onClose;
  var id = 'notification_' + seed++;
  var position = options.position || 'top-right';

  options.onClose = function () {
    Notification.close(id, userOnClose);
  };

  src_main_instance = new NotificationConstructor({
    data: options
  });

  if (Object(vdom_["isVNode"])(options.message)) {
    src_main_instance.$slots.default = [options.message];
    options.message = 'REPLACED_BY_VNODE';
  }
  src_main_instance.id = id;
  src_main_instance.$mount();
  document.body.appendChild(src_main_instance.$el);
  src_main_instance.visible = true;
  src_main_instance.dom = src_main_instance.$el;
  src_main_instance.dom.style.zIndex = popup_["PopupManager"].nextZIndex();

  var verticalOffset = options.offset || 0;
  instances.filter(function (item) {
    return item.position === position;
  }).forEach(function (item) {
    verticalOffset += item.$el.offsetHeight + 32;
  });
  verticalOffset += 32;
  src_main_instance.verticalOffset = verticalOffset;
  instances.push(src_main_instance);
  return src_main_instance;
};

['success', 'warning', 'info', 'error'].forEach(function (type) {
  main_Notification[type] = function (options) {
    if (typeof options === 'string' || Object(vdom_["isVNode"])(options)) {
      options = {
        message: options
      };
    }
    options.type = type;
    return main_Notification(options);
  };
});

main_Notification.close = function (id, userOnClose) {
  var index = -1;
  var len = instances.length;
  var instance = instances.filter(function (instance, i) {
    if (instance.id === id) {
      index = i;
      return true;
    }
    return false;
  })[0];
  if (!instance) return;

  if (typeof userOnClose === 'function') {
    userOnClose(instance);
  }
  instances.splice(index, 1);

  if (len <= 1) return;
  var position = instance.position;
  var removedHeight = instance.dom.offsetHeight;
  for (var i = index; i < len - 1; i++) {
    if (instances[i].position === position) {
      instances[i].dom.style[instance.verticalProperty] = parseInt(instances[i].dom.style[instance.verticalProperty], 10) - removedHeight - 32 + 'px';
    }
  }
};

main_Notification.closeAll = function () {
  for (var i = instances.length - 1; i >= 0; i--) {
    instances[i].close();
  }
};

/* harmony default export */ var packages_notification_src_main = (main_Notification);
// CONCATENATED MODULE: ./packages/notification/index.js

/* harmony default export */ var notification = (packages_notification_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=template&id=0f952be2&
var mainvue_type_template_id_0f952be2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-slider",
      class: {
        "is-vertical": _vm.vertical,
        "fks-slider--with-input": _vm.showInput,
      },
      attrs: {
        role: "slider",
        "aria-valuemin": _vm.min,
        "aria-valuemax": _vm.max,
        "aria-orientation": _vm.vertical ? "vertical" : "horizontal",
        "aria-disabled": _vm.sliderDisabled,
      },
    },
    [
      _vm.showInput && !_vm.range
        ? _c("fks-input-number", {
            ref: "input",
            staticClass: "fks-slider__input",
            attrs: {
              step: _vm.step,
              disabled: _vm.sliderDisabled,
              controls: _vm.showInputControls,
              min: _vm.min,
              max: _vm.max,
              debounce: _vm.debounce,
              size: _vm.inputSize,
            },
            on: { change: _vm.emitChange },
            model: {
              value: _vm.firstValue,
              callback: function ($$v) {
                _vm.firstValue = $$v
              },
              expression: "firstValue",
            },
          })
        : _vm._e(),
      _c(
        "div",
        {
          ref: "slider",
          staticClass: "fks-slider__runway",
          class: { "show-input": _vm.showInput, disabled: _vm.sliderDisabled },
          style: _vm.runwayStyle,
          on: { click: _vm.onSliderClick },
        },
        [
          _c("div", { staticClass: "fks-slider__bar", style: _vm.barStyle }),
          _c("slider-button", {
            ref: "button1",
            attrs: {
              vertical: _vm.vertical,
              "tooltip-class": _vm.tooltipClass,
            },
            model: {
              value: _vm.firstValue,
              callback: function ($$v) {
                _vm.firstValue = $$v
              },
              expression: "firstValue",
            },
          }),
          _vm.range
            ? _c("slider-button", {
                ref: "button2",
                attrs: {
                  vertical: _vm.vertical,
                  "tooltip-class": _vm.tooltipClass,
                },
                model: {
                  value: _vm.secondValue,
                  callback: function ($$v) {
                    _vm.secondValue = $$v
                  },
                  expression: "secondValue",
                },
              })
            : _vm._e(),
          _vm._l(_vm.stops, function (item, key) {
            return _vm.showStops
              ? _c("div", {
                  key: key,
                  staticClass: "fks-slider__stop",
                  style: _vm.getStopStyle(item),
                })
              : _vm._e()
          }),
          _vm.markList.length > 0
            ? [
                _c(
                  "div",
                  _vm._l(_vm.markList, function (item, key) {
                    return _c("div", {
                      key: key,
                      staticClass: "fks-slider__stop fks-slider__marks-stop",
                      style: _vm.getStopStyle(item.position),
                    })
                  }),
                  0
                ),
                _c(
                  "div",
                  { staticClass: "fks-slider__marks" },
                  _vm._l(_vm.markList, function (item, key) {
                    return _c("slider-marker", {
                      key: key,
                      style: _vm.getStopStyle(item.position),
                      attrs: { mark: item.mark },
                    })
                  }),
                  1
                ),
              ]
            : _vm._e(),
        ],
        2
      ),
    ],
    1
  )
}
var mainvue_type_template_id_0f952be2_staticRenderFns = []
mainvue_type_template_id_0f952be2_render._withStripped = true


// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=template&id=0f952be2&

// EXTERNAL MODULE: external "fawkes-lib/lib/input-number"
var input_number_ = __webpack_require__(58);
var input_number_default = /*#__PURE__*/__webpack_require__.n(input_number_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=template&id=238e6739&
var buttonvue_type_template_id_238e6739_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      ref: "button",
      staticClass: "fks-slider__button-wrapper",
      class: { hover: _vm.hovering, dragging: _vm.dragging },
      style: _vm.wrapperStyle,
      attrs: { tabindex: "0" },
      on: {
        mouseenter: _vm.handleMouseEnter,
        mouseleave: _vm.handleMouseLeave,
        mousedown: _vm.onButtonDown,
        touchstart: _vm.onButtonDown,
        focus: _vm.handleMouseEnter,
        blur: _vm.handleMouseLeave,
        keydown: [
          function ($event) {
            if (
              !$event.type.indexOf("key") &&
              _vm._k($event.keyCode, "left", 37, $event.key, [
                "Left",
                "ArrowLeft",
              ])
            ) {
              return null
            }
            if ("button" in $event && $event.button !== 0) {
              return null
            }
            return _vm.onLeftKeyDown.apply(null, arguments)
          },
          function ($event) {
            if (
              !$event.type.indexOf("key") &&
              _vm._k($event.keyCode, "right", 39, $event.key, [
                "Right",
                "ArrowRight",
              ])
            ) {
              return null
            }
            if ("button" in $event && $event.button !== 2) {
              return null
            }
            return _vm.onRightKeyDown.apply(null, arguments)
          },
          function ($event) {
            if (
              !$event.type.indexOf("key") &&
              _vm._k($event.keyCode, "down", 40, $event.key, [
                "Down",
                "ArrowDown",
              ])
            ) {
              return null
            }
            $event.preventDefault()
            return _vm.onLeftKeyDown.apply(null, arguments)
          },
          function ($event) {
            if (
              !$event.type.indexOf("key") &&
              _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])
            ) {
              return null
            }
            $event.preventDefault()
            return _vm.onRightKeyDown.apply(null, arguments)
          },
        ],
      },
    },
    [
      _c(
        "fks-tooltip",
        {
          ref: "tooltip",
          attrs: {
            placement: "top",
            "popper-class": _vm.tooltipClass,
            disabled: !_vm.showTooltip,
          },
        },
        [
          _c("span", { attrs: { slot: "content" }, slot: "content" }, [
            _vm._v(_vm._s(_vm.formatValue)),
          ]),
          _c("div", {
            staticClass: "fks-slider__button",
            class: { hover: _vm.hovering, dragging: _vm.dragging },
          }),
        ]
      ),
    ],
    1
  )
}
var buttonvue_type_template_id_238e6739_staticRenderFns = []
buttonvue_type_template_id_238e6739_render._withStripped = true


// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=template&id=238e6739&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var slider_src_buttonvue_type_script_lang_js_ = ({
  name: 'FksSliderButton',

  components: {
    FksTooltip: tooltip_default.a
  },

  props: {
    value: {
      type: Number,
      default: 0
    },
    vertical: {
      type: Boolean,
      default: false
    },
    tooltipClass: String
  },

  data: function data() {
    return {
      hovering: false,
      dragging: false,
      isClick: false,
      startX: 0,
      currentX: 0,
      startY: 0,
      currentY: 0,
      startPosition: 0,
      newPosition: null,
      oldValue: this.value
    };
  },


  computed: {
    disabled: function disabled() {
      return this.$parent.sliderDisabled;
    },
    max: function max() {
      return this.$parent.max;
    },
    min: function min() {
      return this.$parent.min;
    },
    step: function step() {
      return this.$parent.step;
    },
    showTooltip: function showTooltip() {
      return this.$parent.showTooltip;
    },
    precision: function precision() {
      return this.$parent.precision;
    },
    currentPosition: function currentPosition() {
      return (this.value - this.min) / (this.max - this.min) * 100 + '%';
    },
    enableFormat: function enableFormat() {
      return this.$parent.formatTooltip instanceof Function;
    },
    formatValue: function formatValue() {
      return this.enableFormat && this.$parent.formatTooltip(this.value) || this.value;
    },
    wrapperStyle: function wrapperStyle() {
      return this.vertical ? { bottom: this.currentPosition } : { left: this.currentPosition };
    }
  },

  watch: {
    dragging: function dragging(val) {
      this.$parent.dragging = val;
    }
  },

  methods: {
    displayTooltip: function displayTooltip() {
      this.$refs.tooltip && (this.$refs.tooltip.showPopper = true);
    },
    hideTooltip: function hideTooltip() {
      this.$refs.tooltip && (this.$refs.tooltip.showPopper = false);
    },
    handleMouseEnter: function handleMouseEnter() {
      this.hovering = true;
      this.displayTooltip();
    },
    handleMouseLeave: function handleMouseLeave() {
      this.hovering = false;
      this.hideTooltip();
    },
    onButtonDown: function onButtonDown(event) {
      if (this.disabled) return;
      event.preventDefault();
      this.onDragStart(event);
      window.addEventListener('mousemove', this.onDragging);
      window.addEventListener('touchmove', this.onDragging);
      window.addEventListener('mouseup', this.onDragEnd);
      window.addEventListener('touchend', this.onDragEnd);
      window.addEventListener('contextmenu', this.onDragEnd);
    },
    onLeftKeyDown: function onLeftKeyDown() {
      if (this.disabled) return;
      this.newPosition = parseFloat(this.currentPosition) - this.step / (this.max - this.min) * 100;
      this.setPosition(this.newPosition);
      this.$parent.emitChange();
    },
    onRightKeyDown: function onRightKeyDown() {
      if (this.disabled) return;
      this.newPosition = parseFloat(this.currentPosition) + this.step / (this.max - this.min) * 100;
      this.setPosition(this.newPosition);
      this.$parent.emitChange();
    },
    onDragStart: function onDragStart(event) {
      this.dragging = true;
      this.isClick = true;
      if (event.type === 'touchstart') {
        event.clientY = event.touches[0].clientY;
        event.clientX = event.touches[0].clientX;
      }
      if (this.vertical) {
        this.startY = event.clientY;
      } else {
        this.startX = event.clientX;
      }
      this.startPosition = parseFloat(this.currentPosition);
      this.newPosition = this.startPosition;
    },
    onDragging: function onDragging(event) {
      if (this.dragging) {
        this.isClick = false;
        this.displayTooltip();
        this.$parent.resetSize();
        var diff = 0;
        if (event.type === 'touchmove') {
          event.clientY = event.touches[0].clientY;
          event.clientX = event.touches[0].clientX;
        }
        if (this.vertical) {
          this.currentY = event.clientY;
          diff = (this.startY - this.currentY) / this.$parent.sliderSize * 100;
        } else {
          this.currentX = event.clientX;
          diff = (this.currentX - this.startX) / this.$parent.sliderSize * 100;
        }
        this.newPosition = this.startPosition + diff;
        this.setPosition(this.newPosition);
      }
    },
    onDragEnd: function onDragEnd() {
      var _this = this;

      if (this.dragging) {
        /*
         * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移
         * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上
         */
        setTimeout(function () {
          _this.dragging = false;
          _this.hideTooltip();
          if (!_this.isClick) {
            _this.setPosition(_this.newPosition);
            _this.$parent.emitChange();
          }
        }, 0);
        window.removeEventListener('mousemove', this.onDragging);
        window.removeEventListener('touchmove', this.onDragging);
        window.removeEventListener('mouseup', this.onDragEnd);
        window.removeEventListener('touchend', this.onDragEnd);
        window.removeEventListener('contextmenu', this.onDragEnd);
      }
    },
    setPosition: function setPosition(newPosition) {
      var _this2 = this;

      if (newPosition === null || isNaN(newPosition)) return;
      if (newPosition < 0) {
        newPosition = 0;
      } else if (newPosition > 100) {
        newPosition = 100;
      }
      var lengthPerStep = 100 / ((this.max - this.min) / this.step);
      var steps = Math.round(newPosition / lengthPerStep);
      var value = steps * lengthPerStep * (this.max - this.min) * 0.01 + this.min;
      value = parseFloat(value.toFixed(this.precision));
      this.$emit('input', value);
      this.$nextTick(function () {
        _this2.displayTooltip();
        _this2.$refs.tooltip && _this2.$refs.tooltip.updatePopper();
      });
      if (!this.dragging && this.value !== this.oldValue) {
        this.oldValue = this.value;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_slider_src_buttonvue_type_script_lang_js_ = (slider_src_buttonvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/slider/src/button.vue





/* normalize component */

var src_button_component = normalizeComponent(
  packages_slider_src_buttonvue_type_script_lang_js_,
  buttonvue_type_template_id_238e6739_render,
  buttonvue_type_template_id_238e6739_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var slider_src_button = (src_button_component.exports);
// CONCATENATED MODULE: ./packages/slider/src/marker.js
/* harmony default export */ var marker = ({
  name: 'FksMarker',

  props: {
    mark: {
      type: [String, Object]
    }
  },
  render: function render() {
    var h = arguments[0];

    var label = typeof this.mark === 'string' ? this.mark : this.mark.label;

    return h(
      'div',
      { 'class': 'fks-slider__marks-text', style: this.mark.style || {} },
      [label]
    );
  }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var slider_src_mainvue_type_script_lang_js_ = ({
  name: 'FksSlider',

  mixins: [emitter_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    min: {
      type: Number,
      default: 0
    },
    max: {
      type: Number,
      default: 100
    },
    step: {
      type: Number,
      default: 1
    },
    value: {
      type: [Number, Array],
      default: 0
    },
    showInput: {
      type: Boolean,
      default: false
    },
    showInputControls: {
      type: Boolean,
      default: true
    },
    inputSize: {
      type: String,
      default: 'small'
    },
    showStops: {
      type: Boolean,
      default: false
    },
    showTooltip: {
      type: Boolean,
      default: true
    },
    formatTooltip: Function,
    disabled: {
      type: Boolean,
      default: false
    },
    readonly: {
      type: Boolean,
      default: false
    },
    range: {
      type: Boolean,
      default: false
    },
    vertical: {
      type: Boolean,
      default: false
    },
    height: {
      type: String
    },
    debounce: {
      type: Number,
      default: 300
    },
    label: {
      type: String
    },
    tooltipClass: String,
    marks: Object
  },

  components: {
    FksInputNumber: input_number_default.a,
    SliderButton: slider_src_button,
    SliderMarker: marker
  },

  data: function data() {
    return {
      firstValue: null,
      secondValue: null,
      oldValue: null,
      dragging: false,
      sliderSize: 1
    };
  },


  watch: {
    value: function value(val, oldVal) {
      if (this.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every(function (item, index) {
        return item === oldVal[index];
      })) {
        return;
      }
      this.setValues();
    },
    dragging: function dragging(val) {
      if (!val) {
        this.setValues();
      }
    },
    firstValue: function firstValue(val) {
      if (this.range) {
        this.$emit('input', [this.minValue, this.maxValue]);
      } else {
        this.$emit('input', val);
      }
    },
    secondValue: function secondValue() {
      if (this.range) {
        this.$emit('input', [this.minValue, this.maxValue]);
      }
    },
    min: function min() {
      this.setValues();
    },
    max: function max() {
      this.setValues();
    }
  },

  methods: {
    valueChanged: function valueChanged() {
      var _this = this;

      if (this.range) {
        return ![this.minValue, this.maxValue].every(function (item, index) {
          return item === _this.oldValue[index];
        });
      } else {
        return this.value !== this.oldValue;
      }
    },
    setValues: function setValues() {
      if (this.min > this.max) {
        console.error('[FawkesLib Error][Slider]min should not be greater than max.');
        return;
      }
      var val = this.value;
      if (this.range && Array.isArray(val)) {
        if (val[1] < this.min) {
          this.$emit('input', [this.min, this.min]);
        } else if (val[0] > this.max) {
          this.$emit('input', [this.max, this.max]);
        } else if (val[0] < this.min) {
          this.$emit('input', [this.min, val[1]]);
        } else if (val[1] > this.max) {
          this.$emit('input', [val[0], this.max]);
        } else {
          this.firstValue = val[0];
          this.secondValue = val[1];
          if (this.valueChanged()) {
            this.dispatch('FksFormItem', 'fks.form.change', [this.minValue, this.maxValue]);
            this.oldValue = val.slice();
          }
        }
      } else if (!this.range && typeof val === 'number' && !isNaN(val)) {
        if (val < this.min) {
          this.$emit('input', this.min);
        } else if (val > this.max) {
          this.$emit('input', this.max);
        } else {
          this.firstValue = val;
          if (this.valueChanged()) {
            this.dispatch('FksFormItem', 'fks.form.change', val);
            this.oldValue = val;
          }
        }
      }
    },
    setPosition: function setPosition(percent) {
      var targetValue = this.min + percent * (this.max - this.min) / 100;
      if (!this.range) {
        this.$refs.button1.setPosition(percent);
        return;
      }
      var button = void 0;
      if (Math.abs(this.minValue - targetValue) < Math.abs(this.maxValue - targetValue)) {
        button = this.firstValue < this.secondValue ? 'button1' : 'button2';
      } else {
        button = this.firstValue > this.secondValue ? 'button1' : 'button2';
      }
      this.$refs[button].setPosition(percent);
    },
    onSliderClick: function onSliderClick(event) {
      if (this.sliderDisabled || this.dragging) return;
      this.resetSize();
      if (this.vertical) {
        var sliderOffsetBottom = this.$refs.slider.getBoundingClientRect().bottom;
        this.setPosition((sliderOffsetBottom - event.clientY) / this.sliderSize * 100);
      } else {
        var sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left;
        this.setPosition((event.clientX - sliderOffsetLeft) / this.sliderSize * 100);
      }
      this.emitChange();
    },
    resetSize: function resetSize() {
      if (this.$refs.slider) {
        this.sliderSize = this.$refs.slider['client' + (this.vertical ? 'Height' : 'Width')];
      }
    },
    emitChange: function emitChange() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.$emit('change', _this2.range ? [_this2.minValue, _this2.maxValue] : _this2.value);
      });
    },
    getStopStyle: function getStopStyle(position) {
      return this.vertical ? { bottom: position + '%' } : { left: position + '%' };
    }
  },

  computed: {
    stops: function stops() {
      var _this3 = this;

      if (!this.showStops || this.min > this.max) return [];
      if (this.step === 0) {
         false && false;
        return [];
      }
      var stopCount = (this.max - this.min) / this.step;
      var stepWidth = 100 * this.step / (this.max - this.min);
      var result = [];
      for (var i = 1; i < stopCount; i++) {
        result.push(i * stepWidth);
      }
      if (this.range) {
        return result.filter(function (step) {
          return step < 100 * (_this3.minValue - _this3.min) / (_this3.max - _this3.min) || step > 100 * (_this3.maxValue - _this3.min) / (_this3.max - _this3.min);
        });
      } else {
        return result.filter(function (step) {
          return step > 100 * (_this3.firstValue - _this3.min) / (_this3.max - _this3.min);
        });
      }
    },
    markList: function markList() {
      var _this4 = this;

      if (!this.marks) {
        return [];
      }

      var marksKeys = Object.keys(this.marks);
      return marksKeys.map(parseFloat).sort(function (a, b) {
        return a - b;
      }).filter(function (point) {
        return point <= _this4.max && point >= _this4.min;
      }).map(function (point) {
        return {
          point: point,
          position: (point - _this4.min) * 100 / (_this4.max - _this4.min),
          mark: _this4.marks[point]
        };
      });
    },
    minValue: function minValue() {
      return Math.min(this.firstValue, this.secondValue);
    },
    maxValue: function maxValue() {
      return Math.max(this.firstValue, this.secondValue);
    },
    barSize: function barSize() {
      return this.range ? 100 * (this.maxValue - this.minValue) / (this.max - this.min) + '%' : 100 * (this.firstValue - this.min) / (this.max - this.min) + '%';
    },
    barStart: function barStart() {
      return this.range ? 100 * (this.minValue - this.min) / (this.max - this.min) + '%' : '0%';
    },
    precision: function precision() {
      var precisions = [this.min, this.max, this.step].map(function (item) {
        var decimal = ('' + item).split('.')[1];
        return decimal ? decimal.length : 0;
      });
      return Math.max.apply(null, precisions);
    },
    runwayStyle: function runwayStyle() {
      return this.vertical ? { height: this.height } : {};
    },
    barStyle: function barStyle() {
      return this.vertical ? {
        height: this.barSize,
        bottom: this.barStart
      } : {
        width: this.barSize,
        left: this.barStart
      };
    },
    sliderDisabled: function sliderDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },

  mounted: function mounted() {
    var valuetext = void 0;
    if (this.range) {
      if (Array.isArray(this.value)) {
        this.firstValue = Math.max(this.min, this.value[0]);
        this.secondValue = Math.min(this.max, this.value[1]);
      } else {
        this.firstValue = this.min;
        this.secondValue = this.max;
      }
      this.oldValue = [this.firstValue, this.secondValue];
      valuetext = this.firstValue + '-' + this.secondValue;
    } else {
      if (typeof this.value !== 'number' || isNaN(this.value)) {
        this.firstValue = this.min;
      } else {
        this.firstValue = Math.min(this.max, Math.max(this.min, this.value));
      }
      this.oldValue = this.firstValue;
      valuetext = this.firstValue;
    }
    this.$el.setAttribute('aria-valuetext', valuetext);

    // label screen reader
    this.$el.setAttribute('aria-label', this.label ? this.label : 'slider between ' + this.min + ' and ' + this.max);

    this.resetSize();
    window.addEventListener('resize', this.resetSize);
  },
  beforeDestroy: function beforeDestroy() {
    window.removeEventListener('resize', this.resetSize);
  }
});
// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_slider_src_mainvue_type_script_lang_js_ = (slider_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/slider/src/main.vue





/* normalize component */

var slider_src_main_component = normalizeComponent(
  packages_slider_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_0f952be2_render,
  mainvue_type_template_id_0f952be2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var slider_src_main = (slider_src_main_component.exports);
// CONCATENATED MODULE: ./packages/slider/index.js


/* istanbul ignore next */
slider_src_main.install = function (Vue) {
  Vue.component(slider_src_main.name, slider_src_main);
};

/* harmony default export */ var slider = (slider_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/loading/src/loading.vue?vue&type=template&id=5f431f0e&
var loadingvue_type_template_id_5f431f0e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-loading-fade" },
      on: { "after-leave": _vm.handleAfterLeave },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-loading-mask",
          class: [_vm.customClass, { "is-fullscreen": _vm.fullscreen }],
          style: { backgroundColor: _vm.background || "" },
        },
        [
          _c("div", { staticClass: "fks-loading-spinner" }, [
            !_vm.spinner
              ? _c(
                  "svg",
                  {
                    staticClass: "circular",
                    attrs: { viewBox: "25 25 50 50" },
                  },
                  [
                    _c("circle", {
                      staticClass: "path",
                      attrs: { cx: "50", cy: "50", r: "20", fill: "none" },
                    }),
                  ]
                )
              : _c("i", { class: _vm.spinner }),
            _vm.text
              ? _c("p", { staticClass: "fks-loading-text" }, [
                  _vm._v(_vm._s(_vm.text)),
                ])
              : _vm._e(),
          ]),
        ]
      ),
    ]
  )
}
var loadingvue_type_template_id_5f431f0e_staticRenderFns = []
loadingvue_type_template_id_5f431f0e_render._withStripped = true


// CONCATENATED MODULE: ./packages/loading/src/loading.vue?vue&type=template&id=5f431f0e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/loading/src/loading.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var loadingvue_type_script_lang_js_ = ({
  data: function data() {
    return {
      text: null,
      spinner: null,
      background: null,
      fullscreen: true,
      visible: false,
      customClass: ''
    };
  },


  methods: {
    handleAfterLeave: function handleAfterLeave() {
      this.$emit('after-leave');
    },
    setText: function setText(text) {
      this.text = text;
    }
  }
});
// CONCATENATED MODULE: ./packages/loading/src/loading.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_loadingvue_type_script_lang_js_ = (loadingvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/loading/src/loading.vue





/* normalize component */

var loading_component = normalizeComponent(
  src_loadingvue_type_script_lang_js_,
  loadingvue_type_template_id_5f431f0e_render,
  loadingvue_type_template_id_5f431f0e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var loading = (loading_component.exports);
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/after-leave"
var after_leave_ = __webpack_require__(36);
var after_leave_default = /*#__PURE__*/__webpack_require__.n(after_leave_);

// CONCATENATED MODULE: ./packages/loading/src/directive.js





var Mask = external_vue_default.a.extend(loading);

var loadingDirective = {};
loadingDirective.install = function (Vue) {
  if (Vue.prototype.$isServer) return;
  var toggleLoading = function toggleLoading(el, binding) {
    if (binding.value) {
      Vue.nextTick(function () {
        if (binding.modifiers.fullscreen) {
          el.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
          el.originalOverflow = Object(dom_["getStyle"])(document.body, 'overflow');
          el.maskStyle.zIndex = popup_["PopupManager"].nextZIndex();

          Object(dom_["addClass"])(el.mask, 'is-fullscreen');
          insertDom(document.body, el, binding);
        } else {
          Object(dom_["removeClass"])(el.mask, 'is-fullscreen');

          if (binding.modifiers.body) {
            el.originalPosition = Object(dom_["getStyle"])(document.body, 'position');

            ['top', 'left'].forEach(function (property) {
              var scroll = property === 'top' ? 'scrollTop' : 'scrollLeft';
              el.maskStyle[property] = el.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] - parseInt(Object(dom_["getStyle"])(document.body, 'margin-' + property), 10) + 'px';
            });
            ['height', 'width'].forEach(function (property) {
              el.maskStyle[property] = el.getBoundingClientRect()[property] + 'px';
            });

            insertDom(document.body, el, binding);
          } else {
            el.originalPosition = Object(dom_["getStyle"])(el, 'position');
            insertDom(el, el, binding);
          }
        }
      });
    } else {
      after_leave_default()(el.instance, function (_) {
        if (!el.instance.hiding) return;
        el.domVisible = false;
        var target = binding.modifiers.fullscreen || binding.modifiers.body ? document.body : el;
        Object(dom_["removeClass"])(target, 'fks-loading-parent--relative');
        Object(dom_["removeClass"])(target, 'fks-loading-parent--hidden');
        el.instance.hiding = false;
      }, 300, true);
      el.instance.visible = false;
      el.instance.hiding = true;
    }
  };
  var insertDom = function insertDom(parent, el, binding) {
    if (!el.domVisible && Object(dom_["getStyle"])(el, 'display') !== 'none' && Object(dom_["getStyle"])(el, 'visibility') !== 'hidden') {
      Object.keys(el.maskStyle).forEach(function (property) {
        el.mask.style[property] = el.maskStyle[property];
      });

      if (el.originalPosition !== 'absolute' && el.originalPosition !== 'fixed') {
        Object(dom_["addClass"])(parent, 'fks-loading-parent--relative');
      }
      if (binding.modifiers.fullscreen && binding.modifiers.lock) {
        Object(dom_["addClass"])(parent, 'fks-loading-parent--hidden');
      }
      el.domVisible = true;

      parent.appendChild(el.mask);
      Vue.nextTick(function () {
        if (el.instance.hiding) {
          el.instance.$emit('after-leave');
        } else {
          el.instance.visible = true;
        }
      });
      el.domInserted = true;
    } else if (el.domVisible && el.instance.hiding === true) {
      el.instance.visible = true;
      el.instance.hiding = false;
    }
  };

  Vue.directive('loading', {
    bind: function bind(el, binding, vnode) {
      var textExr = el.getAttribute('element-loading-text');
      var spinnerExr = el.getAttribute('element-loading-spinner');
      var backgroundExr = el.getAttribute('element-loading-background');
      var customClassExr = el.getAttribute('element-loading-custom-class');
      var vm = vnode.context;
      var mask = new Mask({
        el: document.createElement('div'),
        data: {
          text: vm && vm[textExr] || textExr,
          spinner: vm && vm[spinnerExr] || spinnerExr,
          background: vm && vm[backgroundExr] || backgroundExr,
          customClass: vm && vm[customClassExr] || customClassExr,
          fullscreen: !!binding.modifiers.fullscreen
        }
      });
      el.instance = mask;
      el.mask = mask.$el;
      el.maskStyle = {};

      binding.value && toggleLoading(el, binding);
    },

    update: function update(el, binding) {
      el.instance.setText(el.getAttribute('element-loading-text'));
      if (binding.oldValue !== binding.value) {
        toggleLoading(el, binding);
      }
    },

    unbind: function unbind(el, binding) {
      if (el.domInserted) {
        el.mask && el.mask.parentNode && el.mask.parentNode.removeChild(el.mask);
        toggleLoading(el, { value: false, modifiers: binding.modifiers });
      }
      el.instance && el.instance.$destroy();
    }
  });
};

/* harmony default export */ var src_directive = (loadingDirective);
// CONCATENATED MODULE: ./packages/loading/src/index.js







var LoadingConstructor = external_vue_default.a.extend(loading);

var src_defaults = {
  text: null,
  fullscreen: true,
  body: false,
  lock: false,
  customClass: ''
};

var fullscreenLoading = void 0;

LoadingConstructor.prototype.originalPosition = '';
LoadingConstructor.prototype.originalOverflow = '';

LoadingConstructor.prototype.close = function () {
  var _this = this;

  if (this.fullscreen) {
    fullscreenLoading = undefined;
  }
  after_leave_default()(this, function (_) {
    var target = _this.fullscreen || _this.body ? document.body : _this.target;
    Object(dom_["removeClass"])(target, 'fks-loading-parent--relative');
    Object(dom_["removeClass"])(target, 'fks-loading-parent--hidden');
    if (_this.$el && _this.$el.parentNode) {
      _this.$el.parentNode.removeChild(_this.$el);
    }
    _this.$destroy();
  }, 300);
  this.visible = false;
};

var src_addStyle = function addStyle(options, parent, instance) {
  var maskStyle = {};
  if (options.fullscreen) {
    instance.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
    instance.originalOverflow = Object(dom_["getStyle"])(document.body, 'overflow');
    maskStyle.zIndex = popup_["PopupManager"].nextZIndex();
  } else if (options.body) {
    instance.originalPosition = Object(dom_["getStyle"])(document.body, 'position');
    ['top', 'left'].forEach(function (property) {
      var scroll = property === 'top' ? 'scrollTop' : 'scrollLeft';
      maskStyle[property] = options.target.getBoundingClientRect()[property] + document.body[scroll] + document.documentElement[scroll] + 'px';
    });
    ['height', 'width'].forEach(function (property) {
      maskStyle[property] = options.target.getBoundingClientRect()[property] + 'px';
    });
  } else {
    instance.originalPosition = Object(dom_["getStyle"])(parent, 'position');
  }
  Object.keys(maskStyle).forEach(function (property) {
    instance.$el.style[property] = maskStyle[property];
  });
};

var src_Loading = function Loading() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (external_vue_default.a.prototype.$isServer) return;
  options = merge_default()({}, src_defaults, options);
  if (typeof options.target === 'string') {
    options.target = document.querySelector(options.target);
  }
  options.target = options.target || document.body;
  if (options.target !== document.body) {
    options.fullscreen = false;
  } else {
    options.body = true;
  }
  if (options.fullscreen && fullscreenLoading) {
    return fullscreenLoading;
  }

  var parent = options.body ? document.body : options.target;
  var instance = new LoadingConstructor({
    el: document.createElement('div'),
    data: options
  });

  src_addStyle(options, parent, instance);
  if (instance.originalPosition !== 'absolute' && instance.originalPosition !== 'fixed') {
    Object(dom_["addClass"])(parent, 'fks-loading-parent--relative');
  }
  if (options.fullscreen && options.lock) {
    Object(dom_["addClass"])(parent, 'fks-loading-parent--hidden');
  }
  parent.appendChild(instance.$el);
  external_vue_default.a.nextTick(function () {
    instance.visible = true;
  });
  if (options.fullscreen) {
    fullscreenLoading = instance;
  }
  return instance;
};

/* harmony default export */ var loading_src = (src_Loading);
// CONCATENATED MODULE: ./packages/loading/index.js



/* harmony default export */ var packages_loading = ({
  install: function install(Vue) {
    Vue.use(src_directive);
    Vue.prototype.$loading = loading_src;
  },

  directive: src_directive,
  service: loading_src
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/icon/src/icon.vue?vue&type=template&id=f92ecdba&
var iconvue_type_template_id_f92ecdba_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("svg", { class: _vm.svgClass, attrs: { "aria-hidden": "true" } }, [
    _c("use", { attrs: { "xlink:href": _vm.iconName } }),
  ])
}
var iconvue_type_template_id_f92ecdba_staticRenderFns = []
iconvue_type_template_id_f92ecdba_render._withStripped = true


// CONCATENATED MODULE: ./packages/icon/src/icon.vue?vue&type=template&id=f92ecdba&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/icon/src/icon.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var iconvue_type_script_lang_js_ = ({
  name: 'FksIcon',
  props: {
    iconClass: {
      type: String,
      required: true
    },
    className: {
      type: String
    }
  },
  computed: {
    iconName: function iconName() {
      return '#icon-' + this.iconClass;
    },
    svgClass: function svgClass() {
      if (this.className) {
        return 'fks-svg-icon ' + this.className;
      } else {
        return 'fks-svg-icon';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/icon/src/icon.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_iconvue_type_script_lang_js_ = (iconvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/icon/src/icon.vue





/* normalize component */

var icon_component = normalizeComponent(
  src_iconvue_type_script_lang_js_,
  iconvue_type_template_id_f92ecdba_render,
  iconvue_type_template_id_f92ecdba_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var icon = (icon_component.exports);
// CONCATENATED MODULE: ./packages/icon/index.js
/*
 * @Author: zhong_m
 * @Date: 2021-11-25 14:19:27
 * @LastEditTime: 2021-12-10 09:14:18
 * @LastEditors: zhong_m
 * @Description: 
 * @FilePath: \fawkes-lib\packages\icon\index.js
 */

//svg
var requireAll = function requireAll(requireContext) {
  return requireContext.keys().map(requireContext);
};
var req = __webpack_require__(65);
requireAll(req);

/* istanbul ignore next */
icon.install = function (Vue) {
  Vue.component(icon.name, icon);
};

/* harmony default export */ var packages_icon = (icon);
// CONCATENATED MODULE: ./packages/row/src/row.js
/* harmony default export */ var src_row = ({
  name: 'FksRow',

  componentName: 'FksRow',

  props: {
    tag: {
      type: String,
      default: 'div'
    },
    gutter: Number,
    type: String,
    justify: {
      type: String,
      default: 'start'
    },
    align: {
      type: String,
      default: 'top'
    }
  },

  computed: {
    style: function style() {
      var ret = {};

      if (this.gutter) {
        ret.marginLeft = '-' + this.gutter / 2 + 'px';
        ret.marginRight = ret.marginLeft;
      }

      return ret;
    }
  },

  render: function render(h) {
    return h(this.tag, {
      class: ['fks-row', this.justify !== 'start' ? 'is-justify-' + this.justify : '', this.align !== 'top' ? 'is-align-' + this.align : '', { 'fks-row--flex': this.type === 'flex' }],
      style: this.style
    }, this.$slots.default);
  }
});
// CONCATENATED MODULE: ./packages/row/index.js


/* istanbul ignore next */
src_row.install = function (Vue) {
  Vue.component(src_row.name, src_row);
};

/* harmony default export */ var packages_row = (src_row);
// CONCATENATED MODULE: ./packages/col/src/col.js
var col_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* harmony default export */ var col = ({
  name: 'FksCol',

  props: {
    span: {
      type: Number,
      default: 24
    },
    tag: {
      type: String,
      default: 'div'
    },
    offset: Number,
    pull: Number,
    push: Number,
    xs: [Number, Object],
    sm: [Number, Object],
    md: [Number, Object],
    lg: [Number, Object],
    xl: [Number, Object]
  },

  computed: {
    gutter: function gutter() {
      var parent = this.$parent;
      while (parent && parent.$options.componentName !== 'FksRow') {
        parent = parent.$parent;
      }
      return parent ? parent.gutter : 0;
    }
  },
  render: function render(h) {
    var _this = this;

    var classList = [];
    var style = {};

    if (this.gutter) {
      style.paddingLeft = this.gutter / 2 + 'px';
      style.paddingRight = style.paddingLeft;
    }

    ['span', 'offset', 'pull', 'push'].forEach(function (prop) {
      if (_this[prop] || _this[prop] === 0) {
        classList.push(prop !== 'span' ? 'fks-col-' + prop + '-' + _this[prop] : 'fks-col-' + _this[prop]);
      }
    });

    ['xs', 'sm', 'md', 'lg', 'xl'].forEach(function (size) {
      if (typeof _this[size] === 'number') {
        classList.push('fks-col-' + size + '-' + _this[size]);
      } else if (col_typeof(_this[size]) === 'object') {
        var props = _this[size];
        Object.keys(props).forEach(function (prop) {
          classList.push(prop !== 'span' ? 'fks-col-' + size + '-' + prop + '-' + props[prop] : 'fks-col-' + size + '-' + props[prop]);
        });
      }
    });

    return h(this.tag, {
      class: ['fks-col', classList],
      style: style
    }, this.$slots.default);
  }
});
// CONCATENATED MODULE: ./packages/col/index.js


/* istanbul ignore next */
col.install = function (Vue) {
  Vue.component(col.name, col);
};

/* harmony default export */ var packages_col = (col);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-list.vue?vue&type=template&id=7a2783ff&
var upload_listvue_type_template_id_7a2783ff_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition-group",
    {
      class: [
        "fks-upload-list",
        "fks-upload-list--" + _vm.listType,
        { "is-disabled": _vm.disabled },
      ],
      attrs: { tag: "ul", name: "fks-list" },
    },
    _vm._l(_vm.files, function (file) {
      return _c(
        "li",
        {
          key: file.uid,
          class: [
            "fks-upload-list__item",
            "is-" + file.status,
            _vm.focusing ? "focusing" : "",
          ],
          attrs: { tabindex: "0" },
          on: {
            keydown: function ($event) {
              if (
                !$event.type.indexOf("key") &&
                _vm._k($event.keyCode, "delete", [8, 46], $event.key, [
                  "Backspace",
                  "Delete",
                  "Del",
                ])
              ) {
                return null
              }
              !_vm.disabled && _vm.$emit("remove", file)
            },
            focus: function ($event) {
              _vm.focusing = true
            },
            blur: function ($event) {
              _vm.focusing = false
            },
            click: function ($event) {
              _vm.focusing = false
            },
          },
        },
        [
          _vm._t(
            "default",
            function () {
              return [
                file.status !== "uploading" &&
                ["picture-card", "picture"].indexOf(_vm.listType) > -1
                  ? _c("img", {
                      staticClass: "fks-upload-list__item-thumbnail",
                      attrs: { src: file.url, alt: "" },
                    })
                  : _vm._e(),
                _c(
                  "a",
                  {
                    staticClass: "fks-upload-list__item-name",
                    on: {
                      click: function ($event) {
                        return _vm.handleClick(file)
                      },
                    },
                  },
                  [
                    _vm.listType == "text"
                      ? _c("i", {
                          staticClass: "fks-icon-document",
                          staticStyle: {
                            "font-size": "14px",
                            "line-height": "25px",
                            "margin-right": "7px",
                          },
                        })
                      : _vm._e(),
                    _vm.listType == "card" || _vm.listType == "popover"
                      ? _c("fks-icon", {
                          attrs: { "icon-class": _vm.fileType(file.name) },
                        })
                      : _vm._e(),
                    _c(
                      "div",
                      {
                        staticStyle: {
                          width: "calc(100% - 37px)",
                          "text-align": "left",
                        },
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "fks-upload-list__item-file",
                            attrs: { title: file.name },
                          },
                          [
                            _vm._v(
                              "\n            " +
                                _vm._s(file.name) +
                                "\n          "
                            ),
                          ]
                        ),
                        _vm.listType !== "text" && _vm.listType !== "popover"
                          ? _c(
                              "div",
                              { staticClass: "fks-upload-list__item-size" },
                              [
                                _vm._v(
                                  "\n            " +
                                    _vm._s(
                                      _vm._f("renderFileSize")(file.size)
                                    ) +
                                    "\n          "
                                ),
                              ]
                            )
                          : _vm._e(),
                      ]
                    ),
                  ],
                  1
                ),
                !_vm.disabled
                  ? _c(
                      "label",
                      { staticClass: "fks-upload-list__item-status-label" },
                      [
                        _c("i", {
                          class: {
                            "fks-icon-upload-success": true,
                            "fks-icon-circle-check":
                              _vm.listType === "text" ||
                              _vm.listType == "popover",
                            "fks-icon-check":
                              _vm.listType !== "text" &&
                              _vm.listType !== "popover",
                          },
                        }),
                      ]
                    )
                  : _vm._e(),
                !_vm.disabled
                  ? _c("i", {
                      staticClass: "fks-icon-close",
                      on: {
                        click: function ($event) {
                          return _vm.$emit("remove", file)
                        },
                      },
                    })
                  : _vm._e(),
                !_vm.disabled
                  ? _c("i", { staticClass: "fks-icon-close-tip" }, [
                      _vm._v(_vm._s(_vm.t("fks.upload.deleteTip"))),
                    ])
                  : _vm._e(),
                _vm.showDownload && file.status === "success"
                  ? _c("i", {
                      staticClass: "fks-icon-download",
                      on: {
                        click: function ($event) {
                          return _vm.handleDownload(file)
                        },
                      },
                    })
                  : _vm._e(),
                file.status === "uploading"
                  ? _c("fks-progress", {
                      attrs: {
                        type:
                          _vm.listType === "picture-card" ? "circle" : "line",
                        "stroke-width": _vm.listType === "picture-card" ? 6 : 2,
                        percentage: _vm.parsePercentage(file.percentage),
                      },
                    })
                  : _vm._e(),
                _vm.listType === "picture-card"
                  ? _c(
                      "span",
                      { staticClass: "fks-upload-list__item-actions" },
                      [
                        _vm.handlePreview && _vm.listType === "picture-card"
                          ? _c(
                              "span",
                              {
                                staticClass: "fks-upload-list__item-preview",
                                on: {
                                  click: function ($event) {
                                    return _vm.handlePreview(file)
                                  },
                                },
                              },
                              [_c("i", { staticClass: "fks-icon-view" })]
                            )
                          : _vm._e(),
                        !_vm.disabled
                          ? _c(
                              "span",
                              {
                                staticClass: "fks-upload-list__item-delete",
                                on: {
                                  click: function ($event) {
                                    return _vm.$emit("remove", file)
                                  },
                                },
                              },
                              [_c("i", { staticClass: "fks-icon-delete" })]
                            )
                          : _vm._e(),
                      ]
                    )
                  : _vm._e(),
              ]
            },
            { file: file }
          ),
        ],
        2
      )
    }),
    0
  )
}
var upload_listvue_type_template_id_7a2783ff_staticRenderFns = []
upload_listvue_type_template_id_7a2783ff_render._withStripped = true


// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue?vue&type=template&id=7a2783ff&

// EXTERNAL MODULE: external "fawkes-lib/lib/progress"
var progress_ = __webpack_require__(37);
var progress_default = /*#__PURE__*/__webpack_require__.n(progress_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-list.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// 0.2.0 New 文件类型对应图标对象
var upload_listvue_type_script_lang_js_fileTypeIcon = {
  jpg: 'doc_img',
  jpeg: 'doc_img',
  png: 'doc_img',
  gif: 'doc_img',
  bmp: 'doc_img',
  txt: 'doc_txt',
  css: 'doc_code',
  html: 'doc_html',
  xlsx: 'doc_excel',
  exe: 'doc_exe',
  iso: 'doc_iso',
  ppt: 'doc_ppt',
  pptx: 'doc_ppt',
  zip: 'doc_zip',
  rar: 'doc_zip',
  pdf: 'doc_pdf',
  doc: 'doc_word',
  docx: 'doc_word',
  dir: 'doc_folder'
};



/* harmony default export */ var upload_listvue_type_script_lang_js_ = ({
  name: 'FksUploadList',

  mixins: [locale_default.a],

  data: function data() {
    return {
      focusing: false
    };
  },

  components: { FksProgress: progress_default.a },
  filters: {
    renderFileSize: function renderFileSize(value) {
      if (value === null || value === '') {
        return 'Unknown size';
      }
      if (value === '0' || value === 0) {
        return '0KB';
      }
      var unitArr = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
      var index = 0;
      var srcsize = parseFloat(value);
      index = Math.floor(Math.log(srcsize) / Math.log(1024));
      var size = srcsize / Math.pow(1024, index);
      size = size.toFixed(2); // 保留的小数位数
      return size + unitArr[index];
    }
  },
  props: {
    files: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    disabled: {
      type: Boolean,
      default: false
    },
    handlePreview: Function,
    listType: String,
    handleDownload: Function,
    showDownload: {
      type: Boolean,
      default: true
    }
  },
  methods: {
    parsePercentage: function parsePercentage(val) {
      return parseInt(val, 10);
    },
    handleClick: function handleClick(file) {
      this.handlePreview && this.handlePreview(file);
    },
    fileType: function fileType(filename) {
      var fileA = filename.split('.');
      var type = 'doc_blank';
      Object.keys(upload_listvue_type_script_lang_js_fileTypeIcon).forEach(function (key) {
        if (key == fileA[fileA.length - 1].toLowerCase()) {
          type = upload_listvue_type_script_lang_js_fileTypeIcon[key];
        }
      });
      return type;
    }
  }
});
// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_upload_listvue_type_script_lang_js_ = (upload_listvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/upload/src/upload-list.vue





/* normalize component */

var upload_list_component = normalizeComponent(
  src_upload_listvue_type_script_lang_js_,
  upload_listvue_type_template_id_7a2783ff_render,
  upload_listvue_type_template_id_7a2783ff_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var upload_list = (upload_list_component.exports);
// CONCATENATED MODULE: ./packages/upload/src/ajax.js
function getError(action, option, xhr) {
  var msg = void 0;
  if (xhr.response) {
    msg = '' + (xhr.response.error || xhr.response);
  } else if (xhr.responseText) {
    msg = '' + xhr.responseText;
  } else {
    msg = 'fail to post ' + action + ' ' + xhr.status;
  }

  var err = new Error(msg);
  err.status = xhr.status;
  err.method = 'post';
  err.url = action;
  return err;
}

function getBody(xhr) {
  var text = xhr.responseText || xhr.response;
  if (!text) {
    return text;
  }

  try {
    return JSON.parse(text);
  } catch (e) {
    return text;
  }
}

function upload(option) {
  if (typeof XMLHttpRequest === 'undefined') {
    return;
  }

  var xhr = new XMLHttpRequest();
  var action = option.action;

  if (xhr.upload) {
    xhr.upload.onprogress = function progress(e) {
      if (e.total > 0) {
        e.percent = e.loaded / e.total * 100;
      }
      option.onProgress(e);
    };
  }

  var formData = new FormData();

  if (option.data) {
    Object.keys(option.data).forEach(function (key) {
      formData.append(key, option.data[key]);
    });
  }

  formData.append(option.filename, option.file, option.file.name);

  xhr.onerror = function error(e) {
    option.onError(e);
  };

  xhr.onload = function onload() {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(action, option, xhr));
    }

    option.onSuccess(getBody(xhr));
  };

  xhr.open('post', action, true);

  if (option.withCredentials && 'withCredentials' in xhr) {
    xhr.withCredentials = true;
  }

  var headers = option.headers || {};

  for (var item in headers) {
    if (headers.hasOwnProperty(item) && headers[item] !== null) {
      xhr.setRequestHeader(item, headers[item]);
    }
  }
  xhr.send(formData);
  return xhr;
}
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-dragger.vue?vue&type=template&id=d6e7c802&
var upload_draggervue_type_template_id_d6e7c802_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-upload-dragger",
      class: {
        "is-dragover": _vm.dragover,
      },
      on: {
        drop: function ($event) {
          $event.preventDefault()
          return _vm.onDrop.apply(null, arguments)
        },
        dragover: function ($event) {
          $event.preventDefault()
          return _vm.onDragover.apply(null, arguments)
        },
        dragleave: function ($event) {
          $event.preventDefault()
          _vm.dragover = false
        },
      },
    },
    [_vm._t("default")],
    2
  )
}
var upload_draggervue_type_template_id_d6e7c802_staticRenderFns = []
upload_draggervue_type_template_id_d6e7c802_render._withStripped = true


// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue?vue&type=template&id=d6e7c802&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-dragger.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var upload_draggervue_type_script_lang_js_ = ({
  name: 'FksUploadDrag',
  props: {
    disabled: Boolean
  },
  inject: {
    uploader: {
      default: ''
    }
  },
  data: function data() {
    return {
      dragover: false
    };
  },

  methods: {
    onDragover: function onDragover() {
      if (!this.disabled) {
        this.dragover = true;
      }
    },
    onDrop: function onDrop(e) {
      if (this.disabled || !this.uploader) return;
      var accept = this.uploader.accept;
      this.dragover = false;
      if (!accept) {
        this.$emit('file', e.dataTransfer.files);
        return;
      }
      this.$emit('file', [].slice.call(e.dataTransfer.files).filter(function (file) {
        var type = file.type,
            name = file.name;

        var extension = name.indexOf('.') > -1 ? '.' + name.split('.').pop() : '';
        var baseType = type.replace(/\/.*$/, '');
        return accept.split(',').map(function (type) {
          return type.trim();
        }).filter(function (type) {
          return type;
        }).some(function (acceptedType) {
          if (/\..+$/.test(acceptedType)) {
            return extension === acceptedType;
          }
          if (/\/\*$/.test(acceptedType)) {
            return baseType === acceptedType.replace(/\/\*$/, '');
          }
          if (/^[^\/]+\/[^\/]+$/.test(acceptedType)) {
            return type === acceptedType;
          }
          return false;
        });
      }));
    }
  }
});
// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_upload_draggervue_type_script_lang_js_ = (upload_draggervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/upload/src/upload-dragger.vue





/* normalize component */

var upload_dragger_component = normalizeComponent(
  src_upload_draggervue_type_script_lang_js_,
  upload_draggervue_type_template_id_d6e7c802_render,
  upload_draggervue_type_template_id_d6e7c802_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var upload_dragger = (upload_dragger_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload.vue?vue&type=script&lang=js&





/* harmony default export */ var uploadvue_type_script_lang_js_ = ({
  inject: ['uploader'],
  components: {
    UploadDragger: upload_dragger
  },
  props: {
    type: String,
    action: {
      type: String,
      required: true
    },
    name: {
      type: String,
      default: 'file'
    },
    data: Object,
    headers: Object,
    withCredentials: Boolean,
    multiple: Boolean,
    accept: String,
    onStart: Function,
    onProgress: Function,
    onSuccess: Function,
    onError: Function,
    beforeUpload: Function,
    drag: Boolean,
    onPreview: {
      type: Function,
      default: function _default() {}
    },
    onRemove: {
      type: Function,
      default: function _default() {}
    },
    fileList: Array,
    autoUpload: Boolean,
    listType: String,
    httpRequest: {
      type: Function,
      default: upload
    },
    disabled: Boolean,
    limit: Number,
    onExceed: Function
  },

  data: function data() {
    return {
      mouseover: false,
      reqs: {}
    };
  },


  methods: {
    isImage: function isImage(str) {
      return str.indexOf('image') !== -1;
    },
    handleChange: function handleChange(ev) {
      var files = ev.target.files;

      if (!files) return;
      this.uploadFiles(files);
    },
    uploadFiles: function uploadFiles(files) {
      var _this = this;

      if (this.limit && this.fileList.length + files.length > this.limit) {
        this.onExceed && this.onExceed(files, this.fileList);
        return;
      }

      var postFiles = Array.prototype.slice.call(files);
      if (!this.multiple) {
        postFiles = postFiles.slice(0, 1);
      }

      if (postFiles.length === 0) {
        return;
      }

      postFiles.forEach(function (rawFile) {
        _this.onStart(rawFile);
        if (_this.autoUpload) _this.upload(rawFile);
      });
    },
    upload: function upload(rawFile) {
      var _this2 = this;

      this.$refs.input.value = null;

      if (!this.beforeUpload) {
        return this.post(rawFile);
      }

      var before = this.beforeUpload(rawFile);
      if (before && before.then) {
        before.then(function (processedFile) {
          var fileType = Object.prototype.toString.call(processedFile);

          if (fileType === '[object File]' || fileType === '[object Blob]') {
            if (fileType === '[object Blob]') {
              processedFile = new File([processedFile], rawFile.name, {
                type: rawFile.type
              });
            }
            for (var p in rawFile) {
              if (rawFile.hasOwnProperty(p)) {
                processedFile[p] = rawFile[p];
              }
            }
            _this2.post(processedFile);
          } else {
            _this2.post(rawFile);
          }
        }, function () {
          _this2.onRemove(null, rawFile);
        });
      } else if (before !== false) {
        this.post(rawFile);
      } else {
        this.onRemove(null, rawFile);
      }
    },
    abort: function abort(file) {
      var reqs = this.reqs;

      if (file) {
        var uid = file;
        if (file.uid) uid = file.uid;
        if (reqs[uid]) {
          reqs[uid].abort();
        }
      } else {
        Object.keys(reqs).forEach(function (uid) {
          if (reqs[uid]) reqs[uid].abort();
          delete reqs[uid];
        });
      }
    },
    post: function post(rawFile) {
      var _this3 = this;

      var uid = rawFile.uid;

      var options = {
        headers: this.headers,
        withCredentials: this.withCredentials,
        file: rawFile,
        data: this.data,
        filename: this.name,
        action: this.action,
        onProgress: function onProgress(e) {
          _this3.onProgress(e, rawFile);
        },
        onSuccess: function onSuccess(res) {
          _this3.onSuccess(res, rawFile);
          delete _this3.reqs[uid];
        },
        onError: function onError(err) {
          _this3.onError(err, rawFile);
          delete _this3.reqs[uid];
        }
      };
      var req = this.httpRequest(options);
      this.reqs[uid] = req;
      if (req && req.then) {
        req.then(options.onSuccess, options.onError);
      }
    },
    handleClick: function handleClick() {
      if (!this.disabled) {
        this.$refs.input.value = null;
        this.$refs.input.click();
      }
    },
    handleKeydown: function handleKeydown(e) {
      if (e.target !== e.currentTarget) return;
      if (e.keyCode === 13 || e.keyCode === 32) {
        this.handleClick();
      }
    }
  },

  render: function render(h) {
    var handleClick = this.handleClick,
        drag = this.drag,
        name = this.name,
        handleChange = this.handleChange,
        multiple = this.multiple,
        accept = this.accept,
        listType = this.listType,
        uploadFiles = this.uploadFiles,
        disabled = this.disabled,
        handleKeydown = this.handleKeydown;

    var data = {
      class: {
        'fks-upload': true
      },
      on: {
        click: handleClick,
        keydown: handleKeydown
      }
    };
    data.class['fks-upload--' + listType] = true;
    return disabled ? '' : h(
      'div',
      external_babel_helper_vue_jsx_merge_props_default()([data, {
        attrs: { tabindex: '0' }
      }]),
      [drag ? h(
        'upload-dragger',
        {
          attrs: { disabled: disabled },
          on: {
            'file': uploadFiles
          }
        },
        [this.$slots.default]
      ) : this.$slots.default, h('input', {
        'class': 'fks-upload__input',
        attrs: { type: 'file',

          name: name,

          multiple: multiple,
          accept: accept
        },
        ref: 'input', on: {
          'change': handleChange
        }
      })]
    );
  }
});
// CONCATENATED MODULE: ./packages/upload/src/upload.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_uploadvue_type_script_lang_js_ = (uploadvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/upload/src/upload.vue
var upload_render, upload_staticRenderFns




/* normalize component */

var upload_component = normalizeComponent(
  src_uploadvue_type_script_lang_js_,
  upload_render,
  upload_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_upload = (upload_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-popover.vue?vue&type=template&id=24906c4c&
var upload_popovervue_type_template_id_24906c4c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-popover",
    _vm._g(
      _vm._b(
        {
          attrs: {
            trigger: _vm.trigger,
            "visible-arrow": _vm.visibleArrow,
            width: _vm.width,
            disabled: _vm.pDisable,
          },
        },
        "fks-popover",
        _vm.$attrs,
        false
      ),
      _vm.$listeners
    ),
    [
      _vm._t("default"),
      _vm._t(
        "reference",
        function () {
          return [
            _c("div", { staticClass: "fks-upload-popover-title" }, [
              _vm.fileList.length > 0
                ? _c("span", [
                    _c("i", {
                      staticClass: "fks-icon-link",
                      staticStyle: { "margin-right": "5px" },
                    }),
                    _vm._v(_vm._s("附件(" + _vm.fileList.length + ")")),
                  ])
                : _vm._e(),
              !_vm.disabled
                ? _c("i", {
                    staticClass: "fks-icon-upload-outline",
                    staticStyle: {
                      float: "right",
                      "margin-right": "5px",
                      "line-height": "inherit",
                      cursor: "pointer",
                    },
                    on: {
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.handleClick.apply(null, arguments)
                      },
                    },
                  })
                : _vm._e(),
            ]),
          ]
        },
        { slot: "reference" }
      ),
    ],
    2
  )
}
var upload_popovervue_type_template_id_24906c4c_staticRenderFns = []
upload_popovervue_type_template_id_24906c4c_render._withStripped = true


// CONCATENATED MODULE: ./packages/upload/src/upload-popover.vue?vue&type=template&id=24906c4c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/upload-popover.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var upload_popovervue_type_script_lang_js_ = ({
  props: {
    uploader: Object,
    fileList: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    disabled: {
      type: Boolean,
      default: false
    },
    width: {
      type: Number,
      default: 200
    },
    trigger: {
      type: String,
      default: 'click'
    },
    visibleArrow: {
      type: Boolean,
      default: false
    },
    popoverDisable: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    pDisable: function pDisable() {
      return this.popoverDisable || this.fileList.length <= 0;
    }
  },
  methods: {
    handleClick: function handleClick() {
      this.uploader.componentInstance.handleClick();
    }
  }
});
// CONCATENATED MODULE: ./packages/upload/src/upload-popover.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_upload_popovervue_type_script_lang_js_ = (upload_popovervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/upload/src/upload-popover.vue





/* normalize component */

var upload_popover_component = normalizeComponent(
  src_upload_popovervue_type_script_lang_js_,
  upload_popovervue_type_template_id_24906c4c_render,
  upload_popovervue_type_template_id_24906c4c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var upload_popover = (upload_popover_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/upload/src/index.vue?vue&type=script&lang=js&
var upload_srcvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };








function srcvue_type_script_lang_js_noop() {}

/* harmony default export */ var upload_srcvue_type_script_lang_js_ = ({
  name: 'FksUpload',
  inheritAttrs: false,
  mixins: [migrating_default.a, locale_default.a],

  components: {
    FksProgress: progress_default.a,
    UploadList: upload_list,
    Upload: src_upload,
    UploadPopover: upload_popover
  },

  provide: function provide() {
    return {
      uploader: this
    };
  },


  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  props: {
    showDownload: {
      type: Boolean,
      default: true
    },
    action: {
      type: String,
      required: true
    },
    headers: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    data: Object,
    multiple: Boolean,
    name: {
      type: String,
      default: 'file'
    },
    drag: Boolean,
    dragger: Boolean,
    withCredentials: Boolean,
    showFileList: {
      type: Boolean,
      default: true
    },
    accept: String,
    type: {
      type: String,
      default: 'select'
    },
    beforeUpload: Function,
    beforeRemove: Function,
    onRemove: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    },
    onChange: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    },
    onPreview: {
      type: Function
    },
    onSuccess: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    },
    onProgress: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    },
    onError: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    },
    onDownload: {
      type: Function
    },
    fileList: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    autoUpload: {
      type: Boolean,
      default: true
    },
    listType: {
      type: String,
      default: 'card' //card, text,picture,picture-card
    },
    httpRequest: Function,
    disabled: Boolean,
    readonly: Boolean,
    limit: Number,
    onExceed: {
      type: Function,
      default: srcvue_type_script_lang_js_noop
    }
  },

  data: function data() {
    return {
      uploadFiles: [],
      dragOver: false,
      draging: false,
      tempIndex: 1
    };
  },


  computed: {
    uploadDisabled: function uploadDisabled() {
      return this.disabled || this.readonly || (this.fksForm || {}).disabled || (this.fksForm || {}).readonly || (this.fksFormItem || {}).disabled || (this.fksFormItem || {}).readonly;
    }
  },

  watch: {
    listType: function listType(type) {
      if (type === 'picture-card' || type === 'picture') {
        this.uploadFiles = this.uploadFiles.map(function (file) {
          if (!file.url && file.raw) {
            try {
              file.url = URL.createObjectURL(file.raw);
            } catch (err) {
              console.error('[FawkesLib Error][Upload]', err);
            }
          }
          return file;
        });
      }
    },

    fileList: {
      immediate: true,
      handler: function handler(fileList) {
        var _this = this;

        this.uploadFiles = fileList.map(function (item) {
          item.uid = item.uid || Date.now() + _this.tempIndex++;
          item.status = item.status || 'success';
          return item;
        });
      }
    }
  },

  methods: {
    // 暴露触发上传方法
    triggerUpload: function triggerUpload() {
      this.$refs['upload-inner'].handleClick();
    },
    handleStart: function handleStart(rawFile) {
      rawFile.uid = Date.now() + this.tempIndex++;
      var file = {
        status: 'ready',
        name: rawFile.name,
        size: rawFile.size,
        percentage: 0,
        uid: rawFile.uid,
        raw: rawFile
      };

      if (this.listType === 'picture-card' || this.listType === 'picture') {
        try {
          file.url = URL.createObjectURL(rawFile);
        } catch (err) {
          console.error('[FawkesLib Error][Upload]', err);
          return;
        }
      }

      this.uploadFiles.push(file);
      this.$emit('update:fileList', this.uploadFiles);
      this.onChange(file, this.uploadFiles);
    },
    handleProgress: function handleProgress(ev, rawFile) {
      var file = this.getFile(rawFile);
      this.onProgress(ev, file, this.uploadFiles);
      file.status = 'uploading';
      file.percentage = ev.percent || 0;
    },
    handleSuccess: function handleSuccess(res, rawFile) {
      var file = this.getFile(rawFile);

      if (file) {
        file.status = 'success';
        file.response = res;
        this.$emit('update:fileList', this.uploadFiles);
        this.onSuccess(res, file, this.uploadFiles);
        this.onChange(file, this.uploadFiles);
      }
    },
    handleError: function handleError(err, rawFile) {
      var file = this.getFile(rawFile);
      var fileList = this.uploadFiles;

      file.status = 'fail';

      fileList.splice(fileList.indexOf(file), 1);
      this.$emit('update:fileList', this.uploadFiles);

      this.onError(err, file, this.uploadFiles);
      this.onChange(file, this.uploadFiles);
    },
    handleRemove: function handleRemove(file, raw) {
      var _this2 = this;

      if (raw) {
        file = this.getFile(raw);
      }
      var doRemove = function doRemove() {
        _this2.abort(file);
        var fileList = _this2.uploadFiles;
        fileList.splice(fileList.indexOf(file), 1);
        _this2.$emit('update:fileList', _this2.uploadFiles);

        _this2.onRemove(file, fileList);
      };

      if (!this.beforeRemove) {
        doRemove();
      } else if (typeof this.beforeRemove === 'function') {
        var before = this.beforeRemove(file, this.uploadFiles);
        if (before && before.then) {
          before.then(function () {
            doRemove();
          }, srcvue_type_script_lang_js_noop);
        } else if (before !== false) {
          doRemove();
        }
      }
    },
    getFile: function getFile(rawFile) {
      var fileList = this.uploadFiles;
      var target = void 0;
      fileList.every(function (item) {
        target = rawFile.uid === item.uid ? item : null;
        return !target;
      });
      return target;
    },
    abort: function abort(file) {
      this.$refs['upload-inner'].abort(file);
    },
    clearFiles: function clearFiles() {
      this.uploadFiles = [];
    },
    submit: function submit() {
      var _this3 = this;

      this.uploadFiles.filter(function (file) {
        return file.status === 'ready';
      }).forEach(function (file) {
        _this3.$refs['upload-inner'].upload(file.raw);
      });
    },
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'default-file-list': 'default-file-list is renamed to file-list.',
          'show-upload-list': 'show-upload-list is renamed to show-file-list.',
          'thumbnail-mode': 'thumbnail-mode has been deprecated, you can implement the same effect according to this case: http://element.eleme.io/#/zh-CN/component/upload#yong-hu-tou-xiang-shang-chuan'
        }
      };
    }
  },

  beforeDestroy: function beforeDestroy() {
    this.uploadFiles.forEach(function (file) {
      if (file.url && file.url.indexOf('blob:') === 0) {
        URL.revokeObjectURL(file.url);
      }
    });
  },
  render: function render(h) {
    var _this4 = this;

    var uploadList = void 0;
    if ((!this.uploadFiles || this.uploadFiles.length < 1) && this.uploadDisabled) {
      uploadList = h(
        'div',
        { style: 'color:#c0c4cc', key: '0' },
        [this.t('fks.upload.no_data')]
      );
    } else {
      if (this.showFileList) {
        uploadList = h(
          upload_list,
          {
            attrs: {
              disabled: this.uploadDisabled,
              listType: this.listType,
              files: this.uploadFiles,

              handlePreview: this.onPreview,
              handleDownload: this.onDownload,
              showDownload: this.showDownload
            },
            on: {
              'remove': this.handleRemove
            }
          },
          [function (props) {
            if (_this4.$scopedSlots.file) {
              return _this4.$scopedSlots.file({
                file: props.file
              });
            }
          }]
        );
      }
    }

    var uploadData = {
      props: {
        type: this.type,
        drag: this.drag,
        action: this.action,
        multiple: this.multiple,
        'before-upload': this.beforeUpload,
        'with-credentials': this.withCredentials,
        headers: this.headers,
        name: this.name,
        data: this.data,
        accept: this.accept,
        fileList: this.uploadFiles,
        autoUpload: this.autoUpload,
        listType: this.listType,
        disabled: this.uploadDisabled,
        limit: this.limit,
        'on-exceed': this.onExceed,
        'on-start': this.handleStart,
        'on-progress': this.handleProgress,
        'on-success': this.handleSuccess,
        'on-error': this.handleError,
        'on-preview': this.onPreview,
        'on-download': this.onDownload,
        'on-remove': this.handleRemove,
        'http-request': this.httpRequest
      },
      ref: 'upload-inner'
    };

    var trigger = this.$slots.trigger || this.$slots.default;
    var uploadComponent = h(
      'upload',
      uploadData,
      [trigger]
    );
    //0.2.0 New disabled时隐藏tip
    var res = h(
      'div',
      { 'class': this.listType.includes('picture') ? '' : 'file-card' },
      [this.listType === 'picture-card' ? uploadList : '', this.$slots.trigger ? [uploadComponent, this.$slots.default] : uploadComponent, this.uploadDisabled ? '' : this.$slots.tip, this.listType !== 'picture-card' ? uploadList : '']
    );
    // 新增类型popover类型，
    if (this.listType === 'popover') {
      var popoverData = {
        props: {
          disabled: this.disabled,
          fileList: this.uploadFiles,
          uploader: uploadComponent,
          width: this.$attrs.width,
          visibleArrow: this.$attrs.visibleArrow,
          popoverDisable: this.$attrs.popoverDisable
        },
        on: upload_srcvue_type_script_lang_js_extends({}, this.$listeners),
        attrs: upload_srcvue_type_script_lang_js_extends({}, this.$attrs)

      };
      return h(
        'upload-popover',
        popoverData,
        [res, this.$slots.reference ? h(
          'template',
          { slot: 'reference' },
          [this.$slots.reference]
        ) : '']
      );
    }
    return res;
  }
});
// CONCATENATED MODULE: ./packages/upload/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_upload_srcvue_type_script_lang_js_ = (upload_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/upload/src/index.vue
var src_render, src_staticRenderFns




/* normalize component */

var upload_src_component = normalizeComponent(
  packages_upload_srcvue_type_script_lang_js_,
  src_render,
  src_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var upload_src = (upload_src_component.exports);
// CONCATENATED MODULE: ./packages/upload/index.js


/* istanbul ignore next */
upload_src.install = function (Vue) {
  Vue.component(upload_src.name, upload_src);
};

/* harmony default export */ var packages_upload = (upload_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=template&id=e4dd80d2&
var progressvue_type_template_id_e4dd80d2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-progress",
      class: [
        "fks-progress--" + _vm.type,
        _vm.status ? "is-" + _vm.status : "",
        {
          "fks-progress--without-text": !_vm.showText,
          "fks-progress--text-inside": _vm.textInside,
        },
      ],
      attrs: {
        role: "progressbar",
        "aria-valuenow": _vm.percentage,
        "aria-valuemin": "0",
        "aria-valuemax": "100",
      },
    },
    [
      _vm.type === "line"
        ? _c("div", { staticClass: "fks-progress-bar" }, [
            _c(
              "div",
              {
                staticClass: "fks-progress-bar__outer",
                style: { height: _vm.strokeWidth + "px" },
              },
              [
                _c(
                  "div",
                  {
                    staticClass: "fks-progress-bar__inner",
                    style: _vm.barStyle,
                  },
                  [
                    _vm.showText && _vm.textInside
                      ? _c(
                          "div",
                          { staticClass: "fks-progress-bar__innerText" },
                          [_vm._v(_vm._s(_vm.content))]
                        )
                      : _vm._e(),
                  ]
                ),
              ]
            ),
          ])
        : _c(
            "div",
            {
              staticClass: "fks-progress-circle",
              style: { height: _vm.width + "px", width: _vm.width + "px" },
            },
            [
              _c("svg", { attrs: { viewBox: "0 0 100 100" } }, [
                _c("path", {
                  staticClass: "fks-progress-circle__track",
                  style: _vm.trailPathStyle,
                  attrs: {
                    d: _vm.trackPath,
                    "stroke-width": _vm.relativeStrokeWidth,
                    fill: "none",
                  },
                }),
                _c("path", {
                  staticClass: "fks-progress-circle__path",
                  style: _vm.circlePathStyle,
                  attrs: {
                    d: _vm.trackPath,
                    stroke: _vm.stroke,
                    fill: "none",
                    "stroke-linecap": _vm.strokeLinecap,
                    "stroke-width": _vm.percentage
                      ? _vm.relativeStrokeWidth
                      : 0,
                  },
                }),
              ]),
            ]
          ),
      _vm.showText && !_vm.textInside
        ? _c(
            "div",
            {
              staticClass: "fks-progress__text",
              style: { fontSize: _vm.progressTextSize + "px" },
            },
            [
              !_vm.status
                ? [_vm._v(_vm._s(_vm.content))]
                : _c("i", { class: _vm.iconClass }),
            ],
            2
          )
        : _vm._e(),
    ]
  )
}
var progressvue_type_template_id_e4dd80d2_staticRenderFns = []
progressvue_type_template_id_e4dd80d2_render._withStripped = true


// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=template&id=e4dd80d2&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/progress/src/progress.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var progressvue_type_script_lang_js_ = ({
  name: 'FksProgress',
  props: {
    type: {
      type: String,
      default: 'line',
      validator: function validator(val) {
        return ['line', 'circle', 'dashboard'].indexOf(val) > -1;
      }
    },
    percentage: {
      type: Number,
      default: 0,
      required: true,
      validator: function validator(val) {
        return val >= 0 && val <= 100;
      }
    },
    status: {
      type: String,
      validator: function validator(val) {
        return ['success', 'exception', 'warning'].indexOf(val) > -1;
      }
    },
    size: {
      type: String,
      default: "small"
    },
    strokeWidth: {
      type: Number,
      default: 8
    },
    strokeLinecap: {
      type: String,
      default: 'round'
    },
    textInside: {
      type: Boolean,
      default: false
    },
    width: {
      type: Number,
      default: 126
    },
    showText: {
      type: Boolean,
      default: true
    },
    color: {
      type: [String, Array, Function],
      default: ''
    },
    format: Function
  },
  computed: {
    prgSize: function prgSize() {
      return this.size;
    },
    barStyle: function barStyle() {
      var style = {};
      style.width = this.percentage + '%';
      style.backgroundColor = this.getCurrentColor(this.percentage);
      return style;
    },
    relativeStrokeWidth: function relativeStrokeWidth() {
      switch (this.size) {
        case "small":
          return 8;
          break;
        case "medium":
          return 12;
          break;
        case "large":
          return 16;
          break;
      }
      //return ((this.strokeWidth / this.width) * 100).toFixed(1)
    },
    radius: function radius() {
      if (this.type === 'circle' || this.type === 'dashboard') {
        return parseInt(50 - parseFloat(this.relativeStrokeWidth) / 2, 10);
      } else {
        return 0;
      }
    },
    trackPath: function trackPath() {
      var radius = this.radius;
      var isDashboard = this.type === 'dashboard';
      return '\n          M 50 50\n          m 0 ' + (isDashboard ? '' : '-') + radius + '\n          a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '-' : '') + radius * 2 + '\n          a ' + radius + ' ' + radius + ' 0 1 1 0 ' + (isDashboard ? '' : '-') + radius * 2 + '\n          ';
    },
    perimeter: function perimeter() {
      return 2 * Math.PI * this.radius;
    },
    rate: function rate() {
      return this.type === 'dashboard' ? 0.75 : 1;
    },
    strokeDashoffset: function strokeDashoffset() {
      var offset = -1 * this.perimeter * (1 - this.rate) / 2;
      return offset + 'px';
    },
    trailPathStyle: function trailPathStyle() {
      return {
        strokeDasharray: this.perimeter * this.rate + 'px, ' + this.perimeter + 'px',
        strokeDashoffset: this.strokeDashoffset
      };
    },
    circlePathStyle: function circlePathStyle() {
      return {
        strokeDasharray: this.perimeter * this.rate * (this.percentage / 100) + 'px, ' + this.perimeter + 'px',
        strokeDashoffset: this.strokeDashoffset,
        transition: 'stroke-dasharray 0.6s ease 0s, stroke 0.6s ease'
      };
    },
    stroke: function stroke() {
      var ret = void 0;
      if (this.color) {
        ret = this.getCurrentColor(this.percentage);
      } else {
        switch (this.status) {
          case 'success':
            ret = '#13ce66';
            break;
          case 'exception':
            ret = '#ff4949';
            break;
          case 'warning':
            ret = '#e6a23c';
            break;
          default:
            ret = '#20a0ff';
        }
      }
      return ret;
    },
    iconClass: function iconClass() {
      if (this.status === 'warning') {
        return 'fks-icon-warning';
      }
      if (this.type === 'line') {
        return this.status === 'success' ? 'fks-icon-circle-check' : 'fks-icon-circle-close';
      } else {
        return this.status === 'success' ? 'fks-icon-check' : 'fks-icon-close';
      }
    },
    progressTextSize: function progressTextSize() {
      return this.type === 'line' ? 12 + this.strokeWidth * 0.4 : this.width * 0.111111 + 2;
    },
    content: function content() {
      if (typeof this.format === 'function') {
        return this.format(this.percentage) || '';
      } else {
        return this.percentage + '%';
      }
    }
  },
  methods: {
    getCurrentColor: function getCurrentColor(percentage) {
      if (typeof this.color === 'function') {
        return this.color(percentage);
      } else if (typeof this.color === 'string') {
        return this.color;
      } else {
        return this.getLevelColor(percentage);
      }
    },
    getLevelColor: function getLevelColor(percentage) {
      var colorArray = this.getColorArray().sort(function (a, b) {
        return a.percentage - b.percentage;
      });

      for (var i = 0; i < colorArray.length; i++) {
        if (colorArray[i].percentage > percentage) {
          return colorArray[i].color;
        }
      }
      return colorArray[colorArray.length - 1].color;
    },
    getColorArray: function getColorArray() {
      var color = this.color;
      var span = 100 / color.length;
      return color.map(function (seriesColor, index) {
        if (typeof seriesColor === 'string') {
          return {
            color: seriesColor,
            progress: (index + 1) * span
          };
        }
        return seriesColor;
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/progress/src/progress.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_progressvue_type_script_lang_js_ = (progressvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/progress/src/progress.vue





/* normalize component */

var progress_component = normalizeComponent(
  src_progressvue_type_script_lang_js_,
  progressvue_type_template_id_e4dd80d2_render,
  progressvue_type_template_id_e4dd80d2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var progress = (progress_component.exports);
// CONCATENATED MODULE: ./packages/progress/index.js


/* istanbul ignore next */
progress.install = function (Vue) {
  Vue.component(progress.name, progress);
};

/* harmony default export */ var packages_progress = (progress);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/spinner/src/spinner.vue?vue&type=template&id=0ef3c37f&
var spinnervue_type_template_id_0ef3c37f_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("span", { staticClass: "fks-spinner" }, [
    _c(
      "svg",
      {
        staticClass: "fks-spinner-inner",
        style: { width: _vm.radius / 2 + "px", height: _vm.radius / 2 + "px" },
        attrs: { viewBox: "0 0 50 50" },
      },
      [
        _c("circle", {
          staticClass: "path",
          attrs: {
            cx: "25",
            cy: "25",
            r: "20",
            fill: "none",
            stroke: _vm.strokeColor,
            "stroke-width": _vm.strokeWidth,
          },
        }),
      ]
    ),
  ])
}
var spinnervue_type_template_id_0ef3c37f_staticRenderFns = []
spinnervue_type_template_id_0ef3c37f_render._withStripped = true


// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue?vue&type=template&id=0ef3c37f&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/spinner/src/spinner.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var spinnervue_type_script_lang_js_ = ({
  name: 'FksSpinner',
  props: {
    type: String,
    radius: {
      type: Number,
      default: 100
    },
    strokeWidth: {
      type: Number,
      default: 5
    },
    strokeColor: {
      type: String,
      default: '#efefef'
    }
  }
});
// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_spinnervue_type_script_lang_js_ = (spinnervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/spinner/src/spinner.vue





/* normalize component */

var spinner_component = normalizeComponent(
  src_spinnervue_type_script_lang_js_,
  spinnervue_type_template_id_0ef3c37f_render,
  spinnervue_type_template_id_0ef3c37f_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var spinner = (spinner_component.exports);
// CONCATENATED MODULE: ./packages/spinner/index.js


/* istanbul ignore next */
spinner.install = function (Vue) {
  Vue.component(spinner.name, spinner);
};

/* harmony default export */ var packages_spinner = (spinner);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/message/src/main.vue?vue&type=template&id=37d2e05a&
var mainvue_type_template_id_37d2e05a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-message-fade" },
      on: { "after-leave": _vm.handleAfterLeave },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          class: [
            "fks-message",
            _vm.type && !_vm.iconClass ? "fks-message--" + _vm.type : "",
            _vm.center ? "is-center" : "",
            _vm.showClose ? "is-closable" : "",
            _vm.customClass,
          ],
          style: _vm.positionStyle,
          attrs: { role: "alert" },
          on: { mouseenter: _vm.clearTimer, mouseleave: _vm.startTimer },
        },
        [
          _vm.iconClass
            ? _c("i", { class: _vm.iconClass })
            : _c("i", { class: _vm.typeClass }),
          _vm._t("default", function () {
            return [
              !_vm.dangerouslyUseHTMLString
                ? _c("p", { staticClass: "fks-message__content" }, [
                    _vm._v(_vm._s(_vm.message)),
                  ])
                : _c("p", {
                    staticClass: "fks-message__content",
                    domProps: { innerHTML: _vm._s(_vm.message) },
                  }),
            ]
          }),
          _vm.showClose
            ? _c("i", {
                staticClass: "fks-message__closeBtn fks-icon-close",
                on: { click: _vm.close },
              })
            : _vm._e(),
        ],
        2
      ),
    ]
  )
}
var mainvue_type_template_id_37d2e05a_staticRenderFns = []
mainvue_type_template_id_37d2e05a_render._withStripped = true


// CONCATENATED MODULE: ./packages/message/src/main.vue?vue&type=template&id=37d2e05a&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/message/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

var src_mainvue_type_script_lang_js_typeMap = {
  success: 'success',
  info: 'info',
  warning: 'warning',
  error: 'error'
};

/* harmony default export */ var message_src_mainvue_type_script_lang_js_ = ({
  data: function data() {
    return {
      visible: false,
      message: '',
      duration: 3000,
      type: 'info',
      iconClass: '',
      customClass: '',
      onClose: null,
      showClose: false,
      closed: false,
      verticalOffset: 20,
      timer: null,
      dangerouslyUseHTMLString: false,
      center: false
    };
  },


  computed: {
    typeClass: function typeClass() {
      return this.type && !this.iconClass ? 'fks-message__icon fks-icon-' + src_mainvue_type_script_lang_js_typeMap[this.type] : '';
    },
    positionStyle: function positionStyle() {
      return {
        top: this.verticalOffset + 'px'
      };
    }
  },

  watch: {
    closed: function closed(newVal) {
      if (newVal) {
        this.visible = false;
      }
    }
  },

  methods: {
    handleAfterLeave: function handleAfterLeave() {
      this.$destroy(true);
      this.$el.parentNode.removeChild(this.$el);
    },
    close: function close() {
      this.closed = true;
      if (typeof this.onClose === 'function') {
        this.onClose(this);
      }
    },
    clearTimer: function clearTimer() {
      clearTimeout(this.timer);
    },
    startTimer: function startTimer() {
      var _this = this;

      if (this.duration > 0) {
        this.timer = setTimeout(function () {
          if (!_this.closed) {
            _this.close();
          }
        }, this.duration);
      }
    },
    keydown: function keydown(e) {
      if (e.keyCode === 27) {
        // esc关闭消息
        if (!this.closed) {
          this.close();
        }
      }
    }
  },
  mounted: function mounted() {
    this.startTimer();
    document.addEventListener('keydown', this.keydown);
  },
  beforeDestroy: function beforeDestroy() {
    document.removeEventListener('keydown', this.keydown);
  }
});
// CONCATENATED MODULE: ./packages/message/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_message_src_mainvue_type_script_lang_js_ = (message_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/message/src/main.vue





/* normalize component */

var message_src_main_component = normalizeComponent(
  packages_message_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_37d2e05a_render,
  mainvue_type_template_id_37d2e05a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var message_src_main = (message_src_main_component.exports);
// CONCATENATED MODULE: ./packages/message/src/main.js




var MessageConstructor = external_vue_default.a.extend(message_src_main);

var message_src_main_instance = void 0;
var main_instances = [];
var main_seed = 1;

var main_Message = function Message(options) {
  if (external_vue_default.a.prototype.$isServer) return;
  options = options || {};
  if (typeof options === 'string') {
    options = {
      message: options
    };
  }
  var userOnClose = options.onClose;
  var id = 'message_' + main_seed++;

  options.onClose = function () {
    Message.close(id, userOnClose);
  };
  message_src_main_instance = new MessageConstructor({
    data: options
  });
  message_src_main_instance.id = id;
  if (Object(vdom_["isVNode"])(message_src_main_instance.message)) {
    message_src_main_instance.$slots.default = [message_src_main_instance.message];
    message_src_main_instance.message = null;
  }
  message_src_main_instance.$mount();
  document.body.appendChild(message_src_main_instance.$el);
  var verticalOffset = options.offset || 20;
  main_instances.forEach(function (item) {
    verticalOffset += item.$el.offsetHeight + 16;
  });
  message_src_main_instance.verticalOffset = verticalOffset;
  message_src_main_instance.visible = true;
  message_src_main_instance.$el.style.zIndex = popup_["PopupManager"].nextZIndex();
  main_instances.push(message_src_main_instance);
  return message_src_main_instance;
};

['success', 'warning', 'info', 'error'].forEach(function (type) {
  main_Message[type] = function (options) {
    if (typeof options === 'string') {
      options = {
        message: options
      };
    }
    options.type = type;
    return main_Message(options);
  };
});

main_Message.close = function (id, userOnClose) {
  var len = main_instances.length;
  var index = -1;
  var removedHeight = void 0;
  for (var i = 0; i < len; i++) {
    if (id === main_instances[i].id) {
      removedHeight = main_instances[i].$el.offsetHeight;
      index = i;
      if (typeof userOnClose === 'function') {
        userOnClose(main_instances[i]);
      }
      main_instances.splice(i, 1);
      break;
    }
  }
  if (len <= 1 || index === -1 || index > main_instances.length - 1) return;
  for (var _i = index; _i < len - 1; _i++) {
    var dom = main_instances[_i].$el;
    dom.style['top'] = parseInt(dom.style['top'], 10) - removedHeight - 16 + 'px';
  }
};

main_Message.closeAll = function () {
  for (var i = main_instances.length - 1; i >= 0; i--) {
    main_instances[i].close();
  }
};

/* harmony default export */ var packages_message_src_main = (main_Message);
// CONCATENATED MODULE: ./packages/message/index.js

/* harmony default export */ var packages_message = (packages_message_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/badge/src/main.vue?vue&type=template&id=a01f04f4&
var mainvue_type_template_id_a01f04f4_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-badge" },
    [
      _vm._t("default"),
      _c("transition", { attrs: { name: "fks-zoom-in-center" } }, [
        _c("sup", {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value:
                !_vm.hidden && (_vm.content || _vm.content === 0 || _vm.isDot),
              expression: "!hidden && (content || content === 0 || isDot)",
            },
          ],
          staticClass: "fks-badge__content",
          class: [
            "fks-badge__content--" + _vm.type,
            {
              "is-fixed": _vm.$slots.default,
              "is-dot": _vm.isDot,
            },
          ],
          domProps: { textContent: _vm._s(_vm.content) },
        }),
      ]),
    ],
    2
  )
}
var mainvue_type_template_id_a01f04f4_staticRenderFns = []
mainvue_type_template_id_a01f04f4_render._withStripped = true


// CONCATENATED MODULE: ./packages/badge/src/main.vue?vue&type=template&id=a01f04f4&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/badge/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var badge_src_mainvue_type_script_lang_js_ = ({
  name: 'FksBadge',

  props: {
    value: [String, Number],
    max: Number,
    isDot: Boolean,
    hidden: Boolean,
    type: {
      type: String,
      validator: function validator(val) {
        return ['primary', 'success', 'warning', 'info', 'danger'].indexOf(val) > -1;
      }
    }
  },

  computed: {
    content: function content() {
      if (this.isDot) return;

      var value = this.value;
      var max = this.max;

      if (typeof value === 'number' && typeof max === 'number') {
        return max < value ? max + '+' : value;
      }

      return value;
    }
  }
});
// CONCATENATED MODULE: ./packages/badge/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_badge_src_mainvue_type_script_lang_js_ = (badge_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/badge/src/main.vue





/* normalize component */

var badge_src_main_component = normalizeComponent(
  packages_badge_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_a01f04f4_render,
  mainvue_type_template_id_a01f04f4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var badge_src_main = (badge_src_main_component.exports);
// CONCATENATED MODULE: ./packages/badge/index.js


/* istanbul ignore next */
badge_src_main.install = function (Vue) {
  Vue.component(badge_src_main.name, badge_src_main);
};

/* harmony default export */ var badge = (badge_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/card/src/main.vue?vue&type=template&id=07618788&
var mainvue_type_template_id_07618788_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-card",
      class: _vm.shadow ? "is-" + _vm.shadow + "-shadow" : "is-always-shadow",
    },
    [
      _vm.$slots.header || _vm.header
        ? _c(
            "div",
            { staticClass: "fks-card__header" },
            [
              _vm._t("header", function () {
                return [_vm._v(_vm._s(_vm.header))]
              }),
            ],
            2
          )
        : _vm._e(),
      _c(
        "div",
        { staticClass: "fks-card__body", style: _vm.bodyStyle },
        [_vm._t("default")],
        2
      ),
    ]
  )
}
var mainvue_type_template_id_07618788_staticRenderFns = []
mainvue_type_template_id_07618788_render._withStripped = true


// CONCATENATED MODULE: ./packages/card/src/main.vue?vue&type=template&id=07618788&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/card/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var card_src_mainvue_type_script_lang_js_ = ({
  name: 'FksCard',
  props: {
    header: {},
    bodyStyle: {},
    shadow: {
      type: String
    }
  }
});
// CONCATENATED MODULE: ./packages/card/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_card_src_mainvue_type_script_lang_js_ = (card_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/card/src/main.vue





/* normalize component */

var card_src_main_component = normalizeComponent(
  packages_card_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_07618788_render,
  mainvue_type_template_id_07618788_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var card_src_main = (card_src_main_component.exports);
// CONCATENATED MODULE: ./packages/card/index.js


/* istanbul ignore next */
card_src_main.install = function (Vue) {
  Vue.component(card_src_main.name, card_src_main);
};

/* harmony default export */ var card = (card_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/rate/src/main.vue?vue&type=template&id=6cd419b0&
var mainvue_type_template_id_6cd419b0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: [_vm.rateSize ? "fks-rate--" + _vm.rateSize : ""],
      attrs: {
        role: "slider",
        "aria-valuenow": _vm.currentValue,
        "aria-valuetext": _vm.text,
        "aria-valuemin": "0",
        "aria-valuemax": _vm.max,
        tabindex: "0",
      },
      on: { keydown: _vm.handleKey },
    },
    [
      _vm._l(_vm.max, function (item, key) {
        return _c(
          "span",
          {
            key: key,
            staticClass: "fks-rate__item",
            style: { cursor: _vm.rateDisabled ? "auto" : "pointer" },
            on: {
              mousemove: function ($event) {
                return _vm.setCurrentValue(item, $event)
              },
              mouseleave: _vm.resetCurrentValue,
              click: function ($event) {
                return _vm.selectValue(item)
              },
            },
          },
          [
            _c(
              "i",
              {
                staticClass: "fks-rate__icon",
                class: [
                  _vm.classes[item - 1],
                  _vm.rateSize ? "fks-rate__icon--" + _vm.rateSize : "",
                  { hover: _vm.hoverIndex === item },
                ],
                style: _vm.getIconStyle(item),
              },
              [
                _vm.showDecimalIcon(item)
                  ? _c("i", {
                      staticClass: "fks-rate__decimal",
                      class: _vm.decimalIconClass,
                      style: _vm.decimalStyle,
                    })
                  : _vm._e(),
              ]
            ),
          ]
        )
      }),
      _vm.showText || _vm.showScore
        ? _c(
            "span",
            {
              staticClass: "fks-rate__text",
              style: _vm.textColor && { color: _vm.textColor },
            },
            [_vm._v(_vm._s(_vm.text))]
          )
        : _vm._e(),
    ],
    2
  )
}
var mainvue_type_template_id_6cd419b0_staticRenderFns = []
mainvue_type_template_id_6cd419b0_render._withStripped = true


// CONCATENATED MODULE: ./packages/rate/src/main.vue?vue&type=template&id=6cd419b0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/rate/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var rate_src_mainvue_type_script_lang_js_ = ({
  name: 'FksRate',

  mixins: [migrating_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  data: function data() {
    return {
      pointerAtLeftHalf: true,
      currentValue: this.value,
      hoverIndex: -1
    };
  },


  props: {
    value: {
      type: Number,
      default: 0
    },
    lowThreshold: {
      type: Number,
      default: 2
    },
    size: {
      type: String,
      default: 'medium'
    },
    highThreshold: {
      type: Number,
      default: 4
    },
    max: {
      type: Number,
      default: 5
    },
    colors: {
      type: [Array, Object],
      default: function _default() {
        return ['#F7BA2A', '#F7BA2A', '#F7BA2A'];
      }
    },
    voidColor: {
      type: String,
      default: '#C6D1DE'
    },
    disabledVoidColor: {
      type: String,
      default: ''
    },
    iconClasses: {
      type: [Array, Object],
      default: function _default() {
        return ['fks-icon-star-on', 'fks-icon-star-on', 'fks-icon-star-on'];
      }
    },
    voidIconClass: {
      type: String,
      default: 'fks-icon-star-off'
    },
    disabledVoidIconClass: {
      type: String,
      default: 'fks-icon-star-on'
    },
    disabled: {
      type: Boolean,
      default: false
    },
    readonly: {
      type: Boolean,
      default: false
    },
    allowHalf: {
      type: Boolean,
      default: false
    },
    showText: {
      type: Boolean,
      default: false
    },
    showScore: {
      type: Boolean,
      default: false
    },
    textColor: {
      type: String,
      default: ''
    },
    texts: {
      type: Array,
      default: function _default() {
        return ['极差', '失望', '一般', '满意', '惊喜'];
      }
    },
    scoreTemplate: {
      type: String,
      default: '{value}'
    }
  },

  computed: {
    rateSize: function rateSize() {
      return this.size;
    },
    text: function text() {
      var result = '';
      if (this.showScore) {
        result = this.scoreTemplate.replace(/\{\s*value\s*\}/, this.rateDisabled ? this.value : this.currentValue);
      } else if (this.showText) {
        result = this.texts[Math.ceil(this.currentValue) - 1];
      }
      return result;
    },
    decimalStyle: function decimalStyle() {
      var width = '';
      if (this.rateDisabled) {
        width = this.valueDecimal + '%';
      } else if (this.allowHalf) {
        width = '50%';
      }
      return {
        color: this.activeColor,
        width: width
      };
    },
    valueDecimal: function valueDecimal() {
      return this.value * 100 - Math.floor(this.value) * 100;
    },
    classMap: function classMap() {
      var _ref;

      return Array.isArray(this.iconClasses) ? (_ref = {}, _ref[this.lowThreshold] = this.iconClasses[0], _ref[this.highThreshold] = {
        value: this.iconClasses[1],
        excluded: true
      }, _ref[this.max] = this.iconClasses[2], _ref) : this.iconClasses;
    },
    decimalIconClass: function decimalIconClass() {
      return this.getValueFromMap(this.value, this.classMap);
    },
    voidClass: function voidClass() {
      return this.rateDisabled ? this.disabledVoidIconClass : this.voidIconClass;
    },
    activeClass: function activeClass() {
      return this.getValueFromMap(this.currentValue, this.classMap);
    },
    colorMap: function colorMap() {
      var _ref2;

      return Array.isArray(this.colors) ? (_ref2 = {}, _ref2[this.lowThreshold] = this.colors[0], _ref2[this.highThreshold] = { value: this.colors[1], excluded: true }, _ref2[this.max] = this.colors[2], _ref2) : this.colors;
    },
    activeColor: function activeColor() {
      return this.getValueFromMap(this.currentValue, this.colorMap);
    },
    classes: function classes() {
      var result = [];
      var i = 0;
      var threshold = this.currentValue;
      if (this.allowHalf && this.currentValue !== Math.floor(this.currentValue)) {
        threshold--;
      }
      for (; i < threshold; i++) {
        result.push(this.activeClass);
      }
      for (; i < this.max; i++) {
        result.push(this.voidClass);
      }
      return result;
    },
    rateDisabled: function rateDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },

  watch: {
    value: function value(val) {
      this.currentValue = val;
      this.pointerAtLeftHalf = this.value !== Math.floor(this.value);
    }
  },

  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'text-template': 'text-template is renamed to score-template.'
        }
      };
    },
    getValueFromMap: function getValueFromMap(value, map) {
      var matchedKeys = Object.keys(map).filter(function (key) {
        var val = map[key];
        var excluded = Object(types_["isObject"])(val) ? val.excluded : false;
        return excluded ? value < key : value <= key;
      }).sort(function (a, b) {
        return a - b;
      });
      var matchedValue = map[matchedKeys[0]];
      return Object(types_["isObject"])(matchedValue) ? matchedValue.value : matchedValue || '';
    },
    showDecimalIcon: function showDecimalIcon(item) {
      var showWhenDisabled = this.rateDisabled && this.valueDecimal > 0 && item - 1 < this.value && item > this.value;
      /* istanbul ignore next */
      var showWhenAllowHalf = this.allowHalf && this.pointerAtLeftHalf && item - 0.5 <= this.currentValue && item > this.currentValue;
      return showWhenDisabled || showWhenAllowHalf;
    },
    getIconStyle: function getIconStyle(item) {
      var voidColor = this.rateDisabled ? this.disabledVoidColor : this.voidColor;
      return {
        color: item <= this.currentValue ? this.activeColor : voidColor
      };
    },
    selectValue: function selectValue(value) {
      if (this.rateDisabled) {
        return;
      }
      if (this.allowHalf && this.pointerAtLeftHalf) {
        this.$emit('input', this.currentValue);
        this.$emit('change', this.currentValue);
      } else {
        this.$emit('input', value);
        this.$emit('change', value);
      }
    },
    handleKey: function handleKey(e) {
      if (this.rateDisabled) {
        return;
      }
      var currentValue = this.currentValue;
      var keyCode = e.keyCode;
      if (keyCode === 38 || keyCode === 39) {
        // left / down
        if (this.allowHalf) {
          currentValue += 0.5;
        } else {
          currentValue += 1;
        }
        e.stopPropagation();
        e.preventDefault();
      } else if (keyCode === 37 || keyCode === 40) {
        if (this.allowHalf) {
          currentValue -= 0.5;
        } else {
          currentValue -= 1;
        }
        e.stopPropagation();
        e.preventDefault();
      }
      currentValue = currentValue < 0 ? 0 : currentValue;
      currentValue = currentValue > this.max ? this.max : currentValue;

      this.$emit('input', currentValue);
      this.$emit('change', currentValue);
    },
    setCurrentValue: function setCurrentValue(value, event) {
      if (this.rateDisabled) {
        return;
      }
      /* istanbul ignore if */
      if (this.allowHalf) {
        var target = event.target;
        if (Object(dom_["hasClass"])(target, 'fks-rate__item')) {
          target = target.querySelector('.fks-rate__icon');
        }
        if (Object(dom_["hasClass"])(target, 'fks-rate__decimal')) {
          target = target.parentNode;
        }
        this.pointerAtLeftHalf = event.offsetX * 2 <= target.clientWidth;
        this.currentValue = this.pointerAtLeftHalf ? value - 0.5 : value;
      } else {
        this.currentValue = value;
      }
      this.hoverIndex = value;
    },
    resetCurrentValue: function resetCurrentValue() {
      if (this.rateDisabled) {
        return;
      }
      if (this.allowHalf) {
        this.pointerAtLeftHalf = this.value !== Math.floor(this.value);
      }
      this.currentValue = this.value;
      this.hoverIndex = -1;
    }
  },

  created: function created() {
    if (!this.value) {
      this.$emit('input', 0);
    }
  }
});
// CONCATENATED MODULE: ./packages/rate/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_rate_src_mainvue_type_script_lang_js_ = (rate_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/rate/src/main.vue





/* normalize component */

var rate_src_main_component = normalizeComponent(
  packages_rate_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_6cd419b0_render,
  mainvue_type_template_id_6cd419b0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var rate_src_main = (rate_src_main_component.exports);
// CONCATENATED MODULE: ./packages/rate/index.js


/* istanbul ignore next */
rate_src_main.install = function (Vue) {
  Vue.component(rate_src_main.name, rate_src_main);
};

/* harmony default export */ var rate = (rate_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/steps.vue?vue&type=template&id=46739bd7&
var stepsvue_type_template_id_46739bd7_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-steps",
      class: [
        !_vm.simple && "fks-steps--" + _vm.direction,
        _vm.simple && "fks-steps--simple",
      ],
    },
    [_vm._t("default")],
    2
  )
}
var stepsvue_type_template_id_46739bd7_staticRenderFns = []
stepsvue_type_template_id_46739bd7_render._withStripped = true


// CONCATENATED MODULE: ./packages/steps/src/steps.vue?vue&type=template&id=46739bd7&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/steps.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var stepsvue_type_script_lang_js_ = ({
  name: 'FksSteps',

  mixins: [migrating_default.a],

  props: {
    space: [Number, String],
    active: Number,
    direction: {
      type: String,
      default: 'horizontal'
    },
    alignCenter: Boolean,
    simple: Boolean,
    finishStatus: {
      type: String,
      default: 'finish'
    },
    processStatus: {
      type: String,
      default: 'process'
    }
  },

  data: function data() {
    return {
      steps: [],
      stepOffset: 0
    };
  },


  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          center: 'center is removed.'
        }
      };
    }
  },

  watch: {
    active: function active(newVal, oldVal) {
      this.$emit('change', newVal, oldVal);
    },
    steps: function steps(_steps) {
      _steps.forEach(function (child, index) {
        child.index = index;
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/steps/src/steps.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_stepsvue_type_script_lang_js_ = (stepsvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/steps/src/steps.vue





/* normalize component */

var steps_component = normalizeComponent(
  src_stepsvue_type_script_lang_js_,
  stepsvue_type_template_id_46739bd7_render,
  stepsvue_type_template_id_46739bd7_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var steps = (steps_component.exports);
// CONCATENATED MODULE: ./packages/steps/index.js


/* istanbul ignore next */
steps.install = function (Vue) {
  Vue.component(steps.name, steps);
};

/* harmony default export */ var packages_steps = (steps);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/step.vue?vue&type=template&id=1c49b2c1&
var stepvue_type_template_id_1c49b2c1_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-step",
      class: [
        !_vm.isSimple && "is-" + _vm.$parent.direction,
        _vm.isSimple && "is-simple",
        _vm.isLast && !_vm.space && !_vm.isCenter && "is-flex",
        _vm.isCenter && !_vm.isVertical && !_vm.isSimple && "is-center",
      ],
      style: _vm.style,
    },
    [
      _c(
        "div",
        { staticClass: "fks-step__head", class: "is-" + _vm.currentStatus },
        [
          _c(
            "div",
            {
              staticClass: "fks-step__line",
              style: _vm.isLast
                ? ""
                : { marginRight: _vm.$parent.stepOffset + "px" },
            },
            [
              _c("i", {
                staticClass: "fks-step__line-inner",
                style: _vm.lineStyle,
              }),
            ]
          ),
          _c(
            "div",
            {
              staticClass: "fks-step__icon",
              class: "is-" + (_vm.icon ? "icon" : "text"),
            },
            [
              _vm.currentStatus !== "success" && _vm.currentStatus !== "error"
                ? _vm._t("icon", function () {
                    return [
                      _vm.icon
                        ? _c("i", {
                            staticClass: "fks-step__icon-inner",
                            class: [_vm.icon],
                          })
                        : _vm._e(),
                      !_vm.icon && !_vm.isSimple
                        ? _c("div", { staticClass: "fks-step__icon-inner" }, [
                            _vm._v(_vm._s(_vm.index + 1)),
                          ])
                        : _vm._e(),
                    ]
                  })
                : _c("i", {
                    staticClass: "fks-step__icon-inner is-status",
                    class: [
                      "fks-icon-" +
                        (_vm.currentStatus === "success" ? "check" : "close"),
                    ],
                  }),
            ],
            2
          ),
        ]
      ),
      _c("div", { staticClass: "fks-step__main" }, [
        _c(
          "div",
          {
            ref: "title",
            staticClass: "fks-step__title",
            class: ["is-" + _vm.currentStatus],
          },
          [
            _vm._t("title", function () {
              return [_vm._v(_vm._s(_vm.title))]
            }),
          ],
          2
        ),
        _vm.isSimple
          ? _c("div", { staticClass: "fks-step__arrow" })
          : _c(
              "div",
              {
                staticClass: "fks-step__description",
                class: ["is-" + _vm.currentStatus],
              },
              [
                _vm._t("description", function () {
                  return [_vm._v(_vm._s(_vm.description))]
                }),
              ],
              2
            ),
      ]),
    ]
  )
}
var stepvue_type_template_id_1c49b2c1_staticRenderFns = []
stepvue_type_template_id_1c49b2c1_render._withStripped = true


// CONCATENATED MODULE: ./packages/steps/src/step.vue?vue&type=template&id=1c49b2c1&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/steps/src/step.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var stepvue_type_script_lang_js_ = ({
  name: 'FksStep',

  props: {
    title: String,
    icon: String,
    description: String,
    status: String
  },

  data: function data() {
    return {
      index: -1,
      lineStyle: {},
      internalStatus: ''
    };
  },
  beforeCreate: function beforeCreate() {
    this.$parent.steps.push(this);
  },
  beforeDestroy: function beforeDestroy() {
    var steps = this.$parent.steps;
    var index = steps.indexOf(this);
    if (index >= 0) {
      steps.splice(index, 1);
    }
  },


  computed: {
    currentStatus: function currentStatus() {
      return this.status || this.internalStatus;
    },
    prevStatus: function prevStatus() {
      var prevStep = this.$parent.steps[this.index - 1];
      return prevStep ? prevStep.currentStatus : 'wait';
    },
    isCenter: function isCenter() {
      return this.$parent.alignCenter;
    },
    isVertical: function isVertical() {
      return this.$parent.direction === 'vertical';
    },
    isSimple: function isSimple() {
      return this.$parent.simple;
    },
    isLast: function isLast() {
      var parent = this.$parent;
      return parent.steps[parent.steps.length - 1] === this;
    },
    stepsCount: function stepsCount() {
      return this.$parent.steps.length;
    },
    space: function space() {
      var isSimple = this.isSimple,
          space = this.$parent.space;

      return isSimple ? '' : space;
    },

    style: function style() {
      var style = {};
      var parent = this.$parent;
      var len = parent.steps.length;

      var space = typeof this.space === 'number' ? this.space + 'px' : this.space ? this.space : 100 / (len - (this.isCenter ? 0 : 1)) + '%';
      style.flexBasis = space;
      if (this.isVertical) return style;
      if (this.isLast) {
        style.maxWidth = 100 / this.stepsCount + '%';
      } else {
        style.marginRight = -this.$parent.stepOffset + 'px';
      }

      return style;
    }
  },

  methods: {
    updateStatus: function updateStatus(val) {
      var prevChild = this.$parent.$children[this.index - 1];

      if (val > this.index) {
        this.internalStatus = this.$parent.finishStatus;
      } else if (val === this.index && this.prevStatus !== 'error') {
        this.internalStatus = this.$parent.processStatus;
      } else {
        this.internalStatus = 'wait';
      }

      if (prevChild) prevChild.calcProgress(this.internalStatus);
    },
    calcProgress: function calcProgress(status) {
      var step = 100;
      var style = {};

      style.transitionDelay = 150 * this.index + 'ms';
      if (status === this.$parent.processStatus) {
        step = this.currentStatus !== 'error' ? 0 : 0;
      } else if (status === 'wait') {
        step = 0;
        style.transitionDelay = -150 * this.index + 'ms';
      }

      style.borderWidth = step && !this.isSimple ? '1px' : 0;
      this.$parent.direction === 'vertical' ? style.height = step + '%' : style.width = step + '%';

      this.lineStyle = style;
    }
  },

  mounted: function mounted() {
    var _this = this;

    var unwatch = this.$watch('index', function (val) {
      _this.$watch('$parent.active', _this.updateStatus, { immediate: true });
      _this.$watch('$parent.processStatus', function () {
        var activeIndex = _this.$parent.active;
        _this.updateStatus(activeIndex);
      }, { immediate: true });
      unwatch();
    });
  }
});
// CONCATENATED MODULE: ./packages/steps/src/step.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_stepvue_type_script_lang_js_ = (stepvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/steps/src/step.vue





/* normalize component */

var step_component = normalizeComponent(
  src_stepvue_type_script_lang_js_,
  stepvue_type_template_id_1c49b2c1_render,
  stepvue_type_template_id_1c49b2c1_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var step = (step_component.exports);
// CONCATENATED MODULE: ./packages/step/index.js


/* istanbul ignore next */
step.install = function (Vue) {
  Vue.component(step.name, step);
};

/* harmony default export */ var packages_step = (step);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/main.vue?vue&type=template&id=4aae3f93&
var mainvue_type_template_id_4aae3f93_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: _vm.carouselClasses,
      on: {
        mouseenter: function ($event) {
          $event.stopPropagation()
          return _vm.handleMouseEnter.apply(null, arguments)
        },
        mouseleave: function ($event) {
          $event.stopPropagation()
          return _vm.handleMouseLeave.apply(null, arguments)
        },
      },
    },
    [
      _c(
        "div",
        {
          staticClass: "fks-carousel__container",
          style: { height: _vm.height },
        },
        [
          _vm.arrowDisplay
            ? _c("transition", { attrs: { name: "carousel-arrow-left" } }, [
                _c(
                  "button",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value:
                          (_vm.arrow === "always" || _vm.hover) &&
                          (_vm.loop || _vm.activeIndex > 0),
                        expression:
                          "(arrow === 'always' || hover) && (loop || activeIndex > 0)",
                      },
                    ],
                    staticClass:
                      "fks-carousel__arrow fks-carousel__arrow--left",
                    attrs: { type: "button" },
                    on: {
                      mouseenter: function ($event) {
                        return _vm.handleButtonEnter("left")
                      },
                      mouseleave: _vm.handleButtonLeave,
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.throttledArrowClick(_vm.activeIndex - 1)
                      },
                    },
                  },
                  [_c("i", { staticClass: "fks-icon-arrow-left" })]
                ),
              ])
            : _vm._e(),
          _vm.arrowDisplay
            ? _c("transition", { attrs: { name: "carousel-arrow-right" } }, [
                _c(
                  "button",
                  {
                    directives: [
                      {
                        name: "show",
                        rawName: "v-show",
                        value:
                          (_vm.arrow === "always" || _vm.hover) &&
                          (_vm.loop || _vm.activeIndex < _vm.items.length - 1),
                        expression:
                          "(arrow === 'always' || hover) && (loop || activeIndex < items.length - 1)",
                      },
                    ],
                    staticClass:
                      "fks-carousel__arrow fks-carousel__arrow--right",
                    attrs: { type: "button" },
                    on: {
                      mouseenter: function ($event) {
                        return _vm.handleButtonEnter("right")
                      },
                      mouseleave: _vm.handleButtonLeave,
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.throttledArrowClick(_vm.activeIndex + 1)
                      },
                    },
                  },
                  [_c("i", { staticClass: "fks-icon-arrow-right" })]
                ),
              ])
            : _vm._e(),
          _vm._t("default"),
        ],
        2
      ),
      _vm.indicatorPosition !== "none"
        ? _c(
            "ul",
            { class: _vm.indicatorsClasses },
            _vm._l(_vm.items, function (item, index) {
              return _c(
                "li",
                {
                  key: index,
                  class: [
                    "fks-carousel__indicator",
                    "fks-carousel__indicator--" + _vm.direction,
                    { "is-active": index === _vm.activeIndex },
                  ],
                  on: {
                    mouseenter: function ($event) {
                      return _vm.throttledIndicatorHover(index)
                    },
                    click: function ($event) {
                      $event.stopPropagation()
                      return _vm.handleIndicatorClick(index)
                    },
                  },
                },
                [
                  _c("button", { staticClass: "fks-carousel__button" }, [
                    _vm.hasLabel
                      ? _c("span", [_vm._v(_vm._s(item.label))])
                      : _vm._e(),
                  ]),
                ]
              )
            }),
            0
          )
        : _vm._e(),
    ]
  )
}
var mainvue_type_template_id_4aae3f93_staticRenderFns = []
mainvue_type_template_id_4aae3f93_render._withStripped = true


// CONCATENATED MODULE: ./packages/carousel/src/main.vue?vue&type=template&id=4aae3f93&

// EXTERNAL MODULE: external "throttle-debounce/throttle"
var throttle_ = __webpack_require__(28);
var throttle_default = /*#__PURE__*/__webpack_require__.n(throttle_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var carousel_src_mainvue_type_script_lang_js_ = ({
  name: 'FksCarousel',

  props: {
    initialIndex: {
      type: Number,
      default: 0
    },
    height: String,
    trigger: {
      type: String,
      default: 'hover'
    },
    autoplay: {
      type: Boolean,
      default: true
    },
    interval: {
      type: Number,
      default: 3000
    },
    indicatorPosition: String,
    indicator: {
      type: Boolean,
      default: true
    },
    arrow: {
      type: String,
      default: 'hover'
    },
    type: String,
    loop: {
      type: Boolean,
      default: true
    },
    direction: {
      type: String,
      default: 'horizontal',
      validator: function validator(val) {
        return ['horizontal', 'vertical'].indexOf(val) !== -1;
      }
    }
  },

  data: function data() {
    return {
      items: [],
      activeIndex: -1,
      containerWidth: 0,
      timer: null,
      hover: false
    };
  },


  computed: {
    arrowDisplay: function arrowDisplay() {
      return this.arrow !== 'never' && this.direction !== 'vertical';
    },
    hasLabel: function hasLabel() {
      return this.items.some(function (item) {
        return item.label.toString().length > 0;
      });
    },
    carouselClasses: function carouselClasses() {
      var classes = ['fks-carousel', 'fks-carousel--' + this.direction];
      if (this.type === 'card') {
        classes.push('fks-carousel--card');
      }
      return classes;
    },
    indicatorsClasses: function indicatorsClasses() {
      var classes = ['fks-carousel__indicators', 'fks-carousel__indicators--' + this.direction];
      if (this.hasLabel) {
        classes.push('fks-carousel__indicators--labels');
      }
      if (this.indicatorPosition === 'outside' || this.type === 'card') {
        classes.push('fks-carousel__indicators--outside');
      }
      return classes;
    }
  },

  watch: {
    items: function items(val) {
      if (val.length > 0) this.setActiveItem(this.initialIndex);
    },
    activeIndex: function activeIndex(val, oldVal) {
      this.resetItemPosition(oldVal);
      if (oldVal > -1) {
        this.$emit('change', val, oldVal);
      }
    },
    autoplay: function autoplay(val) {
      val ? this.startTimer() : this.pauseTimer();
    },
    loop: function loop() {
      this.setActiveItem(this.activeIndex);
    }
  },

  methods: {
    handleMouseEnter: function handleMouseEnter() {
      this.hover = true;
      this.pauseTimer();
    },
    handleMouseLeave: function handleMouseLeave() {
      this.hover = false;
      this.startTimer();
    },
    itemInStage: function itemInStage(item, index) {
      var length = this.items.length;
      if (index === length - 1 && item.inStage && this.items[0].active || item.inStage && this.items[index + 1] && this.items[index + 1].active) {
        return 'left';
      } else if (index === 0 && item.inStage && this.items[length - 1].active || item.inStage && this.items[index - 1] && this.items[index - 1].active) {
        return 'right';
      }
      return false;
    },
    handleButtonEnter: function handleButtonEnter(arrow) {
      var _this = this;

      if (this.direction === 'vertical') return;
      this.items.forEach(function (item, index) {
        if (arrow === _this.itemInStage(item, index)) {
          item.hover = true;
        }
      });
    },
    handleButtonLeave: function handleButtonLeave() {
      if (this.direction === 'vertical') return;
      this.items.forEach(function (item) {
        item.hover = false;
      });
    },
    updateItems: function updateItems() {
      this.items = this.$children.filter(function (child) {
        return child.$options.name === 'FksCarouselItem';
      });
    },
    resetItemPosition: function resetItemPosition(oldIndex) {
      var _this2 = this;

      this.items.forEach(function (item, index) {
        item.translateItem(index, _this2.activeIndex, oldIndex);
      });
    },
    playSlides: function playSlides() {
      if (this.activeIndex < this.items.length - 1) {
        this.activeIndex++;
      } else if (this.loop) {
        this.activeIndex = 0;
      }
    },
    pauseTimer: function pauseTimer() {
      if (this.timer) {
        clearInterval(this.timer);
        this.timer = null;
      }
    },
    startTimer: function startTimer() {
      if (this.interval <= 0 || !this.autoplay || this.timer) return;
      this.timer = setInterval(this.playSlides, this.interval);
    },
    setActiveItem: function setActiveItem(index) {
      if (typeof index === 'string') {
        var filteredItems = this.items.filter(function (item) {
          return item.name === index;
        });
        if (filteredItems.length > 0) {
          index = this.items.indexOf(filteredItems[0]);
        }
      }
      index = Number(index);
      if (isNaN(index) || index !== Math.floor(index)) {
        console.warn('[FawkesLib Warn][Carousel]index must be an integer.');
        return;
      }
      var length = this.items.length;
      var oldIndex = this.activeIndex;
      if (index < 0) {
        this.activeIndex = this.loop ? length - 1 : 0;
      } else if (index >= length) {
        this.activeIndex = this.loop ? 0 : length - 1;
      } else {
        this.activeIndex = index;
      }
      if (oldIndex === this.activeIndex) {
        this.resetItemPosition(oldIndex);
      }
    },
    prev: function prev() {
      this.setActiveItem(this.activeIndex - 1);
    },
    next: function next() {
      this.setActiveItem(this.activeIndex + 1);
    },
    handleIndicatorClick: function handleIndicatorClick(index) {
      this.activeIndex = index;
    },
    handleIndicatorHover: function handleIndicatorHover(index) {
      if (this.trigger === 'hover' && index !== this.activeIndex) {
        this.activeIndex = index;
      }
    }
  },

  created: function created() {
    var _this3 = this;

    this.throttledArrowClick = throttle_default()(300, true, function (index) {
      _this3.setActiveItem(index);
    });
    this.throttledIndicatorHover = throttle_default()(300, function (index) {
      _this3.handleIndicatorHover(index);
    });
  },
  mounted: function mounted() {
    var _this4 = this;

    this.updateItems();
    this.$nextTick(function () {
      Object(resize_event_["addResizeListener"])(_this4.$el, _this4.resetItemPosition);
      if (_this4.initialIndex < _this4.items.length && _this4.initialIndex >= 0) {
        _this4.activeIndex = _this4.initialIndex;
      }
      _this4.startTimer();
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$el) Object(resize_event_["removeResizeListener"])(this.$el, this.resetItemPosition);
    this.pauseTimer();
  }
});
// CONCATENATED MODULE: ./packages/carousel/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_carousel_src_mainvue_type_script_lang_js_ = (carousel_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/carousel/src/main.vue





/* normalize component */

var carousel_src_main_component = normalizeComponent(
  packages_carousel_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_4aae3f93_render,
  mainvue_type_template_id_4aae3f93_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var carousel_src_main = (carousel_src_main_component.exports);
// CONCATENATED MODULE: ./packages/carousel/index.js


/* istanbul ignore next */
carousel_src_main.install = function (Vue) {
  Vue.component(carousel_src_main.name, carousel_src_main);
};

/* harmony default export */ var carousel = (carousel_src_main);
// CONCATENATED MODULE: ./packages/scrollbar/src/util.js
var BAR_MAP = {
  vertical: {
    offset: 'offsetHeight',
    scroll: 'scrollTop',
    scrollSize: 'scrollHeight',
    size: 'height',
    key: 'vertical',
    axis: 'Y',
    client: 'clientY',
    direction: 'top'
  },
  horizontal: {
    offset: 'offsetWidth',
    scroll: 'scrollLeft',
    scrollSize: 'scrollWidth',
    size: 'width',
    key: 'horizontal',
    axis: 'X',
    client: 'clientX',
    direction: 'left'
  }
};

function renderThumbStyle(_ref) {
  var move = _ref.move,
      size = _ref.size,
      bar = _ref.bar;

  var style = {};
  var translate = 'translate' + bar.axis + '(' + move + '%)';

  style[bar.size] = size;
  style.transform = translate;
  style.msTransform = translate;
  style.webkitTransform = translate;

  return style;
};
// CONCATENATED MODULE: ./packages/scrollbar/src/bar.js



/* istanbul ignore next */
/* harmony default export */ var src_bar = ({
  name: 'Bar',

  props: {
    vertical: Boolean,
    size: String,
    move: Number
  },

  computed: {
    bar: function bar() {
      return BAR_MAP[this.vertical ? 'vertical' : 'horizontal'];
    },
    wrap: function wrap() {
      return this.$parent.wrap;
    }
  },

  render: function render(h) {
    var size = this.size,
        move = this.move,
        bar = this.bar;


    return h(
      'div',
      {
        'class': ['fks-scrollbar__bar', 'is-' + bar.key],
        on: {
          'mousedown': this.clickTrackHandler
        }
      },
      [h('div', {
        ref: 'thumb',
        'class': 'fks-scrollbar__thumb',
        on: {
          'mousedown': this.clickThumbHandler
        },

        style: renderThumbStyle({ size: size, move: move, bar: bar }) })]
    );
  },


  methods: {
    clickThumbHandler: function clickThumbHandler(e) {
      // prevent click event of right button
      if (e.ctrlKey || e.button === 2) {
        return;
      }
      this.startDrag(e);
      this[this.bar.axis] = e.currentTarget[this.bar.offset] - (e[this.bar.client] - e.currentTarget.getBoundingClientRect()[this.bar.direction]);
    },
    clickTrackHandler: function clickTrackHandler(e) {
      var offset = Math.abs(e.target.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]);
      var thumbHalf = this.$refs.thumb[this.bar.offset] / 2;
      var thumbPositionPercentage = (offset - thumbHalf) * 100 / this.$el[this.bar.offset];

      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
    },
    startDrag: function startDrag(e) {
      e.stopImmediatePropagation();
      this.cursorDown = true;

      Object(dom_["on"])(document, 'mousemove', this.mouseMoveDocumentHandler);
      Object(dom_["on"])(document, 'mouseup', this.mouseUpDocumentHandler);
      document.onselectstart = function () {
        return false;
      };
    },
    mouseMoveDocumentHandler: function mouseMoveDocumentHandler(e) {
      if (this.cursorDown === false) return;
      var prevPage = this[this.bar.axis];

      if (!prevPage) return;

      var offset = (this.$el.getBoundingClientRect()[this.bar.direction] - e[this.bar.client]) * -1;
      var thumbClickPosition = this.$refs.thumb[this.bar.offset] - prevPage;
      var thumbPositionPercentage = (offset - thumbClickPosition) * 100 / this.$el[this.bar.offset];

      this.wrap[this.bar.scroll] = thumbPositionPercentage * this.wrap[this.bar.scrollSize] / 100;
    },
    mouseUpDocumentHandler: function mouseUpDocumentHandler(e) {
      this.cursorDown = false;
      this[this.bar.axis] = 0;
      Object(dom_["off"])(document, 'mousemove', this.mouseMoveDocumentHandler);
      document.onselectstart = null;
    }
  },

  destroyed: function destroyed() {
    Object(dom_["off"])(document, 'mouseup', this.mouseUpDocumentHandler);
  }
});
// CONCATENATED MODULE: ./packages/scrollbar/src/main.js
// reference https://github.com/noeldelgado/gemini-scrollbar/blob/master/index.js






/* istanbul ignore next */
/* harmony default export */ var scrollbar_src_main = ({
  name: 'FksScrollbar',

  components: { Bar: src_bar },

  props: {
    native: Boolean,
    wrapStyle: {},
    wrapClass: {},
    viewClass: {},
    viewStyle: {},
    noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能
    tag: {
      type: String,
      default: 'div'
    }
  },

  data: function data() {
    return {
      sizeWidth: '0',
      sizeHeight: '0',
      moveX: 0,
      moveY: 0
    };
  },


  computed: {
    wrap: function wrap() {
      return this.$refs.wrap;
    }
  },

  render: function render(h) {
    var gutter = scrollbar_width_default()();
    var style = this.wrapStyle;

    if (gutter) {
      var gutterWith = '-' + gutter + 'px';
      var gutterStyle = 'margin-bottom: ' + gutterWith + '; margin-right: ' + gutterWith + ';';

      if (Array.isArray(this.wrapStyle)) {
        style = Object(util_["toObject"])(this.wrapStyle);
        style.marginRight = style.marginBottom = gutterWith;
      } else if (typeof this.wrapStyle === 'string') {
        style += gutterStyle;
      } else {
        style = gutterStyle;
      }
    }
    var view = h(this.tag, {
      class: ['fks-scrollbar__view', this.viewClass],
      style: this.viewStyle,
      ref: 'resize'
    }, this.$slots.default);
    var wrap = h(
      'div',
      {
        ref: 'wrap',
        style: style,
        on: {
          'scroll': this.handleScroll
        },

        'class': [this.wrapClass, 'fks-scrollbar__wrap', gutter ? '' : 'fks-scrollbar__wrap--hidden-default'] },
      [[view]]
    );
    var nodes = void 0;

    if (!this.native) {
      nodes = [wrap, h(src_bar, {
        attrs: {
          move: this.moveX,
          size: this.sizeWidth }
      }), h(src_bar, {
        attrs: {
          vertical: true,
          move: this.moveY,
          size: this.sizeHeight }
      })];
    } else {
      nodes = [h(
        'div',
        {
          ref: 'wrap',
          'class': [this.wrapClass, 'fks-scrollbar__wrap'],
          style: style },
        [[view]]
      )];
    }
    return h('div', { class: 'fks-scrollbar' }, nodes);
  },


  methods: {
    handleScroll: function handleScroll() {
      var wrap = this.wrap;

      this.moveY = wrap.scrollTop * 100 / wrap.clientHeight;
      this.moveX = wrap.scrollLeft * 100 / wrap.clientWidth;
    },
    update: function update() {
      var heightPercentage = void 0,
          widthPercentage = void 0;
      var wrap = this.wrap;
      if (!wrap) return;

      heightPercentage = wrap.clientHeight * 100 / wrap.scrollHeight;
      widthPercentage = wrap.clientWidth * 100 / wrap.scrollWidth;

      this.sizeHeight = heightPercentage < 100 ? heightPercentage + '%' : '';
      this.sizeWidth = widthPercentage < 100 ? widthPercentage + '%' : '';
    }
  },

  mounted: function mounted() {
    if (this.native) return;
    this.$nextTick(this.update);
    !this.noresize && Object(resize_event_["addResizeListener"])(this.$refs.resize, this.update);
  },
  beforeDestroy: function beforeDestroy() {
    if (this.native) return;
    !this.noresize && Object(resize_event_["removeResizeListener"])(this.$refs.resize, this.update);
  }
});
// CONCATENATED MODULE: ./packages/scrollbar/index.js


/* istanbul ignore next */
scrollbar_src_main.install = function (Vue) {
  Vue.component(scrollbar_src_main.name, scrollbar_src_main);
};

/* harmony default export */ var scrollbar = (scrollbar_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/item.vue?vue&type=template&id=2df138e0&
var itemvue_type_template_id_2df138e0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "show",
          rawName: "v-show",
          value: _vm.ready,
          expression: "ready",
        },
      ],
      staticClass: "fks-carousel__item",
      class: {
        "is-active": _vm.active,
        "fks-carousel__item--card": _vm.$parent.type === "card",
        "is-in-stage": _vm.inStage,
        "is-hover": _vm.hover,
        "is-animating": _vm.animating,
      },
      style: _vm.itemStyle,
      on: { click: _vm.handleItemClick },
    },
    [
      _vm.$parent.type === "card"
        ? _c("div", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.active,
                expression: "!active",
              },
            ],
            staticClass: "fks-carousel__mask",
          })
        : _vm._e(),
      _vm._t("default"),
    ],
    2
  )
}
var itemvue_type_template_id_2df138e0_staticRenderFns = []
itemvue_type_template_id_2df138e0_render._withStripped = true


// CONCATENATED MODULE: ./packages/carousel/src/item.vue?vue&type=template&id=2df138e0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/carousel/src/item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var CARD_SCALE = 0.83;
/* harmony default export */ var carousel_src_itemvue_type_script_lang_js_ = ({
  name: 'FksCarouselItem',

  props: {
    name: String,
    label: {
      type: [String, Number],
      default: ''
    }
  },

  data: function data() {
    return {
      hover: false,
      translate: 0,
      scale: 1,
      active: false,
      ready: false,
      inStage: false,
      animating: false
    };
  },


  methods: {
    processIndex: function processIndex(index, activeIndex, length) {
      if (activeIndex === 0 && index === length - 1) {
        return -1;
      } else if (activeIndex === length - 1 && index === 0) {
        return length;
      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {
        return length + 1;
      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {
        return -2;
      }
      return index;
    },
    calcCardTranslate: function calcCardTranslate(index, activeIndex) {
      var parentWidth = this.$parent.$el.offsetWidth;
      if (this.inStage) {
        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;
      } else if (index < activeIndex) {
        return -(1 + CARD_SCALE) * parentWidth / 4;
      } else {
        return (3 + CARD_SCALE) * parentWidth / 4;
      }
    },
    calcTranslate: function calcTranslate(index, activeIndex, isVertical) {
      var distance = this.$parent.$el[isVertical ? 'offsetHeight' : 'offsetWidth'];
      return distance * (index - activeIndex);
    },
    translateItem: function translateItem(index, activeIndex, oldIndex) {
      var parentType = this.$parent.type;
      var parentDirection = this.parentDirection;
      var length = this.$parent.items.length;
      if (parentType !== 'card' && oldIndex !== undefined) {
        this.animating = index === activeIndex || index === oldIndex;
      }
      if (index !== activeIndex && length > 2 && this.$parent.loop) {
        index = this.processIndex(index, activeIndex, length);
      }
      if (parentType === 'card') {
        if (parentDirection === 'vertical') {
          console.warn('[FawkesLib Warn][Carousel]vertical direction is not supported in card mode');
        }
        this.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;
        this.active = index === activeIndex;
        this.translate = this.calcCardTranslate(index, activeIndex);
        this.scale = this.active ? 1 : CARD_SCALE;
      } else {
        this.active = index === activeIndex;
        var isVertical = parentDirection === 'vertical';
        this.translate = this.calcTranslate(index, activeIndex, isVertical);
      }
      this.ready = true;
    },
    handleItemClick: function handleItemClick() {
      var parent = this.$parent;
      if (parent && parent.type === 'card') {
        var index = parent.items.indexOf(this);
        parent.setActiveItem(index);
      }
    }
  },

  computed: {
    parentDirection: function parentDirection() {
      return this.$parent.direction;
    },
    itemStyle: function itemStyle() {
      var translateType = this.parentDirection === 'vertical' ? 'translateY' : 'translateX';
      var value = translateType + '(' + this.translate + 'px) scale(' + this.scale + ')';
      var style = {
        transform: value
      };
      return Object(util_["autoprefixer"])(style);
    }
  },

  created: function created() {
    this.$parent && this.$parent.updateItems();
  },
  destroyed: function destroyed() {
    this.$parent && this.$parent.updateItems();
  }
});
// CONCATENATED MODULE: ./packages/carousel/src/item.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_carousel_src_itemvue_type_script_lang_js_ = (carousel_src_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/carousel/src/item.vue





/* normalize component */

var src_item_component = normalizeComponent(
  packages_carousel_src_itemvue_type_script_lang_js_,
  itemvue_type_template_id_2df138e0_render,
  itemvue_type_template_id_2df138e0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var carousel_src_item = (src_item_component.exports);
// CONCATENATED MODULE: ./packages/carousel-item/index.js


/* istanbul ignore next */
carousel_src_item.install = function (Vue) {
  Vue.component(carousel_src_item.name, carousel_src_item);
};

/* harmony default export */ var carousel_item = (carousel_src_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse.vue?vue&type=template&id=4056574e&
var collapsevue_type_template_id_4056574e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-collapse",
      attrs: { role: "tablist", "aria-multiselectable": "true" },
    },
    [_vm._t("default")],
    2
  )
}
var collapsevue_type_template_id_4056574e_staticRenderFns = []
collapsevue_type_template_id_4056574e_render._withStripped = true


// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue?vue&type=template&id=4056574e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse.vue?vue&type=script&lang=js&
//
//
//
//
//

/* harmony default export */ var collapsevue_type_script_lang_js_ = ({
  name: 'FksCollapse',

  componentName: 'FksCollapse',

  props: {
    accordion: Boolean,
    value: {
      type: [Array, String, Number],
      default: function _default() {
        return [];
      }
    }
  },

  data: function data() {
    return {
      activeNames: [].concat(this.value)
    };
  },
  provide: function provide() {
    return {
      collapse: this
    };
  },


  watch: {
    value: function value(_value) {
      this.activeNames = [].concat(_value);
    }
  },

  methods: {
    setActiveNames: function setActiveNames(activeNames) {
      activeNames = [].concat(activeNames);
      var value = this.accordion ? activeNames[0] : activeNames;
      this.activeNames = activeNames;
      this.$emit('input', value);
      this.$emit('change', value);
    },
    handleItemClick: function handleItemClick(item) {
      if (this.accordion) {
        this.setActiveNames((this.activeNames[0] || this.activeNames[0] === 0) && this.activeNames[0] === item.name ? '' : item.name);
      } else {
        var activeNames = this.activeNames.slice(0);
        var index = activeNames.indexOf(item.name);

        if (index > -1) {
          activeNames.splice(index, 1);
        } else {
          activeNames.push(item.name);
        }
        this.setActiveNames(activeNames);
      }
    }
  },

  created: function created() {
    this.$on('item-click', this.handleItemClick);
  }
});
// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_collapsevue_type_script_lang_js_ = (collapsevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/collapse/src/collapse.vue





/* normalize component */

var collapse_component = normalizeComponent(
  src_collapsevue_type_script_lang_js_,
  collapsevue_type_template_id_4056574e_render,
  collapsevue_type_template_id_4056574e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var collapse = (collapse_component.exports);
// CONCATENATED MODULE: ./packages/collapse/index.js


/* istanbul ignore next */
collapse.install = function (Vue) {
  Vue.component(collapse.name, collapse);
};

/* harmony default export */ var packages_collapse = (collapse);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse-item.vue?vue&type=template&id=c9eb05d4&
var collapse_itemvue_type_template_id_c9eb05d4_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-collapse-item",
      class: { "is-active": _vm.isActive, "is-disabled": _vm.disabled },
    },
    [
      _c(
        "div",
        {
          attrs: {
            role: "tab",
            "aria-expanded": _vm.isActive,
            "aria-controls": "fks-collapse-content-" + _vm.id,
            "aria-describedby": "fks-collapse-content-" + _vm.id,
          },
        },
        [
          _c(
            "div",
            {
              staticClass: "fks-collapse-item__header",
              class: {
                focusing: _vm.focusing,
                "is-active": _vm.isActive,
              },
              attrs: {
                role: "button",
                id: "fks-collapse-head-" + _vm.id,
                tabindex: _vm.disabled ? undefined : 0,
              },
              on: {
                click: _vm.handleHeaderClick,
                keyup: function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "space", 32, $event.key, [
                      " ",
                      "Spacebar",
                    ]) &&
                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                  ) {
                    return null
                  }
                  $event.stopPropagation()
                  return _vm.handleEnterClick.apply(null, arguments)
                },
                focus: _vm.handleFocus,
                blur: function ($event) {
                  _vm.focusing = false
                },
              },
            },
            [
              _vm._t("title", function () {
                return [_vm._v(_vm._s(_vm.title))]
              }),
              _c("i", {
                staticClass: "fks-collapse-item__arrow fks-icon-arrow-right",
                class: { "is-active": _vm.isActive },
              }),
            ],
            2
          ),
        ]
      ),
      _c("fks-collapse-transition", [
        _c(
          "div",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.isActive,
                expression: "isActive",
              },
            ],
            staticClass: "fks-collapse-item__wrap",
            attrs: {
              role: "tabpanel",
              "aria-hidden": !_vm.isActive,
              "aria-labelledby": "fks-collapse-head-" + _vm.id,
              id: "fks-collapse-content-" + _vm.id,
            },
          },
          [
            _c(
              "div",
              { staticClass: "fks-collapse-item__content" },
              [_vm._t("default")],
              2
            ),
          ]
        ),
      ]),
    ],
    1
  )
}
var collapse_itemvue_type_template_id_c9eb05d4_staticRenderFns = []
collapse_itemvue_type_template_id_c9eb05d4_render._withStripped = true


// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue?vue&type=template&id=c9eb05d4&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/collapse/src/collapse-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var collapse_itemvue_type_script_lang_js_ = ({
  name: 'FksCollapseItem',

  componentName: 'FksCollapseItem',

  mixins: [emitter_default.a],

  components: { FksCollapseTransition: collapse_transition_default.a },

  data: function data() {
    return {
      contentWrapStyle: {
        height: 'auto',
        display: 'block'
      },
      contentHeight: 0,
      focusing: false,
      isClick: false,
      id: Object(util_["generateId"])()
    };
  },


  inject: ['collapse'],

  props: {
    title: String,
    name: {
      type: [String, Number],
      default: function _default() {
        return this._uid;
      }
    },
    disabled: Boolean
  },

  computed: {
    isActive: function isActive() {
      return this.collapse.activeNames.indexOf(this.name) > -1;
    }
  },

  methods: {
    handleFocus: function handleFocus() {
      var _this = this;

      setTimeout(function () {
        if (!_this.isClick) {
          _this.focusing = true;
        } else {
          _this.isClick = false;
        }
      }, 50);
    },
    handleHeaderClick: function handleHeaderClick() {
      if (this.disabled) return;
      this.dispatch('FksCollapse', 'item-click', this);
      this.focusing = false;
      this.isClick = true;
    },
    handleEnterClick: function handleEnterClick() {
      this.dispatch('FksCollapse', 'item-click', this);
    }
  }
});
// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_collapse_itemvue_type_script_lang_js_ = (collapse_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/collapse/src/collapse-item.vue





/* normalize component */

var collapse_item_component = normalizeComponent(
  src_collapse_itemvue_type_script_lang_js_,
  collapse_itemvue_type_template_id_c9eb05d4_render,
  collapse_itemvue_type_template_id_c9eb05d4_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var collapse_item = (collapse_item_component.exports);
// CONCATENATED MODULE: ./packages/collapse-item/index.js


/* istanbul ignore next */
collapse_item.install = function (Vue) {
  Vue.component(collapse_item.name, collapse_item);
};

/* harmony default export */ var packages_collapse_item = (collapse_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader/src/cascader.vue?vue&type=template&id=d72359c8&
var cascadervue_type_template_id_d72359c8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "clickoutside",
          rawName: "v-clickoutside",
          value: function () {
            return _vm.toggleDropDownVisible(false)
          },
          expression: "() => toggleDropDownVisible(false)",
        },
      ],
      ref: "reference",
      class: [
        "fks-cascader",
        _vm.realSize && "fks-cascader--" + _vm.realSize,
        { "is-disabled": _vm.isDisabled },
        { "is-readonly": _vm.isReadonly },
      ],
      on: {
        mouseenter: function ($event) {
          _vm.inputHover = true
        },
        mouseleave: function ($event) {
          _vm.inputHover = false
        },
        click: function () {
          return _vm.toggleDropDownVisible(_vm.readonlyy ? undefined : true)
        },
        keydown: _vm.handleKeyDown,
      },
    },
    [
      _c(
        "fks-input",
        {
          ref: "input",
          class: { "is-focus": _vm.dropDownVisible },
          attrs: {
            size: _vm.realSize,
            placeholder: _vm.filterable && _vm.multiple ? "" : _vm.placeholder,
            readonly: _vm.isReadonly,
            disabled: _vm.isDisabled,
            "validate-event": false,
          },
          on: {
            focus: _vm.handleFocus,
            blur: _vm.handleBlur,
            input: _vm.handleInput,
          },
          model: {
            value: _vm.multiple ? _vm.presentText : _vm.inputValue,
            callback: function ($$v) {
              _vm.multiple ? _vm.presentText : (_vm.inputValue = $$v)
            },
            expression: "multiple ? presentText : inputValue",
          },
        },
        [
          _c("template", { slot: "suffix" }, [
            _vm.clearBtnVisible
              ? _c("i", {
                  key: "clear",
                  staticClass: "fks-input__icon fks-icon-circle-close",
                  on: {
                    click: function ($event) {
                      $event.stopPropagation()
                      return _vm.handleClear.apply(null, arguments)
                    },
                  },
                })
              : _c("i", {
                  key: "arrow-down",
                  class: [
                    "fks-input__icon",
                    "fks-icon-arrow-down",
                    _vm.dropDownVisible && "is-reverse",
                  ],
                  on: {
                    click: function ($event) {
                      $event.stopPropagation()
                      return _vm.toggleDropDownVisible()
                    },
                  },
                }),
          ]),
        ],
        2
      ),
      _vm.multiple
        ? _c(
            "div",
            { staticClass: "fks-cascader__tags" },
            [
              _vm._l(_vm.presentTags, function (tag, index) {
                return _c(
                  "fks-tag",
                  {
                    key: tag.key,
                    attrs: {
                      type: "info",
                      size: _vm.tagSize,
                      hit: tag.hitState,
                      closable: tag.closable,
                      "disable-transitions": "",
                    },
                    on: {
                      close: function ($event) {
                        return _vm.deleteTag(index)
                      },
                    },
                  },
                  [_c("span", [_vm._v(_vm._s(tag.text))])]
                )
              }),
              _vm.filterable && !_vm.isDisabled && !_vm.isReadonly
                ? _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model.trim",
                        value: _vm.inputValue,
                        expression: "inputValue",
                        modifiers: { trim: true },
                      },
                    ],
                    staticClass: "fks-cascader__search-input",
                    attrs: {
                      type: "text",
                      placeholder: _vm.presentTags.length
                        ? ""
                        : _vm.placeholder,
                    },
                    domProps: { value: _vm.inputValue },
                    on: {
                      input: [
                        function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.inputValue = $event.target.value.trim()
                        },
                        function (e) {
                          return _vm.handleInput(_vm.inputValue, e)
                        },
                      ],
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.toggleDropDownVisible(true)
                      },
                      keydown: function ($event) {
                        if (
                          !$event.type.indexOf("key") &&
                          _vm._k(
                            $event.keyCode,
                            "delete",
                            [8, 46],
                            $event.key,
                            ["Backspace", "Delete", "Del"]
                          )
                        ) {
                          return null
                        }
                        return _vm.handleDelete.apply(null, arguments)
                      },
                      blur: function ($event) {
                        return _vm.$forceUpdate()
                      },
                    },
                  })
                : _vm._e(),
            ],
            2
          )
        : _vm._e(),
      _c(
        "transition",
        {
          attrs: { name: "fks-zoom-in-top" },
          on: { "after-leave": _vm.handleDropdownLeave },
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.dropDownVisible,
                  expression: "dropDownVisible",
                },
              ],
              ref: "popper",
              class: ["fks-popper", "fks-cascader__dropdown", _vm.popperClass],
            },
            [
              _c("fks-cascader-panel", {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: !_vm.filtering,
                    expression: "!filtering",
                  },
                ],
                ref: "panel",
                attrs: {
                  options: _vm.options,
                  props: _vm.config,
                  border: false,
                  "render-label": _vm.$scopedSlots.default,
                },
                on: {
                  "expand-change": _vm.handleExpandChange,
                  close: function ($event) {
                    return _vm.toggleDropDownVisible(false)
                  },
                },
                model: {
                  value: _vm.checkedValue,
                  callback: function ($$v) {
                    _vm.checkedValue = $$v
                  },
                  expression: "checkedValue",
                },
              }),
              _vm.filterable
                ? _c(
                    "fks-scrollbar",
                    {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.filtering,
                          expression: "filtering",
                        },
                      ],
                      ref: "suggestionPanel",
                      staticClass: "fks-cascader__suggestion-panel",
                      attrs: {
                        tag: "ul",
                        "view-class": "fks-cascader__suggestion-list",
                      },
                      nativeOn: {
                        keydown: function ($event) {
                          return _vm.handleSuggestionKeyDown.apply(
                            null,
                            arguments
                          )
                        },
                      },
                    },
                    [
                      _vm.suggestions.length
                        ? _vm._l(_vm.suggestions, function (item, index) {
                            return _c(
                              "li",
                              {
                                key: item.uid,
                                class: [
                                  "fks-cascader__suggestion-item",
                                  item.checked && "is-checked",
                                ],
                                attrs: { tabindex: -1 },
                                on: {
                                  click: function ($event) {
                                    return _vm.handleSuggestionClick(index)
                                  },
                                },
                              },
                              [_c("span", [_vm._v(_vm._s(item.text))])]
                            )
                          })
                        : _vm._t("empty", function () {
                            return [
                              _c(
                                "li",
                                { staticClass: "fks-cascader__empty-text" },
                                [
                                  _vm._v(
                                    "\n            " +
                                      _vm._s(_vm.t("fks.cascader.noMatch")) +
                                      "\n          "
                                  ),
                                ]
                              ),
                            ]
                          }),
                    ],
                    2
                  )
                : _vm._e(),
            ],
            1
          ),
        ]
      ),
    ],
    1
  )
}
var cascadervue_type_template_id_d72359c8_staticRenderFns = []
cascadervue_type_template_id_d72359c8_render._withStripped = true


// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue?vue&type=template&id=d72359c8&

// EXTERNAL MODULE: external "fawkes-lib/lib/cascader-panel"
var cascader_panel_ = __webpack_require__(59);
var cascader_panel_default = /*#__PURE__*/__webpack_require__.n(cascader_panel_);

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/aria-utils"
var aria_utils_ = __webpack_require__(38);
var aria_utils_default = /*#__PURE__*/__webpack_require__.n(aria_utils_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader/src/cascader.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


















var KeyCode = aria_utils_default.a.keys;

var MigratingProps = {
  expandTrigger: {
    newProp: 'expandTrigger',
    type: String
  },
  changeOnSelect: {
    newProp: 'checkStrictly',
    type: Boolean
  },
  hoverThreshold: {
    newProp: 'hoverThreshold',
    type: Number
  }
};

var PopperMixin = {
  props: {
    placement: {
      type: String,
      default: 'bottom-start'
    },
    appendToBody: vue_popper_default.a.props.appendToBody,
    visibleArrow: {
      type: Boolean,
      default: false
    },
    arrowOffset: vue_popper_default.a.props.arrowOffset,
    offset: vue_popper_default.a.props.offset,
    boundariesPadding: vue_popper_default.a.props.boundariesPadding,
    popperOptions: vue_popper_default.a.props.popperOptions
  },
  methods: vue_popper_default.a.methods,
  data: vue_popper_default.a.data,
  beforeDestroy: vue_popper_default.a.beforeDestroy
};

var InputSizeMap = {
  medium: 36,
  small: 32,
  mini: 28
};

/* harmony default export */ var cascadervue_type_script_lang_js_ = ({
  name: 'FksCascader',

  directives: { Clickoutside: clickoutside_default.a },

  mixins: [PopperMixin, emitter_default.a, locale_default.a, migrating_default.a],

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  components: {
    FksInput: input_default.a,
    FksTag: tag_default.a,
    FksScrollbar: scrollbar_default.a,
    FksCascaderPanel: cascader_panel_default.a
  },

  props: {
    value: {},
    options: Array,
    props: Object,
    size: String,
    placeholder: {
      type: String,
      default: function _default() {
        return Object(lib_locale_["t"])('fks.cascader.placeholder');
      }
    },
    disabled: Boolean,
    readonly: Boolean,
    clearable: Boolean,
    filterable: Boolean,
    filterMethod: Function,
    separator: {
      type: String,
      default: ' / '
    },
    showAllLevels: {
      type: Boolean,
      default: true
    },
    collapseTags: Boolean,
    debounce: {
      type: Number,
      default: 300
    },
    beforeFilter: {
      type: Function,
      default: function _default() {
        return function () {};
      }
    },
    popperClass: String
  },

  data: function data() {
    return {
      dropDownVisible: false,
      checkedValue: this.value || null,
      inputHover: false,
      inputValue: null,
      presentText: null,
      presentTags: [],
      checkedNodes: [],
      filtering: false,
      suggestions: [],
      inputInitialHeight: 0,
      pressDeleteCount: 0
    };
  },


  computed: {
    realSize: function realSize() {
      var _fksFormItemSize = (this.fksFormItem || {}).fksFormItemSize;
      return this.size || _fksFormItemSize || (this.$FAWKES || {}).size;
    },
    tagSize: function tagSize() {
      return ['small', 'mini'].indexOf(this.realSize) > -1 ? 'mini' : 'small';
    },
    isDisabled: function isDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled;
    },
    isReadonly: function isReadonly() {
      return this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    },
    config: function config() {
      var config = this.props || {};
      var $attrs = this.$attrs;


      Object.keys(MigratingProps).forEach(function (oldProp) {
        var _MigratingProps$oldPr = MigratingProps[oldProp],
            newProp = _MigratingProps$oldPr.newProp,
            type = _MigratingProps$oldPr.type;

        var oldValue = $attrs[oldProp] || $attrs[Object(util_["kebabCase"])(oldProp)];
        if (Object(shared_["isDef"])(oldProp) && !Object(shared_["isDef"])(config[newProp])) {
          if (type === Boolean && oldValue === '') {
            oldValue = true;
          }
          config[newProp] = oldValue;
        }
      });

      return config;
    },
    multiple: function multiple() {
      return this.config.multiple;
    },
    leafOnly: function leafOnly() {
      return !this.config.checkStrictly;
    },
    readonlyy: function readonlyy() {
      return !this.filterable || this.multiple;
    },
    clearBtnVisible: function clearBtnVisible() {
      if (!this.clearable || this.isDisabled || this.isReadonly || this.filtering || !this.inputHover) {
        return false;
      }

      return this.multiple ? !!this.checkedNodes.filter(function (node) {
        return !node.isDisabled;
      }).length : !!this.presentText;
    },
    panel: function panel() {
      return this.$refs.panel;
    }
  },

  watch: {
    disabled: function disabled() {
      this.computePresentContent();
    },
    value: function value(val) {
      if (!Object(util_["isEqual"])(val, this.checkedValue)) {
        this.checkedValue = val;
        this.computePresentContent();
      }
    },
    checkedValue: function checkedValue(val) {
      var value = this.value,
          dropDownVisible = this.dropDownVisible;
      var _config = this.config,
          checkStrictly = _config.checkStrictly,
          multiple = _config.multiple;


      if (!Object(util_["isEqual"])(val, value) || Object(types_["isUndefined"])(value)) {
        this.computePresentContent();
        // hide dropdown when single mode
        if (!multiple && !checkStrictly && dropDownVisible) {
          this.toggleDropDownVisible(false);
        }

        this.$emit('input', val);
        this.$emit('change', val);
        this.dispatch('FksFormItem', 'fks.form.change', [val]);
      }
    },

    options: {
      handler: function handler() {
        this.$nextTick(this.computePresentContent);
      },
      deep: true
    },
    presentText: function presentText(val) {
      this.inputValue = val;
    },
    presentTags: function presentTags(val, oldVal) {
      if (this.multiple && (val.length || oldVal.length)) {
        this.$nextTick(this.updateStyle);
      }
    },
    filtering: function filtering(val) {
      this.$nextTick(this.updatePopper);
    }
  },

  mounted: function mounted() {
    var _this = this;

    var input = this.$refs.input;

    if (input && input.$el) {
      this.inputInitialHeight = input.$el.offsetHeight || InputSizeMap[this.realSize] || 40;
    }

    if (!Object(util_["isEmpty"])(this.value)) {
      this.computePresentContent();
    }

    this.filterHandler = debounce_default()(this.debounce, function () {
      var inputValue = _this.inputValue;


      if (!inputValue) {
        _this.filtering = false;
        return;
      }

      var before = _this.beforeFilter(inputValue);
      if (before && before.then) {
        before.then(_this.getSuggestions);
      } else if (before !== false) {
        _this.getSuggestions();
      } else {
        _this.filtering = false;
      }
    });

    Object(resize_event_["addResizeListener"])(this.$el, this.updateStyle);
  },
  beforeDestroy: function beforeDestroy() {
    Object(resize_event_["removeResizeListener"])(this.$el, this.updateStyle);
  },


  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'expand-trigger': 'expand-trigger is removed, use `props.expandTrigger` instead.',
          'change-on-select': 'change-on-select is removed, use `props.checkStrictly` instead.',
          'hover-threshold': 'hover-threshold is removed, use `props.hoverThreshold` instead'
        },
        events: {
          'active-item-change': 'active-item-change is renamed to expand-change'
        }
      };
    },
    toggleDropDownVisible: function toggleDropDownVisible(visible) {
      var _this2 = this;

      if (this.isDisabled || this.isReadonly) return;

      var dropDownVisible = this.dropDownVisible;
      var input = this.$refs.input;

      visible = Object(shared_["isDef"])(visible) ? visible : !dropDownVisible;
      if (visible !== dropDownVisible) {
        this.dropDownVisible = visible;
        if (visible) {
          this.$nextTick(function () {
            _this2.updatePopper();
            _this2.panel.scrollIntoView();
          });
        }
        input.$refs.input.setAttribute('aria-expanded', visible);
        this.$emit('visible-change', visible);
      }
    },
    handleDropdownLeave: function handleDropdownLeave() {
      this.filtering = false;
      this.inputValue = this.presentText;
    },
    handleKeyDown: function handleKeyDown(event) {
      switch (event.keyCode) {
        case KeyCode.enter:
          this.toggleDropDownVisible();
          break;
        case KeyCode.down:
          this.toggleDropDownVisible(true);
          this.focusFirstNode();
          event.preventDefault();
          break;
        case KeyCode.esc:
        case KeyCode.tab:
          this.toggleDropDownVisible(false);
          break;
      }
    },
    handleFocus: function handleFocus(e) {
      this.$emit('focus', e);
    },
    handleBlur: function handleBlur(e) {
      this.$emit('blur', e);
    },
    handleInput: function handleInput(val, event) {
      !this.dropDownVisible && this.toggleDropDownVisible(true);

      if (event && event.isComposing) return;
      if (val) {
        this.filterHandler();
      } else {
        this.filtering = false;
      }
    },
    handleClear: function handleClear() {
      this.presentText = '';
      this.panel.clearCheckedNodes();
    },
    handleExpandChange: function handleExpandChange(value) {
      this.$nextTick(this.updatePopper.bind(this));
      this.$emit('expand-change', value);
      this.$emit('active-item-change', value); // Deprecated
    },
    focusFirstNode: function focusFirstNode() {
      var _this3 = this;

      this.$nextTick(function () {
        var filtering = _this3.filtering;
        var _$refs = _this3.$refs,
            popper = _$refs.popper,
            suggestionPanel = _$refs.suggestionPanel;

        var firstNode = null;

        if (filtering && suggestionPanel) {
          firstNode = suggestionPanel.$el.querySelector('.fks-cascader__suggestion-item');
        } else {
          var firstMenu = popper.querySelector('.fks-cascader-menu');
          firstNode = firstMenu.querySelector('.fks-cascader-node[tabindex="-1"]');
        }

        if (firstNode) {
          firstNode.focus();
          !filtering && firstNode.click();
        }
      });
    },
    computePresentContent: function computePresentContent() {
      var _this4 = this;

      // nextTick is required, because checked nodes may not change right now
      this.$nextTick(function () {
        if (_this4.config.multiple) {
          _this4.computePresentTags();
          _this4.presentText = _this4.presentTags.length ? ' ' : null;
        } else {
          _this4.computePresentText();
        }
      });
    },
    computePresentText: function computePresentText() {
      var checkedValue = this.checkedValue,
          config = this.config;

      if (!Object(util_["isEmpty"])(checkedValue)) {
        var node = this.panel.getNodeByValue(checkedValue);
        if (node && (config.checkStrictly || node.isLeaf)) {
          this.presentText = node.getText(this.showAllLevels, this.separator);
          return;
        }
      }
      this.presentText = null;
    },
    computePresentTags: function computePresentTags() {
      var isDisabled = this.isDisabled,
          isReadonly = this.isReadonly,
          leafOnly = this.leafOnly,
          showAllLevels = this.showAllLevels,
          separator = this.separator,
          collapseTags = this.collapseTags;

      var checkedNodes = this.getCheckedNodes(leafOnly);
      var tags = [];

      var genTag = function genTag(node) {
        return {
          node: node,
          key: node.uid,
          text: node.getText(showAllLevels, separator),
          hitState: false,
          closable: !isDisabled && !node.isDisabled && !isReadonly
        };
      };

      if (checkedNodes.length) {
        var first = checkedNodes[0],
            rest = checkedNodes.slice(1);

        var restCount = rest.length;
        tags.push(genTag(first));

        if (restCount) {
          if (collapseTags) {
            tags.push({
              key: -1,
              text: '+ ' + restCount,
              closable: false
            });
          } else {
            rest.forEach(function (node) {
              return tags.push(genTag(node));
            });
          }
        }
      }

      this.checkedNodes = checkedNodes;
      this.presentTags = tags;
    },
    getSuggestions: function getSuggestions() {
      var _this5 = this;

      var filterMethod = this.filterMethod;


      if (!Object(types_["isFunction"])(filterMethod)) {
        filterMethod = function filterMethod(node, keyword) {
          return node.text.includes(keyword);
        };
      }

      var suggestions = this.panel.getFlattedNodes(this.leafOnly).filter(function (node) {
        if (node.isDisabled) return false;
        node.text = node.getText(_this5.showAllLevels, _this5.separator) || '';
        return filterMethod(node, _this5.inputValue);
      });

      if (this.multiple) {
        this.presentTags.forEach(function (tag) {
          tag.hitState = false;
        });
      } else {
        suggestions.forEach(function (node) {
          node.checked = Object(util_["isEqual"])(_this5.checkedValue, node.getValueByOption());
        });
      }

      this.filtering = true;
      this.suggestions = suggestions;
      this.$nextTick(this.updatePopper);
    },
    handleSuggestionKeyDown: function handleSuggestionKeyDown(event) {
      var keyCode = event.keyCode,
          target = event.target;

      switch (keyCode) {
        case KeyCode.enter:
          target.click();
          break;
        case KeyCode.up:
          var prev = target.previousElementSibling;
          prev && prev.focus();
          break;
        case KeyCode.down:
          var next = target.nextElementSibling;
          next && next.focus();
          break;
        case KeyCode.esc:
        case KeyCode.tab:
          this.toggleDropDownVisible(false);
          break;
      }
    },
    handleDelete: function handleDelete() {
      var inputValue = this.inputValue,
          pressDeleteCount = this.pressDeleteCount,
          presentTags = this.presentTags;

      var lastIndex = presentTags.length - 1;
      var lastTag = presentTags[lastIndex];
      this.pressDeleteCount = inputValue ? 0 : pressDeleteCount + 1;

      if (!lastTag) return;

      if (this.pressDeleteCount) {
        if (lastTag.hitState) {
          this.deleteTag(lastIndex);
        } else {
          lastTag.hitState = true;
        }
      }
    },
    handleSuggestionClick: function handleSuggestionClick(index) {
      var multiple = this.multiple;

      var targetNode = this.suggestions[index];

      if (multiple) {
        var checked = targetNode.checked;

        targetNode.doCheck(!checked);
        this.panel.calculateMultiCheckedValue();
      } else {
        this.checkedValue = targetNode.getValueByOption();
        this.toggleDropDownVisible(false);
      }
    },
    deleteTag: function deleteTag(index) {
      var checkedValue = this.checkedValue;

      var val = checkedValue[index];
      this.checkedValue = checkedValue.filter(function (n, i) {
        return i !== index;
      });
      this.$emit('remove-tag', val);
    },
    updateStyle: function updateStyle() {
      var $el = this.$el,
          inputInitialHeight = this.inputInitialHeight;

      if (this.$isServer || !$el) return;

      var suggestionPanel = this.$refs.suggestionPanel;

      var inputInner = $el.querySelector('.fks-input__inner');

      if (!inputInner) return;

      var tags = $el.querySelector('.fks-cascader__tags');
      var suggestionPanelEl = null;

      if (suggestionPanel && (suggestionPanelEl = suggestionPanel.$el)) {
        var suggestionList = suggestionPanelEl.querySelector('.fks-cascader__suggestion-list');
        suggestionList.style.minWidth = inputInner.offsetWidth + 'px';
      }

      if (tags) {
        var offsetHeight = tags.offsetHeight;

        var height = Math.max(offsetHeight + 6, inputInitialHeight) + 'px';
        inputInner.style.height = height;
        this.updatePopper();
      }
    },


    /**
     * public methods
     */
    getCheckedNodes: function getCheckedNodes(leafOnly) {
      return this.panel.getCheckedNodes(leafOnly);
    }
  }
});
// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_cascadervue_type_script_lang_js_ = (cascadervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/cascader/src/cascader.vue





/* normalize component */

var cascader_component = normalizeComponent(
  src_cascadervue_type_script_lang_js_,
  cascadervue_type_template_id_d72359c8_render,
  cascadervue_type_template_id_d72359c8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cascader = (cascader_component.exports);
// CONCATENATED MODULE: ./packages/cascader/index.js


/* istanbul ignore next */
cascader.install = function (Vue) {
  Vue.component(cascader.name, cascader);
};

/* harmony default export */ var packages_cascader = (cascader);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=template&id=fc152cc0&
var mainvue_type_template_id_fc152cc0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      directives: [
        {
          name: "clickoutside",
          rawName: "v-clickoutside",
          value: _vm.hide,
          expression: "hide",
        },
      ],
      class: [
        "fks-color-picker",
        _vm.colorDisabled ? "is-disabled" : "",
        _vm.colorSize ? "fks-color-picker--" + _vm.colorSize : "",
      ],
    },
    [
      _vm.colorDisabled
        ? _c("div", { staticClass: "fks-color-picker__mask" })
        : _vm._e(),
      _c(
        "div",
        {
          staticClass: "fks-color-picker__trigger",
          on: { click: _vm.handleTrigger },
        },
        [
          _c(
            "span",
            {
              staticClass: "fks-color-picker__color",
              class: { "is-alpha": _vm.showAlpha },
            },
            [
              _c("span", {
                staticClass: "fks-color-picker__color-inner",
                style: {
                  backgroundColor: _vm.displayedColor,
                },
              }),
              !_vm.value && !_vm.showPanelColor
                ? _c("span", {
                    staticClass: "fks-color-picker__empty fks-icon-close",
                  })
                : _vm._e(),
            ]
          ),
          _c("span", {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.value || _vm.showPanelColor,
                expression: "value || showPanelColor",
              },
            ],
            staticClass: "fks-color-picker__icon fks-icon-arrow-down",
          }),
        ]
      ),
      _c("picker-dropdown", {
        ref: "dropdown",
        class: ["fks-color-picker__panel", _vm.popperClass || ""],
        attrs: {
          color: _vm.color,
          "show-alpha": _vm.showAlpha,
          predefine: _vm.predefine,
        },
        on: { pick: _vm.confirmValue, clear: _vm.clearValue },
        model: {
          value: _vm.showPicker,
          callback: function ($$v) {
            _vm.showPicker = $$v
          },
          expression: "showPicker",
        },
      }),
    ],
    1
  )
}
var mainvue_type_template_id_fc152cc0_staticRenderFns = []
mainvue_type_template_id_fc152cc0_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=template&id=fc152cc0&

// CONCATENATED MODULE: ./packages/color-picker/src/color.js
var color_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function color_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var hsv2hsl = function hsv2hsl(hue, sat, val) {
  return [hue, sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0, hue / 2];
};

// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1
// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>
var isOnePointZero = function isOnePointZero(n) {
  return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;
};

var isPercentage = function isPercentage(n) {
  return typeof n === 'string' && n.indexOf('%') !== -1;
};

// Take input from [0, n] and return it as [0, 1]
var bound01 = function bound01(value, max) {
  if (isOnePointZero(value)) value = '100%';

  var processPercent = isPercentage(value);
  value = Math.min(max, Math.max(0, parseFloat(value)));

  // Automatically convert percentage into number
  if (processPercent) {
    value = parseInt(value * max, 10) / 100;
  }

  // Handle floating point rounding errors
  if (Math.abs(value - max) < 0.000001) {
    return 1;
  }

  // Convert into [0, 1] range if it isn't already
  return value % max / parseFloat(max);
};

var INT_HEX_MAP = { 10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F' };

var toHex = function toHex(_ref) {
  var r = _ref.r,
      g = _ref.g,
      b = _ref.b;

  var hexOne = function hexOne(value) {
    value = Math.min(Math.round(value), 255);
    var high = Math.floor(value / 16);
    var low = value % 16;
    return '' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);
  };

  if (isNaN(r) || isNaN(g) || isNaN(b)) return '';

  return '#' + hexOne(r) + hexOne(g) + hexOne(b);
};

var HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };

var parseHexChannel = function parseHexChannel(hex) {
  if (hex.length === 2) {
    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);
  }

  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];
};

var hsl2hsv = function hsl2hsv(hue, sat, light) {
  sat = sat / 100;
  light = light / 100;
  var smin = sat;
  var lmin = Math.max(light, 0.01);
  var sv = void 0;
  var v = void 0;

  light *= 2;
  sat *= light <= 1 ? light : 2 - light;
  smin *= lmin <= 1 ? lmin : 2 - lmin;
  v = (light + sat) / 2;
  sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);

  return {
    h: hue,
    s: sv * 100,
    v: v * 100
  };
};

// `rgbToHsv`
// Converts an RGB color value to HSV
// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]
// *Returns:* { h, s, v } in [0,1]
var rgb2hsv = function rgb2hsv(r, g, b) {
  r = bound01(r, 255);
  g = bound01(g, 255);
  b = bound01(b, 255);

  var max = Math.max(r, g, b);
  var min = Math.min(r, g, b);
  var h = void 0,
      s = void 0;
  var v = max;

  var d = max - min;
  s = max === 0 ? 0 : d / max;

  if (max === min) {
    h = 0; // achromatic
  } else {
    switch (max) {
      case r:
        h = (g - b) / d + (g < b ? 6 : 0);
        break;
      case g:
        h = (b - r) / d + 2;
        break;
      case b:
        h = (r - g) / d + 4;
        break;
    }
    h /= 6;
  }

  return { h: h * 360, s: s * 100, v: v * 100 };
};

// `hsvToRgb`
// Converts an HSV color value to RGB.
// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]
// *Returns:* { r, g, b } in the set [0, 255]
var hsv2rgb = function hsv2rgb(h, s, v) {
  h = bound01(h, 360) * 6;
  s = bound01(s, 100);
  v = bound01(v, 100);

  var i = Math.floor(h);
  var f = h - i;
  var p = v * (1 - s);
  var q = v * (1 - f * s);
  var t = v * (1 - (1 - f) * s);
  var mod = i % 6;
  var r = [v, q, p, p, t, v][mod];
  var g = [t, v, v, q, p, p][mod];
  var b = [p, p, t, v, v, q][mod];

  return {
    r: Math.round(r * 255),
    g: Math.round(g * 255),
    b: Math.round(b * 255)
  };
};

var Color = function () {
  function Color(options) {
    color_classCallCheck(this, Color);

    this._hue = 0;
    this._saturation = 100;
    this._value = 100;
    this._alpha = 100;

    this.enableAlpha = false;
    this.format = 'hex';
    this.value = '';

    options = options || {};

    for (var option in options) {
      if (options.hasOwnProperty(option)) {
        this[option] = options[option];
      }
    }

    this.doOnChange();
  }

  Color.prototype.set = function set(prop, value) {
    if (arguments.length === 1 && (typeof prop === 'undefined' ? 'undefined' : color_typeof(prop)) === 'object') {
      for (var p in prop) {
        if (prop.hasOwnProperty(p)) {
          this.set(p, prop[p]);
        }
      }

      return;
    }

    this['_' + prop] = value;
    this.doOnChange();
  };

  Color.prototype.get = function get(prop) {
    return this['_' + prop];
  };

  Color.prototype.toRgb = function toRgb() {
    return hsv2rgb(this._hue, this._saturation, this._value);
  };

  Color.prototype.fromString = function fromString(value) {
    var _this = this;

    if (!value) {
      this._hue = 0;
      this._saturation = 100;
      this._value = 100;

      this.doOnChange();
      return;
    }

    var fromHSV = function fromHSV(h, s, v) {
      _this._hue = Math.max(0, Math.min(360, h));
      _this._saturation = Math.max(0, Math.min(100, s));
      _this._value = Math.max(0, Math.min(100, v));

      _this.doOnChange();
    };

    if (value.indexOf('hsl') !== -1) {
      var parts = value.replace(/hsla|hsl|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
        return val !== '';
      }).map(function (val, index) {
        return index > 2 ? parseFloat(val) : parseInt(val, 10);
      });

      if (parts.length === 4) {
        this._alpha = Math.floor(parseFloat(parts[3]) * 100);
      } else if (parts.length === 3) {
        this._alpha = 100;
      }
      if (parts.length >= 3) {
        var _hsl2hsv = hsl2hsv(parts[0], parts[1], parts[2]),
            h = _hsl2hsv.h,
            s = _hsl2hsv.s,
            v = _hsl2hsv.v;

        fromHSV(h, s, v);
      }
    } else if (value.indexOf('hsv') !== -1) {
      var _parts = value.replace(/hsva|hsv|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
        return val !== '';
      }).map(function (val, index) {
        return index > 2 ? parseFloat(val) : parseInt(val, 10);
      });

      if (_parts.length === 4) {
        this._alpha = Math.floor(parseFloat(_parts[3]) * 100);
      } else if (_parts.length === 3) {
        this._alpha = 100;
      }
      if (_parts.length >= 3) {
        fromHSV(_parts[0], _parts[1], _parts[2]);
      }
    } else if (value.indexOf('rgb') !== -1) {
      var _parts2 = value.replace(/rgba|rgb|\(|\)/gm, '').split(/\s|,/g).filter(function (val) {
        return val !== '';
      }).map(function (val, index) {
        return index > 2 ? parseFloat(val) : parseInt(val, 10);
      });

      if (_parts2.length === 4) {
        this._alpha = Math.floor(parseFloat(_parts2[3]) * 100);
      } else if (_parts2.length === 3) {
        this._alpha = 100;
      }
      if (_parts2.length >= 3) {
        var _rgb2hsv = rgb2hsv(_parts2[0], _parts2[1], _parts2[2]),
            _h = _rgb2hsv.h,
            _s = _rgb2hsv.s,
            _v = _rgb2hsv.v;

        fromHSV(_h, _s, _v);
      }
    } else if (value.indexOf('#') !== -1) {
      var hex = value.replace('#', '').trim();
      if (!/^(?:[0-9a-fA-F]{3}){1,2}$/.test(hex)) return;
      var r = void 0,
          g = void 0,
          b = void 0;

      if (hex.length === 3) {
        r = parseHexChannel(hex[0] + hex[0]);
        g = parseHexChannel(hex[1] + hex[1]);
        b = parseHexChannel(hex[2] + hex[2]);
      } else if (hex.length === 6 || hex.length === 8) {
        r = parseHexChannel(hex.substring(0, 2));
        g = parseHexChannel(hex.substring(2, 4));
        b = parseHexChannel(hex.substring(4, 6));
      }

      if (hex.length === 8) {
        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);
      } else if (hex.length === 3 || hex.length === 6) {
        this._alpha = 100;
      }

      var _rgb2hsv2 = rgb2hsv(r, g, b),
          _h2 = _rgb2hsv2.h,
          _s2 = _rgb2hsv2.s,
          _v2 = _rgb2hsv2.v;

      fromHSV(_h2, _s2, _v2);
    }
  };

  Color.prototype.compare = function compare(color) {
    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;
  };

  Color.prototype.doOnChange = function doOnChange() {
    var _hue = this._hue,
        _saturation = this._saturation,
        _value = this._value,
        _alpha = this._alpha,
        format = this.format;


    if (this.enableAlpha) {
      switch (format) {
        case 'hsl':
          var hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
          this.value = 'hsla(' + _hue + ', ' + Math.round(hsl[1] * 100) + '%, ' + Math.round(hsl[2] * 100) + '%, ' + _alpha / 100 + ')';
          break;
        case 'hsv':
          this.value = 'hsva(' + _hue + ', ' + Math.round(_saturation) + '%, ' + Math.round(_value) + '%, ' + _alpha / 100 + ')';
          break;
        default:
          var _hsv2rgb = hsv2rgb(_hue, _saturation, _value),
              r = _hsv2rgb.r,
              g = _hsv2rgb.g,
              b = _hsv2rgb.b;

          this.value = 'rgba(' + r + ', ' + g + ', ' + b + ', ' + _alpha / 100 + ')';
      }
    } else {
      switch (format) {
        case 'hsl':
          var _hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);
          this.value = 'hsl(' + _hue + ', ' + Math.round(_hsl[1] * 100) + '%, ' + Math.round(_hsl[2] * 100) + '%)';
          break;
        case 'hsv':
          this.value = 'hsv(' + _hue + ', ' + Math.round(_saturation) + '%, ' + Math.round(_value) + '%)';
          break;
        case 'rgb':
          var _hsv2rgb2 = hsv2rgb(_hue, _saturation, _value),
              _r = _hsv2rgb2.r,
              _g = _hsv2rgb2.g,
              _b = _hsv2rgb2.b;

          this.value = 'rgb(' + _r + ', ' + _g + ', ' + _b + ')';
          break;
        default:
          this.value = toHex(hsv2rgb(_hue, _saturation, _value));
      }
    }
  };

  return Color;
}();

/* harmony default export */ var src_color = (Color);
;
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=34686d1e&
var picker_dropdownvue_type_template_id_34686d1e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-zoom-in-top" },
      on: { "after-leave": _vm.doDestroy },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showPopper,
              expression: "showPopper",
            },
          ],
          staticClass: "fks-color-dropdown",
        },
        [
          _c(
            "div",
            { staticClass: "fks-color-dropdown__main-wrapper" },
            [
              _c("hue-slider", {
                ref: "hue",
                staticStyle: { float: "right" },
                attrs: { color: _vm.color, vertical: "" },
              }),
              _c("sv-panel", { ref: "sl", attrs: { color: _vm.color } }),
            ],
            1
          ),
          _vm.showAlpha
            ? _c("alpha-slider", { ref: "alpha", attrs: { color: _vm.color } })
            : _vm._e(),
          _vm.predefine
            ? _c("predefine", {
                attrs: { color: _vm.color, colors: _vm.predefine },
              })
            : _vm._e(),
          _c(
            "div",
            { staticClass: "fks-color-dropdown__btns" },
            [
              _c(
                "span",
                { staticClass: "fks-color-dropdown__value" },
                [
                  _c("fks-input", {
                    attrs: { "validate-event": false, size: "mini" },
                    on: { blur: _vm.handleConfirm },
                    nativeOn: {
                      keyup: function ($event) {
                        if (
                          !$event.type.indexOf("key") &&
                          _vm._k(
                            $event.keyCode,
                            "enter",
                            13,
                            $event.key,
                            "Enter"
                          )
                        ) {
                          return null
                        }
                        return _vm.handleConfirm.apply(null, arguments)
                      },
                    },
                    model: {
                      value: _vm.customInput,
                      callback: function ($$v) {
                        _vm.customInput = $$v
                      },
                      expression: "customInput",
                    },
                  }),
                ],
                1
              ),
              _c(
                "fks-button",
                {
                  staticClass: "fks-color-dropdown__link-btn",
                  attrs: { size: "mini", type: "text" },
                  on: {
                    click: function ($event) {
                      return _vm.$emit("clear")
                    },
                  },
                },
                [_vm._v(_vm._s(_vm.t("fks.colorpicker.clear")))]
              ),
              _c(
                "fks-button",
                {
                  staticClass: "fks-color-dropdown__btn",
                  attrs: { plain: "", size: "mini" },
                  on: { click: _vm.confirmValue },
                },
                [_vm._v(_vm._s(_vm.t("fks.colorpicker.confirm")))]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ]
  )
}
var picker_dropdownvue_type_template_id_34686d1e_staticRenderFns = []
picker_dropdownvue_type_template_id_34686d1e_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=34686d1e&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=2174a388&
var sv_panelvue_type_template_id_2174a388_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-color-svpanel",
      style: {
        backgroundColor: _vm.background,
      },
    },
    [
      _c("div", { staticClass: "fks-color-svpanel__white" }),
      _c("div", { staticClass: "fks-color-svpanel__black" }),
      _c(
        "div",
        {
          staticClass: "fks-color-svpanel__cursor",
          style: {
            top: _vm.cursorTop + "px",
            left: _vm.cursorLeft + "px",
          },
        },
        [_c("div")]
      ),
    ]
  )
}
var sv_panelvue_type_template_id_2174a388_staticRenderFns = []
sv_panelvue_type_template_id_2174a388_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=2174a388&

// CONCATENATED MODULE: ./packages/color-picker/src/draggable.js

var isDragging = false;

/* harmony default export */ var draggable = (function (element, options) {
  if (external_vue_default.a.prototype.$isServer) return;
  var moveFn = function moveFn(event) {
    if (options.drag) {
      options.drag(event);
    }
  };
  var upFn = function upFn(event) {
    document.removeEventListener('mousemove', moveFn);
    document.removeEventListener('mouseup', upFn);
    document.onselectstart = null;
    document.ondragstart = null;

    isDragging = false;

    if (options.end) {
      options.end(event);
    }
  };
  element.addEventListener('mousedown', function (event) {
    if (isDragging) return;
    document.onselectstart = function () {
      return false;
    };
    document.ondragstart = function () {
      return false;
    };

    document.addEventListener('mousemove', moveFn);
    document.addEventListener('mouseup', upFn);
    isDragging = true;

    if (options.start) {
      options.start(event);
    }
  });
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var sv_panelvue_type_script_lang_js_ = ({
  name: 'fks-sl-panel',

  props: {
    color: {
      required: true
    }
  },

  computed: {
    colorValue: function colorValue() {
      var hue = this.color.get('hue');
      var value = this.color.get('value');
      return { hue: hue, value: value };
    }
  },

  watch: {
    colorValue: function colorValue() {
      this.update();
    }
  },

  methods: {
    update: function update() {
      var saturation = this.color.get('saturation');
      var value = this.color.get('value');

      var el = this.$el;
      var width = el.clientWidth,
          height = el.clientHeight;


      this.cursorLeft = saturation * width / 100;
      this.cursorTop = (100 - value) * height / 100;

      this.background = 'hsl(' + this.color.get('hue') + ', 100%, 50%)';
    },
    handleDrag: function handleDrag(event) {
      var el = this.$el;
      var rect = el.getBoundingClientRect();

      var left = event.clientX - rect.left;
      var top = event.clientY - rect.top;
      left = Math.max(0, left);
      left = Math.min(left, rect.width);

      top = Math.max(0, top);
      top = Math.min(top, rect.height);

      this.cursorLeft = left;
      this.cursorTop = top;
      this.color.set({
        saturation: left / rect.width * 100,
        value: 100 - top / rect.height * 100
      });
    }
  },

  mounted: function mounted() {
    var _this = this;

    draggable(this.$el, {
      drag: function drag(event) {
        _this.handleDrag(event);
      },
      end: function end(event) {
        _this.handleDrag(event);
      }
    });

    this.update();
  },
  data: function data() {
    return {
      cursorTop: 0,
      cursorLeft: 0,
      background: 'hsl(0, 100%, 50%)'
    };
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_sv_panelvue_type_script_lang_js_ = (sv_panelvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue





/* normalize component */

var sv_panel_component = normalizeComponent(
  components_sv_panelvue_type_script_lang_js_,
  sv_panelvue_type_template_id_2174a388_render,
  sv_panelvue_type_template_id_2174a388_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var sv_panel = (sv_panel_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=ccb5c190&
var hue_slidervue_type_template_id_ccb5c190_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-color-hue-slider",
      class: { "is-vertical": _vm.vertical },
    },
    [
      _c("div", {
        ref: "bar",
        staticClass: "fks-color-hue-slider__bar",
        on: { click: _vm.handleClick },
      }),
      _c("div", {
        ref: "thumb",
        staticClass: "fks-color-hue-slider__thumb",
        style: {
          left: _vm.thumbLeft + "px",
          top: _vm.thumbTop + "px",
        },
      }),
    ]
  )
}
var hue_slidervue_type_template_id_ccb5c190_staticRenderFns = []
hue_slidervue_type_template_id_ccb5c190_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=ccb5c190&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var hue_slidervue_type_script_lang_js_ = ({
  name: 'fks-color-hue-slider',

  props: {
    color: {
      required: true
    },

    vertical: Boolean
  },

  data: function data() {
    return {
      thumbLeft: 0,
      thumbTop: 0
    };
  },


  computed: {
    hueValue: function hueValue() {
      var hue = this.color.get('hue');
      return hue;
    }
  },

  watch: {
    hueValue: function hueValue() {
      this.update();
    }
  },

  methods: {
    handleClick: function handleClick(event) {
      var thumb = this.$refs.thumb;
      var target = event.target;

      if (target !== thumb) {
        this.handleDrag(event);
      }
    },
    handleDrag: function handleDrag(event) {
      var rect = this.$el.getBoundingClientRect();
      var thumb = this.$refs.thumb;

      var hue = void 0;

      if (!this.vertical) {
        var left = event.clientX - rect.left;
        left = Math.min(left, rect.width - thumb.offsetWidth / 2);
        left = Math.max(thumb.offsetWidth / 2, left);

        hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);
      } else {
        var top = event.clientY - rect.top;
        top = Math.min(top, rect.height - thumb.offsetHeight / 2);
        top = Math.max(thumb.offsetHeight / 2, top);

        hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);
      }

      this.color.set('hue', hue);
    },
    getThumbLeft: function getThumbLeft() {
      if (this.vertical) return 0;
      var el = this.$el;
      var hue = this.color.get('hue');

      if (!el) return 0;
      var thumb = this.$refs.thumb;
      return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);
    },
    getThumbTop: function getThumbTop() {
      if (!this.vertical) return 0;
      var el = this.$el;
      var hue = this.color.get('hue');

      if (!el) return 0;
      var thumb = this.$refs.thumb;
      return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);
    },
    update: function update() {
      this.thumbLeft = this.getThumbLeft();
      this.thumbTop = this.getThumbTop();
    }
  },

  mounted: function mounted() {
    var _this = this;

    var _$refs = this.$refs,
        bar = _$refs.bar,
        thumb = _$refs.thumb;


    var dragConfig = {
      drag: function drag(event) {
        _this.handleDrag(event);
      },
      end: function end(event) {
        _this.handleDrag(event);
      }
    };

    draggable(bar, dragConfig);
    draggable(thumb, dragConfig);
    this.update();
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_hue_slidervue_type_script_lang_js_ = (hue_slidervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue





/* normalize component */

var hue_slider_component = normalizeComponent(
  components_hue_slidervue_type_script_lang_js_,
  hue_slidervue_type_template_id_ccb5c190_render,
  hue_slidervue_type_template_id_ccb5c190_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var hue_slider = (hue_slider_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=530bf6b9&
var alpha_slidervue_type_template_id_530bf6b9_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-color-alpha-slider",
      class: { "is-vertical": _vm.vertical },
    },
    [
      _c("div", {
        ref: "bar",
        staticClass: "fks-color-alpha-slider__bar",
        style: {
          background: _vm.background,
        },
        on: { click: _vm.handleClick },
      }),
      _c("div", {
        ref: "thumb",
        staticClass: "fks-color-alpha-slider__thumb",
        style: {
          left: _vm.thumbLeft + "px",
          top: _vm.thumbTop + "px",
        },
      }),
    ]
  )
}
var alpha_slidervue_type_template_id_530bf6b9_staticRenderFns = []
alpha_slidervue_type_template_id_530bf6b9_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=530bf6b9&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var alpha_slidervue_type_script_lang_js_ = ({
  name: 'fks-color-alpha-slider',

  props: {
    color: {
      required: true
    },
    vertical: Boolean
  },

  watch: {
    'color._alpha': function color_alpha() {
      this.update();
    },
    'color.value': function colorValue() {
      this.update();
    }
  },

  methods: {
    handleClick: function handleClick(event) {
      var thumb = this.$refs.thumb;
      var target = event.target;

      if (target !== thumb) {
        this.handleDrag(event);
      }
    },
    handleDrag: function handleDrag(event) {
      var rect = this.$el.getBoundingClientRect();
      var thumb = this.$refs.thumb;


      if (!this.vertical) {
        var left = event.clientX - rect.left;
        left = Math.max(thumb.offsetWidth / 2, left);
        left = Math.min(left, rect.width - thumb.offsetWidth / 2);

        this.color.set('alpha', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));
      } else {
        var top = event.clientY - rect.top;
        top = Math.max(thumb.offsetHeight / 2, top);
        top = Math.min(top, rect.height - thumb.offsetHeight / 2);

        this.color.set('alpha', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));
      }
    },
    getThumbLeft: function getThumbLeft() {
      if (this.vertical) return 0;
      var el = this.$el;
      var alpha = this.color._alpha;

      if (!el) return 0;
      var thumb = this.$refs.thumb;
      return Math.round(alpha * (el.offsetWidth - thumb.offsetWidth / 2) / 100);
    },
    getThumbTop: function getThumbTop() {
      if (!this.vertical) return 0;
      var el = this.$el;
      var alpha = this.color._alpha;

      if (!el) return 0;
      var thumb = this.$refs.thumb;
      return Math.round(alpha * (el.offsetHeight - thumb.offsetHeight / 2) / 100);
    },
    getBackground: function getBackground() {
      if (this.color && this.color.value) {
        var _color$toRgb = this.color.toRgb(),
            r = _color$toRgb.r,
            g = _color$toRgb.g,
            b = _color$toRgb.b;

        return 'linear-gradient(to right, rgba(' + r + ', ' + g + ', ' + b + ', 0) 0%, rgba(' + r + ', ' + g + ', ' + b + ', 1) 100%)';
      }
      return null;
    },
    update: function update() {
      this.thumbLeft = this.getThumbLeft();
      this.thumbTop = this.getThumbTop();
      this.background = this.getBackground();
    }
  },

  data: function data() {
    return {
      thumbLeft: 0,
      thumbTop: 0,
      background: null
    };
  },
  mounted: function mounted() {
    var _this = this;

    var _$refs = this.$refs,
        bar = _$refs.bar,
        thumb = _$refs.thumb;


    var dragConfig = {
      drag: function drag(event) {
        _this.handleDrag(event);
      },
      end: function end(event) {
        _this.handleDrag(event);
      }
    };

    draggable(bar, dragConfig);
    draggable(thumb, dragConfig);
    this.update();
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_alpha_slidervue_type_script_lang_js_ = (alpha_slidervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue





/* normalize component */

var alpha_slider_component = normalizeComponent(
  components_alpha_slidervue_type_script_lang_js_,
  alpha_slidervue_type_template_id_530bf6b9_render,
  alpha_slidervue_type_template_id_530bf6b9_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var alpha_slider = (alpha_slider_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=template&id=24b068c7&
var predefinevue_type_template_id_24b068c7_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-color-predefine" }, [
    _c(
      "div",
      { staticClass: "fks-color-predefine__colors" },
      _vm._l(_vm.rgbaColors, function (item, index) {
        return _c(
          "div",
          {
            key: _vm.colors[index],
            staticClass: "fks-color-predefine__color-selector",
            class: { selected: item.selected, "is-alpha": item._alpha < 100 },
            on: {
              click: function ($event) {
                return _vm.handleSelect(index)
              },
            },
          },
          [_c("div", { style: { "background-color": item.value } })]
        )
      }),
      0
    ),
  ])
}
var predefinevue_type_template_id_24b068c7_staticRenderFns = []
predefinevue_type_template_id_24b068c7_render._withStripped = true


// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=template&id=24b068c7&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var predefinevue_type_script_lang_js_ = ({
  props: {
    colors: { type: Array, required: true },
    color: { required: true }
  },
  data: function data() {
    return {
      rgbaColors: this.parseColors(this.colors, this.color)
    };
  },

  methods: {
    handleSelect: function handleSelect(index) {
      this.color.fromString(this.colors[index]);
    },
    parseColors: function parseColors(colors, color) {
      return colors.map(function (value) {
        var c = new src_color();
        c.enableAlpha = true;
        c.format = 'rgba';
        c.fromString(value);
        c.selected = c.value === color.value;
        return c;
      });
    }
  },
  watch: {
    '$parent.currentColor': function $parentCurrentColor(val) {
      var color = new src_color();
      color.fromString(val);

      this.rgbaColors.forEach(function (item) {
        item.selected = color.compare(item);
      });
    },
    colors: function colors(newVal) {
      this.rgbaColors = this.parseColors(newVal, this.color);
    },
    color: function color(newVal) {
      this.rgbaColors = this.parseColors(this.colors, newVal);
    }
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_predefinevue_type_script_lang_js_ = (predefinevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue





/* normalize component */

var predefine_component = normalizeComponent(
  components_predefinevue_type_script_lang_js_,
  predefinevue_type_template_id_24b068c7_render,
  predefinevue_type_template_id_24b068c7_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var predefine = (predefine_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//










/* harmony default export */ var picker_dropdownvue_type_script_lang_js_ = ({
  name: 'fks-color-picker-dropdown',

  mixins: [vue_popper_default.a, locale_default.a],

  components: {
    SvPanel: sv_panel,
    HueSlider: hue_slider,
    AlphaSlider: alpha_slider,
    FksInput: input_default.a,
    FksButton: button_default.a,
    Predefine: predefine
  },

  props: {
    color: {
      required: true
    },
    showAlpha: Boolean,
    predefine: Array
  },

  data: function data() {
    return {
      customInput: ''
    };
  },


  computed: {
    currentColor: function currentColor() {
      var parent = this.$parent;
      return !parent.value && !parent.showPanelColor ? '' : parent.color.value;
    }
  },

  methods: {
    confirmValue: function confirmValue() {
      this.$emit('pick');
    },
    handleConfirm: function handleConfirm() {
      this.color.fromString(this.customInput);
    }
  },

  mounted: function mounted() {
    this.$parent.popperElm = this.popperElm = this.$el;
    this.referenceElm = this.$parent.$el;
  },


  watch: {
    showPopper: function showPopper(val) {
      var _this = this;

      if (val === true) {
        this.$nextTick(function () {
          var _$refs = _this.$refs,
              sl = _$refs.sl,
              hue = _$refs.hue,
              alpha = _$refs.alpha;

          sl && sl.update();
          hue && hue.update();
          alpha && alpha.update();
        });
      }
    },


    currentColor: {
      immediate: true,
      handler: function handler(val) {
        this.customInput = val;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_picker_dropdownvue_type_script_lang_js_ = (picker_dropdownvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue





/* normalize component */

var picker_dropdown_component = normalizeComponent(
  components_picker_dropdownvue_type_script_lang_js_,
  picker_dropdownvue_type_template_id_34686d1e_render,
  picker_dropdownvue_type_template_id_34686d1e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var picker_dropdown = (picker_dropdown_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var color_picker_src_mainvue_type_script_lang_js_ = ({
  name: 'FksColorPicker',

  mixins: [emitter_default.a],

  props: {
    value: String,
    showAlpha: Boolean,
    colorFormat: String,
    disabled: Boolean,
    readonly: Boolean,
    size: String,
    popperClass: String,
    predefine: Array
  },

  inject: {
    fksForm: {
      default: ''
    },
    fksFormItem: {
      default: ''
    }
  },

  directives: { Clickoutside: clickoutside_default.a },

  computed: {
    displayedColor: function displayedColor() {
      if (!this.value && !this.showPanelColor) {
        return 'transparent';
      }

      return this.displayedRgb(this.color, this.showAlpha);
    },
    _fksFormItemSize: function _fksFormItemSize() {
      return (this.fksFormItem || {}).fksFormItemSize;
    },
    colorSize: function colorSize() {
      return this.size || this._fksFormItemSize || (this.$FAWKES || {}).size;
    },
    colorDisabled: function colorDisabled() {
      return this.disabled || (this.fksForm || {}).disabled || (this.fksFormItem || {}).disabled || this.readonly || (this.fksForm || {}).readonly || (this.fksFormItem || {}).readonly;
    }
  },

  watch: {
    value: function value(val) {
      if (!val) {
        this.showPanelColor = false;
      } else if (val && val !== this.color.value) {
        this.color.fromString(val);
      }
    },

    color: {
      deep: true,
      handler: function handler() {
        this.showPanelColor = true;
      }
    },
    displayedColor: function displayedColor(val) {
      if (!this.showPicker) return;
      var currentValueColor = new src_color({
        enableAlpha: this.showAlpha,
        format: this.colorFormat
      });
      currentValueColor.fromString(this.value);

      var currentValueColorRgb = this.displayedRgb(currentValueColor, this.showAlpha);
      if (val !== currentValueColorRgb) {
        this.$emit('active-change', val);
      }
    }
  },

  methods: {
    handleTrigger: function handleTrigger() {
      if (this.colorDisabled) return;
      this.showPicker = !this.showPicker;
    },
    confirmValue: function confirmValue() {
      var value = this.color.value;
      this.$emit('input', value);
      this.$emit('change', value);
      this.dispatch('FksFormItem', 'fks.form.change', value);
      this.showPicker = false;
    },
    clearValue: function clearValue() {
      this.$emit('input', null);
      this.$emit('change', null);
      if (this.value !== null) {
        this.dispatch('FksFormItem', 'fks.form.change', null);
      }
      this.showPanelColor = false;
      this.showPicker = false;
      this.resetColor();
    },
    hide: function hide() {
      this.showPicker = false;
      this.resetColor();
    },
    resetColor: function resetColor() {
      var _this = this;

      this.$nextTick(function (_) {
        if (_this.value) {
          _this.color.fromString(_this.value);
        } else {
          _this.showPanelColor = false;
        }
      });
    },
    displayedRgb: function displayedRgb(color, showAlpha) {
      if (!(color instanceof src_color)) {
        throw Error('color should be instance of Color Class');
      }

      var _color$toRgb = color.toRgb(),
          r = _color$toRgb.r,
          g = _color$toRgb.g,
          b = _color$toRgb.b;

      return showAlpha ? 'rgba(' + r + ', ' + g + ', ' + b + ', ' + color.get('alpha') / 100 + ')' : 'rgb(' + r + ', ' + g + ', ' + b + ')';
    }
  },

  mounted: function mounted() {
    var value = this.value;
    if (value) {
      this.color.fromString(value);
    }
    this.popperElm = this.$refs.dropdown.$el;
  },
  data: function data() {
    var color = new src_color({
      enableAlpha: this.showAlpha,
      format: this.colorFormat
    });

    return {
      color: color,
      showPicker: false,
      showPanelColor: false
    };
  },


  components: {
    PickerDropdown: picker_dropdown
  }
});
// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_color_picker_src_mainvue_type_script_lang_js_ = (color_picker_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/color-picker/src/main.vue





/* normalize component */

var color_picker_src_main_component = normalizeComponent(
  packages_color_picker_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_fc152cc0_render,
  mainvue_type_template_id_fc152cc0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var color_picker_src_main = (color_picker_src_main_component.exports);
// CONCATENATED MODULE: ./packages/color-picker/index.js


/* istanbul ignore next */
color_picker_src_main.install = function (Vue) {
  Vue.component(color_picker_src_main.name, color_picker_src_main);
};

/* harmony default export */ var color_picker = (color_picker_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/main.vue?vue&type=template&id=9cf174de&
var mainvue_type_template_id_9cf174de_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-transfer" },
    [
      _c(
        "transfer-panel",
        _vm._b(
          {
            ref: "leftPanel",
            attrs: {
              data: _vm.sourceData,
              title: _vm.titles[0] || _vm.t("fks.transfer.titles.0"),
              "default-checked": _vm.leftDefaultChecked,
              placeholder:
                _vm.filterPlaceholder ||
                _vm.t("fks.transfer.filterPlaceholder"),
            },
            on: { "checked-change": _vm.onSourceCheckedChange },
          },
          "transfer-panel",
          _vm.$props,
          false
        ),
        [_vm._t("left-footer")],
        2
      ),
      _c(
        "div",
        { staticClass: "fks-transfer__buttons" },
        [
          _c(
            "fks-button",
            {
              class: [
                "fks-transfer__button",
                _vm.hasButtonTexts ? "is-with-texts" : "",
              ],
              attrs: { disabled: _vm.leftChecked.length === 0 },
              nativeOn: {
                click: function ($event) {
                  return _vm.addToRight.apply(null, arguments)
                },
              },
            },
            [
              _vm.buttonTexts[1] !== undefined
                ? _c("span", [_vm._v(_vm._s(_vm.buttonTexts[1]))])
                : _vm._e(),
              _c("i", { staticClass: "fks-icon-arrow-right" }),
            ]
          ),
          _c(
            "fks-button",
            {
              class: [
                "fks-transfer__button",
                _vm.hasButtonTexts ? "is-with-texts" : "",
              ],
              attrs: { disabled: _vm.rightChecked.length === 0 },
              nativeOn: {
                click: function ($event) {
                  return _vm.addToLeft.apply(null, arguments)
                },
              },
            },
            [
              _c("i", { staticClass: "fks-icon-arrow-left" }),
              _vm.buttonTexts[0] !== undefined
                ? _c("span", [_vm._v(_vm._s(_vm.buttonTexts[0]))])
                : _vm._e(),
            ]
          ),
        ],
        1
      ),
      _c(
        "transfer-panel",
        _vm._b(
          {
            ref: "rightPanel",
            attrs: {
              data: _vm.targetData,
              title: _vm.titles[1] || _vm.t("fks.transfer.titles.1"),
              "default-checked": _vm.rightDefaultChecked,
              placeholder:
                _vm.filterPlaceholder ||
                _vm.t("fks.transfer.filterPlaceholder"),
            },
            on: { "checked-change": _vm.onTargetCheckedChange },
          },
          "transfer-panel",
          _vm.$props,
          false
        ),
        [_vm._t("right-footer")],
        2
      ),
    ],
    1
  )
}
var mainvue_type_template_id_9cf174de_staticRenderFns = []
mainvue_type_template_id_9cf174de_render._withStripped = true


// CONCATENATED MODULE: ./packages/transfer/src/main.vue?vue&type=template&id=9cf174de&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/transfer-panel.vue?vue&type=template&id=42be1f8d&
var transfer_panelvue_type_template_id_42be1f8d_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-transfer-panel" }, [
    _c(
      "p",
      { staticClass: "fks-transfer-panel__header" },
      [
        _c(
          "fks-checkbox",
          {
            attrs: { indeterminate: _vm.isIndeterminate },
            on: { change: _vm.handleAllCheckedChange },
            model: {
              value: _vm.allChecked,
              callback: function ($$v) {
                _vm.allChecked = $$v
              },
              expression: "allChecked",
            },
          },
          [
            _vm._v("\n      " + _vm._s(_vm.title) + "\n      "),
            _c("span", [_vm._v(_vm._s(_vm.checkedSummary))]),
          ]
        ),
      ],
      1
    ),
    _c(
      "div",
      {
        class: [
          "fks-transfer-panel__body",
          _vm.hasFooter ? "is-with-footer" : "",
        ],
      },
      [
        _vm.filterable
          ? _c(
              "fks-input",
              {
                staticClass: "fks-transfer-panel__filter",
                attrs: { size: "small", placeholder: _vm.placeholder },
                nativeOn: {
                  mouseenter: function ($event) {
                    _vm.inputHover = true
                  },
                  mouseleave: function ($event) {
                    _vm.inputHover = false
                  },
                },
                model: {
                  value: _vm.query,
                  callback: function ($$v) {
                    _vm.query = $$v
                  },
                  expression: "query",
                },
              },
              [
                _c("i", {
                  class: ["fks-input__icon", "fks-icon-" + _vm.inputIcon],
                  attrs: { slot: "prefix" },
                  on: { click: _vm.clearQuery },
                  slot: "prefix",
                }),
              ]
            )
          : _vm._e(),
        _c(
          "fks-checkbox-group",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: !_vm.hasNoMatch && _vm.data.length > 0,
                expression: "!hasNoMatch && data.length > 0",
              },
            ],
            staticClass: "fks-transfer-panel__list",
            class: { "is-filterable": _vm.filterable },
            model: {
              value: _vm.checked,
              callback: function ($$v) {
                _vm.checked = $$v
              },
              expression: "checked",
            },
          },
          _vm._l(_vm.filteredData, function (item) {
            return _c(
              "fks-checkbox",
              {
                key: item[_vm.keyProp],
                staticClass: "fks-transfer-panel__item",
                attrs: {
                  label: item[_vm.keyProp],
                  disabled: item[_vm.disabledProp],
                },
              },
              [_c("option-content", { attrs: { option: item } })],
              1
            )
          }),
          1
        ),
        _c(
          "p",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.hasNoMatch,
                expression: "hasNoMatch",
              },
            ],
            staticClass: "fks-transfer-panel__empty",
          },
          [_vm._v(_vm._s(_vm.t("fks.transfer.noMatch")))]
        ),
        _c(
          "p",
          {
            directives: [
              {
                name: "show",
                rawName: "v-show",
                value: _vm.data.length === 0 && !_vm.hasNoMatch,
                expression: "data.length === 0 && !hasNoMatch",
              },
            ],
            staticClass: "fks-transfer-panel__empty",
          },
          [_vm._v(_vm._s(_vm.t("fks.transfer.noData")))]
        ),
      ],
      1
    ),
    _vm.hasFooter
      ? _c(
          "p",
          { staticClass: "fks-transfer-panel__footer" },
          [_vm._t("default")],
          2
        )
      : _vm._e(),
  ])
}
var transfer_panelvue_type_template_id_42be1f8d_staticRenderFns = []
transfer_panelvue_type_template_id_42be1f8d_render._withStripped = true


// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue?vue&type=template&id=42be1f8d&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/transfer-panel.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var transfer_panelvue_type_script_lang_js_ = ({
  mixins: [locale_default.a],

  name: 'FksTransferPanel',

  componentName: 'FksTransferPanel',

  components: {
    FksCheckboxGroup: checkbox_group_default.a,
    FksCheckbox: checkbox_default.a,
    FksInput: input_default.a,
    OptionContent: {
      props: {
        option: Object
      },
      render: function render(h) {
        var getParent = function getParent(vm) {
          if (vm.$options.componentName === 'FksTransferPanel') {
            return vm;
          } else if (vm.$parent) {
            return getParent(vm.$parent);
          } else {
            return vm;
          }
        };
        var panel = getParent(this);
        var transfer = panel.$parent || panel;
        return panel.renderContent ? panel.renderContent(h, this.option) : transfer.$scopedSlots.default ? transfer.$scopedSlots.default({ option: this.option }) : h('span', [this.option[panel.labelProp] || this.option[panel.keyProp]]);
      }
    }
  },

  props: {
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    renderContent: Function,
    placeholder: String,
    title: String,
    filterable: Boolean,
    format: Object,
    filterMethod: Function,
    defaultChecked: Array,
    props: Object
  },

  data: function data() {
    return {
      checked: [],
      allChecked: false,
      query: '',
      inputHover: false,
      checkChangeByUser: true
    };
  },


  watch: {
    checked: function checked(val, oldVal) {
      this.updateAllChecked();
      if (this.checkChangeByUser) {
        var movedKeys = val.concat(oldVal).filter(function (v) {
          return val.indexOf(v) === -1 || oldVal.indexOf(v) === -1;
        });
        this.$emit('checked-change', val, movedKeys);
      } else {
        this.$emit('checked-change', val);
        this.checkChangeByUser = true;
      }
    },
    data: function data() {
      var _this = this;

      var checked = [];
      var filteredDataKeys = this.filteredData.map(function (item) {
        return item[_this.keyProp];
      });
      this.checked.forEach(function (item) {
        if (filteredDataKeys.indexOf(item) > -1) {
          checked.push(item);
        }
      });
      this.checkChangeByUser = false;
      this.checked = checked;
    },
    checkableData: function checkableData() {
      this.updateAllChecked();
    },


    defaultChecked: {
      immediate: true,
      handler: function handler(val, oldVal) {
        var _this2 = this;

        if (oldVal && val.length === oldVal.length && val.every(function (item) {
          return oldVal.indexOf(item) > -1;
        })) return;
        var checked = [];
        var checkableDataKeys = this.checkableData.map(function (item) {
          return item[_this2.keyProp];
        });
        val.forEach(function (item) {
          if (checkableDataKeys.indexOf(item) > -1) {
            checked.push(item);
          }
        });
        this.checkChangeByUser = false;
        this.checked = checked;
      }
    }
  },

  computed: {
    filteredData: function filteredData() {
      var _this3 = this;

      return this.data.filter(function (item) {
        if (typeof _this3.filterMethod === 'function') {
          return _this3.filterMethod(_this3.query, item);
        } else {
          var label = item[_this3.labelProp] || item[_this3.keyProp].toString();
          return label.toLowerCase().indexOf(_this3.query.toLowerCase()) > -1;
        }
      });
    },
    checkableData: function checkableData() {
      var _this4 = this;

      return this.filteredData.filter(function (item) {
        return !item[_this4.disabledProp];
      });
    },
    checkedSummary: function checkedSummary() {
      var checkedLength = this.checked.length;
      var dataLength = this.data.length;
      var _format = this.format,
          noChecked = _format.noChecked,
          hasChecked = _format.hasChecked;

      if (noChecked && hasChecked) {
        return checkedLength > 0 ? hasChecked.replace(/\${checked}/g, checkedLength).replace(/\${total}/g, dataLength) : noChecked.replace(/\${total}/g, dataLength);
      } else {
        return checkedLength + '/' + dataLength;
      }
    },
    isIndeterminate: function isIndeterminate() {
      var checkedLength = this.checked.length;
      return checkedLength > 0 && checkedLength < this.checkableData.length;
    },
    hasNoMatch: function hasNoMatch() {
      return this.query.length > 0 && this.filteredData.length === 0;
    },
    inputIcon: function inputIcon() {
      return this.query.length > 0 && this.inputHover ? 'circle-close' : 'search';
    },
    labelProp: function labelProp() {
      return this.props.label || 'label';
    },
    keyProp: function keyProp() {
      return this.props.key || 'key';
    },
    disabledProp: function disabledProp() {
      return this.props.disabled || 'disabled';
    },
    hasFooter: function hasFooter() {
      return !!this.$slots.default;
    }
  },

  methods: {
    updateAllChecked: function updateAllChecked() {
      var _this5 = this;

      var checkableDataKeys = this.checkableData.map(function (item) {
        return item[_this5.keyProp];
      });
      this.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every(function (item) {
        return _this5.checked.indexOf(item) > -1;
      });
    },
    handleAllCheckedChange: function handleAllCheckedChange(value) {
      var _this6 = this;

      this.checked = value ? this.checkableData.map(function (item) {
        return item[_this6.keyProp];
      }) : [];
    },
    clearQuery: function clearQuery() {
      if (this.inputIcon === 'circle-close') {
        this.query = '';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_transfer_panelvue_type_script_lang_js_ = (transfer_panelvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/transfer/src/transfer-panel.vue





/* normalize component */

var transfer_panel_component = normalizeComponent(
  src_transfer_panelvue_type_script_lang_js_,
  transfer_panelvue_type_template_id_42be1f8d_render,
  transfer_panelvue_type_template_id_42be1f8d_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var transfer_panel = (transfer_panel_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/transfer/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







/* harmony default export */ var transfer_src_mainvue_type_script_lang_js_ = ({
  name: 'FksTransfer',

  mixins: [emitter_default.a, locale_default.a, migrating_default.a],

  components: {
    TransferPanel: transfer_panel,
    FksButton: button_default.a
  },

  props: {
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    titles: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    buttonTexts: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    filterPlaceholder: {
      type: String,
      default: ''
    },
    filterMethod: Function,
    leftDefaultChecked: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    rightDefaultChecked: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    renderContent: Function,
    value: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    format: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    filterable: Boolean,
    props: {
      type: Object,
      default: function _default() {
        return {
          label: 'label',
          key: 'key',
          disabled: 'disabled'
        };
      }
    },
    targetOrder: {
      type: String,
      default: 'original'
    }
  },

  data: function data() {
    return {
      leftChecked: [],
      rightChecked: []
    };
  },


  computed: {
    dataObj: function dataObj() {
      var key = this.props.key;
      return this.data.reduce(function (o, cur) {
        return (o[cur[key]] = cur) && o;
      }, {});
    },
    sourceData: function sourceData() {
      var _this = this;

      return this.data.filter(function (item) {
        return _this.value.indexOf(item[_this.props.key]) === -1;
      });
    },
    targetData: function targetData() {
      var _this2 = this;

      if (this.targetOrder === 'original') {
        return this.data.filter(function (item) {
          return _this2.value.indexOf(item[_this2.props.key]) > -1;
        });
      } else {
        return this.value.reduce(function (arr, cur) {
          var val = _this2.dataObj[cur];
          if (val) {
            arr.push(val);
          }
          return arr;
        }, []);
      }
    },
    hasButtonTexts: function hasButtonTexts() {
      return this.buttonTexts.length === 2;
    }
  },

  watch: {
    value: function value(val) {
      this.dispatch('FksFormItem', 'fks.form.change', val);
    }
  },

  methods: {
    getMigratingConfig: function getMigratingConfig() {
      return {
        props: {
          'footer-format': 'footer-format is renamed to format.'
        }
      };
    },
    onSourceCheckedChange: function onSourceCheckedChange(val, movedKeys) {
      this.leftChecked = val;
      if (movedKeys === undefined) return;
      this.$emit('left-check-change', val, movedKeys);
    },
    onTargetCheckedChange: function onTargetCheckedChange(val, movedKeys) {
      this.rightChecked = val;
      if (movedKeys === undefined) return;
      this.$emit('right-check-change', val, movedKeys);
    },
    addToLeft: function addToLeft() {
      var currentValue = this.value.slice();
      this.rightChecked.forEach(function (item) {
        var index = currentValue.indexOf(item);
        if (index > -1) {
          currentValue.splice(index, 1);
        }
      });
      this.$emit('input', currentValue);
      this.$emit('change', currentValue, 'left', this.rightChecked);
    },
    addToRight: function addToRight() {
      var _this3 = this;

      var currentValue = this.value.slice();
      var itemsToBeMoved = [];
      var key = this.props.key;
      this.data.forEach(function (item) {
        var itemKey = item[key];
        if (_this3.leftChecked.indexOf(itemKey) > -1 && _this3.value.indexOf(itemKey) === -1) {
          itemsToBeMoved.push(itemKey);
        }
      });
      currentValue = this.targetOrder === 'unshift' ? itemsToBeMoved.concat(currentValue) : currentValue.concat(itemsToBeMoved);
      this.$emit('input', currentValue);
      this.$emit('change', currentValue, 'right', this.leftChecked);
    },
    clearQuery: function clearQuery(which) {
      if (which === 'left') {
        this.$refs.leftPanel.query = '';
      } else if (which === 'right') {
        this.$refs.rightPanel.query = '';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/transfer/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_transfer_src_mainvue_type_script_lang_js_ = (transfer_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/transfer/src/main.vue





/* normalize component */

var transfer_src_main_component = normalizeComponent(
  packages_transfer_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_9cf174de_render,
  mainvue_type_template_id_9cf174de_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var transfer_src_main = (transfer_src_main_component.exports);
// CONCATENATED MODULE: ./packages/transfer/index.js


/* istanbul ignore next */
transfer_src_main.install = function (Vue) {
  Vue.component(transfer_src_main.name, transfer_src_main);
};

/* harmony default export */ var transfer = (transfer_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/container/src/main.vue?vue&type=template&id=6b7753c2&
var mainvue_type_template_id_6b7753c2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "fks-container", class: { "is-vertical": _vm.isVertical } },
    [_vm._t("default")],
    2
  )
}
var mainvue_type_template_id_6b7753c2_staticRenderFns = []
mainvue_type_template_id_6b7753c2_render._withStripped = true


// CONCATENATED MODULE: ./packages/container/src/main.vue?vue&type=template&id=6b7753c2&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/container/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var container_src_mainvue_type_script_lang_js_ = ({
  name: 'FksContainer',

  componentName: 'FksContainer',

  props: {
    direction: String
  },

  computed: {
    isVertical: function isVertical() {
      if (this.direction === 'vertical') {
        return true;
      } else if (this.direction === 'horizontal') {
        return false;
      }
      return this.$slots && this.$slots.default ? this.$slots.default.some(function (vnode) {
        var tag = vnode.componentOptions && vnode.componentOptions.tag;
        return tag === 'fks-header' || tag === 'fks-footer';
      }) : false;
    }
  }
});
// CONCATENATED MODULE: ./packages/container/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_container_src_mainvue_type_script_lang_js_ = (container_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/container/src/main.vue





/* normalize component */

var container_src_main_component = normalizeComponent(
  packages_container_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_6b7753c2_render,
  mainvue_type_template_id_6b7753c2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var container_src_main = (container_src_main_component.exports);
// CONCATENATED MODULE: ./packages/container/index.js


/* istanbul ignore next */
container_src_main.install = function (Vue) {
  Vue.component(container_src_main.name, container_src_main);
};

/* harmony default export */ var packages_container = (container_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/header/src/main.vue?vue&type=template&id=bb2728de&
var mainvue_type_template_id_bb2728de_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "header",
    { staticClass: "fks-header", style: { height: _vm.height } },
    [_vm._t("default")],
    2
  )
}
var mainvue_type_template_id_bb2728de_staticRenderFns = []
mainvue_type_template_id_bb2728de_render._withStripped = true


// CONCATENATED MODULE: ./packages/header/src/main.vue?vue&type=template&id=bb2728de&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/header/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var header_src_mainvue_type_script_lang_js_ = ({
  name: 'FksHeader',

  componentName: 'FksHeader',

  props: {
    height: {
      type: String,
      default: '60px'
    }
  }
});
// CONCATENATED MODULE: ./packages/header/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_header_src_mainvue_type_script_lang_js_ = (header_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/header/src/main.vue





/* normalize component */

var header_src_main_component = normalizeComponent(
  packages_header_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_bb2728de_render,
  mainvue_type_template_id_bb2728de_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var header_src_main = (header_src_main_component.exports);
// CONCATENATED MODULE: ./packages/header/index.js


/* istanbul ignore next */
header_src_main.install = function (Vue) {
  Vue.component(header_src_main.name, header_src_main);
};

/* harmony default export */ var header = (header_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/aside/src/main.vue?vue&type=template&id=305e7058&
var mainvue_type_template_id_305e7058_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "aside",
    { staticClass: "fks-aside", style: { width: _vm.width } },
    [_vm._t("default")],
    2
  )
}
var mainvue_type_template_id_305e7058_staticRenderFns = []
mainvue_type_template_id_305e7058_render._withStripped = true


// CONCATENATED MODULE: ./packages/aside/src/main.vue?vue&type=template&id=305e7058&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/aside/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var aside_src_mainvue_type_script_lang_js_ = ({
  name: 'FksAside',

  componentName: 'FksAside',

  props: {
    width: {
      type: String,
      default: '300px'
    }
  }
});
// CONCATENATED MODULE: ./packages/aside/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_aside_src_mainvue_type_script_lang_js_ = (aside_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/aside/src/main.vue





/* normalize component */

var aside_src_main_component = normalizeComponent(
  packages_aside_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_305e7058_render,
  mainvue_type_template_id_305e7058_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var aside_src_main = (aside_src_main_component.exports);
// CONCATENATED MODULE: ./packages/aside/index.js


/* istanbul ignore next */
aside_src_main.install = function (Vue) {
  Vue.component(aside_src_main.name, aside_src_main);
};

/* harmony default export */ var aside = (aside_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/main/src/main.vue?vue&type=template&id=799ef451&
var mainvue_type_template_id_799ef451_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("main", { staticClass: "fks-main" }, [_vm._t("default")], 2)
}
var mainvue_type_template_id_799ef451_staticRenderFns = []
mainvue_type_template_id_799ef451_render._withStripped = true


// CONCATENATED MODULE: ./packages/main/src/main.vue?vue&type=template&id=799ef451&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/main/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var main_src_mainvue_type_script_lang_js_ = ({
  name: 'FksMain',
  componentName: 'FksMain'
});
// CONCATENATED MODULE: ./packages/main/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_main_src_mainvue_type_script_lang_js_ = (main_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/main/src/main.vue





/* normalize component */

var main_src_main_component = normalizeComponent(
  packages_main_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_799ef451_render,
  mainvue_type_template_id_799ef451_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var main_src_main = (main_src_main_component.exports);
// CONCATENATED MODULE: ./packages/main/index.js


/* istanbul ignore next */
main_src_main.install = function (Vue) {
  Vue.component(main_src_main.name, main_src_main);
};

/* harmony default export */ var packages_main = (main_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/footer/src/main.vue?vue&type=template&id=6f3ee6a6&
var mainvue_type_template_id_6f3ee6a6_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "footer",
    { staticClass: "fks-footer", style: { height: _vm.height } },
    [_vm._t("default")],
    2
  )
}
var mainvue_type_template_id_6f3ee6a6_staticRenderFns = []
mainvue_type_template_id_6f3ee6a6_render._withStripped = true


// CONCATENATED MODULE: ./packages/footer/src/main.vue?vue&type=template&id=6f3ee6a6&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/footer/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//

/* harmony default export */ var footer_src_mainvue_type_script_lang_js_ = ({
  name: 'FksFooter',

  componentName: 'FksFooter',

  props: {
    height: {
      type: String,
      default: '60px'
    }
  }
});
// CONCATENATED MODULE: ./packages/footer/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_footer_src_mainvue_type_script_lang_js_ = (footer_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/footer/src/main.vue





/* normalize component */

var footer_src_main_component = normalizeComponent(
  packages_footer_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_6f3ee6a6_render,
  mainvue_type_template_id_6f3ee6a6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var footer_src_main = (footer_src_main_component.exports);
// CONCATENATED MODULE: ./packages/footer/index.js


/* istanbul ignore next */
footer_src_main.install = function (Vue) {
  Vue.component(footer_src_main.name, footer_src_main);
};

/* harmony default export */ var footer = (footer_src_main);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/main.vue?vue&type=script&lang=js&

/* harmony default export */ var timeline_src_mainvue_type_script_lang_js_ = ({
  name: 'FksTimeline',

  props: {
    reverse: {
      type: Boolean,
      default: false
    }
  },

  provide: function provide() {
    return {
      timeline: this
    };
  },
  render: function render() {
    var h = arguments[0];

    var reverse = this.reverse;
    var classes = {
      'fks-timeline': true,
      'is-reverse': reverse
    };
    var slots = this.$slots.default || [];
    if (reverse) {
      slots = slots.reverse();
    }
    return h(
      'ul',
      { 'class': classes },
      [slots]
    );
  }
});
// CONCATENATED MODULE: ./packages/timeline/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_timeline_src_mainvue_type_script_lang_js_ = (timeline_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/timeline/src/main.vue
var main_render, main_staticRenderFns




/* normalize component */

var timeline_src_main_component = normalizeComponent(
  packages_timeline_src_mainvue_type_script_lang_js_,
  main_render,
  main_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var timeline_src_main = (timeline_src_main_component.exports);
// CONCATENATED MODULE: ./packages/timeline/index.js


/* istanbul ignore next */
timeline_src_main.install = function (Vue) {
  Vue.component(timeline_src_main.name, timeline_src_main);
};

/* harmony default export */ var timeline = (timeline_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/item.vue?vue&type=template&id=8e047490&
var itemvue_type_template_id_8e047490_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("li", { staticClass: "fks-timeline-item" }, [
    _c("div", { staticClass: "fks-timeline-item__tail" }),
    !_vm.$slots.dot
      ? _c(
          "div",
          {
            staticClass: "fks-timeline-item__node",
            class: [
              "fks-timeline-item__node--" + (_vm.size || ""),
              "fks-timeline-item__node--" + (_vm.type || ""),
            ],
            style: {
              backgroundColor: _vm.color,
            },
          },
          [
            _vm.icon
              ? _c("i", {
                  staticClass: "fks-timeline-item__icon",
                  class: _vm.icon,
                })
              : _vm._e(),
          ]
        )
      : _vm._e(),
    _vm.$slots.dot
      ? _c("div", { staticClass: "fks-timeline-item__dot" }, [_vm._t("dot")], 2)
      : _vm._e(),
    _c("div", { staticClass: "fks-timeline-item__wrapper" }, [
      !_vm.hideTimestamp && _vm.placement === "top"
        ? _c("div", { staticClass: "fks-timeline-item__timestamp is-top" }, [
            _vm._v(_vm._s(_vm.timestamp)),
          ])
        : _vm._e(),
      _c(
        "div",
        { staticClass: "fks-timeline-item__content" },
        [_vm._t("default")],
        2
      ),
      !_vm.hideTimestamp && _vm.placement === "bottom"
        ? _c("div", { staticClass: "fks-timeline-item__timestamp is-bottom" }, [
            _vm._v(_vm._s(_vm.timestamp)),
          ])
        : _vm._e(),
    ]),
  ])
}
var itemvue_type_template_id_8e047490_staticRenderFns = []
itemvue_type_template_id_8e047490_render._withStripped = true


// CONCATENATED MODULE: ./packages/timeline/src/item.vue?vue&type=template&id=8e047490&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/timeline/src/item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var timeline_src_itemvue_type_script_lang_js_ = ({
  name: 'FksTimelineItem',

  inject: ['timeline'],

  props: {
    timestamp: String,

    hideTimestamp: {
      type: Boolean,
      default: false
    },

    placement: {
      type: String,
      default: 'bottom'
    },

    type: String,

    color: String,

    size: {
      type: String,
      default: 'normal'
    },

    icon: String
  }
});
// CONCATENATED MODULE: ./packages/timeline/src/item.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_timeline_src_itemvue_type_script_lang_js_ = (timeline_src_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/timeline/src/item.vue





/* normalize component */

var timeline_src_item_component = normalizeComponent(
  packages_timeline_src_itemvue_type_script_lang_js_,
  itemvue_type_template_id_8e047490_render,
  itemvue_type_template_id_8e047490_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var timeline_src_item = (timeline_src_item_component.exports);
// CONCATENATED MODULE: ./packages/timeline-item/index.js


/* istanbul ignore next */
timeline_src_item.install = function (Vue) {
  Vue.component(timeline_src_item.name, timeline_src_item);
};

/* harmony default export */ var timeline_item = (timeline_src_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/link/src/main.vue?vue&type=template&id=fe0d64a2&
var mainvue_type_template_id_fe0d64a2_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "a",
    _vm._b(
      {
        class: [
          "fks-link",
          _vm.type ? "fks-link--" + _vm.type : "",
          _vm.disabled && "is-disabled",
          _vm.underline && !_vm.disabled && "is-underline",
        ],
        attrs: { href: _vm.disabled ? null : _vm.href },
        on: { click: _vm.handleClick },
      },
      "a",
      _vm.$attrs,
      false
    ),
    [
      _vm.icon ? _c("i", { class: _vm.icon }) : _vm._e(),
      _vm.$slots.default
        ? _c("span", { staticClass: "fks-link--inner" }, [_vm._t("default")], 2)
        : _vm._e(),
      _vm.$slots.icon
        ? [_vm.$slots.icon ? _vm._t("icon") : _vm._e()]
        : _vm._e(),
    ],
    2
  )
}
var mainvue_type_template_id_fe0d64a2_staticRenderFns = []
mainvue_type_template_id_fe0d64a2_render._withStripped = true


// CONCATENATED MODULE: ./packages/link/src/main.vue?vue&type=template&id=fe0d64a2&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/link/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var link_src_mainvue_type_script_lang_js_ = ({
  name: 'FksLink',

  props: {
    type: {
      type: String,
      default: 'default'
    },
    underline: {
      type: Boolean,
      default: true
    },
    disabled: Boolean,
    href: String,
    icon: String
  },

  methods: {
    handleClick: function handleClick(event) {
      if (!this.disabled) {
        if (!this.href) {
          this.$emit('click', event);
        }
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/link/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_link_src_mainvue_type_script_lang_js_ = (link_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/link/src/main.vue





/* normalize component */

var link_src_main_component = normalizeComponent(
  packages_link_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_fe0d64a2_render,
  mainvue_type_template_id_fe0d64a2_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var link_src_main = (link_src_main_component.exports);
// CONCATENATED MODULE: ./packages/link/index.js


/* istanbul ignore next */
link_src_main.install = function (Vue) {
  Vue.component(link_src_main.name, link_src_main);
};

/* harmony default export */ var packages_link = (link_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/divider/src/main.vue?vue&type=template&id=32aec2e3&functional=true&
var mainvue_type_template_id_32aec2e3_functional_true_render = function (_h, _vm) {
  var _c = _vm._c
  return _c(
    "div",
    _vm._g(
      _vm._b(
        {
          class: [
            _vm.data.staticClass,
            "fks-divider",
            "fks-divider--" + _vm.props.direction,
          ],
        },
        "div",
        _vm.data.attrs,
        false
      ),
      _vm.listeners
    ),
    [
      _vm.slots().default && _vm.props.direction !== "vertical"
        ? _c(
            "div",
            { class: ["fks-divider__text", "is-" + _vm.props.contentPosition] },
            [_vm._t("default")],
            2
          )
        : _vm._e(),
    ]
  )
}
var mainvue_type_template_id_32aec2e3_functional_true_staticRenderFns = []
mainvue_type_template_id_32aec2e3_functional_true_render._withStripped = true


// CONCATENATED MODULE: ./packages/divider/src/main.vue?vue&type=template&id=32aec2e3&functional=true&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/divider/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var divider_src_mainvue_type_script_lang_js_ = ({
  name: 'FksDivider',
  props: {
    direction: {
      type: String,
      default: 'horizontal',
      validator: function validator(val) {
        return ['horizontal', 'vertical'].indexOf(val) !== -1;
      }
    },
    contentPosition: {
      type: String,
      default: 'center',
      validator: function validator(val) {
        return ['left', 'center', 'right'].indexOf(val) !== -1;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/divider/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_divider_src_mainvue_type_script_lang_js_ = (divider_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/divider/src/main.vue





/* normalize component */

var divider_src_main_component = normalizeComponent(
  packages_divider_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_32aec2e3_functional_true_render,
  mainvue_type_template_id_32aec2e3_functional_true_staticRenderFns,
  true,
  null,
  null,
  null
  
)

/* harmony default export */ var divider_src_main = (divider_src_main_component.exports);
// CONCATENATED MODULE: ./packages/divider/index.js


/* istanbul ignore next */
divider_src_main.install = function (Vue) {
  Vue.component(divider_src_main.name, divider_src_main);
};

/* harmony default export */ var divider = (divider_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/main.vue?vue&type=template&id=6c256a68&
var mainvue_type_template_id_6c256a68_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-image" },
    [
      _vm.loading
        ? _vm._t("placeholder", function () {
            return [_c("div", { staticClass: "fks-image__placeholder" })]
          })
        : _vm.error
        ? _vm._t("error", function () {
            return [
              _c("div", { staticClass: "fks-image__error" }, [
                _vm._v(_vm._s(_vm.t("fks.image.error"))),
              ]),
            ]
          })
        : _c(
            "img",
            _vm._g(
              _vm._b(
                {
                  staticClass: "fks-image__inner",
                  class: {
                    "fks-image__inner--center": _vm.alignCenter,
                    "fks-image__preview": _vm.preview,
                  },
                  style: _vm.imageStyle,
                  attrs: { src: _vm.src },
                  on: { click: _vm.clickHandler },
                },
                "img",
                _vm.$attrs,
                false
              ),
              _vm.$listeners
            )
          ),
      _vm.preview
        ? [
            _vm.showViewer
              ? _c("image-viewer", {
                  attrs: {
                    "z-index": _vm.zIndex,
                    "initial-index": _vm.imageIndex,
                    "on-close": _vm.closeViewer,
                    "url-list": _vm.previewSrcList,
                  },
                })
              : _vm._e(),
          ]
        : _vm._e(),
    ],
    2
  )
}
var mainvue_type_template_id_6c256a68_staticRenderFns = []
mainvue_type_template_id_6c256a68_render._withStripped = true


// CONCATENATED MODULE: ./packages/image/src/main.vue?vue&type=template&id=6c256a68&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/image-viewer.vue?vue&type=template&id=723f4108&
var image_viewervue_type_template_id_723f4108_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "viewer-fade" } }, [
    _c(
      "div",
      {
        ref: "fks-image-viewer__wrapper",
        staticClass: "fks-image-viewer__wrapper",
        style: { "z-index": _vm.zIndex },
        attrs: { tabindex: "-1" },
      },
      [
        _c("div", { staticClass: "fks-image-viewer__mask" }),
        _c(
          "span",
          {
            staticClass: "fks-image-viewer__btn fks-image-viewer__close",
            on: { click: _vm.hide },
          },
          [_c("i", { staticClass: "fks-icon-circle-close" })]
        ),
        !_vm.isSingle
          ? [
              _c(
                "span",
                {
                  staticClass: "fks-image-viewer__btn fks-image-viewer__prev",
                  class: { "is-disabled": !_vm.infinite && _vm.isFirst },
                  on: { click: _vm.prev },
                },
                [_c("i", { staticClass: "fks-icon-arrow-left" })]
              ),
              _c(
                "span",
                {
                  staticClass: "fks-image-viewer__btn fks-image-viewer__next",
                  class: { "is-disabled": !_vm.infinite && _vm.isLast },
                  on: { click: _vm.next },
                },
                [_c("i", { staticClass: "fks-icon-arrow-right" })]
              ),
            ]
          : _vm._e(),
        _c(
          "div",
          { staticClass: "fks-image-viewer__btn fks-image-viewer__actions" },
          [
            _c("div", { staticClass: "fks-image-viewer__actions__inner" }, [
              _c("i", {
                staticClass: "fks-icon-zoom-out",
                on: {
                  click: function ($event) {
                    return _vm.handleActions("zoomOut")
                  },
                },
              }),
              _c("i", {
                staticClass: "fks-icon-zoom-in",
                on: {
                  click: function ($event) {
                    return _vm.handleActions("zoomIn")
                  },
                },
              }),
              _c("i", { staticClass: "fks-image-viewer__actions__divider" }),
              _c("i", { class: _vm.mode.icon, on: { click: _vm.toggleMode } }),
              _c("i", { staticClass: "fks-image-viewer__actions__divider" }),
              _c("i", {
                staticClass: "fks-icon-turn-left",
                on: {
                  click: function ($event) {
                    return _vm.handleActions("anticlocelise")
                  },
                },
              }),
              _c("i", {
                staticClass: "fks-icon-turn-right",
                on: {
                  click: function ($event) {
                    return _vm.handleActions("clocelise")
                  },
                },
              }),
            ]),
          ]
        ),
        _c(
          "div",
          { staticClass: "fks-image-viewer__canvas" },
          _vm._l(_vm.urlList, function (url, i) {
            return i === _vm.index
              ? _c("img", {
                  key: url,
                  ref: "img",
                  refInFor: true,
                  staticClass: "fks-image-viewer__img",
                  style: _vm.imgStyle,
                  attrs: { src: _vm.currentImg },
                  on: {
                    load: _vm.handleImgLoad,
                    error: _vm.handleImgError,
                    mousedown: _vm.handleMouseDown,
                  },
                })
              : _vm._e()
          }),
          0
        ),
      ],
      2
    ),
  ])
}
var image_viewervue_type_template_id_723f4108_staticRenderFns = []
image_viewervue_type_template_id_723f4108_render._withStripped = true


// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue?vue&type=template&id=723f4108&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/image-viewer.vue?vue&type=script&lang=js&
var image_viewervue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




var Mode = {
  CONTAIN: {
    name: 'contain',
    icon: 'fks-icon-full-screen'
  },
  ORIGINAL: {
    name: 'original',
    icon: 'fks-icon-c-scale-to-original'
  }
};

var mousewheelEventName = Object(util_["isFirefox"])() ? 'DOMMouseScroll' : 'mousewheel';

/* harmony default export */ var image_viewervue_type_script_lang_js_ = ({
  name: 'fksImageViewer',

  props: {
    urlList: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    zIndex: {
      type: Number,
      default: 2000
    },
    onSwitch: {
      type: Function,
      default: function _default() {}
    },
    onClose: {
      type: Function,
      default: function _default() {}
    },
    initialIndex: {
      type: Number,
      default: 0
    }
  },

  data: function data() {
    return {
      index: this.initialIndex,
      isShow: false,
      infinite: true,
      loading: false,
      mode: Mode.CONTAIN,
      transform: {
        scale: 1,
        deg: 0,
        offsetX: 0,
        offsetY: 0,
        enableTransition: false
      }
    };
  },

  computed: {
    isSingle: function isSingle() {
      return this.urlList.length <= 1;
    },
    isFirst: function isFirst() {
      return this.index === 0;
    },
    isLast: function isLast() {
      return this.index === this.urlList.length - 1;
    },
    currentImg: function currentImg() {
      return this.urlList[this.index];
    },
    imgStyle: function imgStyle() {
      var _transform = this.transform,
          scale = _transform.scale,
          deg = _transform.deg,
          offsetX = _transform.offsetX,
          offsetY = _transform.offsetY,
          enableTransition = _transform.enableTransition;

      var style = {
        transform: 'scale(' + scale + ') rotate(' + deg + 'deg)',
        transition: enableTransition ? 'transform .3s' : '',
        'margin-left': offsetX + 'px',
        'margin-top': offsetY + 'px'
      };
      if (this.mode === Mode.CONTAIN) {
        style.maxWidth = style.maxHeight = '100%';
      }
      return style;
    }
  },
  watch: {
    index: {
      handler: function handler(val) {
        this.reset();
        this.onSwitch(val);
      }
    },
    currentImg: function currentImg(val) {
      var _this = this;

      this.$nextTick(function (_) {
        var $img = _this.$refs.img[0];
        if (!$img.complete) {
          _this.loading = true;
        }
      });
    }
  },
  methods: {
    hide: function hide() {
      this.deviceSupportUninstall();
      this.onClose();
    },
    deviceSupportInstall: function deviceSupportInstall() {
      var _this2 = this;

      this._keyDownHandler = Object(util_["rafThrottle"])(function (e) {
        var keyCode = e.keyCode;
        switch (keyCode) {
          // ESC
          case 27:
            _this2.hide();
            break;
          // SPACE
          case 32:
            _this2.toggleMode();
            break;
          // LEFT_ARROW
          case 37:
            _this2.prev();
            break;
          // UP_ARROW
          case 38:
            _this2.handleActions('zoomIn');
            break;
          // RIGHT_ARROW
          case 39:
            _this2.next();
            break;
          // DOWN_ARROW
          case 40:
            _this2.handleActions('zoomOut');
            break;
        }
      });
      this._mouseWheelHandler = Object(util_["rafThrottle"])(function (e) {
        var delta = e.wheelDelta ? e.wheelDelta : -e.detail;
        if (delta > 0) {
          _this2.handleActions('zoomIn', {
            zoomRate: 0.015,
            enableTransition: false
          });
        } else {
          _this2.handleActions('zoomOut', {
            zoomRate: 0.015,
            enableTransition: false
          });
        }
      });
      Object(dom_["on"])(document, 'keydown', this._keyDownHandler);
      Object(dom_["on"])(document, mousewheelEventName, this._mouseWheelHandler);
    },
    deviceSupportUninstall: function deviceSupportUninstall() {
      Object(dom_["off"])(document, 'keydown', this._keyDownHandler);
      Object(dom_["off"])(document, mousewheelEventName, this._mouseWheelHandler);
      this._keyDownHandler = null;
      this._mouseWheelHandler = null;
    },
    handleImgLoad: function handleImgLoad(e) {
      this.loading = false;
    },
    handleImgError: function handleImgError(e) {
      this.loading = false;
      e.target.alt = '加载失败';
    },
    handleMouseDown: function handleMouseDown(e) {
      var _this3 = this;

      if (this.loading || e.button !== 0) return;

      var _transform2 = this.transform,
          offsetX = _transform2.offsetX,
          offsetY = _transform2.offsetY;

      var startX = e.pageX;
      var startY = e.pageY;
      this._dragHandler = Object(util_["rafThrottle"])(function (ev) {
        _this3.transform.offsetX = offsetX + ev.pageX - startX;
        _this3.transform.offsetY = offsetY + ev.pageY - startY;
      });
      Object(dom_["on"])(document, 'mousemove', this._dragHandler);
      Object(dom_["on"])(document, 'mouseup', function (ev) {
        Object(dom_["off"])(document, 'mousemove', _this3._dragHandler);
      });

      e.preventDefault();
    },
    reset: function reset() {
      this.transform = {
        scale: 1,
        deg: 0,
        offsetX: 0,
        offsetY: 0,
        enableTransition: false
      };
    },
    toggleMode: function toggleMode() {
      if (this.loading) return;

      var modeNames = Object.keys(Mode);
      var modeValues = Object.values(Mode);
      var index = modeValues.indexOf(this.mode);
      var nextIndex = (index + 1) % modeNames.length;
      this.mode = Mode[modeNames[nextIndex]];
      this.reset();
    },
    prev: function prev() {
      if (this.isFirst && !this.infinite) return;
      var len = this.urlList.length;
      this.index = (this.index - 1 + len) % len;
    },
    next: function next() {
      if (this.isLast && !this.infinite) return;
      var len = this.urlList.length;
      this.index = (this.index + 1) % len;
    },
    handleActions: function handleActions(action) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (this.loading) return;

      var _zoomRate$rotateDeg$e = image_viewervue_type_script_lang_js_extends({
        zoomRate: 0.2,
        rotateDeg: 90,
        enableTransition: true
      }, options),
          zoomRate = _zoomRate$rotateDeg$e.zoomRate,
          rotateDeg = _zoomRate$rotateDeg$e.rotateDeg,
          enableTransition = _zoomRate$rotateDeg$e.enableTransition;

      var transform = this.transform;

      switch (action) {
        case 'zoomOut':
          if (transform.scale > 0.2) {
            transform.scale = parseFloat((transform.scale - zoomRate).toFixed(3));
          }
          break;
        case 'zoomIn':
          transform.scale = parseFloat((transform.scale + zoomRate).toFixed(3));
          break;
        case 'clocelise':
          transform.deg += rotateDeg;
          break;
        case 'anticlocelise':
          transform.deg -= rotateDeg;
          break;
      }
      transform.enableTransition = enableTransition;
    }
  },
  mounted: function mounted() {
    this.deviceSupportInstall();
    // add tabindex then wrapper can be focusable via Javascript
    // focus wrapper so arrow key can't cause inner scroll behavior underneath
    this.$refs['fks-image-viewer__wrapper'].focus();
  }
});
// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_image_viewervue_type_script_lang_js_ = (image_viewervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/image/src/image-viewer.vue





/* normalize component */

var image_viewer_component = normalizeComponent(
  src_image_viewervue_type_script_lang_js_,
  image_viewervue_type_template_id_723f4108_render,
  image_viewervue_type_template_id_723f4108_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var image_viewer = (image_viewer_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/image/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//







var isSupportObjectFit = function isSupportObjectFit() {
  return document.documentElement.style.objectFit !== undefined;
};

var ObjectFit = {
  NONE: 'none',
  CONTAIN: 'contain',
  COVER: 'cover',
  FILL: 'fill',
  SCALE_DOWN: 'scale-down'
};

var prevOverflow = '';

/* harmony default export */ var image_src_mainvue_type_script_lang_js_ = ({
  name: 'FksImage',

  mixins: [locale_default.a],
  inheritAttrs: false,

  components: {
    ImageViewer: image_viewer
  },

  props: {
    src: String,
    fit: String,
    lazy: Boolean,
    scrollContainer: {},
    previewSrcList: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    zIndex: {
      type: Number,
      default: 2000
    }
  },

  data: function data() {
    return {
      loading: true,
      error: false,
      show: !this.lazy,
      imageWidth: 0,
      imageHeight: 0,
      showViewer: false
    };
  },


  computed: {
    imageStyle: function imageStyle() {
      var fit = this.fit;

      if (!this.$isServer && fit) {
        return isSupportObjectFit() ? { 'object-fit': fit } : this.getImageStyle(fit);
      }
      return {};
    },
    alignCenter: function alignCenter() {
      return !this.$isServer && !isSupportObjectFit() && this.fit !== ObjectFit.FILL;
    },
    preview: function preview() {
      var previewSrcList = this.previewSrcList;

      return Array.isArray(previewSrcList) && previewSrcList.length > 0;
    },
    imageIndex: function imageIndex() {
      var previewIndex = 0;
      var srcIndex = this.previewSrcList.indexOf(this.src);
      if (srcIndex >= 0) {
        previewIndex = srcIndex;
      }
      return previewIndex;
    }
  },

  watch: {
    src: function src(val) {
      this.show && this.loadImage();
    },
    show: function show(val) {
      val && this.loadImage();
    }
  },

  mounted: function mounted() {
    if (this.lazy) {
      this.addLazyLoadListener();
    } else {
      this.loadImage();
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.lazy && this.removeLazyLoadListener();
  },


  methods: {
    loadImage: function loadImage() {
      var _this = this;

      if (this.$isServer) return;

      // reset status
      this.loading = true;
      this.error = false;

      var img = new Image();
      img.onload = function (e) {
        return _this.handleLoad(e, img);
      };
      img.onerror = this.handleError.bind(this);

      // bind html attrs
      // so it can behave consistently
      Object.keys(this.$attrs).forEach(function (key) {
        var value = _this.$attrs[key];
        img.setAttribute(key, value);
      });
      img.src = this.src;
    },
    handleLoad: function handleLoad(e, img) {
      this.imageWidth = img.width;
      this.imageHeight = img.height;
      this.loading = false;
    },
    handleError: function handleError(e) {
      this.loading = false;
      this.error = true;
      this.$emit('error', e);
    },
    handleLazyLoad: function handleLazyLoad() {
      if (Object(dom_["isInContainer"])(this.$el, this._scrollContainer)) {
        this.show = true;
        this.removeLazyLoadListener();
      }
    },
    addLazyLoadListener: function addLazyLoadListener() {
      if (this.$isServer) return;

      var scrollContainer = this.scrollContainer;

      var _scrollContainer = null;

      if (Object(types_["isHtmlElement"])(scrollContainer)) {
        _scrollContainer = scrollContainer;
      } else if (Object(types_["isString"])(scrollContainer)) {
        _scrollContainer = document.querySelector(scrollContainer);
      } else {
        _scrollContainer = Object(dom_["getScrollContainer"])(this.$el);
      }

      if (_scrollContainer) {
        this._scrollContainer = _scrollContainer;
        this._lazyLoadHandler = throttle_default()(200, this.handleLazyLoad);
        Object(dom_["on"])(_scrollContainer, 'scroll', this._lazyLoadHandler);
        this.handleLazyLoad();
      }
    },
    removeLazyLoadListener: function removeLazyLoadListener() {
      var _scrollContainer = this._scrollContainer,
          _lazyLoadHandler = this._lazyLoadHandler;


      if (this.$isServer || !_scrollContainer || !_lazyLoadHandler) return;

      Object(dom_["off"])(_scrollContainer, 'scroll', _lazyLoadHandler);
      this._scrollContainer = null;
      this._lazyLoadHandler = null;
    },

    /**
     * simulate object-fit behavior to compatible with IE11 and other browsers which not support object-fit
     */
    getImageStyle: function getImageStyle(fit) {
      var imageWidth = this.imageWidth,
          imageHeight = this.imageHeight;
      var _$el = this.$el,
          containerWidth = _$el.clientWidth,
          containerHeight = _$el.clientHeight;


      if (!imageWidth || !imageHeight || !containerWidth || !containerHeight) return {};

      var vertical = imageWidth / imageHeight < 1;

      if (fit === ObjectFit.SCALE_DOWN) {
        var isSmaller = imageWidth < containerWidth && imageHeight < containerHeight;
        fit = isSmaller ? ObjectFit.NONE : ObjectFit.CONTAIN;
      }

      switch (fit) {
        case ObjectFit.NONE:
          return { width: 'auto', height: 'auto' };
        case ObjectFit.CONTAIN:
          return vertical ? { width: 'auto' } : { height: 'auto' };
        case ObjectFit.COVER:
          return vertical ? { height: 'auto' } : { width: 'auto' };
        default:
          return {};
      }
    },
    clickHandler: function clickHandler() {
      // don't show viewer when preview is false
      if (!this.preview) {
        return;
      }
      // prevent body scroll
      prevOverflow = document.body.style.overflow;
      document.body.style.overflow = 'hidden';
      this.showViewer = true;
    },
    closeViewer: function closeViewer() {
      document.body.style.overflow = prevOverflow;
      this.showViewer = false;
    }
  }
});
// CONCATENATED MODULE: ./packages/image/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_image_src_mainvue_type_script_lang_js_ = (image_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/image/src/main.vue





/* normalize component */

var image_src_main_component = normalizeComponent(
  packages_image_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_6c256a68_render,
  mainvue_type_template_id_6c256a68_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var image_src_main = (image_src_main_component.exports);
// CONCATENATED MODULE: ./packages/image/index.js


/* istanbul ignore next */
image_src_main.install = function (Vue) {
  Vue.component(image_src_main.name, image_src_main);
};

/* harmony default export */ var packages_image = (image_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=template&id=b1a129fc&
var mainvue_type_template_id_b1a129fc_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-calendar" }, [
    _c("div", { staticClass: "fks-calendar__header" }, [
      _c("div", { staticClass: "fks-calendar__title" }, [
        _vm._v(_vm._s(_vm.i18nDate)),
      ]),
      _vm.validatedRange.length === 0
        ? _c(
            "div",
            { staticClass: "fks-calendar__button-group" },
            [
              _c(
                "fks-button-group",
                [
                  _c(
                    "fks-button",
                    {
                      attrs: { type: "plain", size: "mini" },
                      on: {
                        click: function ($event) {
                          return _vm.selectDate("prev-month")
                        },
                      },
                    },
                    [_vm._v(_vm._s(_vm.t("fks.datepicker.prevMonth")))]
                  ),
                  _c(
                    "fks-button",
                    {
                      attrs: { type: "plain", size: "mini" },
                      on: {
                        click: function ($event) {
                          return _vm.selectDate("today")
                        },
                      },
                    },
                    [_vm._v(_vm._s(_vm.t("fks.datepicker.today")))]
                  ),
                  _c(
                    "fks-button",
                    {
                      attrs: { type: "plain", size: "mini" },
                      on: {
                        click: function ($event) {
                          return _vm.selectDate("next-month")
                        },
                      },
                    },
                    [_vm._v(_vm._s(_vm.t("fks.datepicker.nextMonth")))]
                  ),
                ],
                1
              ),
            ],
            1
          )
        : _vm._e(),
    ]),
    _vm.validatedRange.length === 0
      ? _c(
          "div",
          { key: "no-range", staticClass: "fks-calendar__body" },
          [
            _c("date-table", {
              attrs: {
                date: _vm.date,
                "selected-day": _vm.realSelectedDay,
                "first-day-of-week": _vm.realFirstDayOfWeek,
              },
              on: { pick: _vm.pickDay },
            }),
          ],
          1
        )
      : _c(
          "div",
          { key: "has-range", staticClass: "fks-calendar__body" },
          _vm._l(_vm.validatedRange, function (range, index) {
            return _c("date-table", {
              key: index,
              attrs: {
                date: range[0],
                "selected-day": _vm.realSelectedDay,
                range: range,
                "hide-header": index !== 0,
                "first-day-of-week": _vm.realFirstDayOfWeek,
              },
              on: { pick: _vm.pickDay },
            })
          }),
          1
        ),
  ])
}
var mainvue_type_template_id_b1a129fc_staticRenderFns = []
mainvue_type_template_id_b1a129fc_render._withStripped = true


// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=template&id=b1a129fc&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/date"
var date_ = __webpack_require__(23);
var date_default = /*#__PURE__*/__webpack_require__.n(date_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/date-table.vue?vue&type=script&lang=js&




/* harmony default export */ var src_date_tablevue_type_script_lang_js_ = ({
  props: {
    selectedDay: String, // formated date yyyy-MM-dd
    range: {
      type: Array,
      validator: function validator(val) {
        if (!(val && val.length)) return true;
        var start = val[0],
            end = val[1];

        return Object(date_util_["validateRangeInOneMonth"])(start, end);
      }
    },
    date: Date,
    hideHeader: Boolean,
    firstDayOfWeek: Number
  },

  inject: ['fksCalendar'],

  data: function data() {
    return {
      WEEK_DAYS: Object(date_util_["getI18nSettings"])().dayNames
    };
  },


  methods: {
    toNestedArr: function toNestedArr(days) {
      return Object(date_util_["range"])(days.length / 7).map(function (_, index) {
        var start = index * 7;
        return days.slice(start, start + 7);
      });
    },
    getFormateDate: function getFormateDate(day, type) {
      if (!day || ['prev', 'current', 'next'].indexOf(type) === -1) {
        throw new Error('invalid day or type');
      }
      var prefix = this.curMonthDatePrefix;
      if (type === 'prev') {
        prefix = this.prevMonthDatePrefix;
      } else if (type === 'next') {
        prefix = this.nextMonthDatePrefix;
      }
      day = ('00' + day).slice(-2);
      return prefix + '-' + day;
    },
    getCellClass: function getCellClass(_ref) {
      var text = _ref.text,
          type = _ref.type;

      var classes = [type];
      if (type === 'current') {
        var date = this.getFormateDate(text, type);
        if (date === this.selectedDay) {
          classes.push('is-selected');
        }
        if (date === this.formatedToday) {
          classes.push('is-today');
        }
      }
      return classes;
    },
    pickDay: function pickDay(_ref2) {
      var text = _ref2.text,
          type = _ref2.type;

      var date = this.getFormateDate(text, type);
      this.$emit('pick', date);
    },
    cellRenderProxy: function cellRenderProxy(_ref3) {
      var text = _ref3.text,
          type = _ref3.type;
      var h = this.$createElement;

      var render = this.fksCalendar.$scopedSlots.dateCell;
      if (!render) return h('span', [text]);

      var day = this.getFormateDate(text, type);
      var date = new Date(day);
      var data = {
        isSelected: this.selectedDay === day,
        type: type + '-month',
        day: day
      };
      return render({ date: date, data: data });
    }
  },

  computed: {
    prevMonthDatePrefix: function prevMonthDatePrefix() {
      var temp = new Date(this.date.getTime());
      temp.setDate(0);
      return date_default.a.format(temp, 'yyyy-MM');
    },
    curMonthDatePrefix: function curMonthDatePrefix() {
      return date_default.a.format(this.date, 'yyyy-MM');
    },
    nextMonthDatePrefix: function nextMonthDatePrefix() {
      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);
      return date_default.a.format(temp, 'yyyy-MM');
    },
    formatedToday: function formatedToday() {
      return this.fksCalendar.formatedToday;
    },
    isInRange: function isInRange() {
      return this.range && this.range.length;
    },
    rows: function rows() {
      var days = [];
      // if range exists, should render days in range.
      if (this.isInRange) {
        var _range = this.range,
            start = _range[0],
            end = _range[1];

        var currentMonthRange = Object(date_util_["range"])(end.getDate() - start.getDate() + 1).map(function (_, index) {
          return {
            text: start.getDate() + index,
            type: 'current'
          };
        });
        var remaining = currentMonthRange.length % 7;
        remaining = remaining === 0 ? 0 : 7 - remaining;
        var nextMonthRange = Object(date_util_["range"])(remaining).map(function (_, index) {
          return {
            text: index + 1,
            type: 'next'
          };
        });
        days = currentMonthRange.concat(nextMonthRange);
      } else {
        var date = this.date;
        var firstDay = Object(date_util_["getFirstDayOfMonth"])(date);
        firstDay = firstDay === 0 ? 7 : firstDay;
        var firstDayOfWeek = typeof this.firstDayOfWeek === 'number' ? this.firstDayOfWeek : 1;
        var prevMonthDays = Object(date_util_["getPrevMonthLastDays"])(date, firstDay - firstDayOfWeek).map(function (day) {
          return {
            text: day,
            type: 'prev'
          };
        });
        var currentMonthDays = Object(date_util_["getMonthDays"])(date).map(function (day) {
          return {
            text: day,
            type: 'current'
          };
        });
        days = [].concat(prevMonthDays, currentMonthDays);
        var nextMonthDays = Object(date_util_["range"])(42 - days.length).map(function (_, index) {
          return {
            text: index + 1,
            type: 'next'
          };
        });
        days = days.concat(nextMonthDays);
      }
      return this.toNestedArr(days);
    },
    weekDays: function weekDays() {
      var start = this.firstDayOfWeek;
      var WEEK_DAYS = this.WEEK_DAYS;


      if (typeof start !== 'number' || start === 0) {
        return WEEK_DAYS.slice();
      } else {
        return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start));
      }
    }
  },

  render: function render() {
    var _this = this;

    var h = arguments[0];

    var thead = this.hideHeader ? null : h('thead', [this.weekDays.map(function (day) {
      return h(
        'th',
        { key: day },
        [day]
      );
    })]);
    return h(
      'table',
      {
        'class': {
          'fks-calendar-table': true,
          'is-range': this.isInRange
        },
        attrs: { cellspacing: '0',
          cellpadding: '0'
        }
      },
      [thead, h('tbody', [this.rows.map(function (row, index) {
        return h(
          'tr',
          {
            'class': {
              'fks-calendar-table__row': true,
              'fks-calendar-table__row--hide-border': index === 0 && _this.hideHeader
            },
            key: index
          },
          [row.map(function (cell, key) {
            return h(
              'td',
              {
                key: key,
                'class': _this.getCellClass(cell),
                on: {
                  'click': _this.pickDay.bind(_this, cell)
                }
              },
              [h(
                'div',
                { 'class': 'fks-calendar-day' },
                [_this.cellRenderProxy(cell)]
              )]
            );
          })]
        );
      })])]
    );
  }
});
// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue?vue&type=script&lang=js&
 /* harmony default export */ var calendar_src_date_tablevue_type_script_lang_js_ = (src_date_tablevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue
var date_table_render, date_table_staticRenderFns




/* normalize component */

var src_date_table_component = normalizeComponent(
  calendar_src_date_tablevue_type_script_lang_js_,
  date_table_render,
  date_table_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_date_table = (src_date_table_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








var validTypes = ['prev-month', 'today', 'next-month'];
var weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
var oneDay = 86400000;

/* harmony default export */ var calendar_src_mainvue_type_script_lang_js_ = ({
  name: 'FksCalendar',

  mixins: [locale_default.a],

  components: {
    DateTable: src_date_table,
    FksButton: button_default.a,
    FksButtonGroup: button_group_default.a
  },

  props: {
    value: [Date, String, Number],
    range: {
      type: Array,
      validator: function validator(range) {
        if (Array.isArray(range)) {
          return range.length === 2 && range.every(function (item) {
            return typeof item === 'string' || typeof item === 'number' || item instanceof Date;
          });
        } else {
          return true;
        }
      }
    },
    firstDayOfWeek: {
      type: Number,
      default: 1
    }
  },

  provide: function provide() {
    return {
      fksCalendar: this
    };
  },


  methods: {
    pickDay: function pickDay(day) {
      this.realSelectedDay = day;
    },
    selectDate: function selectDate(type) {
      if (validTypes.indexOf(type) === -1) {
        throw new Error('invalid type ' + type);
      }
      var day = '';
      if (type === 'prev-month') {
        day = this.prevMonthDatePrefix + '-01';
      } else if (type === 'next-month') {
        day = this.nextMonthDatePrefix + '-01';
      } else {
        day = this.formatedToday;
      }

      if (day === this.formatedDate) return;
      this.pickDay(day);
    },
    toDate: function toDate(val) {
      if (!val) {
        throw new Error('invalid val');
      }
      return val instanceof Date ? val : new Date(val);
    },
    rangeValidator: function rangeValidator(date, isStart) {
      var firstDayOfWeek = this.realFirstDayOfWeek;
      var expected = isStart ? firstDayOfWeek : firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;
      var message = (isStart ? 'start' : 'end') + ' of range should be ' + weekDays[expected] + '.';
      if (date.getDay() !== expected) {
        console.warn('[FawkesCalendar]', message, 'Invalid range will be ignored.');
        return false;
      }
      return true;
    }
  },

  computed: {
    prevMonthDatePrefix: function prevMonthDatePrefix() {
      var temp = new Date(this.date.getTime());
      temp.setDate(0);
      return date_default.a.format(temp, 'yyyy-MM');
    },
    curMonthDatePrefix: function curMonthDatePrefix() {
      return date_default.a.format(this.date, 'yyyy-MM');
    },
    nextMonthDatePrefix: function nextMonthDatePrefix() {
      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);
      return date_default.a.format(temp, 'yyyy-MM');
    },
    formatedDate: function formatedDate() {
      return date_default.a.format(this.date, 'yyyy-MM-dd');
    },
    i18nDate: function i18nDate() {
      var year = this.date.getFullYear();
      var month = this.date.getMonth() + 1;
      return year + ' ' + this.t('fks.datepicker.year') + ' ' + this.t('fks.datepicker.month' + month);
    },
    formatedToday: function formatedToday() {
      return date_default.a.format(this.now, 'yyyy-MM-dd');
    },


    realSelectedDay: {
      get: function get() {
        if (!this.value) return this.selectedDay;
        return this.formatedDate;
      },
      set: function set(val) {
        this.selectedDay = val;
        var date = new Date(val);
        this.$emit('input', date);
      }
    },

    date: function date() {
      if (!this.value) {
        if (this.realSelectedDay) {
          var d = this.selectedDay.split('-');
          return new Date(d[0], d[1] - 1, d[2]);
        } else if (this.validatedRange.length) {
          return this.validatedRange[0][0];
        }
        return this.now;
      } else {
        return this.toDate(this.value);
      }
    },


    // if range is valid, we get a two-digit array
    validatedRange: function validatedRange() {
      var _this = this;

      var range = this.range;
      if (!range) return [];
      range = range.reduce(function (prev, val, index) {
        var date = _this.toDate(val);
        if (_this.rangeValidator(date, index === 0)) {
          prev = prev.concat(date);
        }
        return prev;
      }, []);
      if (range.length === 2) {
        var _range = range,
            start = _range[0],
            end = _range[1];

        if (start > end) {
          console.warn('[FawkesCalendar]end time should be greater than start time');
          return [];
        }
        // start time and end time in one month
        if (Object(date_util_["validateRangeInOneMonth"])(start, end)) {
          return [[start, end]];
        }
        var data = [];
        var startDay = new Date(start.getFullYear(), start.getMonth() + 1, 1);
        var lastDay = this.toDate(startDay.getTime() - oneDay);
        if (!Object(date_util_["validateRangeInOneMonth"])(startDay, end)) {
          console.warn('[FawkesCalendar]start time and end time interval must not exceed two months');
          return [];
        }
        // 第一个月的时间范围
        data.push([start, lastDay]);
        // 下一月的时间范围，需要计算一下该月的第一个周起始日
        var firstDayOfWeek = this.realFirstDayOfWeek;
        var nextMontFirstDay = startDay.getDay();
        var interval = 0;
        if (nextMontFirstDay !== firstDayOfWeek) {
          if (firstDayOfWeek === 0) {
            interval = 7 - nextMontFirstDay;
          } else {
            interval = firstDayOfWeek - nextMontFirstDay;
            interval = interval > 0 ? interval : 7 + interval;
          }
        }
        startDay = this.toDate(startDay.getTime() + interval * oneDay);
        if (startDay.getDate() < end.getDate()) {
          data.push([startDay, end]);
        }
        return data;
      }
      return [];
    },
    realFirstDayOfWeek: function realFirstDayOfWeek() {
      if (this.firstDayOfWeek < 1 || this.firstDayOfWeek > 6) {
        return 0;
      }
      return Math.floor(this.firstDayOfWeek);
    }
  },

  data: function data() {
    return {
      selectedDay: '',
      now: new Date()
    };
  }
});
// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_calendar_src_mainvue_type_script_lang_js_ = (calendar_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/calendar/src/main.vue





/* normalize component */

var calendar_src_main_component = normalizeComponent(
  packages_calendar_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_b1a129fc_render,
  mainvue_type_template_id_b1a129fc_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var calendar_src_main = (calendar_src_main_component.exports);
// CONCATENATED MODULE: ./packages/calendar/index.js


/* istanbul ignore next */
calendar_src_main.install = function (Vue) {
  Vue.component(calendar_src_main.name, calendar_src_main);
};

/* harmony default export */ var calendar = (calendar_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/backtop/src/main.vue?vue&type=template&id=bf5450e8&
var mainvue_type_template_id_bf5450e8_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "fks-fade-in" } }, [
    _vm.visible
      ? _c(
          "div",
          {
            staticClass: "fks-backtop",
            style: {
              right: _vm.styleRight,
              bottom: _vm.styleBottom,
            },
            on: {
              click: function ($event) {
                $event.stopPropagation()
                return _vm.handleClick.apply(null, arguments)
              },
            },
          },
          [
            _vm._t("default", function () {
              return [_c("i", { staticClass: "fks-icon-caret-top" })]
            }),
          ],
          2
        )
      : _vm._e(),
  ])
}
var mainvue_type_template_id_bf5450e8_staticRenderFns = []
mainvue_type_template_id_bf5450e8_render._withStripped = true


// CONCATENATED MODULE: ./packages/backtop/src/main.vue?vue&type=template&id=bf5450e8&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/backtop/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



var cubic = function cubic(value) {
  return Math.pow(value, 3);
};
var easeInOutCubic = function easeInOutCubic(value) {
  return value < 0.5 ? cubic(value * 2) / 2 : 1 - cubic((1 - value) * 2) / 2;
};

/* harmony default export */ var backtop_src_mainvue_type_script_lang_js_ = ({
  name: 'FksBacktop',

  props: {
    visibilityHeight: {
      type: Number,
      default: 200
    },
    target: [String],
    right: {
      type: Number,
      default: 40
    },
    bottom: {
      type: Number,
      default: 40
    }
  },

  data: function data() {
    return {
      el: null,
      container: null,
      visible: false
    };
  },


  computed: {
    styleBottom: function styleBottom() {
      return this.bottom + 'px';
    },
    styleRight: function styleRight() {
      return this.right + 'px';
    }
  },

  mounted: function mounted() {
    this.init();
    this.throttledScrollHandler = throttle_default()(300, this.onScroll);
    this.container.addEventListener('scroll', this.throttledScrollHandler);
  },


  methods: {
    init: function init() {
      this.container = document;
      this.el = document.documentElement;
      if (this.target) {
        this.el = document.querySelector(this.target);
        if (!this.el) {
          throw new Error('target is not existed: ' + this.target);
        }
        this.container = this.el;
      }
    },
    onScroll: function onScroll() {
      var scrollTop = this.el.scrollTop;
      this.visible = scrollTop >= this.visibilityHeight;
    },
    handleClick: function handleClick(e) {
      this.scrollToTop();
      this.$emit('click', e);
    },
    scrollToTop: function scrollToTop() {
      var el = this.el;
      var beginTime = Date.now();
      var beginValue = el.scrollTop;
      var rAF = window.requestAnimationFrame || function (func) {
        return setTimeout(func, 16);
      };
      var frameFunc = function frameFunc() {
        var progress = (Date.now() - beginTime) / 500;
        if (progress < 1) {
          el.scrollTop = beginValue * (1 - easeInOutCubic(progress));
          rAF(frameFunc);
        } else {
          el.scrollTop = 0;
        }
      };
      rAF(frameFunc);
    }
  },

  beforeDestroy: function beforeDestroy() {
    this.container.removeEventListener('scroll', this.throttledScrollHandler);
  }
});
// CONCATENATED MODULE: ./packages/backtop/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_backtop_src_mainvue_type_script_lang_js_ = (backtop_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/backtop/src/main.vue





/* normalize component */

var backtop_src_main_component = normalizeComponent(
  packages_backtop_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_bf5450e8_render,
  mainvue_type_template_id_bf5450e8_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var backtop_src_main = (backtop_src_main_component.exports);
// CONCATENATED MODULE: ./packages/backtop/index.js


/* istanbul ignore next */
backtop_src_main.install = function (Vue) {
  Vue.component(backtop_src_main.name, backtop_src_main);
};

/* harmony default export */ var backtop = (backtop_src_main);
// CONCATENATED MODULE: ./packages/infinite-scroll/src/main.js




var getStyleComputedProperty = function getStyleComputedProperty(element, property) {
  if (element === window) {
    element = document.documentElement;
  }

  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
};

var entries = function entries(obj) {
  return Object.keys(obj || {}).map(function (key) {
    return [key, obj[key]];
  });
};

var getPositionSize = function getPositionSize(el, prop) {
  return el === window || el === document ? document.documentElement[prop] : el[prop];
};

var getOffsetHeight = function getOffsetHeight(el) {
  return getPositionSize(el, 'offsetHeight');
};

var getClientHeight = function getClientHeight(el) {
  return getPositionSize(el, 'clientHeight');
};

var scope = 'FksInfiniteScroll';
var attributes = {
  delay: {
    type: Number,
    default: 200
  },
  distance: {
    type: Number,
    default: 0
  },
  disabled: {
    type: Boolean,
    default: false
  },
  immediate: {
    type: Boolean,
    default: true
  }
};

var main_getScrollOptions = function getScrollOptions(el, vm) {
  if (!Object(types_["isHtmlElement"])(el)) return {};

  return entries(attributes).reduce(function (map, _ref) {
    var key = _ref[0],
        option = _ref[1];
    var type = option.type,
        defaultValue = option.default;

    var value = el.getAttribute('infinite-scroll-' + key);
    value = Object(types_["isUndefined"])(vm[value]) ? value : vm[value];
    switch (type) {
      case Number:
        value = Number(value);
        value = Number.isNaN(value) ? defaultValue : value;
        break;
      case Boolean:
        value = Object(types_["isDefined"])(value) ? value === 'false' ? false : Boolean(value) : defaultValue;
        break;
      default:
        value = type(value);
    }
    map[key] = value;
    return map;
  }, {});
};

var getElementTop = function getElementTop(el) {
  return el.getBoundingClientRect().top;
};

var main_handleScroll = function handleScroll(cb) {
  var _scope = this[scope],
      el = _scope.el,
      vm = _scope.vm,
      container = _scope.container,
      observer = _scope.observer;

  var _getScrollOptions = main_getScrollOptions(el, vm),
      distance = _getScrollOptions.distance,
      disabled = _getScrollOptions.disabled;

  if (disabled) return;

  var containerInfo = container.getBoundingClientRect();
  if (!containerInfo.width && !containerInfo.height) return;

  var shouldTrigger = false;

  if (container === el) {
    // be aware of difference between clientHeight & offsetHeight & window.getComputedStyle().height
    var scrollBottom = container.scrollTop + getClientHeight(container);
    shouldTrigger = container.scrollHeight - scrollBottom <= distance;
  } else {
    var heightBelowTop = getOffsetHeight(el) + getElementTop(el) - getElementTop(container);
    var offsetHeight = getOffsetHeight(container);
    var borderBottom = Number.parseFloat(getStyleComputedProperty(container, 'borderBottomWidth'));
    shouldTrigger = heightBelowTop - offsetHeight + borderBottom <= distance;
  }

  if (shouldTrigger && Object(types_["isFunction"])(cb)) {
    cb.call(vm);
  } else if (observer) {
    observer.disconnect();
    this[scope].observer = null;
  }
};

/* harmony default export */ var infinite_scroll_src_main = ({
  name: 'InfiniteScroll',
  inserted: function inserted(el, binding, vnode) {
    var cb = binding.value;

    var vm = vnode.context;
    // only include vertical scroll
    var container = Object(dom_["getScrollContainer"])(el, true);

    var _getScrollOptions2 = main_getScrollOptions(el, vm),
        delay = _getScrollOptions2.delay,
        immediate = _getScrollOptions2.immediate;

    var onScroll = debounce_default()(delay, main_handleScroll.bind(el, cb));

    el[scope] = { el: el, vm: vm, container: container, onScroll: onScroll };

    if (container) {
      container.addEventListener('scroll', onScroll);

      if (immediate) {
        var observer = el[scope].observer = new MutationObserver(onScroll);
        observer.observe(container, { childList: true, subtree: true });
        onScroll();
      }
    }
  },
  unbind: function unbind(el) {
    var _el$scope = el[scope],
        container = _el$scope.container,
        onScroll = _el$scope.onScroll;

    if (container) {
      container.removeEventListener('scroll', onScroll);
    }
  }
});
// CONCATENATED MODULE: ./packages/infinite-scroll/index.js


/* istanbul ignore next */
infinite_scroll_src_main.install = function (Vue) {
  Vue.directive(infinite_scroll_src_main.name, infinite_scroll_src_main);
};

/* harmony default export */ var infinite_scroll = (infinite_scroll_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/page-header/src/main.vue?vue&type=template&id=27d4d42c&
var mainvue_type_template_id_27d4d42c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-page-header" }, [
    _c(
      "div",
      {
        staticClass: "fks-page-header__left",
        on: {
          click: function ($event) {
            return _vm.$emit("back")
          },
        },
      },
      [
        _c("i", { staticClass: "fks-icon-left" }),
        _c(
          "div",
          { staticClass: "fks-page-header__title" },
          [
            _vm._t("title", function () {
              return [_vm._v(_vm._s(_vm.title))]
            }),
          ],
          2
        ),
      ]
    ),
    _c(
      "div",
      { staticClass: "fks-page-header__content" },
      [
        _vm._t("content", function () {
          return [_vm._v(_vm._s(_vm.content))]
        }),
      ],
      2
    ),
  ])
}
var mainvue_type_template_id_27d4d42c_staticRenderFns = []
mainvue_type_template_id_27d4d42c_render._withStripped = true


// CONCATENATED MODULE: ./packages/page-header/src/main.vue?vue&type=template&id=27d4d42c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/page-header/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var page_header_src_mainvue_type_script_lang_js_ = ({
  name: 'FksPageHeader',

  props: {
    title: {
      type: String,
      default: function _default() {
        return Object(lib_locale_["t"])('fks.pageHeader.title');
      }
    },
    content: String
  }
});
// CONCATENATED MODULE: ./packages/page-header/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_page_header_src_mainvue_type_script_lang_js_ = (page_header_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/page-header/src/main.vue





/* normalize component */

var page_header_src_main_component = normalizeComponent(
  packages_page_header_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_27d4d42c_render,
  mainvue_type_template_id_27d4d42c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var page_header_src_main = (page_header_src_main_component.exports);
// CONCATENATED MODULE: ./packages/page-header/index.js


/* istanbul ignore next */
page_header_src_main.install = function (Vue) {
  Vue.component(page_header_src_main.name, page_header_src_main);
};

/* harmony default export */ var page_header = (page_header_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=53dfca72&
var cascader_panelvue_type_template_id_53dfca72_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      class: ["fks-cascader-panel", _vm.border && "is-bordered"],
      on: { keydown: _vm.handleKeyDown },
    },
    _vm._l(_vm.menus, function (menu, index) {
      return _c("cascader-menu", {
        key: index,
        ref: "menu",
        refInFor: true,
        attrs: { index: index, nodes: menu },
      })
    }),
    1
  )
}
var cascader_panelvue_type_template_id_53dfca72_staticRenderFns = []
cascader_panelvue_type_template_id_53dfca72_render._withStripped = true


// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=template&id=53dfca72&

// EXTERNAL MODULE: external "fawkes-lib/lib/radio"
var radio_ = __webpack_require__(60);
var radio_default = /*#__PURE__*/__webpack_require__.n(radio_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&






var stopPropagation = function stopPropagation(e) {
  return e.stopPropagation();
};

/* harmony default export */ var cascader_nodevue_type_script_lang_js_ = ({
  inject: ['panel'],

  components: {
    FksCheckbox: checkbox_default.a,
    FksRadio: radio_default.a
  },

  props: {
    node: {
      required: true
    },
    nodeId: String
  },

  computed: {
    config: function config() {
      return this.panel.config;
    },
    isLeaf: function isLeaf() {
      return this.node.isLeaf;
    },
    isDisabled: function isDisabled() {
      return this.node.isDisabled;
    },
    checkedValue: function checkedValue() {
      return this.panel.checkedValue;
    },
    isChecked: function isChecked() {
      return this.node.isSameNode(this.checkedValue);
    },
    inActivePath: function inActivePath() {
      return this.isInPath(this.panel.activePath);
    },
    inCheckedPath: function inCheckedPath() {
      var _this = this;

      if (!this.config.checkStrictly) return false;

      return this.panel.checkedNodePaths.some(function (checkedPath) {
        return _this.isInPath(checkedPath);
      });
    },
    value: function value() {
      return this.node.getValueByOption();
    }
  },

  methods: {
    handleExpand: function handleExpand() {
      var _this2 = this;

      var panel = this.panel,
          node = this.node,
          isDisabled = this.isDisabled,
          config = this.config;
      var multiple = config.multiple,
          checkStrictly = config.checkStrictly;


      if (!checkStrictly && isDisabled || node.loading) return;

      if (config.lazy && !node.loaded) {
        panel.lazyLoad(node, function () {
          // do not use cached leaf value here, invoke this.isLeaf to get new value.
          var isLeaf = _this2.isLeaf;


          if (!isLeaf) _this2.handleExpand();
          if (multiple) {
            // if leaf sync checked state, else clear checked state
            var checked = isLeaf ? node.checked : false;
            _this2.handleMultiCheckChange(checked);
          }
        });
      } else {
        panel.handleExpand(node);
      }
    },
    handleCheckChange: function handleCheckChange() {
      var panel = this.panel,
          value = this.value,
          node = this.node;

      panel.handleCheckChange(value);
      panel.handleExpand(node);
    },
    handleMultiCheckChange: function handleMultiCheckChange(checked) {
      this.node.doCheck(checked);
      this.panel.calculateMultiCheckedValue();
    },
    isInPath: function isInPath(pathNodes) {
      var node = this.node;

      var selectedPathNode = pathNodes[node.level - 1] || {};
      return selectedPathNode.uid === node.uid;
    },
    renderPrefix: function renderPrefix(h) {
      var isLeaf = this.isLeaf,
          isChecked = this.isChecked,
          config = this.config;
      var checkStrictly = config.checkStrictly,
          multiple = config.multiple;


      if (multiple) {
        return this.renderCheckbox(h);
      } else if (checkStrictly) {
        return this.renderRadio(h);
      } else if (isLeaf && isChecked) {
        return this.renderCheckIcon(h);
      }

      return null;
    },
    renderPostfix: function renderPostfix(h) {
      var node = this.node,
          isLeaf = this.isLeaf;


      if (node.loading) {
        return this.renderLoadingIcon(h);
      } else if (!isLeaf) {
        return this.renderExpandIcon(h);
      }

      return null;
    },
    renderCheckbox: function renderCheckbox(h) {
      var node = this.node,
          config = this.config,
          isDisabled = this.isDisabled;

      var events = {
        on: { change: this.handleMultiCheckChange },
        nativeOn: {}
      };

      if (config.checkStrictly) {
        // when every node is selectable, click event should not trigger expand event.
        events.nativeOn.click = stopPropagation;
      }

      return h('fks-checkbox', external_babel_helper_vue_jsx_merge_props_default()([{
        attrs: {
          value: node.checked,
          indeterminate: node.indeterminate,
          disabled: isDisabled
        }
      }, events]));
    },
    renderRadio: function renderRadio(h) {
      var checkedValue = this.checkedValue,
          value = this.value,
          isDisabled = this.isDisabled;

      // to keep same reference if value cause radio's checked state is calculated by reference comparision;

      if (Object(util_["isEqual"])(value, checkedValue)) {
        value = checkedValue;
      }

      return h(
        'fks-radio',
        {
          attrs: {
            value: checkedValue,
            label: value,
            disabled: isDisabled
          },
          on: {
            'change': this.handleCheckChange
          },
          nativeOn: {
            'click': stopPropagation
          }
        },
        [h('span')]
      );
    },
    renderCheckIcon: function renderCheckIcon(h) {
      //return <i class="fks-icon-check fks-cascader-node__prefix"></i>
    },
    renderLoadingIcon: function renderLoadingIcon(h) {
      return h('i', { 'class': 'fks-icon-loading fks-cascader-node__postfix' });
    },
    renderExpandIcon: function renderExpandIcon(h) {
      return h('i', { 'class': 'fks-icon-arrow-right fks-cascader-node__postfix' });
    },
    renderContent: function renderContent(h) {
      var panel = this.panel,
          node = this.node;

      var render = panel.renderLabelFn;
      var vnode = render ? render({ node: node, data: node.data }) : null;

      return h(
        'span',
        { 'class': 'fks-cascader-node__label' },
        [vnode || node.label]
      );
    }
  },

  render: function render(h) {
    var _this3 = this;

    var inActivePath = this.inActivePath,
        inCheckedPath = this.inCheckedPath,
        isChecked = this.isChecked,
        isLeaf = this.isLeaf,
        isDisabled = this.isDisabled,
        config = this.config,
        nodeId = this.nodeId;
    var expandTrigger = config.expandTrigger,
        checkStrictly = config.checkStrictly,
        multiple = config.multiple;

    var disabled = !checkStrictly && isDisabled;
    var events = { on: {} };

    if (expandTrigger === 'click') {
      events.on.click = this.handleExpand;
    } else {
      events.on.mouseenter = function (e) {
        _this3.handleExpand();
        _this3.$emit('expand', e);
      };
      events.on.focus = function (e) {
        _this3.handleExpand();
        _this3.$emit('expand', e);
      };
      if (!multiple && !isDisabled && checkStrictly) {
        events.on.click = this.handleCheckChange;
      }
    }
    if (isLeaf && !isDisabled && !multiple) {
      events.on.click = this.handleCheckChange;
    }

    return h(
      'li',
      external_babel_helper_vue_jsx_merge_props_default()([{
        attrs: {
          role: 'menuitem',
          id: nodeId,
          'aria-expanded': inActivePath,
          tabindex: disabled ? null : -1
        },
        'class': {
          'fks-cascader-node': true,
          'is-selectable': checkStrictly,
          'in-active-path': inActivePath,
          'in-checked-path': inCheckedPath,
          'is-active': isChecked,
          'is-disabled': disabled
        }
      }, events]),
      [this.renderPrefix(h), this.renderContent(h), this.renderPostfix(h)]
    );
  }
});
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_cascader_nodevue_type_script_lang_js_ = (cascader_nodevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-node.vue
var cascader_node_render, cascader_node_staticRenderFns




/* normalize component */

var cascader_node_component = normalizeComponent(
  src_cascader_nodevue_type_script_lang_js_,
  cascader_node_render,
  cascader_node_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cascader_node = (cascader_node_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&







/* harmony default export */ var cascader_menuvue_type_script_lang_js_ = ({
  name: 'FksCascaderMenu',

  mixins: [locale_default.a],

  inject: ['panel'],

  components: {
    FksScrollbar: scrollbar_default.a,
    CascaderNode: cascader_node
  },

  props: {
    nodes: {
      type: Array,
      required: true
    },
    index: Number
  },

  data: function data() {
    return {
      activeNode: null,
      hoverTimer: null,
      id: Object(util_["generateId"])()
    };
  },


  computed: {
    isEmpty: function isEmpty() {
      return !this.nodes.length;
    },
    menuId: function menuId() {
      return 'cascader-menu-' + this.id + '-' + this.index;
    }
  },

  methods: {
    handleExpand: function handleExpand(e) {
      this.activeNode = e.target;
    },
    handleMouseMove: function handleMouseMove(e) {
      var activeNode = this.activeNode,
          hoverTimer = this.hoverTimer;
      var hoverZone = this.$refs.hoverZone;


      if (!activeNode || !hoverZone) return;

      if (activeNode.contains(e.target)) {
        clearTimeout(hoverTimer);

        var _$el$getBoundingClien = this.$el.getBoundingClientRect(),
            left = _$el$getBoundingClien.left;

        var startX = e.clientX - left;
        var _$el = this.$el,
            offsetWidth = _$el.offsetWidth,
            offsetHeight = _$el.offsetHeight;

        var top = activeNode.offsetTop;
        var bottom = top + activeNode.offsetHeight;

        hoverZone.innerHTML = '\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + top + ' L' + offsetWidth + ' 0 V' + top + ' Z" />\n          <path style="pointer-events: auto;" fill="transparent" d="M' + startX + ' ' + bottom + ' L' + offsetWidth + ' ' + offsetHeight + ' V' + bottom + ' Z" />\n        ';
      } else if (!hoverTimer) {
        this.hoverTimer = setTimeout(this.clearHoverZone, this.panel.config.hoverThreshold);
      }
    },
    clearHoverZone: function clearHoverZone() {
      var hoverZone = this.$refs.hoverZone;

      if (!hoverZone) return;
      hoverZone.innerHTML = '';
    },
    renderEmptyText: function renderEmptyText(h) {
      return h(
        'div',
        { 'class': 'fks-cascader-menu__empty-text' },
        [this.t('fks.cascader.noData')]
      );
    },
    renderNodeList: function renderNodeList(h) {
      var menuId = this.menuId;
      var isHoverMenu = this.panel.isHoverMenu;

      var events = { on: {} };

      if (isHoverMenu) {
        events.on.expand = this.handleExpand;
      }

      var nodes = this.nodes.map(function (node, index) {
        var hasChildren = node.hasChildren;

        return h('cascader-node', external_babel_helper_vue_jsx_merge_props_default()([{
          key: node.uid,
          attrs: { node: node,
            'node-id': menuId + '-' + index,
            'aria-haspopup': hasChildren,
            'aria-owns': hasChildren ? menuId : null
          }
        }, events]));
      });

      return [].concat(nodes, [isHoverMenu ? h('svg', { ref: 'hoverZone', 'class': 'fks-cascader-menu__hover-zone' }) : null]);
    }
  },

  render: function render(h) {
    var isEmpty = this.isEmpty,
        menuId = this.menuId;

    var events = { nativeOn: {}

      // optimize hover to expand experience (#8010)
    };if (this.panel.isHoverMenu) {
      events.nativeOn.mousemove = this.handleMouseMove;
      // events.nativeOn.mouseleave = this.clearHoverZone;
    }

    return h(
      'fks-scrollbar',
      external_babel_helper_vue_jsx_merge_props_default()([{
        attrs: {
          tag: 'ul',
          role: 'menu',
          id: menuId,

          'wrap-class': 'fks-cascader-menu__wrap',
          'view-class': {
            'fks-cascader-menu__list': true,
            'is-empty': isEmpty
          }
        },
        'class': 'fks-cascader-menu' }, events]),
      [isEmpty ? this.renderEmptyText(h) : this.renderNodeList(h)]
    );
  }
});
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_cascader_menuvue_type_script_lang_js_ = (cascader_menuvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-menu.vue
var cascader_menu_render, cascader_menu_staticRenderFns




/* normalize component */

var cascader_menu_component = normalizeComponent(
  src_cascader_menuvue_type_script_lang_js_,
  cascader_menu_render,
  cascader_menu_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cascader_menu = (cascader_menu_component.exports);
// CONCATENATED MODULE: ./packages/cascader-panel/src/node.js
var node_createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function src_node_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




var uid = 0;

var src_node_Node = function () {
  function Node(data, config, parentNode) {
    src_node_classCallCheck(this, Node);

    this.data = data;
    this.config = config;
    this.parent = parentNode || null;
    this.level = !this.parent ? 1 : this.parent.level + 1;
    this.uid = uid++;

    this.initState();
    this.initChildren();
  }

  Node.prototype.initState = function initState() {
    var _config = this.config,
        valueKey = _config.value,
        labelKey = _config.label;


    this.value = this.data[valueKey];
    this.label = this.data[labelKey];
    this.pathNodes = this.calculatePathNodes();
    this.path = this.pathNodes.map(function (node) {
      return node.value;
    });
    this.pathLabels = this.pathNodes.map(function (node) {
      return node.label;
    });

    // lazy load
    this.loading = false;
    this.loaded = false;
  };

  Node.prototype.initChildren = function initChildren() {
    var _this = this;

    var config = this.config;

    var childrenKey = config.children;
    var childrenData = this.data[childrenKey];
    this.hasChildren = Array.isArray(childrenData);
    this.children = (childrenData || []).map(function (child) {
      return new Node(child, config, _this);
    });
  };

  Node.prototype.calculatePathNodes = function calculatePathNodes() {
    var nodes = [this];
    var parent = this.parent;

    while (parent) {
      nodes.unshift(parent);
      parent = parent.parent;
    }

    return nodes;
  };

  Node.prototype.getPath = function getPath() {
    return this.path;
  };

  Node.prototype.getValue = function getValue() {
    return this.value;
  };

  Node.prototype.getValueByOption = function getValueByOption() {
    return this.config.emitPath ? this.getPath() : this.getValue();
  };

  Node.prototype.getText = function getText(allLevels, separator) {
    return allLevels ? this.pathLabels.join(separator) : this.label;
  };

  Node.prototype.isSameNode = function isSameNode(checkedValue) {
    var value = this.getValueByOption();
    return this.config.multiple && Array.isArray(checkedValue) ? checkedValue.some(function (val) {
      return Object(util_["isEqual"])(val, value);
    }) : Object(util_["isEqual"])(checkedValue, value);
  };

  Node.prototype.broadcast = function broadcast(event) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var handlerName = 'onParent' + Object(util_["capitalize"])(event);

    this.children.forEach(function (child) {
      if (child) {
        // bottom up
        child.broadcast.apply(child, [event].concat(args));
        child[handlerName] && child[handlerName].apply(child, args);
      }
    });
  };

  Node.prototype.emit = function emit(event) {
    var parent = this.parent;

    var handlerName = 'onChild' + Object(util_["capitalize"])(event);
    if (parent) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      parent[handlerName] && parent[handlerName].apply(parent, args);
      parent.emit.apply(parent, [event].concat(args));
    }
  };

  Node.prototype.onParentCheck = function onParentCheck(checked) {
    if (!this.isDisabled) {
      this.setCheckState(checked);
    }
  };

  Node.prototype.onChildCheck = function onChildCheck() {
    var children = this.children;

    var validChildren = children.filter(function (child) {
      return !child.isDisabled;
    });
    var checked = validChildren.length ? validChildren.every(function (child) {
      return child.checked;
    }) : false;

    this.setCheckState(checked);
  };

  Node.prototype.setCheckState = function setCheckState(checked) {
    var totalNum = this.children.length;
    var checkedNum = this.children.reduce(function (c, p) {
      var num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;
      return c + num;
    }, 0);

    this.checked = checked;
    this.indeterminate = checkedNum !== totalNum && checkedNum > 0;
  };

  Node.prototype.syncCheckState = function syncCheckState(checkedValue) {
    var value = this.getValueByOption();
    var checked = this.isSameNode(checkedValue, value);

    this.doCheck(checked);
  };

  Node.prototype.doCheck = function doCheck(checked) {
    if (this.checked !== checked) {
      if (this.config.checkStrictly) {
        this.checked = checked;
      } else {
        // bottom up to unify the calculation of the indeterminate state
        this.broadcast('check', checked);
        this.setCheckState(checked);
        this.emit('check');
      }
    }
  };

  node_createClass(Node, [{
    key: 'isDisabled',
    get: function get() {
      var data = this.data,
          parent = this.parent,
          config = this.config;

      var disabledKey = config.disabled;
      var checkStrictly = config.checkStrictly;

      return data[disabledKey] || !checkStrictly && parent && parent.isDisabled;
    }
  }, {
    key: 'isLeaf',
    get: function get() {
      var data = this.data,
          loaded = this.loaded,
          hasChildren = this.hasChildren,
          children = this.children;
      var _config2 = this.config,
          lazy = _config2.lazy,
          leafKey = _config2.leaf;

      if (lazy) {
        var isLeaf = Object(shared_["isDef"])(data[leafKey]) ? data[leafKey] : loaded ? !children.length : false;
        this.hasChildren = !isLeaf;
        return isLeaf;
      }
      return !hasChildren;
    }
  }]);

  return Node;
}();

/* harmony default export */ var src_node = (src_node_Node);
// CONCATENATED MODULE: ./packages/cascader-panel/src/store.js
function store_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }




var flatNodes = function flatNodes(data, leafOnly) {
  return data.reduce(function (res, node) {
    if (node.isLeaf) {
      res.push(node);
    } else {
      !leafOnly && res.push(node);
      res = res.concat(flatNodes(node.children, leafOnly));
    }
    return res;
  }, []);
};

var store_Store = function () {
  function Store(data, config) {
    store_classCallCheck(this, Store);

    this.config = config;
    this.initNodes(data);
  }

  Store.prototype.initNodes = function initNodes(data) {
    var _this = this;

    data = Object(util_["coerceTruthyValueToArray"])(data);
    this.nodes = data.map(function (nodeData) {
      return new src_node(nodeData, _this.config);
    });
    this.flattedNodes = this.getFlattedNodes(false, false);
    this.leafNodes = this.getFlattedNodes(true, false);
  };

  Store.prototype.appendNode = function appendNode(nodeData, parentNode) {
    var node = new src_node(nodeData, this.config, parentNode);
    var children = parentNode ? parentNode.children : this.nodes;

    children.push(node);
  };

  Store.prototype.appendNodes = function appendNodes(nodeDataList, parentNode) {
    var _this2 = this;

    nodeDataList = Object(util_["coerceTruthyValueToArray"])(nodeDataList);
    nodeDataList.forEach(function (nodeData) {
      return _this2.appendNode(nodeData, parentNode);
    });
  };

  Store.prototype.getNodes = function getNodes() {
    return this.nodes;
  };

  Store.prototype.getFlattedNodes = function getFlattedNodes(leafOnly) {
    var cached = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    var cachedNodes = leafOnly ? this.leafNodes : this.flattedNodes;
    return cached ? cachedNodes : flatNodes(this.nodes, leafOnly);
  };

  Store.prototype.getNodeByValue = function getNodeByValue(value) {
    if (value) {
      var nodes = this.getFlattedNodes(false, !this.config.lazy).filter(function (node) {
        return Object(util_["valueEquals"])(node.path, value) || node.value === value;
      });
      return nodes && nodes.length ? nodes[0] : null;
    }
    return null;
  };

  return Store;
}();

/* harmony default export */ var cascader_panel_src_store = (store_Store);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
var cascader_panelvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//








var cascader_panelvue_type_script_lang_js_KeyCode = aria_utils_default.a.keys;

var DefaultProps = {
  expandTrigger: 'click', // or hover
  multiple: false,
  checkStrictly: false, // whether all nodes can be selected
  emitPath: true, // wether to emit an array of all levels value in which node is located
  lazy: false,
  lazyLoad: util_["noop"],
  value: 'value',
  label: 'label',
  children: 'children',
  leaf: 'leaf',
  disabled: 'disabled',
  hoverThreshold: 500
};

var cascader_panelvue_type_script_lang_js_isLeaf = function isLeaf(el) {
  return !el.getAttribute('aria-owns');
};

var getSibling = function getSibling(el, distance) {
  var parentNode = el.parentNode;

  if (parentNode) {
    var siblings = parentNode.querySelectorAll('.fks-cascader-node[tabindex="-1"]');
    var index = Array.prototype.indexOf.call(siblings, el);
    return siblings[index + distance] || null;
  }
  return null;
};

var getMenuIndex = function getMenuIndex(el, distance) {
  if (!el) return;
  var pieces = el.id.split('-');
  return Number(pieces[pieces.length - 2]);
};

var focusNode = function focusNode(el) {
  if (!el) return;
  el.focus();
  !cascader_panelvue_type_script_lang_js_isLeaf(el) && el.click();
};

var checkNode = function checkNode(el) {
  if (!el) return;

  var input = el.querySelector('input');
  if (input) {
    input.click();
  } else if (cascader_panelvue_type_script_lang_js_isLeaf(el)) {
    el.click();
  }
};

/* harmony default export */ var cascader_panelvue_type_script_lang_js_ = ({
  name: 'FksCascaderPanel',

  components: {
    CascaderMenu: cascader_menu
  },

  props: {
    value: {},
    options: Array,
    props: Object,
    border: {
      type: Boolean,
      default: true
    },
    renderLabel: Function
  },

  provide: function provide() {
    return {
      panel: this
    };
  },
  data: function data() {
    return {
      checkedValue: null,
      checkedNodePaths: [],
      store: [],
      menus: [],
      activePath: [],
      loadCount: 0
    };
  },


  computed: {
    config: function config() {
      return merge_default()(cascader_panelvue_type_script_lang_js_extends({}, DefaultProps), this.props || {});
    },
    multiple: function multiple() {
      return this.config.multiple;
    },
    checkStrictly: function checkStrictly() {
      return this.config.checkStrictly;
    },
    leafOnly: function leafOnly() {
      return !this.checkStrictly;
    },
    isHoverMenu: function isHoverMenu() {
      return this.config.expandTrigger === 'hover';
    },
    renderLabelFn: function renderLabelFn() {
      return this.renderLabel || this.$scopedSlots.default;
    }
  },

  watch: {
    options: {
      handler: function handler() {
        this.initStore();
      },
      immediate: true,
      deep: true
    },
    value: function value() {
      this.syncCheckedValue();
      this.checkStrictly && this.calculateCheckedNodePaths();
    },
    checkedValue: function checkedValue(val) {
      if (!Object(util_["isEqual"])(val, this.value)) {
        this.checkStrictly && this.calculateCheckedNodePaths();
        this.$emit('input', val);
        this.$emit('change', val);
      }
    }
  },

  mounted: function mounted() {
    if (!Object(util_["isEmpty"])(this.value)) {
      this.syncCheckedValue();
    }
  },


  methods: {
    initStore: function initStore() {
      var config = this.config,
          options = this.options;

      if (config.lazy && Object(util_["isEmpty"])(options)) {
        this.lazyLoad();
      } else {
        this.store = new cascader_panel_src_store(options, config);
        this.menus = [this.store.getNodes()];
        this.syncMenuState();
      }
    },
    syncCheckedValue: function syncCheckedValue() {
      var value = this.value,
          checkedValue = this.checkedValue;

      if (!Object(util_["isEqual"])(value, checkedValue)) {
        this.checkedValue = value;
        this.syncMenuState();
      }
    },
    syncMenuState: function syncMenuState() {
      var multiple = this.multiple,
          checkStrictly = this.checkStrictly;

      this.syncActivePath();
      multiple && this.syncMultiCheckState();
      checkStrictly && this.calculateCheckedNodePaths();
      this.$nextTick(this.scrollIntoView);
    },
    syncMultiCheckState: function syncMultiCheckState() {
      var _this = this;

      var nodes = this.getFlattedNodes(this.leafOnly);

      nodes.forEach(function (node) {
        node.syncCheckState(_this.checkedValue);
      });
    },
    syncActivePath: function syncActivePath() {
      var _this2 = this;

      var store = this.store,
          multiple = this.multiple,
          activePath = this.activePath,
          checkedValue = this.checkedValue;


      if (!Object(util_["isEmpty"])(activePath)) {
        var nodes = activePath.map(function (node) {
          return _this2.getNodeByValue(node.getValue());
        });
        this.expandNodes(nodes);
      } else if (!Object(util_["isEmpty"])(checkedValue)) {
        var value = multiple ? checkedValue[0] : checkedValue;
        var checkedNode = this.getNodeByValue(value) || {};
        var _nodes = (checkedNode.pathNodes || []).slice(0, -1);
        this.expandNodes(_nodes);
      } else {
        this.activePath = [];
        this.menus = [store.getNodes()];
      }
    },
    expandNodes: function expandNodes(nodes) {
      var _this3 = this;

      nodes.forEach(function (node) {
        return _this3.handleExpand(node, true /* silent */);
      });
    },
    calculateCheckedNodePaths: function calculateCheckedNodePaths() {
      var _this4 = this;

      var checkedValue = this.checkedValue,
          multiple = this.multiple;

      var checkedValues = multiple ? Object(util_["coerceTruthyValueToArray"])(checkedValue) : [checkedValue];
      this.checkedNodePaths = checkedValues.map(function (v) {
        var checkedNode = _this4.getNodeByValue(v);
        return checkedNode ? checkedNode.pathNodes : [];
      });
    },
    handleKeyDown: function handleKeyDown(e) {
      var target = e.target,
          keyCode = e.keyCode;


      switch (keyCode) {
        case cascader_panelvue_type_script_lang_js_KeyCode.up:
          var prev = getSibling(target, -1);
          focusNode(prev);
          break;
        case cascader_panelvue_type_script_lang_js_KeyCode.down:
          var next = getSibling(target, 1);
          focusNode(next);
          break;
        case cascader_panelvue_type_script_lang_js_KeyCode.left:
          var preMenu = this.$refs.menu[getMenuIndex(target) - 1];
          if (preMenu) {
            var expandedNode = preMenu.$el.querySelector('.fks-cascader-node[aria-expanded="true"]');
            focusNode(expandedNode);
          }
          break;
        case cascader_panelvue_type_script_lang_js_KeyCode.right:
          var nextMenu = this.$refs.menu[getMenuIndex(target) + 1];
          if (nextMenu) {
            var firstNode = nextMenu.$el.querySelector('.fks-cascader-node[tabindex="-1"]');
            focusNode(firstNode);
          }
          break;
        case cascader_panelvue_type_script_lang_js_KeyCode.enter:
          checkNode(target);
          break;
        case cascader_panelvue_type_script_lang_js_KeyCode.esc:
        case cascader_panelvue_type_script_lang_js_KeyCode.tab:
          this.$emit('close');
          break;
        default:
          return;
      }
    },
    handleExpand: function handleExpand(node, silent) {
      var activePath = this.activePath;
      var level = node.level;

      var path = activePath.slice(0, level - 1);
      var menus = this.menus.slice(0, level);

      if (!node.isLeaf) {
        path.push(node);
        menus.push(node.children);
      }

      this.activePath = path;
      this.menus = menus;

      if (!silent) {
        var pathValues = path.map(function (node) {
          return node.getValue();
        });
        var activePathValues = activePath.map(function (node) {
          return node.getValue();
        });
        if (!Object(util_["valueEquals"])(pathValues, activePathValues)) {
          this.$emit('active-item-change', pathValues); // Deprecated
          this.$emit('expand-change', pathValues);
        }
      }
    },
    handleCheckChange: function handleCheckChange(value) {
      this.checkedValue = value;
    },
    lazyLoad: function lazyLoad(node, onFullfiled) {
      var _this5 = this;

      var config = this.config;

      if (!node) {
        node = node || { root: true, level: 0 };
        this.store = new cascader_panel_src_store([], config);
        this.menus = [this.store.getNodes()];
      }
      node.loading = true;
      var resolve = function resolve(dataList) {
        var parent = node.root ? null : node;
        dataList && dataList.length && _this5.store.appendNodes(dataList, parent);
        node.loading = false;
        node.loaded = true;

        // dispose default value on lazy load mode
        if (Array.isArray(_this5.checkedValue)) {
          var nodeValue = _this5.checkedValue[_this5.loadCount++];
          var valueKey = _this5.config.value;
          var leafKey = _this5.config.leaf;

          if (Array.isArray(dataList) && dataList.filter(function (item) {
            return item[valueKey] === nodeValue;
          }).length > 0) {
            var checkedNode = _this5.store.getNodeByValue(nodeValue);

            if (!checkedNode.data[leafKey]) {
              _this5.lazyLoad(checkedNode, function () {
                _this5.handleExpand(checkedNode);
              });
            }

            if (_this5.loadCount === _this5.checkedValue.length) {
              _this5.$parent.computePresentText();
            }
          }
        }

        onFullfiled && onFullfiled(dataList);
      };
      config.lazyLoad(node, resolve);
    },


    /**
     * public methods
     */
    calculateMultiCheckedValue: function calculateMultiCheckedValue() {
      this.checkedValue = this.getCheckedNodes(this.leafOnly).map(function (node) {
        return node.getValueByOption();
      });
    },
    scrollIntoView: function scrollIntoView() {
      if (this.$isServer) return;

      var menus = this.$refs.menu || [];
      menus.forEach(function (menu) {
        var menuElement = menu.$el;
        if (menuElement) {
          var container = menuElement.querySelector('.fks-scrollbar__wrap');
          var activeNode = menuElement.querySelector('.fks-cascader-node.is-active') || menuElement.querySelector('.fks-cascader-node.in-active-path');
          scroll_into_view_default()(container, activeNode);
        }
      });
    },
    getNodeByValue: function getNodeByValue(val) {
      return this.store.getNodeByValue(val);
    },
    getFlattedNodes: function getFlattedNodes(leafOnly) {
      var cached = !this.config.lazy;
      return this.store.getFlattedNodes(leafOnly, cached);
    },
    getCheckedNodes: function getCheckedNodes(leafOnly) {
      var checkedValue = this.checkedValue,
          multiple = this.multiple;

      if (multiple) {
        var nodes = this.getFlattedNodes(leafOnly);
        return nodes.filter(function (node) {
          return node.checked;
        });
      } else {
        return Object(util_["isEmpty"])(checkedValue) ? [] : [this.getNodeByValue(checkedValue)];
      }
    },
    clearCheckedNodes: function clearCheckedNodes() {
      var config = this.config,
          leafOnly = this.leafOnly;
      var multiple = config.multiple,
          emitPath = config.emitPath;

      if (multiple) {
        this.getCheckedNodes(leafOnly).filter(function (node) {
          return !node.isDisabled;
        }).forEach(function (node) {
          return node.doCheck(false);
        });
        this.calculateMultiCheckedValue();
      } else {
        this.checkedValue = emitPath ? [] : null;
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_cascader_panelvue_type_script_lang_js_ = (cascader_panelvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/cascader-panel/src/cascader-panel.vue





/* normalize component */

var cascader_panel_component = normalizeComponent(
  src_cascader_panelvue_type_script_lang_js_,
  cascader_panelvue_type_template_id_53dfca72_render,
  cascader_panelvue_type_template_id_53dfca72_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var cascader_panel = (cascader_panel_component.exports);
// CONCATENATED MODULE: ./packages/cascader-panel/index.js


/* istanbul ignore next */
cascader_panel.install = function (Vue) {
  Vue.component(cascader_panel.name, cascader_panel);
};

/* harmony default export */ var packages_cascader_panel = (cascader_panel);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/avatar/src/main.vue?vue&type=script&lang=js&

/* harmony default export */ var avatar_src_mainvue_type_script_lang_js_ = ({
  name: 'FksAvatar',

  props: {
    size: {
      type: [Number, String],
      validator: function validator(val) {
        if (typeof val === 'string') {
          return ['large', 'medium', 'small'].includes(val);
        }
        return typeof val === 'number';
      }
    },
    shape: {
      type: String,
      default: 'circle',
      validator: function validator(val) {
        return ['circle', 'square'].includes(val);
      }
    },
    icon: String,
    src: String,
    alt: String,
    srcSet: String,
    error: Function,
    fit: {
      type: String,
      default: 'cover'
    }
  },

  data: function data() {
    return {
      isImageExist: true
    };
  },


  computed: {
    avatarClass: function avatarClass() {
      var size = this.size,
          icon = this.icon,
          shape = this.shape;

      var classList = ['fks-avatar'];

      if (size && typeof size === 'string') {
        classList.push('fks-avatar--' + size);
      }

      if (icon) {
        classList.push('fks-avatar--icon');
      }

      if (shape) {
        classList.push('fks-avatar--' + shape);
      }

      return classList.join(' ');
    }
  },

  methods: {
    handleError: function handleError() {
      var error = this.error;

      var errorFlag = error ? error() : undefined;
      if (errorFlag !== false) {
        this.isImageExist = false;
      }
    },
    renderAvatar: function renderAvatar() {
      var h = this.$createElement;
      var icon = this.icon,
          src = this.src,
          alt = this.alt,
          isImageExist = this.isImageExist,
          srcSet = this.srcSet,
          fit = this.fit;


      if (isImageExist && src) {
        return h('img', {
          attrs: {
            src: src,

            alt: alt,
            srcSet: srcSet
          },
          on: {
            'error': this.handleError
          },
          style: { 'object-fit': fit }
        });
      }

      if (icon) {
        return h('i', { 'class': icon });
      }

      return this.$slots.default;
    }
  },

  render: function render() {
    var h = arguments[0];
    var avatarClass = this.avatarClass,
        size = this.size;


    var sizeStyle = typeof size === 'number' ? {
      height: size + 'px',
      width: size + 'px',
      lineHeight: size + 'px'
    } : {};

    return h(
      'span',
      { 'class': avatarClass, style: sizeStyle },
      [this.renderAvatar()]
    );
  }
});
// CONCATENATED MODULE: ./packages/avatar/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_avatar_src_mainvue_type_script_lang_js_ = (avatar_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/avatar/src/main.vue
var src_main_render, src_main_staticRenderFns




/* normalize component */

var avatar_src_main_component = normalizeComponent(
  packages_avatar_src_mainvue_type_script_lang_js_,
  src_main_render,
  src_main_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var avatar_src_main = (avatar_src_main_component.exports);
// CONCATENATED MODULE: ./packages/avatar/index.js


/* istanbul ignore next */
avatar_src_main.install = function (Vue) {
  Vue.component(avatar_src_main.name, avatar_src_main);
};

/* harmony default export */ var avatar = (avatar_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/drawer/src/main.vue?vue&type=template&id=561da6f0&
var mainvue_type_template_id_561da6f0_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "transition",
    {
      attrs: { name: "fks-drawer-fade" },
      on: { "after-enter": _vm.afterEnter, "after-leave": _vm.afterLeave },
    },
    [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.visible,
              expression: "visible",
            },
          ],
          staticClass: "fks-drawer__wrapper",
          attrs: { tabindex: "-1" },
        },
        [
          _c(
            "div",
            {
              staticClass: "fks-drawer__container",
              class: _vm.visible && "fks-drawer__open",
              attrs: { role: "document", tabindex: "-1" },
              on: {
                click: function ($event) {
                  if ($event.target !== $event.currentTarget) {
                    return null
                  }
                  return _vm.handleWrapperClick.apply(null, arguments)
                },
              },
            },
            [
              _c(
                "div",
                {
                  ref: "drawer",
                  staticClass: "fks-drawer",
                  class: [_vm.direction, _vm.customClass],
                  style: _vm.isHorizontal
                    ? "width: " + _vm.size
                    : "height: " + _vm.size,
                  attrs: {
                    "aria-modal": "true",
                    "aria-labelledby": "fks-drawer__title",
                    "aria-label": _vm.title,
                    role: "dialog",
                    tabindex: "-1",
                  },
                },
                [
                  _vm.withHeader
                    ? _c(
                        "header",
                        {
                          staticClass: "fks-drawer__header",
                          attrs: { id: "fks-drawer__title" },
                        },
                        [
                          _vm._t("title", function () {
                            return [
                              _c(
                                "span",
                                {
                                  attrs: { role: "heading", title: _vm.title },
                                },
                                [_vm._v(_vm._s(_vm.title))]
                              ),
                            ]
                          }),
                          _vm.showClose
                            ? _c(
                                "button",
                                {
                                  staticClass: "fks-drawer__close-btn",
                                  attrs: {
                                    "aria-label":
                                      "close " + (_vm.title || "drawer"),
                                    type: "button",
                                  },
                                  on: { click: _vm.closeDrawer },
                                },
                                [
                                  _c("i", {
                                    staticClass:
                                      "fks-dialog__close fks-icon fks-icon-close",
                                  }),
                                ]
                              )
                            : _vm._e(),
                        ],
                        2
                      )
                    : _vm._e(),
                  _vm.rendered
                    ? _c(
                        "section",
                        { staticClass: "fks-drawer__body" },
                        [_vm._t("default")],
                        2
                      )
                    : _vm._e(),
                ]
              ),
            ]
          ),
        ]
      ),
    ]
  )
}
var mainvue_type_template_id_561da6f0_staticRenderFns = []
mainvue_type_template_id_561da6f0_render._withStripped = true


// CONCATENATED MODULE: ./packages/drawer/src/main.vue?vue&type=template&id=561da6f0&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/drawer/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var drawer_src_mainvue_type_script_lang_js_ = ({
  name: "FksDrawer",
  mixins: [popup_default.a, emitter_default.a],
  props: {
    appendToBody: {
      type: Boolean,
      default: false
    },
    beforeClose: {
      type: Function
    },
    customClass: {
      type: String,
      default: ""
    },
    closeOnPressEscape: {
      type: Boolean,
      default: true
    },
    destroyOnClose: {
      type: Boolean,
      default: false
    },
    modal: {
      type: Boolean,
      default: true
    },
    direction: {
      type: String,
      default: "rtl",
      validator: function validator(val) {
        return ["ltr", "rtl", "ttb", "btt"].indexOf(val) !== -1;
      }
    },
    modalAppendToBody: {
      type: Boolean,
      default: true
    },
    showClose: {
      type: Boolean,
      default: true
    },
    size: {
      type: String,
      default: "30%"
    },
    title: {
      type: String,
      default: ""
    },
    visible: {
      type: Boolean
    },
    wrapperClosable: {
      type: Boolean,
      default: true
    },
    withHeader: {
      type: Boolean,
      default: true
    }
  },
  computed: {
    isHorizontal: function isHorizontal() {
      return this.direction === "rtl" || this.direction === "ltr";
    }
  },
  data: function data() {
    return {
      closed: false,
      prevActiveElement: null
    };
  },

  watch: {
    visible: function visible(val) {
      var _this = this;

      if (val) {
        this.closed = false;
        this.$emit("open");
        if (this.appendToBody) {
          document.body.appendChild(this.$el);
        }
        this.prevActiveElement = document.activeElement;
      } else {
        if (!this.closed) this.$emit("close");
        this.$nextTick(function () {
          if (_this.prevActiveElement) {
            _this.prevActiveElement.focus();
          }
        });
      }
    }
  },
  methods: {
    afterEnter: function afterEnter() {
      this.$emit("opened");
    },
    afterLeave: function afterLeave() {
      this.$emit("closed");
    },
    hide: function hide(cancel) {
      if (cancel !== false) {
        this.$emit("update:visible", false);
        this.$emit("close");
        if (this.destroyOnClose === true) {
          this.rendered = false;
        }
        this.closed = true;
      }
    },
    handleWrapperClick: function handleWrapperClick() {
      if (this.wrapperClosable) {
        this.closeDrawer();
      }
    },
    closeDrawer: function closeDrawer() {
      if (typeof this.beforeClose === "function") {
        this.beforeClose(this.hide);
      } else {
        this.hide();
      }
    },
    handleClose: function handleClose() {
      // This method here will be called by PopupManger, when the `closeOnPressEscape` was set to true
      // pressing `ESC` will call this method, and also close the drawer.
      // This method also calls `beforeClose` if there was one.
      this.closeDrawer();
    }
  },
  mounted: function mounted() {
    if (this.visible) {
      this.rendered = true;
      this.open();
    }
  },
  destroyed: function destroyed() {
    // if appendToBody is true, remove DOM node after destroy
    if (this.appendToBody && this.$el && this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    }
  }
});
// CONCATENATED MODULE: ./packages/drawer/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_drawer_src_mainvue_type_script_lang_js_ = (drawer_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/drawer/src/main.vue





/* normalize component */

var drawer_src_main_component = normalizeComponent(
  packages_drawer_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_561da6f0_render,
  mainvue_type_template_id_561da6f0_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var drawer_src_main = (drawer_src_main_component.exports);
// CONCATENATED MODULE: ./packages/drawer/index.js


/* istanbul ignore next */
drawer_src_main.install = function (Vue) {
  Vue.component(drawer_src_main.name, drawer_src_main);
};

/* harmony default export */ var drawer = (drawer_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector/src/user-selector.vue?vue&type=template&id=904bc870&
var user_selectorvue_type_template_id_904bc870_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-user-selector-page", style: { width: _vm.width } },
    [
      _c("span", { on: { click: _vm.open } }, [_vm._t("reference")], 2),
      !_vm.reference
        ? _c(
            "div",
            { staticClass: "fks-user-selector-input", on: { click: _vm.open } },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "fks-user-selector-input__tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                    "is-disabled": _vm.uploadReadOnly || _vm.forbidden,
                  },
                },
                [
                  _vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.sureList.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  class: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                  },
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.sureList[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.sureList[0].userFullname)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.sureList.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        "+ " + _vm._s(_vm.sureList.length - 1)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { display: "contents", width: "100%" } },
                        _vm._l(_vm.sureList, function (tag, index) {
                          return _c(
                            "fks-tag",
                            {
                              key: index,
                              class: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                              },
                              attrs: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                                size: _vm.size,
                                "disable-transitions": "",
                                type: "info",
                              },
                              on: {
                                close: function ($event) {
                                  return _vm.deleteOne(tag)
                                },
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v(_vm._s(tag.userFullname))]
                              ),
                            ]
                          )
                        }),
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "div",
                [
                  _c(
                    "fks-input",
                    {
                      ref: "input",
                      staticClass: "fks-user-out-input",
                      attrs: {
                        readonly: "",
                        disabled: _vm.forbidden,
                        value: _vm.username,
                        size: _vm.size,
                        placeholder:
                          _vm.sureList.length > 0
                            ? ""
                            : _vm.placeholder
                            ? _vm.placeholder
                            : _vm.t("fks.user.placeholder"),
                      },
                    },
                    [
                      !_vm.uploadReadOnly && !_vm.forbidden
                        ? _c("template", { slot: "suffix" }, [
                            _c("i", {
                              staticClass:
                                "fks-icon-circle-plus-outline fks-input__icon",
                              staticStyle: { cursor: "pointer" },
                              on: { click: _vm.open },
                            }),
                          ])
                        : _vm._e(),
                    ],
                    2
                  ),
                ],
                1
              ),
            ]
          )
        : _vm._e(),
      _c("user-selector-dialog", {
        attrs: {
          multiple: _vm.multiple,
          multipleLimit: _vm.multipleLimit,
          recentUser: _vm.recentUser,
          visual: _vm.visible,
          userSureList: _vm.sureList,
          params: _vm.params,
          layout: _vm.layout,
          orgParams: _vm.orgParams,
          urlParams: _vm.urlParams,
          urlPath: _vm.urlPath,
          orgPath: _vm.orgPath,
          multiPortal: _vm.multiPortal,
          multiIndex: _vm.multiIndex,
          filterLogout: _vm.filterLogout,
          initSelect: _vm.initSelect,
          url: _vm.url,
          deptExpand: _vm.deptExpand,
          roleFixed: _vm.roleFixed,
          headers: _vm.headers,
          customClass: _vm.customClass,
          handleOrg: _vm.handleOrg,
        },
        on: {
          "update:visual": function ($event) {
            _vm.visible = $event
          },
          "update:userSureList": function ($event) {
            _vm.sureList = $event
          },
          "update:user-sure-list": function ($event) {
            _vm.sureList = $event
          },
          updateSureList: _vm.updateSureList,
        },
      }),
    ],
    1
  )
}
var user_selectorvue_type_template_id_904bc870_staticRenderFns = []
user_selectorvue_type_template_id_904bc870_render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector/src/user-selector.vue?vue&type=template&id=904bc870&

// CONCATENATED MODULE: ./src/mixins/selector.js
/*
 * @Author: wei_jt@ecidi.com
 * @Date: 2019-07-19 19:40:56
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-03-09 16:12:13
 * @Description: 选择组件通用部分
 */
/* harmony default export */ var mixins_selector = ({
  inject: {
    fksForm: {
      default: function _default() {
        return {};
      }
    },
    fksFormItem: {
      default: function _default() {
        return {};
      }
    }
  },
  props: {
    showAllUser: {
      type: Boolean,
      default: false
    },
    width: {
      type: String,
      default: '100%'
    },
    url: {
      type: String,
      default: ''
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    multiple: Boolean,
    multipleLimit: {
      type: Number,
      default: 0
    },
    readonly: Boolean,
    disabled: Boolean,
    /** 标签是否收缩 */
    collapseTags: Boolean,
    size: String,
    related: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    return {
      initialInputHeight: 0,
      visible: false
    };
  },

  computed: {
    collapseTagSize: function collapseTagSize() {
      return ['small', 'mini'].indexOf(this.size) > -1 ? 'mini' : 'small';
    },
    forbidden: function forbidden() {
      return this.disabled || !!(this.fksForm && this.fksForm.disabled) || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'disabled';
    },
    uploadReadOnly: function uploadReadOnly() {
      return this.readonly || ((this.fksForm || {}).flowConfig || {})[(this.fksFormItem || {}).prop] == 'readonly';
    }
  },
  methods: {
    resetInputHeight: function resetInputHeight() {
      var _this = this;

      this.$nextTick(function () {
        if (!_this.$refs.input) return;
        var inputChildNodes = _this.$refs.input.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this.$refs.tags;
        var sizeInMap = _this.initialInputHeight || 36;
        var list = _this.sureList || _this.chosedList;
        input.style.height = list.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 4 : 0) : 0, sizeInMap) + 'px';
      });
    }
  },
  watch: {
    collapseTags: function collapseTags() {
      if (this.multiple) {
        this.resetInputHeight();
      }
    }
  },
  mounted: function mounted() {
    var sizeMap = {
      large: 40,
      small: 32,
      mini: 28
    };
    this.initialInputHeight = sizeMap[this.size];
  }
});
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector/src/user-selector-dialog.vue?vue&type=template&id=4c2706bf&
var user_selector_dialogvue_type_template_id_4c2706bf_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-dialog",
    {
      attrs: {
        visible: _vm.visible,
        width: "1200px",
        top: "8vh",
        "append-to-body": "",
        "custom-class": "fks-user-transfer-dialog " + _vm.customClass,
        "before-close": _vm.closeDialog,
      },
      on: {
        "update:visible": function ($event) {
          _vm.visible = $event
        },
      },
    },
    [
      _c("template", { slot: "title" }, [
        _c("i", { staticClass: "fks-icon-user" }),
        _c("span", [_vm._v(_vm._s(_vm.t("fks.user.selectmember")))]),
      ]),
      _c(
        "div",
        [
          _c(
            "fks-tabs",
            {
              on: { "tab-click": _vm.handleTabChange },
              model: {
                value: _vm.activeName,
                callback: function ($$v) {
                  _vm.activeName = $$v
                },
                expression: "activeName",
              },
            },
            [
              _vm.layout.split(",").indexOf("branch") > -1
                ? _c("fks-tab-pane", {
                    attrs: { label: _vm.t("fks.user.branch"), name: "first" },
                  })
                : _vm._e(),
              _vm.layout.split(",").indexOf("role") > -1
                ? _c("fks-tab-pane", {
                    attrs: { label: _vm.t("fks.user.role"), name: "second" },
                  })
                : _vm._e(),
              _c(
                "fks-row",
                { attrs: { gutter: 68 } },
                [
                  _c(
                    "fks-col",
                    { attrs: { span: 12 } },
                    [
                      _c(
                        "fks-input",
                        {
                          attrs: {
                            placeholder: _vm.t("fks.user.searchname"),
                            size: "medium",
                          },
                          nativeOn: {
                            keyup: function ($event) {
                              if (
                                !$event.type.indexOf("key") &&
                                _vm._k(
                                  $event.keyCode,
                                  "enter",
                                  13,
                                  $event.key,
                                  "Enter"
                                )
                              ) {
                                return null
                              }
                              return _vm.searchUser.apply(null, arguments)
                            },
                          },
                          model: {
                            value: _vm.searchKey,
                            callback: function ($$v) {
                              _vm.searchKey = $$v
                            },
                            expression: "searchKey",
                          },
                        },
                        [
                          _c("i", {
                            staticClass: "fks-input__icon fks-icon-search",
                            attrs: { slot: "suffix" },
                            on: {
                              click: function ($event) {
                                $event.stopPropagation()
                                return _vm.searchUser.apply(null, arguments)
                              },
                            },
                            slot: "suffix",
                          }),
                        ]
                      ),
                    ],
                    1
                  ),
                  _c(
                    "fks-col",
                    { attrs: { span: 12 } },
                    [
                      _c("fks-org-selector", {
                        directives: [
                          {
                            name: "show",
                            rawName: "v-show",
                            value: _vm.activeName === "first",
                            expression: "activeName === 'first'",
                          },
                        ],
                        ref: "orgSel",
                        attrs: {
                          deptExpand: _vm.deptExpand,
                          width: "100%",
                          "popper-class": _vm.customClass,
                          url: _vm.url,
                          multiPortal: _vm.multiPortal,
                          multiIndex: _vm.multiIndex,
                          deptId: _vm.deptid,
                          urlPath: _vm.orgPath,
                          params: _vm.orgParamsExt,
                        },
                        on: {
                          "update:deptId": function ($event) {
                            _vm.deptid = $event
                          },
                          "update:dept-id": function ($event) {
                            _vm.deptid = $event
                          },
                          change: _vm.handleDeptChange,
                          ready: _vm.handleReady,
                        },
                        model: {
                          value: _vm.dept,
                          callback: function ($$v) {
                            _vm.dept = $$v
                          },
                          expression: "dept",
                        },
                      }),
                      _c(
                        "fks-select",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.activeName === "second",
                              expression: "activeName === 'second'",
                            },
                          ],
                          staticStyle: { width: "100%" },
                          attrs: {
                            readonly: _vm.roleReadonly,
                            "popper-class": _vm.customClass,
                            placeholder: _vm.t("fks.user.selectRole"),
                          },
                          on: { change: _vm.handleRoleSelect },
                          model: {
                            value: _vm.roleValue,
                            callback: function ($$v) {
                              _vm.roleValue = $$v
                            },
                            expression: "roleValue",
                          },
                        },
                        _vm._l(_vm.roleList, function (item) {
                          return _c("fks-option", {
                            key: item.id,
                            attrs: { label: item.name, value: item.id },
                          })
                        }),
                        1
                      ),
                    ],
                    1
                  ),
                ],
                1
              ),
              _c(
                "fks-row",
                {
                  staticClass: "fks-user-transfer-container",
                  attrs: { gutter: 68 },
                },
                [
                  _c(
                    "fks-col",
                    { attrs: { span: 12 } },
                    [
                      _vm.multiple
                        ? _c(
                            "div",
                            { staticClass: "right-button" },
                            [
                              _c(
                                "fks-button",
                                {
                                  staticClass: "second-button",
                                  attrs: { size: "small", plain: "" },
                                  on: { click: _vm.chooseAll },
                                },
                                [
                                  _c("i", {
                                    staticClass: "fks-icon-select-all",
                                  }),
                                  _vm._v(_vm._s(_vm.t("fks.user.allselect"))),
                                ]
                              ),
                            ],
                            1
                          )
                        : _vm._e(),
                      _c(
                        "fks-tabs",
                        {
                          staticClass: "fks-user-transfer-tabs",
                          attrs: { type: "card" },
                          model: {
                            value: _vm.editableTabsValue,
                            callback: function ($$v) {
                              _vm.editableTabsValue = $$v
                            },
                            expression: "editableTabsValue",
                          },
                        },
                        [
                          _vm.dataShow
                            ? _c(
                                "fks-tab-pane",
                                {
                                  attrs: {
                                    label: _vm.t("fks.user.memberlist"),
                                    name: "first",
                                  },
                                },
                                [
                                  _vm.editableTabsValue == "first"
                                    ? _c(
                                        "div",
                                        {
                                          staticClass:
                                            "fks-user-transfer-container__table-cont",
                                        },
                                        [
                                          _c(
                                            "fks-table",
                                            {
                                              directives: [
                                                {
                                                  name: "loading",
                                                  rawName: "v-loading",
                                                  value: _vm.loading,
                                                  expression: "loading",
                                                },
                                              ],
                                              staticStyle: { width: "100%" },
                                              attrs: {
                                                data: _vm.tableList,
                                                height: "400px",
                                                border: "",
                                              },
                                              on: {
                                                "sort-change": _vm.sortHandler,
                                                "row-click": _vm.addToRight,
                                              },
                                            },
                                            [
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "userFullname",
                                                  label: _vm.t("fks.user.name"),
                                                  "min-width": "20%",
                                                  sortable: "custom",
                                                },
                                              }),
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "userName",
                                                  label:
                                                    _vm.t("fks.user.username"),
                                                  "min-width": "25%",
                                                },
                                              }),
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "sex",
                                                  label: _vm.t("fks.gender"),
                                                  "min-width": "20%",
                                                },
                                              }),
                                              _vm.activeName === "first"
                                                ? _c("fks-table-column", {
                                                    attrs: {
                                                      label: _vm.t(
                                                        "fks.user.belongbranch"
                                                      ),
                                                      "show-overflow-tooltip":
                                                        "",
                                                      "min-width": "35%",
                                                      "class-name":
                                                        "my-table-tc1",
                                                      align: "left",
                                                    },
                                                    scopedSlots: _vm._u(
                                                      [
                                                        {
                                                          key: "default",
                                                          fn: function (scope) {
                                                            return [
                                                              _vm._v(
                                                                _vm._s(
                                                                  scope.row
                                                                    .orgList
                                                                    ? _vm.handleOrg(
                                                                        scope
                                                                          .row
                                                                          .orgList
                                                                      )
                                                                    : ""
                                                                )
                                                              ),
                                                            ]
                                                          },
                                                        },
                                                      ],
                                                      null,
                                                      false,
                                                      798443817
                                                    ),
                                                  })
                                                : _vm._e(),
                                            ],
                                            1
                                          ),
                                          _c(
                                            "div",
                                            {
                                              staticClass: "fks-user-left-page",
                                            },
                                            [
                                              _c("fks-pagination", {
                                                attrs: {
                                                  "pager-count": 5,
                                                  "page-sizes": [
                                                    25, 50, 100, 200,
                                                  ],
                                                  "page-size": _vm.pageSize,
                                                  total: _vm.totalCount,
                                                  layout:
                                                    "prev, pager, next,total, sizes",
                                                },
                                                on: {
                                                  "size-change":
                                                    _vm.handleSizeChange,
                                                  "current-change":
                                                    _vm.handleCurrentChange,
                                                },
                                              }),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      )
                                    : _vm._e(),
                                ]
                              )
                            : _vm._e(),
                          _vm.recentUser
                            ? _c(
                                "fks-tab-pane",
                                {
                                  attrs: {
                                    label: _vm.t("fks.user.recentadd"),
                                    name: "second",
                                  },
                                },
                                [
                                  _vm.editableTabsValue == "second"
                                    ? _c(
                                        "div",
                                        { staticClass: "table-cont" },
                                        [
                                          _c(
                                            "fks-table",
                                            {
                                              staticStyle: { width: "100%" },
                                              attrs: {
                                                data: _vm.tableData,
                                                height: "400px",
                                                border: "",
                                              },
                                              on: {
                                                "row-click": _vm.addToRight,
                                              },
                                            },
                                            [
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "userFullname",
                                                  label: _vm.t("fks.user.name"),
                                                  "min-width": "20%",
                                                },
                                              }),
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "userName",
                                                  label:
                                                    _vm.t("fks.user.username"),
                                                  "min-width": "25%",
                                                },
                                              }),
                                              _c("fks-table-column", {
                                                attrs: {
                                                  prop: "sex",
                                                  label: _vm.t("fks.gender"),
                                                  "min-width": "20%",
                                                },
                                              }),
                                              _vm.activeName === "first"
                                                ? _c("fks-table-column", {
                                                    attrs: {
                                                      label: _vm.t(
                                                        "fks.user.belongbranch"
                                                      ),
                                                      "show-overflow-tooltip":
                                                        "",
                                                      "min-width": "35%",
                                                      "class-name":
                                                        "my-table-tc1",
                                                      align: "left",
                                                    },
                                                    scopedSlots: _vm._u(
                                                      [
                                                        {
                                                          key: "default",
                                                          fn: function (scope) {
                                                            return [
                                                              _vm._v(
                                                                _vm._s(
                                                                  scope.row
                                                                    .orgList
                                                                    ? _vm.handleOrg(
                                                                        scope
                                                                          .row
                                                                          .orgList
                                                                      )
                                                                    : ""
                                                                )
                                                              ),
                                                            ]
                                                          },
                                                        },
                                                      ],
                                                      null,
                                                      false,
                                                      798443817
                                                    ),
                                                  })
                                                : _vm._e(),
                                            ],
                                            1
                                          ),
                                          _c(
                                            "div",
                                            {
                                              staticClass: "fks-user-left-page",
                                            },
                                            [
                                              _c("fks-pagination", {
                                                attrs: {
                                                  total: _vm.tableData.length,
                                                  layout: "total",
                                                },
                                              }),
                                            ],
                                            1
                                          ),
                                        ],
                                        1
                                      )
                                    : _vm._e(),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      ),
                    ],
                    1
                  ),
                  _c("fks-col", { attrs: { span: 12 } }, [
                    _c(
                      "div",
                      { staticClass: "right-button" },
                      [
                        _c(
                          "fks-button",
                          {
                            staticClass: "second-button",
                            attrs: { size: "small", plain: "" },
                            on: { click: _vm.clearChosed },
                          },
                          [
                            _c("i", { staticClass: "fks-icon-reset" }),
                            _vm._v(_vm._s(_vm.t("fks.clear"))),
                          ]
                        ),
                      ],
                      1
                    ),
                    _c("div", { staticClass: "fks-user-right-transfer" }, [
                      _c(
                        "div",
                        { staticClass: "fks-user-right-transfer__title" },
                        [
                          _vm._v(
                            "\n              " +
                              _vm._s(_vm.t("fks.user.selectedmember")) +
                              "\n            "
                          ),
                        ]
                      ),
                      _c(
                        "div",
                        { staticClass: "fks-user-right-transfer__content" },
                        [
                          _c(
                            "fks-table",
                            {
                              staticStyle: { width: "100%" },
                              attrs: {
                                data: _vm.chosedList,
                                height: "436px",
                                "header-row-class-name": "my-table-head",
                                "row-class-name": "my-table-row",
                                border: "",
                              },
                              on: { "row-click": _vm.deletPerson },
                            },
                            [
                              _c("fks-table-column", {
                                attrs: {
                                  prop: "userFullname",
                                  label: _vm.t("fks.user.name"),
                                  "min-width": "20%",
                                },
                              }),
                              _c("fks-table-column", {
                                attrs: {
                                  prop: "userName",
                                  label: _vm.t("fks.user.username"),
                                  "min-width": "25%",
                                },
                              }),
                              _c("fks-table-column", {
                                attrs: {
                                  prop: "sex",
                                  label: _vm.t("fks.gender"),
                                  "min-width": "20%",
                                },
                              }),
                              _vm.activeName === "first"
                                ? _c("fks-table-column", {
                                    attrs: {
                                      prop: "orgList",
                                      label: _vm.t("fks.user.belongbranch"),
                                      "show-overflow-tooltip": "",
                                      "min-width": "35%",
                                      "class-name": "my-table-tc1",
                                      align: "left",
                                    },
                                    scopedSlots: _vm._u(
                                      [
                                        {
                                          key: "default",
                                          fn: function (scope) {
                                            return [
                                              _vm._v(
                                                _vm._s(
                                                  scope.row.orgList
                                                    ? _vm.handleOrg(
                                                        scope.row.orgList
                                                      )
                                                    : ""
                                                )
                                              ),
                                            ]
                                          },
                                        },
                                      ],
                                      null,
                                      false,
                                      798443817
                                    ),
                                  })
                                : _vm._e(),
                            ],
                            1
                          ),
                        ],
                        1
                      ),
                    ]),
                  ]),
                ],
                1
              ),
            ],
            1
          ),
        ],
        1
      ),
      _c(
        "div",
        {
          staticClass: "fks-user-transfer-footer",
          attrs: { slot: "footer" },
          slot: "footer",
        },
        [
          _c(
            "fks-row",
            [
              _c(
                "fks-button",
                {
                  staticClass: "fks-icon-check",
                  attrs: { type: "primary" },
                  on: { click: _vm.subUser },
                },
                [_vm._v(_vm._s(_vm.t("fks.confirm")))]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    2
  )
}
var user_selector_dialogvue_type_template_id_4c2706bf_staticRenderFns = []
user_selector_dialogvue_type_template_id_4c2706bf_render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector/src/user-selector-dialog.vue?vue&type=template&id=4c2706bf&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector/src/user-selector-dialog.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var user_selector_dialogvue_type_script_lang_js_ = ({
  name: 'UserSelectorDialog',
  mixins: [mixins_selector, locale_default.a],
  props: {
    deptExpand: {
      type: Boolean,
      default: false
    },
    customClass: {
      type: String,
      default: ''
    },
    layout: {
      type: String,
      default: 'branch,role'
    },
    initSelect: {
      type: Boolean,
      default: false
    },
    filterLogout: {
      type: Boolean,
      default: true
    },
    multiPortal: {
      type: Boolean
    },
    multiIndex: {
      type: Array
    },
    multiple: {
      type: Boolean
    },
    userSureList: {
      type: Array
    },
    visual: {
      type: Boolean
    },
    recentUser: {
      type: Boolean
    },
    orgParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    urlParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {},
    urlPath: {
      type: String
    },
    orgPath: {
      type: String,
      default: '/sys-user/orgs/tree'
    },
    url: {
      type: String
    },
    roleFixed: {
      type: Boolean,
      default: false
    },
    handleOrg: {
      type: Function,
      default: function _default(orgList) {
        return orgList.length ? orgList[0].name : '';
      }
    }
  },
  data: function data() {
    return {
      sort: '',
      roleReadonly: false,
      visible: false,
      roleValue: '', //角色选择器value
      ifDataRender: false, //初次打开时部门选择器数据是否渲染完成
      ifChooseFirst: false, //是否是打开时初始化部门选择器动作（防止触发handleDeptChange
      activeName: 'first', // 部门角色tabs
      dept: {}, // chosed dept
      searchKey: '',
      editableTabsValue: 'second',
      // table data relative
      dataShow: false,
      loading: false,
      roleList: [], //角色列表
      tableList: [],
      tableData: this.$storage.get('latestUser') ? JSON.parse(this.$storage.get('latestUser')).reverse() : [], // 最近添加数据
      chosedList: [],
      sureList: [], // 显示tags用
      // 分页相关
      pageSize: 25,
      totalCount: 0,
      currentPage: 1,
      rolePage: 1,
      totalPage: 1,
      deptid: this.params.orgNo || '',
      orgParamsExt: Object.assign({
        id: this.params.orgNo,
        portalId: this.params.portalId
      }, this.orgParams),
      enterFirst: true //是否组件渲染后初次打开（涉及最近添加页逻辑
    };
  },

  watch: {
    visual: function visual(val) {
      var _this = this;

      //监听父组件对visual的改变
      this.visible = val;
      this.chosedList = this.sureList.concat();
      if (val) {
        this.activeName = this.layout.split(',').indexOf('branch') > -1 ? 'first' : 'second';
        if (this.layout == 'role' || this.activeName === 'second') {
          this.initialRoleList();
        }
        if (this.recentUser) {
          this.editableTabsValue = 'second';
        } else {
          this.editableTabsValue = 'first';
          this.dataShow = true;
        }
        //组件不是初次打开从父组件调用子组件方法，组件是初次打开时由内部data渲染完成触发子组件方法调用
        if (this.ifDataRender && !this.ifChooseFirst) {
          this.$nextTick(function () {
            _this.selectOrgFirst();
          });
        }
      }
    },
    userSureList: function userSureList(val) {
      this.sureList = val;
    }
  },
  methods: {
    sortHandler: function sortHandler(data) {
      this.sort = data.order == 'ascending' ? 'asc' : 'desc';
      this.getList();
    },

    //筛选模式（按部门/角色）切换
    handleTabChange: function handleTabChange(tab, event) {
      this.tableList = [];
      //初次选择角色分类时初始化角色选择列表
      if (this.activeName === 'second' && !this.roleList.length) {
        this.initialRoleList();
      } else {
        this.getList();
      }
    },
    getList: function getList() {
      switch (this.activeName) {
        case 'first':
          this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage, this.sort);
          break;
        case 'second':
          this.getUser(this.roleValue, this.searchKey, this.pageSize, this.rolePage, this.sort);
          break;
      }
    },

    //选择角色列表
    handleRoleSelect: function handleRoleSelect(val) {
      this.dataShow = true;
      this.rolePage = 1;
      this.editableTabsValue = 'first';
      this.getUser(val, this.searchKey, this.pageSize, this.rolePage);
    },

    //部门选择器数据渲染完成
    handleReady: function handleReady(val) {
      if (val && !this.ifDataRender) {
        if (this.initSelect && this.activeName == 'first') this.deptid = this.$refs.orgSel.selectFirst();
        this.dataShow = true;
        this.currentPage = 1;
        //如果部门树预填失败（即返回空） 触发初次进入
        if (!this.deptid) this.enterFirst = false;
        this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
        this.ifDataRender = true;
        this.ifChooseFirst = true;
      }
    },
    selectOrgFirst: function selectOrgFirst() {
      if (this.initSelect && this.activeName == 'first') this.deptid = this.$refs.orgSel.selectFirst();
      this.dataShow = true;
      this.currentPage = 1;
      this.ifChooseFirst = true;
      this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
    },
    closeDialog: function closeDialog() {
      this.searchKey = '';
      this.roleValue = '';
      this.ifChooseFirst = false;
      this.visible = false;
      this.$emit('update:visual', false);
    },
    addToRight: function addToRight(row, column, event) {
      // 左右穿梭框数据的添加
      var result = this.chosedList.some(function (item) {
        // 采用some为了避免查询结果相同的对象因指针不同而可以再次添加
        if (item.userName == row.userName) {
          return true;
        }
      });
      if (result) {
        return false;
      } else {
        if (!this.multiple) {
          this.chosedList.shift();
          this.chosedList.push(row);
        } else if (this.multipleLimit <= 0 || this.chosedList.length < this.multipleLimit) {
          this.chosedList.push(row);
        }
      }
    },
    deletPerson: function deletPerson(row, column, event) {
      // 左右穿梭框数据的删除
      this.chosedList.splice(this.chosedList.indexOf(row), 1);
    },
    chooseAll: function chooseAll() {
      // 全选
      if (this.editableTabsValue == 'first') {
        this.chooseFunc(this.tableList);
        //this.chosedList = this.tableList.concat()
      } else {
        this.chooseFunc(this.tableData);
        // this.chosedList = this.tableData.concat()
      }
    },
    chooseFunc: function chooseFunc(arr) {
      if (!this.multiple) {
        this.chosedList.shift();
        this.chosedList.push(arr[0]);
      } else if (this.multipleLimit <= 0 || this.chosedList.length < this.multipleLimit) {
        this.chosedList = [];
        var len = this.multipleLimit != 0 ? this.multipleLimit : arr.length;
        for (var a = 0; a < len; a++) {
          this.chosedList.push(arr[a]);
        }
      }
    },
    clearChosed: function clearChosed() {
      // 清空已选
      this.chosedList = [];
    },
    handleDeptChange: function handleDeptChange(item) {
      // 选中部门树
      this.currentPage = 1;
      this.deptid = item[0] && item[0].id || '';
      this.deptTree = item.label;
      this.dataShow = true;
      if (this.enterFirst) {
        //初次进入时
        this.enterFirst = false;
      } else {
        if (!this.tableData.length) this.editableTabsValue = 'first';
        //当数据渲染完成且不是打开组件进行部门选择器初始化时（即点击部门树时）
        if (this.ifDataRender && this.ifChooseFirst) {
          this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
        }
      }
    },
    searchUser: function searchUser(serval) {
      // 按人员搜索，触发条件是onchange,每次搜索都要重新请求数据，并不是在已有的数据下进行过滤
      this.dataShow = true;
      this.editableTabsValue = 'first';
      if (this.activeName === 'first') {
        this.currentPage = 1;
        this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
      }
      if (this.activeName === 'second') {
        this.rolePage = 1;
        this.getUser(this.roleValue, this.searchKey, this.pageSize, this.rolePage);
      }
    },
    clearSearchKey: function clearSearchKey() {
      // 清空按账号或姓名搜索框
      this.searchKey = '';
    },
    handleSizeChange: function handleSizeChange(val) {
      // 更改每页条数需要重新请求数据
      this.pageSize = val;
      switch (this.activeName) {
        case 'first':
          this.currentPage = 1;
          this.getUser(this.deptid, this.searchKey, val, this.currentPage);
          break;
        case 'second':
          this.rolePage = 1;
          this.getUser(this.roleValue, this.searchKey, val, this.rolePage);
          break;
      }
    },
    handleCurrentChange: function handleCurrentChange(val) {
      // 切换当前页需要重新请求数据
      if (this.activeName === 'first') {
        this.currentPage = val;
        this.getUser(this.deptid, this.searchKey, this.pageSize, val);
      }
      if (this.activeName === 'second') {
        this.rolePage = val;
        this.getUser(this.roleValue, this.searchKey, this.pageSize, val);
      }
    },
    jumpPage: function jumpPage(val) {
      if (val == 'first') {
        this.currentPage = 1;
        this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
      } else {
        this.currentPage = this.totalPage;
        this.getUser(this.deptid, this.searchKey, this.pageSize, this.currentPage);
      }
    },

    /**
     * @description: 通过参数获取分页人员数据
     * @param {deptNo} 部门编号
     * @param {searchkey} 搜索关键字
     * @param {pagesize} 页面数据大小
     * @param {currentpage} 页码
     * @return:
     */
    getUser: function getUser(deptNo, searchkey, pagesize, currentpage, sort) {
      var _this2 = this;

      // size=  page= currentPage
      this.loading = true;
      var params = {};
      var tempURL = this.url + this.urlPath;
      if (this.activeName === 'first') {
        params = {
          orgNo: !!deptNo ? Number(deptNo) : null,
          searchValue: searchkey.trim(),
          pageSize: pagesize,
          pageNo: currentpage,
          accountStatus: this.filterLogout ? '1' : '',
          sort: sort
        };
        params = Object.assign({}, this.params, params, this.urlParams);
        //当且仅当多门户开启且当前tab页不为当前门户时，已有部门id则不需要门户id
        if (!!params.orgNo && this.multiPortal && this.$refs.orgSel.activeTab != 'present') params.portalId = '';
      }
      if (this.activeName === 'second') {
        //如果是没有portalId的请求会系统异常，不发送
        if (!deptNo) {
          this.loading = false;
          this.tableList = [];
          this.totalCount = 0;
          this.totalPage = 1;
          return;
        }
        tempURL = '/sys-user/role/users/page';
        params = {
          searchValue: searchkey.trim(),
          roleId: deptNo,
          pageSize: pagesize,
          pageNo: currentpage,
          sort: sort
        };
      }

      var r = this.$axios || utils_request;
      r({
        method: 'get',
        url: tempURL,
        params: params,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          //排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this2.tableList = response.data.content || response.data.list;
          _this2.totalCount = response.data.totalElements || response.data.total;
          _this2.totalPage = response.data.totalPages || response.data.pages;
          _this2.loading = false;
        } else {
          _this2.loading = false;
        }
      }).catch(function (err) {
        _this2.loading = false;
        console.log(err);
      });
    },

    //初始化角色选择列表
    initialRoleList: function initialRoleList() {
      var _this3 = this;

      //大小暂时写死
      this.totalCount = 0;
      this.totalPage = 1;
      var tempDeptId = this.params.portalId;
      if (!tempDeptId) tempDeptId = this.$storage.get('portal') ? JSON.parse(this.$storage.get('portal')).id : '';
      //如果params没有走缓存
      var params = {
        pageSize: 100,
        pageNo: 1,
        portalId: tempDeptId
      };
      var r = this.$axios || utils_request;
      r({
        method: 'get',
        url: '/sys-system/roles/page',
        params: params,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          //排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this3.roleList = response.data.list;
          if (_this3.params.role) {
            _this3.roleValue = _this3.params.role;
            _this3.roleReadonly = _this3.roleFixed;
            _this3.getList();
          }
        } else {
          console.log('角色列表获取失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    },
    subUser: function subUser() {
      var _this4 = this;

      this.sureList = this.chosedList.concat();
      this.$emit('update:userSureList', this.sureList);
      this.$emit('updateSureList', this.sureList);
      if (this.$storage.get('latestUser')) {
        (function () {
          var latestUser = JSON.parse(_this4.$storage.get('latestUser'));

          var _loop = function _loop(i) {
            var indexT = 0;
            var result = latestUser.some(function (item) {
              if (item.userName == _this4.chosedList[i].userName) {
                indexT = latestUser.indexOf(item);
                return true;
              }
            });
            if (result) {
              latestUser.splice(indexT, 1);
              latestUser.push(_this4.chosedList[i]);
            } else {
              latestUser.push(_this4.chosedList[i]);
            }
          };

          for (var i = 0; i < _this4.chosedList.length; i++) {
            _loop(i);
          }
          if (latestUser.length > 20) {
            latestUser = latestUser.splice(latestUser.length - 20, 20);
          }
          _this4.$storage.set('latestUser', JSON.stringify(latestUser));
        })();
      } else {
        var latestUser = this.chosedList.concat();
        if (latestUser.length > 20) {
          latestUser = latestUser.splice(latestUser.length - 20, 20);
        }
        this.$storage.set('latestUser', JSON.stringify(latestUser));
      }
      this.tableData = JSON.parse(this.$storage.get('latestUser')).reverse();
      //重载部门选择器，清空搜索栏
      //提交时不清空已选
      this.searchKey = '';
      this.visible = false;
      this.roleValue = '';
      this.$emit('update:visual', false);
    }
  },
  mounted: function mounted() {}
});
// CONCATENATED MODULE: ./packages/user-selector/src/user-selector-dialog.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_user_selector_dialogvue_type_script_lang_js_ = (user_selector_dialogvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/user-selector/src/user-selector-dialog.vue





/* normalize component */

var user_selector_dialog_component = normalizeComponent(
  src_user_selector_dialogvue_type_script_lang_js_,
  user_selector_dialogvue_type_template_id_4c2706bf_render,
  user_selector_dialogvue_type_template_id_4c2706bf_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var user_selector_dialog = (user_selector_dialog_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector/src/user-selector.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var user_selectorvue_type_script_lang_js_ = ({
  name: 'FksUserSelector',
  mixins: [mixins_selector, locale_default.a],
  components: { UserSelectorDialog: user_selector_dialog },
  props: {
    deptExpand: {
      type: Boolean,
      default: false
    },
    customClass: {
      type: String,
      default: 'fks-user-transfer-dialog'
    },
    layout: {
      type: String,
      default: 'branch,role'
    },
    placeholder: {
      type: String,
      default: ''
    },
    initSelect: {
      type: Boolean,
      default: false
    },
    filterLogout: {
      type: Boolean,
      default: true
    },
    multiPortal: {
      type: Boolean
    },
    multiIndex: {
      type: Array
    },
    recentUser: {
      type: Boolean,
      default: true
    },
    username: {
      type: String,
      default: ''
    },
    userfullname: {
      type: String,
      default: ''
    },
    orgParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    urlParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    orgPath: {
      type: String,
      default: '/sys-user/orgs/tree'
    },
    urlPath: {
      type: String,
      default: '/sys-user/users/page'
    },
    roleFixed: {
      type: Boolean,
      default: false
    },
    handleOrg: {
      type: Function
    }
  },
  data: function data() {
    return {
      visible: false,
      reference: '', // slot对应
      sureList: [], // 显示tags用
      // 分页相关
      innerFlag: false
    };
  },

  watch: {
    username: function username(val) {
      if (!this.innerFlag) {
        this.initialList();
      }
      this.innerFlag = false;
    }
  },
  methods: {
    updateSureList: function updateSureList(val) {
      this.innerFlag = true;
      this.updateProps(this.sureList);
    },
    updateProps: function updateProps(val) {
      this.innerFlag = true;
      var usernameStr = '';
      var userfullnameStr = '';
      if (val.length == 0) {
        this.$emit('update:username', '');
        this.$emit('update:userfullname', '');
        this.$emit('change', val);
      } else {
        val.forEach(function (item) {
          usernameStr += item.userName + ',';
          userfullnameStr += item.userFullname + ',';
        });
        this.$emit('update:username', usernameStr.substring(0, usernameStr.length - 1));
        this.$emit('update:userfullname', userfullnameStr.substring(0, userfullnameStr.length - 1));
        this.$emit('change', val);
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    //根据username初始化tag输入框
    initialList: function initialList() {
      var _this = this;

      var userfullnameArr = this.userfullname ? this.userfullname.split(',') : [];
      var usernameArr = this.username ? this.username.split(',') : [];
      var len = userfullnameArr.length;
      var len2 = usernameArr.length;

      if (this.userfullname && this.username) {
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u4EBA\u5458\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u4EBA\u5458\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          this.sureList = [];
          usernameArr.forEach(function (e, index) {
            var obj = {
              userFullname: userfullnameArr[index],
              userName: e
            };
            _this.sureList.push(obj);
          });
        }
      } else if (!this.userfullname && !this.username) {
        this.sureList = [];
      } else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u4EBA\u5458\u6570\u636E,\u4EBA\u5458id\u548C\u4EBA\u5458\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 打开选人面板
     * @param {}
     * @return:
     */
    open: function open() {
      if (this.uploadReadOnly || this.forbidden) {
        return false;
      }
      this.visible = true;
    },
    deleteOne: function deleteOne(tag) {
      // 删除标签中的人员
      this.sureList.splice(this.sureList.findIndex(function (item) {
        return item.userName == tag.userName;
      }), 1);
      this.updateProps(this.sureList);
    }
  },
  mounted: function mounted() {
    /**获取slot内容，判断显示内容 */
    this.reference = '';
    if (this.$slots.reference && this.$slots.reference[0]) {
      this.reference = this.$slots.reference[0].elm;
    }
    this.initialList();
  }
});
// CONCATENATED MODULE: ./packages/user-selector/src/user-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_user_selectorvue_type_script_lang_js_ = (user_selectorvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/user-selector/src/user-selector.vue





/* normalize component */

var user_selector_component = normalizeComponent(
  src_user_selectorvue_type_script_lang_js_,
  user_selectorvue_type_template_id_904bc870_render,
  user_selectorvue_type_template_id_904bc870_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var user_selector = (user_selector_component.exports);
// CONCATENATED MODULE: ./packages/user-selector/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
user_selector.install = function (Vue) {
  Vue.component(user_selector.name, user_selector);
};

// 默认导出组件
/* harmony default export */ var packages_user_selector = (user_selector);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector.vue?vue&type=template&id=f1ec1ecc&
var user_selectorvue_type_template_id_f1ec1ecc_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-user-selector-pro-page", style: { width: _vm.width } },
    [
      _c("span", { on: { click: _vm.open } }, [_vm._t("reference")], 2),
      !_vm.reference
        ? _c(
            "div",
            { staticClass: "fks-user-selector-input", on: { click: _vm.open } },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "fks-user-selector-input__tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                    "is-disabled": _vm.uploadReadOnly || _vm.forbidden,
                  },
                },
                [
                  _vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.sureList.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  class: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                  },
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.sureList[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.sureList[0].userFullname)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.sureList.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        "+ " + _vm._s(_vm.sureList.length - 1)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        _vm._l(_vm.sureList, function (tag, index) {
                          return _c(
                            "fks-tag",
                            {
                              key: index,
                              class: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                              },
                              attrs: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                                size: _vm.size,
                                "disable-transitions": "",
                                type: "info",
                              },
                              on: {
                                close: function ($event) {
                                  return _vm.deleteOne(tag)
                                },
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v(_vm._s(tag.userFullname))]
                              ),
                            ]
                          )
                        }),
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "div",
                [
                  _c(
                    "fks-input",
                    {
                      ref: "input",
                      staticClass: "fks-user-out-input",
                      attrs: {
                        readonly: "",
                        disabled: _vm.forbidden,
                        value: _vm.username,
                        size: _vm.size,
                        placeholder:
                          _vm.sureList.length > 0
                            ? ""
                            : _vm.placeholder
                            ? _vm.placeholder
                            : _vm.t("fks.user.placeholder"),
                      },
                    },
                    [
                      !_vm.uploadReadOnly && !_vm.forbidden
                        ? _c("template", { slot: "suffix" }, [
                            _c("i", {
                              staticClass:
                                "fks-icon-circle-plus-outline fks-input__icon",
                              staticStyle: { cursor: "pointer" },
                              on: { click: _vm.open },
                            }),
                          ])
                        : _vm._e(),
                    ],
                    2
                  ),
                ],
                1
              ),
            ]
          )
        : _vm._e(),
      _c(
        "user-selector-dialog",
        _vm._b(
          {
            attrs: {
              multiple: _vm.multiple,
              showAllUser: _vm.showAllUser,
              multipleLimit: _vm.multipleLimit,
              visual: _vm.visible,
              userSureList: _vm.sureList,
              params: _vm.params,
              url: _vm.url,
              headers: _vm.headers,
            },
            on: {
              "update:visual": function ($event) {
                _vm.visible = $event
              },
              "update:userSureList": function ($event) {
                _vm.sureList = $event
              },
              "update:user-sure-list": function ($event) {
                _vm.sureList = $event
              },
            },
          },
          "user-selector-dialog",
          _vm.$attrs,
          false
        )
      ),
    ],
    1
  )
}
var user_selectorvue_type_template_id_f1ec1ecc_staticRenderFns = []
user_selectorvue_type_template_id_f1ec1ecc_render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue?vue&type=template&id=f1ec1ecc&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=template&id=4bbe1823&
var user_selector_dialogvue_type_template_id_4bbe1823_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-dialog",
    {
      attrs: {
        visible: _vm.visual,
        width: "1200px",
        top: "8vh",
        "append-to-body": "",
        "custom-class": "fks-user-transfer-pro-dialog " + _vm.customClass,
        "before-close": _vm.closeDialog,
      },
    },
    [
      _c("template", { slot: "title" }, [
        _c("i", { staticClass: "fks-icon-user" }),
        _c("span", [_vm._v(_vm._s(_vm.t("fks.user.selectmember")))]),
      ]),
      _c(
        "fks-row",
        { staticClass: "fks-user-transfer-container", attrs: { gutter: 68 } },
        [
          _c(
            "fks-col",
            { attrs: { span: 16 } },
            [
              _c(
                "div",
                { staticClass: "fks-user-selector-bar" },
                [
                  _c("span", { staticClass: "bolder" }, [
                    _vm._v(_vm._s(_vm.t("fks.selectorPro.select"))),
                  ]),
                  _vm.multiPortal
                    ? [
                        _c(
                          "fks-popover",
                          {
                            staticClass: "fks-selector-page",
                            attrs: {
                              "popper-class": "fks-popover-portal-tree",
                            },
                            model: {
                              value: _vm.portalTreeVisible,
                              callback: function ($$v) {
                                _vm.portalTreeVisible = $$v
                              },
                              expression: "portalTreeVisible",
                            },
                          },
                          [
                            _c("PortalTree", {
                              attrs: {
                                portalId: _vm.portalId,
                                portal: _vm.activePortal,
                                portalFilter: _vm.portalFilter,
                              },
                              on: {
                                "update:portalId": function ($event) {
                                  _vm.portalId = $event
                                },
                                "update:portal-id": function ($event) {
                                  _vm.portalId = $event
                                },
                                "update:portal": function ($event) {
                                  _vm.activePortal = $event
                                },
                              },
                            }),
                            _c(
                              "span",
                              {
                                class: [
                                  "fks-popover__reference",
                                  !_vm.activePortal && "lighter",
                                ],
                                attrs: { slot: "reference" },
                                slot: "reference",
                              },
                              [
                                _c("span", { staticClass: "reference-title" }, [
                                  _vm._v(
                                    _vm._s(
                                      (_vm.activePortal &&
                                        _vm.activePortal.name) ||
                                        _vm.t(
                                          "fks.selectorPro.placeSelectPortal"
                                        )
                                    )
                                  ),
                                ]),
                                _c("i", {
                                  directives: [
                                    {
                                      name: "show",
                                      rawName: "v-show",
                                      value: _vm.portalId,
                                      expression: "portalId",
                                    },
                                  ],
                                  staticClass:
                                    "fks-icon-circle-close hover-icon",
                                  on: {
                                    click: function ($event) {
                                      $event.stopPropagation()
                                      _vm.portalId = ""
                                    },
                                  },
                                }),
                                _c("i", {
                                  class:
                                    "fks-icon-arrow-" +
                                    (_vm.portalTreeVisible ? "up" : "down"),
                                }),
                              ]
                            ),
                          ],
                          1
                        ),
                      ]
                    : _vm._e(),
                  _c(
                    "fks-org-selector-pro",
                    _vm._b(
                      {
                        ref: "orgSel",
                        attrs: {
                          width: "120px",
                          showAllUser: _vm.showAllUser,
                          deptId: _vm.deptid,
                          params: _vm.orgParams,
                        },
                        on: {
                          "update:deptId": function ($event) {
                            _vm.deptid = $event
                          },
                          "update:dept-id": function ($event) {
                            _vm.deptid = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "reference",
                            fn: function (ref) {
                              var popflag = ref.popflag
                              var selectedArray = ref.selectedArray
                              return [
                                _c(
                                  "span",
                                  {
                                    class: [
                                      "fks-popover__reference",
                                      _vm.deptid || "lighter",
                                    ],
                                  },
                                  [
                                    _c(
                                      "span",
                                      { staticClass: "reference-title" },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.getSelectorStr(selectedArray) ||
                                              _vm.orgSelectorProps
                                                .placeholder ||
                                              _vm.t("fks.org.selectbranch")
                                          )
                                        ),
                                      ]
                                    ),
                                    _c("i", {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.deptid,
                                          expression: "deptid",
                                        },
                                      ],
                                      staticClass:
                                        "fks-icon-circle-close hover-icon",
                                      on: {
                                        click: function ($event) {
                                          $event.stopPropagation()
                                          _vm.deptid = ""
                                        },
                                      },
                                    }),
                                    _c("i", {
                                      class:
                                        "fks-icon-arrow-" +
                                        (popflag ? "up" : "down"),
                                    }),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      },
                      "fks-org-selector-pro",
                      _vm.orgProps,
                      false
                    )
                  ),
                  _c(
                    "fks-post-selector-pro",
                    _vm._b(
                      {
                        ref: "postSel",
                        attrs: {
                          width: "120px",
                          showAllUser: _vm.showAllUser,
                          params: _vm.postParams,
                          postId: _vm.postId,
                        },
                        on: {
                          "update:postId": function ($event) {
                            _vm.postId = $event
                          },
                          "update:post-id": function ($event) {
                            _vm.postId = $event
                          },
                        },
                        scopedSlots: _vm._u([
                          {
                            key: "reference",
                            fn: function (ref) {
                              var popflag = ref.popflag
                              var selectedArray = ref.selectedArray
                              return [
                                _c(
                                  "span",
                                  {
                                    class: [
                                      "fks-popover__reference",
                                      _vm.postId || "lighter",
                                    ],
                                  },
                                  [
                                    _c(
                                      "span",
                                      { staticClass: "reference-title" },
                                      [
                                        _vm._v(
                                          _vm._s(
                                            _vm.getSelectorStr(selectedArray) ||
                                              _vm.postSelectorProps
                                                .placeholder ||
                                              _vm.t("fks.post.selectpost")
                                          )
                                        ),
                                      ]
                                    ),
                                    _c("i", {
                                      directives: [
                                        {
                                          name: "show",
                                          rawName: "v-show",
                                          value: _vm.postId,
                                          expression: "postId",
                                        },
                                      ],
                                      staticClass:
                                        "fks-icon-circle-close hover-icon",
                                      on: {
                                        click: function ($event) {
                                          $event.stopPropagation()
                                          _vm.postId = ""
                                        },
                                      },
                                    }),
                                    _c("i", {
                                      class:
                                        "fks-icon-arrow-" +
                                        (popflag ? "up" : "down"),
                                    }),
                                  ]
                                ),
                              ]
                            },
                          },
                        ]),
                      },
                      "fks-post-selector-pro",
                      _vm.postProps,
                      false
                    )
                  ),
                  _c(
                    "fks-input",
                    {
                      attrs: {
                        placeholder: _vm.t("fks.user.searchname"),
                        maxlength: 50,
                        size: "medium",
                      },
                      nativeOn: {
                        keyup: function ($event) {
                          if (
                            !$event.type.indexOf("key") &&
                            _vm._k(
                              $event.keyCode,
                              "enter",
                              13,
                              $event.key,
                              "Enter"
                            )
                          ) {
                            return null
                          }
                          return _vm.searchUser.apply(null, arguments)
                        },
                      },
                      model: {
                        value: _vm.searchKey,
                        callback: function ($$v) {
                          _vm.searchKey = $$v
                        },
                        expression: "searchKey",
                      },
                    },
                    [
                      _c("i", {
                        staticClass: "fks-input__icon fks-icon-search",
                        attrs: { slot: "suffix" },
                        on: {
                          click: function ($event) {
                            $event.stopPropagation()
                            return _vm.searchUser.apply(null, arguments)
                          },
                        },
                        slot: "suffix",
                      }),
                    ]
                  ),
                ],
                2
              ),
              _c(
                "fks-table",
                {
                  directives: [
                    {
                      name: "loading",
                      rawName: "v-loading",
                      value: _vm.loading,
                      expression: "loading",
                    },
                  ],
                  ref: "table",
                  staticStyle: { width: "100%" },
                  attrs: {
                    data: _vm.tableList,
                    "row-key": "userName",
                    "highlight-current-row": "",
                    height: "400px",
                    border: "",
                  },
                  on: {
                    "sort-change": _vm.sortHandler,
                    "row-click": _vm.handleClickRow,
                    "current-change": _vm.handleCurrentSelectionChange,
                    select: _vm.handleSelectionChange,
                    "select-all": _vm.selectAll,
                  },
                },
                [
                  _vm.multiple
                    ? _c("fks-table-column", {
                        attrs: {
                          selectable: _vm.selectable,
                          type: "selection",
                          width: "55",
                        },
                      })
                    : _vm._e(),
                  _c("fks-table-column", {
                    attrs: {
                      prop: "userFullname",
                      label: _vm.t("fks.user.name"),
                      width: "120",
                      sortable: "custom",
                    },
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      prop: "userName",
                      label: _vm.t("fks.user.username"),
                      width: "120",
                    },
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      label: _vm.t("fks.user.belongbranch"),
                      "show-overflow-tooltip": "",
                      "min-width": "35%",
                      "class-name": "my-table-tc1",
                      align: "left",
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (scope) {
                          return [_vm._v(_vm._s(_vm.getOrgStr(scope.row)))]
                        },
                      },
                    ]),
                  }),
                  _c("fks-table-column", {
                    attrs: {
                      label: _vm.t("fks.user.belongpost"),
                      "show-overflow-tooltip": "",
                      "min-width": "35%",
                      "class-name": "my-table-tc1",
                      align: "left",
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (scope) {
                          return [_vm._v(_vm._s(_vm.getPostStr(scope.row)))]
                        },
                      },
                    ]),
                  }),
                ],
                1
              ),
              _c(
                "div",
                { staticClass: "fks-user-left-page" },
                [
                  _c("fks-pagination", {
                    attrs: {
                      "pager-count": 5,
                      "page-sizes": [25, 50, 100, 200],
                      "page-size": _vm.pageSize,
                      total: _vm.totalCount,
                      layout: "prev, pager, next,total, sizes",
                    },
                    on: {
                      "size-change": _vm.handleSizeChange,
                      "current-change": _vm.handleCurrentChange,
                    },
                  }),
                ],
                1
              ),
            ],
            1
          ),
          _c("fks-col", { attrs: { span: 8 } }, [
            _c(
              "div",
              { staticClass: "right-button" },
              [
                _c(
                  "fks-button",
                  {
                    staticClass: "second-button",
                    attrs: { size: "small", plain: "" },
                    on: { click: _vm.clearChosed },
                  },
                  [
                    _c("i", { staticClass: "fks-icon-reset" }),
                    _vm._v(_vm._s(_vm.t("fks.clear"))),
                  ]
                ),
              ],
              1
            ),
            _c("div", { staticClass: "fks-user-right-transfer" }, [
              _c("div", { staticClass: "fks-user-right-transfer__title" }, [
                _vm._v(
                  "\n          " +
                    _vm._s(
                      _vm.t("fks.user.selectedmember") +
                        "（" +
                        _vm.chosedList.length +
                        "）"
                    ) +
                    "\n        "
                ),
              ]),
              _c(
                "div",
                { staticClass: "fks-user-right-transfer__content" },
                [
                  _c(
                    "fks-table",
                    {
                      staticStyle: { width: "100%" },
                      attrs: {
                        data: _vm.chosedList,
                        height: "436px",
                        "header-row-class-name": "my-table-head",
                        "row-class-name": "my-table-row",
                        border: "",
                      },
                      on: { "row-click": _vm.deletPerson },
                    },
                    [
                      _c("fks-table-column", {
                        attrs: {
                          prop: "userFullname",
                          label: _vm.t("fks.user.name"),
                          "min-width": "20%",
                        },
                      }),
                      _c("fks-table-column", {
                        attrs: {
                          prop: "userName",
                          label: _vm.t("fks.user.username"),
                          "min-width": "25%",
                        },
                      }),
                    ],
                    1
                  ),
                ],
                1
              ),
            ]),
          ]),
        ],
        1
      ),
      _c(
        "div",
        {
          staticClass: "fks-user-transfer-footer",
          attrs: { slot: "footer" },
          slot: "footer",
        },
        [
          _c(
            "fks-row",
            [
              _c(
                "fks-button",
                {
                  attrs: { icon: "fks-icon-check", type: "primary" },
                  on: { click: _vm.subUser },
                },
                [_vm._v(_vm._s(_vm.t("fks.confirm")))]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    2
  )
}
var user_selector_dialogvue_type_template_id_4bbe1823_staticRenderFns = []
user_selector_dialogvue_type_template_id_4bbe1823_render._withStripped = true


// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=template&id=4bbe1823&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/portalTree.vue?vue&type=template&id=e2fb8ece&
var portalTreevue_type_template_id_e2fb8ece_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-portal-tree" },
    _vm._l(_vm.portalData, function (group, index) {
      return _c(
        "div",
        { key: index, staticClass: "fks-portal-group" },
        [
          _c("span", { staticClass: "fks-portal-group__title" }, [
            _vm._v(_vm._s(_vm.getPortalTypeName(group[0].type))),
          ]),
          _vm._l(group, function (item) {
            return _c(
              "span",
              {
                key: item.id,
                staticClass: "fks-portal-group__item",
                class: { selected: _vm.portalId === item.id },
                on: {
                  click: function ($event) {
                    return _vm.setActive(item)
                  },
                },
              },
              [_vm._v(" " + _vm._s(item.name))]
            )
          }),
        ],
        2
      )
    }),
    0
  )
}
var portalTreevue_type_template_id_e2fb8ece_staticRenderFns = []
portalTreevue_type_template_id_e2fb8ece_render._withStripped = true


// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue?vue&type=template&id=e2fb8ece&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/portalTree.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var portalLabel = {
  'zh-CN': ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'],
  'en-US': ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
};
/* harmony default export */ var portalTreevue_type_script_lang_js_ = ({
  props: {
    portalId: {
      type: String,
      default: ''
    },
    portalFilter: {
      type: Function,
      default: function _default(data) {
        return data;
      }
    },
    portal: {
      type: Object,
      default: undefined
    }
  },
  data: function data() {
    return {
      portalData: []
    };
  },

  watch: {
    portalId: function portalId(val) {
      var _this = this;

      if (!val) {
        this.$emit('update:portal', undefined);
        return;
      }

      var oId = this.portal ? this.portal.id : '';
      if (val && val !== oId) {
        var portal = this.portalData.find(function (item) {
          return item.id === _this.portalId;
        });
        this.$emit('update:portal', portal);
      }
    }
  },
  mounted: function mounted() {
    this.getPortalList();
  },

  methods: {
    getPortalList: function getPortalList() {
      var _this2 = this;

      var r1 = this.$axios || utils_request;
      r1({
        method: 'get',
        url: 'sys-user/portals/tree',
        ctM: true
      }).then(function (res) {
        var data = _this2.portalFilter(res.data);
        // 遍历门户树 转为Array
        var portalData = _this2.getPortal(data);
        // 转为二维数组
        _this2.portalData = portalData.reduce(function (tal, val) {
          if (tal[tal.length - 1] && tal[tal.length - 1][0].type === val.type) {
            tal[tal.length - 1].push(val);
          } else {
            tal.push([val]);
          }
          return tal;
        }, []);
        // 初始化
        if (_this2.portalId) {
          var portal = portalData.find(function (item) {
            return item.id === _this2.portalId;
          });
          _this2.$emit('update:portal', portal);
        }
      });
    },
    getPortal: function getPortal(tree) {
      var _this3 = this;

      var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      tree.forEach(function (node) {
        list.push({
          name: node.content.name,
          id: node.content.id,
          type: node.content.type
        });
        if (node.children) {
          _this3.getPortal(node.children, list);
        }
      });

      return list.sort(function (a, b) {
        return a.type - b.type;
      });
    },
    getPortalTypeName: function getPortalTypeName(type) {
      var zh = portalLabel['zh-CN'][type] + '\u7EA7\u95E8\u6237';
      var en = 'Level ' + portalLabel['en-US'][type];
      return this.$lang !== 'en-US' ? zh : en;
    },
    setActive: function setActive(item) {
      this.$emit('update:portalId', item.id);
      this.$emit('update:portal', item);
    }
  }
});
// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue?vue&type=script&lang=js&
 /* harmony default export */ var selector_component_portalTreevue_type_script_lang_js_ = (portalTreevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/selector-component/portalTree.vue





/* normalize component */

var portalTree_component = normalizeComponent(
  selector_component_portalTreevue_type_script_lang_js_,
  portalTreevue_type_template_id_e2fb8ece_render,
  portalTreevue_type_template_id_e2fb8ece_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var portalTree = (portalTree_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var user_selector_pro_src_user_selector_dialogvue_type_script_lang_js_ = ({
  name: 'UserSelectorDialog',
  components: { PortalTree: portalTree },
  mixins: [mixins_selector, locale_default.a],
  props: {

    customClass: {
      type: String,
      default: ''
    },
    filterLogout: {
      type: Boolean,
      default: true
    },
    multiPortal: {
      type: Boolean,
      default: false
    },
    multiple: {
      type: Boolean,
      defalut: false
    },
    userSureList: {
      type: Array
    },
    visual: {
      type: Boolean,
      defalut: false
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    urlParams: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    headers: {},
    url: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/v2/users/page'
    },
    multipleLimit: {
      type: Number,
      default: 0
    },
    portalFilter: { // 门户筛选
      type: Object,
      default: function _default(data) {
        return data;
      }
    },
    postSelectorProps: { // 岗位选择器props
      type: Object,
      default: function _default() {
        return {};
      }
    },
    orgSelectorProps: { // 部门选择器props
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  data: function data() {
    var portal = JSON.parse(this.$storage.get('portal') || null) || {};
    return {
      sort: '',
      roleReadonly: false,
      visible: false,
      roleValue: '', // 角色选择器value
      ifDataRender: false, // 初次打开时部门选择器数据是否渲染完成
      ifChooseFirst: false, // 是否是打开时初始化部门选择器动作（防止触发handleDeptChange
      searchKey: '',
      // table data relative
      loading: false,
      tableList: [],
      chosedList: [],
      // 分页相关
      pageSize: 25,
      totalCount: 0,
      currentPage: 1,
      totalPage: 1,
      deptid: '',
      postId: '',
      portalId: portal.id || '',
      activePortal: {},
      portalTreeVisible: false,
      postTemp: {
        id: '',
        name: this.t('fks.selectorPro.all')
      },
      orgTemp: {
        id: '',
        name: this.t('fks.selectorPro.all')
      },
      orgProps: this.orgSelectorProps,
      postProps: this.postSelectorProps,
      enterFirst: true // 是否组件渲染后初次打开（涉及最近添加页逻辑
    };
  },

  computed: {
    usersParams: function usersParams() {
      var temp = {
        portalId: this.portalId,
        orgNo: this.deptid,
        postId: this.postId,
        searchValue: this.searchKey.trim(),
        pageSize: this.pageSize,
        pageNo: this.currentPage,
        sort: this.sort,
        accountStatus: this.filterLogout ? '1' : ''
      };
      if (this.showAllUser) {
        temp.portalId = '';
      }
      return temp;
    },
    orgParams: function orgParams() {
      var params = {};
      this.params.orgNo && (params.id = this.params.orgNo);
      params.portalId = this.portalId;

      return params;
    },
    postParams: function postParams() {
      var params = {};
      this.orgParams.id && (params.orgNo = this.orgParams.id);
      params.portalId = this.portalId;

      return params;
    }
  },
  watch: {
    showAllUser: function showAllUser(val) {
      if (val) {
        this.orgProps = Object.assign({}, this.orgProps, { multiPortal: false });
        this.postprops = Object.assign({}, this.postprops, { multiPortal: false });
      }
    },

    params: {
      handler: function handler(val) {
        var orgNo = val.orgNo,
            postId = val.postId,
            portalId = val.portalId;

        portalId !== undefined && (this.portalId = portalId);
        orgNo !== undefined && (this.deptid = orgNo);
        postId !== undefined && (this.postId = postId);
      },

      deep: true,
      immediate: true
    },
    // 请求user接口
    usersParams: {
      handler: function handler(val) {
        this.getUserDebounce();
      },

      deep: true
    },
    portalId: function portalId() {
      this.deptid = '';
      this.postId = '';
      this.portalTreeVisible = false;
    },

    // 关闭pop框
    deptid: function deptid() {
      if (this.orgSelectorProps.multiple) return;
      this.$refs.orgSel.popflag = false;
      this.currentPage = 1;
    },
    postId: function postId() {
      if (this.postSelectorProps.multiple) return;
      this.$refs.postSel.popflag = false;
      this.currentPage = 1;
    },
    userSureList: function userSureList(val) {
      this.chosedList = [].concat(val);
      this.initSelection();
    },

    // 无数据时打开弹窗请求数据、适用于首次打开弹窗
    visual: function visual(val) {
      val && !this.tableList.length && this.getUserDebounce();
    }
  },
  methods: {
    getOrgStr: function getOrgStr(row) {
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};
      if (this.showAllUser && portal.id) {
        return row.orgList ? row.orgList.length ? row.orgList.map(function (item) {
          return item.portalId !== portal.id ? '' : item.name;
        }).filter(function (item) {
          return item !== '';
        }).toString() : '' : '';
      }
      return row.orgList ? row.orgList.length ? row.orgList.map(function (item) {
        return item.name;
      }).toString() : '' : '';
    },
    getPostStr: function getPostStr(row) {
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};

      if (this.showAllUser && portal.id) {
        return row.postList ? row.postList.length ? row.postList.map(function (item) {
          return item.portalId !== portal.id ? '' : item.postName;
        }).filter(function (item) {
          return item !== '';
        }).toString() : '' : '';
      }
      return row.postList ? row.postList.length ? row.postList.map(function (item) {
        return item.postName;
      }).toString() : '' : '';
    },
    getSelectorStr: function getSelectorStr(selectedArray) {
      return selectedArray.length && selectedArray.map(function (item) {
        return item.name;
      }).toString();
    },

    // 点击触发
    handleClickRow: function handleClickRow(row) {
      if (!this.multiple) return;
      if (!this.selectable(row)) return;
      this.$refs.table.toggleRowSelection(row);
      var index = this.chosedList.findIndex(function (item) {
        return item.userName === row.userName;
      });
      if (index >= 0) {
        this.chosedList.splice(index, 1);
      } else {
        this.chosedList.unshift(row);
      }
    },

    // 判断是否可选择
    selectable: function selectable(row) {
      if (this.multipleLimit <= 0 || this.multipleLimit > this.chosedList.length) return true;
      if (this.$refs.table.selection.includes(row)) return true;
      return false;
    },

    // closedList修改后修正table中的selection
    initSelection: function initSelection() {
      var _this = this;

      if (!this.$refs.table) return;
      this.$refs.table.clearSelection();
      this.chosedList.forEach(function (item) {
        var row = _this.tableList.find(function (row) {
          return row.userName === item.userName;
        });
        row && _this.$refs.table.toggleRowSelection(row);
      });
    },
    sortHandler: function sortHandler(data) {
      this.sort = data.order == 'ascending' ? 'asc' : 'desc';
    },
    initParams: function initParams() {
      this.deptid = this.params.orgNo || '';
      this.postId = this.params.postId || '';
      var portal = JSON.parse(this.$storage.get('portal') || null) || {};
      this.portalId = this.params.portalId !== undefined ? this.params.portalId : portal.id;
      this.searchKey = '';
    },

    // 直接关闭弹窗还原chosedList
    closeDialog: function closeDialog() {
      this.initParams();
      this.chosedList = [].concat(this.userSureList);
      this.initSelection();
      this.$emit('update:visual', false);
    },

    // @select事件触发、删除或添加
    handleSelectionChange: function handleSelectionChange(selection, row) {
      if (selection.includes(row)) {
        this.chosedList.unshift(row);
      } else {
        var index = this.chosedList.findIndex(function (item) {
          return item.userName === row.userName;
        });
        index >= 0 && this.chosedList.splice(index, 1);
      }
    },

    // 单选通过@current-change触发
    handleCurrentSelectionChange: function handleCurrentSelectionChange(row) {
      if (this.multiple) return;
      this.chosedList = [row];
    },
    deletPerson: function deletPerson(row, column, event) {
      // 左右穿梭框数据的删除
      this.chosedList.splice(this.chosedList.indexOf(row), 1);
      var tRow = this.tableList.find(function (item) {
        return row.userName === item.userName;
      });
      tRow && this.$refs.table.toggleRowSelection(tRow);
    },

    // 全选
    selectAll: function selectAll(selection, checked) {
      var _this2 = this;

      if (checked) {
        var nobj = {};
        this.chosedList = [].concat(this.chosedList, selection).reduce(function (tal, val) {
          if (_this2.multipleLimit > 0 && tal.length >= _this2.multipleLimit) return tal;
          nobj[val.userName] ? '' : nobj[val.userName] = tal.push(val);
          return tal;
        }, []);
      } else {
        var ids = this.tableList.map(function (item) {
          return item.userName;
        });
        this.chosedList = this.chosedList.flatMap(function (item) {
          return ids.includes(item.userName) ? [] : [item];
        });
      }
      this.initSelection();
    },
    clearChosed: function clearChosed() {
      // 清空已选
      this.chosedList = [];
      this.$refs.table.clearSelection();
    },
    searchUser: function searchUser() {
      // 按人员搜索，触发条件是onchange,每次搜索都要重新请求数据，并不是在已有的数据下进行过滤
      this.getUserDebounce();
    },
    clearSearchKey: function clearSearchKey() {
      // 清空按账号或姓名搜索框
      this.searchKey = '';
    },
    handleSizeChange: function handleSizeChange(val) {
      // 更改每页条数需要重新请求数据
      this.pageSize = val;
      this.currentPage = 1;
    },
    handleCurrentChange: function handleCurrentChange(val) {
      // 切换当前页需要重新请求数据
      this.currentPage = val;
    },
    jumpPage: function jumpPage(val) {
      if (val === 'first') {
        this.currentPage = 1;
      } else {
        this.currentPage = this.totalPage;
      }
    },
    getUserList: function getUserList() {
      var _this3 = this;

      this.loading = true;
      var params = Object.assign({}, this.usersParams, this.urlParams);
      var r = this.$axios || utils_request;
      var tempURL = this.url + this.urlPath;
      r({
        method: 'get',
        url: tempURL,
        params: params,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          // 排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this3.tableList = response.data.content || response.data.list;
          // 将其他门户下的岗位和部门数据处理为空格

          _this3.totalCount = response.data.totalElements || response.data.total;
          _this3.totalPage = response.data.totalPages || response.data.pages;
          _this3.loading = false;
          _this3.$nextTick(function () {
            _this3.initSelection();
          });
        } else {
          _this3.loading = false;
        }
      }).catch(function (err) {
        _this3.loading = false;
        console.log(err);
      });
    },
    subUser: function subUser() {
      this.$emit('update:userSureList', this.chosedList.concat());
      // 提交时不清空已选
      this.initParams();
      this.$emit('update:visual', false);
    }
  },
  mounted: function mounted() {
    // 防抖
    this.getUserDebounce = debounce_default()(500, this.getUserList);
  }
});
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_user_selector_pro_src_user_selector_dialogvue_type_script_lang_js_ = (user_selector_pro_src_user_selector_dialogvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector-dialog.vue





/* normalize component */

var src_user_selector_dialog_component = normalizeComponent(
  packages_user_selector_pro_src_user_selector_dialogvue_type_script_lang_js_,
  user_selector_dialogvue_type_template_id_4bbe1823_render,
  user_selector_dialogvue_type_template_id_4bbe1823_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_user_selector_dialog = (src_user_selector_dialog_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/user-selector-pro/src/user-selector.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var user_selector_pro_src_user_selectorvue_type_script_lang_js_ = ({
  name: 'FksUserSelectorPro',
  mixins: [mixins_selector, locale_default.a],
  components: { UserSelectorDialog: src_user_selector_dialog },
  props: {

    placeholder: {
      type: String,
      default: ''
    },
    username: {
      type: String,
      default: ''
    },
    userfullname: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    return {
      visible: false,
      reference: '', // slot对应
      sureList: [] // 显示tags用
    };
  },

  watch: {
    username: function username(val, oval) {
      if (val !== oval) {
        this.initialList();
      }
    },
    sureList: function sureList(val) {
      this.updateProps(val);
    }
  },
  methods: {
    clearData: function clearData() {
      this.sureList = [];
    },
    updateProps: function updateProps(val) {
      var usernameStr = '';
      var userfullnameStr = '';
      if (val.length == 0) {
        this.$emit('update:username', '');
        this.$emit('update:userfullname', '');
        this.$emit('change', val);
      } else {
        val.forEach(function (item) {
          usernameStr += item.userName + ',';
          userfullnameStr += item.userFullname + ',';
        });
        this.$emit('update:username', usernameStr.substring(0, usernameStr.length - 1));
        this.$emit('update:userfullname', userfullnameStr.substring(0, userfullnameStr.length - 1));
        this.$emit('change', val);
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    // 根据username初始化tag输入框
    initialList: function initialList() {
      var _this = this;

      var userfullnameArr = this.userfullname ? this.userfullname.split(',') : [];
      var usernameArr = this.username ? this.username.split(',') : [];
      var len = userfullnameArr.length;
      var len2 = usernameArr.length;

      if (this.userfullname && this.username) {
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u4EBA\u5458\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u4EBA\u5458\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          this.sureList = [];
          usernameArr.forEach(function (e, index) {
            var obj = {
              userFullname: userfullnameArr[index],
              userName: e
            };
            _this.sureList.push(obj);
          });
        }
      } else if (!this.userfullname && !this.username) {
        this.sureList = [];
      } else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u4EBA\u5458\u6570\u636E,\u4EBA\u5458id\u548C\u4EBA\u5458\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 打开选人面板
     * @param {}
     * @return:
     */
    open: function open() {
      if (this.uploadReadOnly || this.forbidden) {
        return false;
      }
      this.visible = true;
    },
    deleteOne: function deleteOne(tag) {
      // 删除标签中的人员
      this.sureList.splice(this.sureList.findIndex(function (item) {
        return item.userName == tag.userName;
      }), 1);
    }
  },
  mounted: function mounted() {
    /** 获取slot内容，判断显示内容 */
    this.reference = '';
    if (this.$slots.reference && this.$slots.reference[0]) {
      this.reference = this.$slots.reference[0].elm;
    }
    this.initialList();
  }
});
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_user_selector_pro_src_user_selectorvue_type_script_lang_js_ = (user_selector_pro_src_user_selectorvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/user-selector-pro/src/user-selector.vue





/* normalize component */

var src_user_selector_component = normalizeComponent(
  packages_user_selector_pro_src_user_selectorvue_type_script_lang_js_,
  user_selectorvue_type_template_id_f1ec1ecc_render,
  user_selectorvue_type_template_id_f1ec1ecc_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var src_user_selector = (src_user_selector_component.exports);
// CONCATENATED MODULE: ./packages/user-selector-pro/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
src_user_selector.install = function (Vue) {
  Vue.component(src_user_selector.name, src_user_selector);
};

// 默认导出组件
/* harmony default export */ var user_selector_pro = (src_user_selector);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/org-selector/src/org-selector.vue?vue&type=template&id=c7e0e434&
var org_selectorvue_type_template_id_c7e0e434_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-org-selector-page", style: { width: _vm.width } },
    [
      _c(
        "fks-popover",
        {
          ref: "popover",
          attrs: {
            "popper-class": "fks-org-popover " + _vm.popperClass,
            placement: _vm.popoverPosition,
            "close-delay": 0,
            width: _vm.inputWidth,
            trigger: "click",
            disabled: _vm.uploadReadOnly || _vm.forbidden,
            "visible-arrow": false,
          },
          on: {
            show: _vm.open,
            hide: function ($event) {
              _vm.arrowflag = true
            },
          },
        },
        [
          _vm.isMultiPortal
            ? _c(
                "fks-tabs",
                {
                  ref: "portalTab",
                  staticClass: "fks-org-selector__tabs",
                  on: { "tab-click": _vm.handleTabClick },
                  model: {
                    value: _vm.activeTab,
                    callback: function ($$v) {
                      _vm.activeTab = $$v
                    },
                    expression: "activeTab",
                  },
                },
                [
                  _vm.showPresent
                    ? _c("fks-tab-pane", {
                        attrs: { label: "当前门户", name: "present" },
                      })
                    : _vm._e(),
                  _vm._l(_vm.portalArr, function (item) {
                    return _c("fks-tab-pane", {
                      directives: [
                        {
                          name: "show",
                          rawName: "v-show",
                          value: _vm.multiData[item.code].length,
                          expression: "multiData[item.code].length",
                        },
                      ],
                      key: item.code,
                      attrs: {
                        name: item.code,
                        label: item[_vm.$lang || "zh-CN"]
                          ? item[_vm.$lang || "zh-CN"]
                          : item.zh,
                      },
                    })
                  }),
                ],
                2
              )
            : _vm._e(),
          _c(
            "div",
            { staticClass: "fks-org-selector__searchtree" },
            [
              !_vm.arrowflag
                ? _c("fks-input", {
                    attrs: {
                      placeholder:
                        _vm.placeholder || _vm.t("fks.org.searchbranch"),
                      "suffix-icon": _vm.filterText ? "" : "fks-icon-search",
                      clearable: "",
                    },
                    model: {
                      value: _vm.filterText,
                      callback: function ($$v) {
                        _vm.filterText = $$v
                      },
                      expression: "filterText",
                    },
                  })
                : _vm._e(),
              _c(
                "div",
                {
                  staticStyle: {
                    "text-align": "right",
                    margin: "0",
                    height: "calc(100% - 40px)",
                    overflow: "auto",
                  },
                },
                [
                  _c("fks-tree", {
                    key: _vm.key,
                    ref: "selectTree",
                    staticClass: "filter-tree",
                    attrs: {
                      "default-expand-all": _vm.deptExpand,
                      id: "tree-option",
                      data: _vm.data,
                      props: _vm.defaultProps,
                      "highlight-current": !_vm.multiple,
                      "current-node-key":
                        !_vm.multiple && _vm.chosedList[0]
                          ? _vm.chosedList[0].id
                          : "",
                      "node-key": _vm.defaultProps.id,
                      "expand-on-click-node": false,
                      "filter-node-method": _vm.filterNode,
                      "default-checked-keys": _vm.checkedKeys,
                      "show-checkbox": _vm.multiple,
                      "check-strictly": "",
                    },
                    on: {
                      "check-change": _vm.handleCheckChange,
                      "node-click": _vm.handleNodeClick,
                    },
                    scopedSlots: _vm._u([
                      {
                        key: "default",
                        fn: function (ref) {
                          var data = ref.data
                          return _c(
                            "span",
                            { staticClass: "fks-tree-node__label" },
                            [
                              _c(
                                "span",
                                {
                                  staticStyle: {
                                    overflow: "hidden",
                                    "text-overflow": "ellipsis",
                                    "white-space": "nowrap",
                                    width: "80%",
                                  },
                                  attrs: { title: data.content.name },
                                },
                                [_vm._v(_vm._s(data.content.name))]
                              ),
                            ]
                          )
                        },
                      },
                    ]),
                  }),
                ],
                1
              ),
            ],
            1
          ),
          _c(
            "div",
            {
              ref: "reference",
              staticClass: "org-selector-input",
              attrs: { slot: "reference" },
              slot: "reference",
            },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "org-selector-tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                    "is-disabled": _vm.uploadReadOnly || _vm.forbidden,
                  },
                },
                [
                  _vm.collapseTags && _vm.chosedList.length
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.chosedList.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  class: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                  },
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.chosedList[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        _vm._s(_vm.chosedList[0].content.name)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.chosedList.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [
                                      _vm._v(
                                        "+ " + _vm._s(_vm.chosedList.length - 1)
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { display: "contents", width: "100%" } },
                        _vm._l(_vm.chosedList, function (tag, index) {
                          return _c(
                            "fks-tag",
                            {
                              key: index,
                              class: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                              },
                              attrs: {
                                closable: !_vm.uploadReadOnly && !_vm.forbidden,
                                size: _vm.size,
                                "disable-transitions": "",
                                type: "info",
                              },
                              on: {
                                close: function ($event) {
                                  return _vm.deleteOne(tag)
                                },
                              },
                            },
                            [
                              _c(
                                "span",
                                { staticClass: "fks-select__tags-text" },
                                [_vm._v(_vm._s(tag.content.name))]
                              ),
                            ]
                          )
                        }),
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "fks-input",
                {
                  ref: "input",
                  staticClass: "fks-org-out-input",
                  attrs: {
                    readonly: "",
                    size: _vm.size,
                    value: _vm.newDeptId,
                    disabled: _vm.forbidden,
                    placeholder:
                      _vm.chosedList.length > 0
                        ? ""
                        : _vm.placeholder || _vm.t("fks.org.selectbranch"),
                  },
                },
                [
                  !_vm.uploadReadOnly && !_vm.forbidden
                    ? _c("template", { slot: "suffix" }, [
                        !_vm.arrowflag
                          ? _c("i", {
                              staticClass: "fks-icon-arrow-up fks-input__icon",
                            })
                          : _c("i", {
                              staticClass:
                                "fks-icon-arrow-down fks-input__icon",
                            }),
                      ])
                    : _vm._e(),
                ],
                2
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var org_selectorvue_type_template_id_c7e0e434_staticRenderFns = []
org_selectorvue_type_template_id_c7e0e434_render._withStripped = true


// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue?vue&type=template&id=c7e0e434&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/org-selector/src/org-selector.vue?vue&type=script&lang=js&
var org_selectorvue_type_script_lang_js_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var org_selectorvue_type_script_lang_js_ = ({
  name: 'FksOrgSelector',
  componentName: 'FksOrgSelector',
  mixins: [mixins_selector, locale_default.a],
  props: {
    deptExpand: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String
    },
    url: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/orgs/tree'
    },
    portalDicPath: {
      type: String,
      default: '/sys-system/dictionary/detail/list'
    },
    portalType: {
      type: String,
      default: 'portalType'
    },
    deptId: {},
    deptName: {
      type: String,
      default: ''
    },
    multiPortal: {},
    multiIndex: {
      type: Array
    },
    popperClass: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    var _this = this;

    return {
      popoverPosition: 'bottom-start',
      showPresent: false,
      ifRender: false,
      newDeptId: '',
      activeTab: 'present',
      arrowflag: true,
      inputWidth: 0,
      filterText: '',
      data: [], // dept tree data
      multiData: {}, //存放各级部门树
      defaultProps: {
        children: 'children',
        label: 'label',
        id: 'id',
        disabled: function disabled(data) {
          return _this.multipleLimit > 0 && _this.chosedList.length >= _this.multipleLimit && !_this.checkedKeys.includes(data.id);
        }
      },
      portalArr: [], //多级门户数组,用于筛选展示多级门户模式下有部门数据的门户tab
      tempPortalArr: [],
      chosedList: [],
      //tempChosedList: [], //记录改变前所选
      innerFlag: false, //判断内部改变
      key: new Date().getTime(), // 刷新选择
      isMultiPortal: typeof this.multiPortal === 'boolean' ? this.multiPortal : !!this.$fawkes.multiPortal
    };
  },

  computed: {
    checkedKeys: function checkedKeys() {
      return this.chosedList.map(function (key) {
        return key.id;
      });
    }
  },
  watch: {
    arrowflag: function arrowflag(val) {
      if (val) this.$refs.popover.doDestroy();
    },
    filterText: function filterText(val) {
      this.$refs.selectTree.filter(val.trim());
    },

    deptId: {
      immediate: true,
      handler: function handler(val) {
        if (val) this.newDeptId = val.toString();else this.newDeptId = '';
        if (!this.innerFlag) {
          this.chosedList = [];
          this.initialList();
        }
        this.innerFlag = false;
      }
    },
    // 状态还原请求数据
    forbidden: function forbidden(val) {
      if (!val && !this.data.length) {
        this.getDepts();
      }
    }
  },
  methods: {
    handleTabClick: function handleTabClick(tab, event) {
      if (this.multiPortal) this.data = this.multiData[tab.name];
    },

    //根据data树初始化多门户树
    initialMultiData: function initialMultiData() {
      //初始化各门户部门树存储对象multiData
      for (var i = 0; i < this.data.length; ++i) {
        this.multiData[this.data[i].content.type].push(this.data[i]);
      } //如果传入了portalId则当前门户tab展示当前传入门户
      if (this.params.hasOwnProperty('portalId')) {
        if (this.params.portalId) {
          for (var _i = 0; _i < this.data.length; ++_i) {
            if (this.params.portalId === this.data[_i].content.portalId) {
              this.multiData['present'] = [];
              this.multiData['present'].push(this.data[_i]);
            }
          }this.data = this.multiData['present'];
        } else this.multiData['present'] = this.data;
      }
      //没有传入则当前门户tab展示所有门户
      else {
          this.multiData['present'] = this.data;
        }
      //如果传入了multiIndex
      if (org_selectorvue_type_script_lang_js_typeof(this.multiIndex) === 'object') {
        this.multiIndex.sort();
        //判定是否需要展示当前门户
        var j = 0;
        if (this.multiIndex[0] === 0) {
          this.showPresent = true;
          j = 1;
        } else this.data = this.multiData[this.multiIndex[0]];
        //根据multiIndex初始化显示用portalArr,顺序为tempPortalArr中获取到的字典顺序
        for (var _i2 = 0; _i2 < this.tempPortalArr.length; ++_i2) {
          if (this.multiData[this.tempPortalArr[_i2].code].length) {
            if (this.tempPortalArr[_i2].code === String(this.multiIndex[j])) {
              this.portalArr.push(this.tempPortalArr[_i2]);
              if (j < this.multiIndex.length - 1) j++;
            }
          }
        }
        this.$emit('ready', true);
      } else {
        //如果没有传入multiIndex
        //初始化所有含有部门树的门户页
        this.showPresent = true;
        for (var _i3 = 0; _i3 < this.tempPortalArr.length; ++_i3) {
          if (this.multiData[this.tempPortalArr[_i3].code].length) {
            this.portalArr.push(this.tempPortalArr[_i3]);
          }
        }
        this.$emit('ready', true);
      }
    },
    updateProps: function updateProps(val) {
      console.log('触发选中');
      this.innerFlag = true;
      var dptNameStr = '';
      var dptIdStr = '';
      if (val.length == 0) {
        this.$emit('update:deptId', '');
        this.$emit('update:deptName', '');
        this.$emit('change', val);
      } else {
        val.forEach(function (item) {
          dptNameStr += item.content.name + ',';
          dptIdStr += item.id + ',';
        });
        this.$emit('update:deptId', dptIdStr.substring(0, dptIdStr.length - 1));
        this.$emit('update:deptName', dptNameStr.substring(0, dptNameStr.length - 1));
        this.$emit('change', val);
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },
    initialList: function initialList() {
      if (this.deptName && this.newDeptId) {
        var dptNameArr = this.deptName.split(',');
        var dptIdArr = this.newDeptId.split(',');
        var len = dptNameArr.length;
        var len2 = dptIdArr.length;
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u90E8\u95E8\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u90E8\u95E8\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          for (var i = 0; i < len2; i++) {
            this.chosedList.push({
              id: dptIdArr[i],
              content: { name: dptNameArr[i] }
            });
          }
        }
      } else if (!this.deptName && !this.newDeptId) {
        this.chosedList = [];
      } else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u90E8\u95E8\u6570\u636E,\u90E8\u95E8id\u548C\u90E8\u95E8\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 下拉框
     * @param {type}
     * @return:
     */

    open: function open() {
      this.arrowflag = false;
      this.key = new Date().getTime();
      var rect = this.$refs.popover.$el.getBoundingClientRect();
      var clientTop = document.documentElement.clientTop;
      var clientHeight = document.documentElement.clientHeight;
      var top = rect.top - clientTop;
      var bottom = clientHeight - top - this.$refs.input.$el.offsetHeight;
      if (bottom < 330) {
        this.popoverPosition = 'top-start';
        this.$refs.popover.updatePopper();
      }
      //初始化tab栏 判定是否传入multiIndex
      if (this.isMultiPortal && org_selectorvue_type_script_lang_js_typeof(this.multiIndex) === 'object') {
        // console.log(this.multiIndex)
        if (this.multiIndex[0] !== 0) this.activeTab = String(this.multiIndex[0]);
      }
    },

    /**
     * @description 设置树形组件节点的选中状态
     */
    setChecked: function setChecked(key, checked) {
      this.$refs.selectTree.setChecked(key, checked);
    },

    /**
     * @description: 单选
     * @param {type}
     * @return {type}
     */
    handleNodeClick: function handleNodeClick(data) {
      if (this.multiple) {
        return false;
      }
      // 选中部门树
      var len = this.chosedList.length;

      if (len < 1) {
        this.chosedList.push(data);
      } else {
        this.chosedList = [];
        this.chosedList.push(data);
      }
      this.$refs.popover.doClose();
      this.updateProps(this.chosedList);
    },

    /**
     * @description:多选
     * @param {type}
     * @return {type}
     */
    handleCheckChange: function handleCheckChange(data, checked) {
      if (!this.multiple) {
        return false;
      }
      var index = this.chosedList.findIndex(function (item) {
        return item.id == data.id;
      });
      // 选中部门树
      if (checked) {
        if (index < 0) {
          this.chosedList.push(data);
        }
      } else if (index >= 0) {
        this.chosedList.splice(this.chosedList.findIndex(function (item) {
          return item.id == data.id;
        }), 1);
      }
      this.$emit('check-change', data, checked);
      this.updateProps(this.chosedList);
    },
    filterNode: function filterNode(value, data) {
      // 部门树过滤
      if (!value) return true;
      return data.content.name.indexOf(value) !== -1;
    },


    /**
     * @description: 获取数据
     * @param {type}
     * @return:
     */
    getDepts: function getDepts() {
      var _this2 = this;

      //多门户模式下才获取字典
      if (this.isMultiPortal) {
        var params = {
          code: 'portal_type',
          langCode: this.$lang || 'zh-CN'
        };
        var r1 = this.$axios || utils_request;
        r1({
          method: 'get',
          url: this.portalDicPath,
          params: params,
          headers: this.headers,
          ctM: true
        }).then(function (res) {
          var response = res;
          if (res.data.status) {
            //排除拦截器影响
            response = res.data;
          }
          if (response.status) {
            _this2.tempPortalArr = res.data[_this2.portalType];
            for (var i = 0; i < _this2.tempPortalArr.length; ++i) {
              _this2.multiData[_this2.tempPortalArr[i].code] = [];
            }
            _this2.initData();
          }
        }).catch(function (err) {
          //取不到就走本地缓存
          if (_this2.$storage.get('portalDict')) {
            _this2.tempPortalArr = JSON.parse(_this2.$storage.get('portalDict'));
            for (var i = 0; i < _this2.tempPortalArr.length; ++i) {
              _this2.multiData[_this2.tempPortalArr[i].code] = [];
            }
            _this2.initData();
          } else {
            //取不到本地缓存就关闭多门户模式
            _this2.isMultiPortal = false;
            _this2.initData();
            console.log(err);
            console.log('请求失败或从缓存中无法获取门户字典，关闭多门户模式');
          }
        });
      } else this.initData();
    },
    initData: function initData() {
      var _this3 = this;

      var r = this.$axios || utils_request;
      var tempParams = this.params;
      if (this.isMultiPortal) tempParams = {};
      r({
        method: 'get',
        params: tempParams,
        url: this.url + this.urlPath,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          //排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this3.data = _this3.analyze(response.data);

          if (_this3.isMultiPortal) _this3.$nextTick(function () {
            this.initialMultiData();
          });else _this3.$emit('ready', true);
        } else {
          console.log('请求失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    },

    /**
     * @description: 根据id过滤树
     * @param {type}
     * @return:
     */

    analyze: function analyze(tree) {
      var _this4 = this;

      var res = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      if (!this.params.id) {
        return tree;
      }
      tree.forEach(function (item) {
        if (item.id == _this4.params.id) {
          res.push(item);
        } else if (item.children) {
          _this4.analyze(item.children, res);
        }
      });
      return res;
    },

    /**
     * @description: 宽度resize
     * @param {type}
     * @return:
     */

    handleResize: function handleResize() {
      var _this5 = this;

      this.$nextTick(function () {
        var reference = _this5.$refs.reference;
        _this5.inputWidth = Math.max(reference.getBoundingClientRect().width - 20, 300);
      });
    },
    deleteOne: function deleteOne(tag) {
      // 删除标签中的人员
      this.$refs.popover.doClose();
      this.chosedList.splice(this.chosedList.findIndex(function (item) {
        return item.id == tag.id;
      }), 1);
      this.updateProps(this.chosedList);
    },
    selectFirst: function selectFirst() {
      if (!!this.data) {
        if (this.data.length) {
          var dptName = this.data[0].content.name;
          var dptId = this.data[0].content.id;
          var orgNo = new String(this.data[0].content.orgNo);
          this.chosedList = [];
          this.chosedList.push({
            id: dptId,
            content: { name: dptName }
          });
          this.updateProps(this.chosedList);
          return orgNo;
        } else {
          return '';
        }
      } else {
        return '';
      }
    }
  },
  mounted: function mounted() {
    var _this6 = this;

    if (!this.forbidden) {
      this.getDepts();
    }
    this.$nextTick(function () {
      var reference = _this6.$refs.reference;
      Object(resize_event_["addResizeListener"])(reference, _this6.handleResize);
      _this6.handleResize();
    });
  },
  beforeDestroy: function beforeDestroy() {
    var reference = this.$refs.reference;
    Object(resize_event_["removeResizeListener"])(reference, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_org_selectorvue_type_script_lang_js_ = (org_selectorvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/org-selector/src/org-selector.vue





/* normalize component */

var org_selector_component = normalizeComponent(
  src_org_selectorvue_type_script_lang_js_,
  org_selectorvue_type_template_id_c7e0e434_render,
  org_selectorvue_type_template_id_c7e0e434_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var org_selector = (org_selector_component.exports);
// CONCATENATED MODULE: ./packages/org-selector/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
org_selector.install = function (Vue) {
  Vue.component(org_selector.name, org_selector);
};

// 默认导出组件
/* harmony default export */ var packages_org_selector = (org_selector);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/index.vue?vue&type=template&id=5fe7b6e6&
var selector_componentvue_type_template_id_5fe7b6e6_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-selector-page", style: { width: _vm.width } },
    [
      _c(
        "fks-popover",
        {
          ref: "popover",
          attrs: {
            "popper-class": "fks-selector-popover " + _vm.popperClass,
            placement: _vm.popoverPosition,
            "close-delay": 0,
            disabled: _vm.uploadReadOnly || _vm.forbidden || _vm.dialog,
          },
          on: { show: _vm.open },
          model: {
            value: _vm.popflag,
            callback: function ($$v) {
              _vm.popflag = $$v
            },
            expression: "popflag",
          },
        },
        [
          !_vm.dialog
            ? [
                _vm.multiPortal
                  ? [
                      _c("PortalTree", {
                        attrs: {
                          portalId: _vm.activePortalId,
                          portal: _vm.activePortal,
                          portalFilter: _vm.portalFilter,
                        },
                        on: {
                          "update:portalId": function ($event) {
                            _vm.activePortalId = $event
                          },
                          "update:portal-id": function ($event) {
                            _vm.activePortalId = $event
                          },
                          "update:portal": function ($event) {
                            _vm.activePortal = $event
                          },
                        },
                      }),
                      _c("div", { staticClass: "divider" }),
                    ]
                  : _vm._e(),
                _c("data-tree", {
                  ref: "dataTree",
                  attrs: { showAllUser: _vm.showAllUser, ids: _vm.ids },
                  on: { updateIds: _vm.updateIds },
                }),
              ]
            : _vm._e(),
          _vm._t(
            "reference",
            function () {
              return [
                _c(
                  "div",
                  {
                    ref: "reference",
                    staticClass: "selector-input",
                    on: { click: _vm.triggerDialog },
                  },
                  [
                    _c(
                      "div",
                      {
                        ref: "tags",
                        staticClass: "selector-tags",
                        class: {
                          suffix: _vm.fksForm.statusIcon,
                        },
                      },
                      [
                        _vm.collapseTags
                          ? _c(
                              "span",
                              { staticStyle: { width: "100%" } },
                              [
                                _vm.selectedObjArray.length > 0
                                  ? _c(
                                      "fks-tag",
                                      {
                                        attrs: {
                                          closable:
                                            !_vm.uploadReadOnly &&
                                            !_vm.forbidden,
                                          size: _vm.size,
                                          type: "info",
                                          "disable-transitions": "",
                                        },
                                        on: {
                                          close: function ($event) {
                                            return _vm.deleteOne(
                                              _vm.selectedObjArray[0]
                                            )
                                          },
                                        },
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass:
                                              "fks-select__tags-text",
                                          },
                                          [
                                            _vm._v(
                                              _vm._s(
                                                _vm.selectedObjArray[0].name
                                              )
                                            ),
                                          ]
                                        ),
                                      ]
                                    )
                                  : _vm._e(),
                                _vm.selectedObjArray.length > 1
                                  ? _c(
                                      "fks-tag",
                                      {
                                        attrs: {
                                          closable: false,
                                          size: _vm.size,
                                          type: "info",
                                          "disable-transitions": "",
                                        },
                                      },
                                      [
                                        _c(
                                          "span",
                                          {
                                            staticClass:
                                              "fks-select__tags-text",
                                          },
                                          [
                                            _vm._v(
                                              "+ " +
                                                _vm._s(
                                                  _vm.selectedObjArray.length -
                                                    1
                                                )
                                            ),
                                          ]
                                        ),
                                      ]
                                    )
                                  : _vm._e(),
                              ],
                              1
                            )
                          : _c("span", { staticStyle: { width: "100%" } }, [
                              _vm.selectedObjArray.length > 0
                                ? _c(
                                    "div",
                                    _vm._l(
                                      _vm.selectedObjArray,
                                      function (item, index) {
                                        return _c(
                                          "fks-tag",
                                          {
                                            key: index,
                                            attrs: {
                                              closable:
                                                !_vm.uploadReadOnly &&
                                                !_vm.forbidden,
                                              size: _vm.size,
                                              "disable-transitions": "",
                                              type: "info",
                                            },
                                            on: {
                                              close: function ($event) {
                                                return _vm.deleteOne(item)
                                              },
                                            },
                                          },
                                          [
                                            _c(
                                              "span",
                                              {
                                                staticClass:
                                                  "fks-select__tags-text",
                                              },
                                              [_vm._v(_vm._s(item.name))]
                                            ),
                                          ]
                                        )
                                      }
                                    ),
                                    1
                                  )
                                : _vm._e(),
                            ]),
                      ]
                    ),
                    _c(
                      "fks-input",
                      {
                        ref: "input",
                        staticClass: "fks-post-out-input",
                        attrs: {
                          readonly: "",
                          size: _vm.size,
                          disabled: _vm.forbidden,
                          placeholder: _vm.ids ? "" : _vm.placeholder,
                        },
                      },
                      [
                        !_vm.uploadReadOnly && !_vm.forbidden
                          ? _c("template", { slot: "suffix" }, [
                              _vm.popflag
                                ? _c("i", {
                                    staticClass:
                                      "fks-icon-arrow-up fks-input__icon",
                                  })
                                : _c("i", {
                                    staticClass:
                                      "fks-icon-arrow-down fks-input__icon",
                                  }),
                            ])
                          : _vm._e(),
                      ],
                      2
                    ),
                  ],
                  1
                ),
              ]
            },
            {
              slot: "reference",
              popflag: _vm.popflag,
              triggerDialog: _vm.triggerDialog,
              selectedArray: _vm.selectedObjArray,
            }
          ),
        ],
        2
      ),
      _vm.dialog
        ? _c("selectorDialog", {
            attrs: {
              showAllUser: _vm.showAllUser,
              visible: _vm.dialogVisible,
              multiPortal: _vm.multiPortal,
              ids: _vm.ids,
              disabled: _vm.uploadReadOnly || _vm.forbidden,
            },
            on: {
              "update:visible": function ($event) {
                _vm.dialogVisible = $event
              },
            },
          })
        : _vm._e(),
    ],
    1
  )
}
var selector_componentvue_type_template_id_5fe7b6e6_staticRenderFns = []
selector_componentvue_type_template_id_5fe7b6e6_render._withStripped = true


// CONCATENATED MODULE: ./packages/selector-component/index.vue?vue&type=template&id=5fe7b6e6&

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/dataTree.vue?vue&type=template&id=331fab2e&
var dataTreevue_type_template_id_331fab2e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-selector__searchtree" },
    [
      !_vm.dialog
        ? _c("fks-input", {
            attrs: {
              placeholder: _vm.selector.searchPlaceholder,
              "suffix-icon": _vm.filterText ? "" : "fks-icon-search",
              clearable: "",
            },
            model: {
              value: _vm.filterText,
              callback: function ($$v) {
                _vm.filterText = $$v
              },
              expression: "filterText",
            },
          })
        : _vm._e(),
      _vm.selectAll
        ? _c(
            "div",
            {
              staticClass: "fks-tree-node__content",
              staticStyle: { "padding-left": "24px" },
              on: { click: _vm.clickAllNode },
            },
            [
              _c("fks-checkbox", {
                attrs: { indeterminate: _vm.indeterminate },
                on: {
                  change: _vm.clickAllNode,
                  click: function ($event) {
                    $event.stopPropagation()
                  },
                },
                model: {
                  value: _vm.checkAll,
                  callback: function ($$v) {
                    _vm.checkAll = $$v
                  },
                  expression: "checkAll",
                },
              }),
              _c("span", { staticClass: "fks-tree-node__label" }, [
                _c(
                  "span",
                  {
                    staticStyle: {
                      overflow: "hidden",
                      "text-overflow": "ellipsis",
                      "white-space": "nowrap",
                      width: "80%",
                    },
                  },
                  [_vm._v(_vm._s(_vm.t("fks.selectorPro.allselect")))]
                ),
              ]),
            ],
            1
          )
        : _vm._e(),
      _c("fks-tree", {
        key: _vm.key,
        ref: "selectTree",
        staticClass: "filter-tree",
        attrs: {
          data: _vm.showData,
          props: _vm.defaultProps,
          "highlight-current": !_vm.multiple,
          "node-key": _vm.defaultProps.id,
          "expand-on-click-node": false,
          "default-expanded-keys": _vm.defaultExpandedKeys,
          "filter-node-method": _vm.filterNode,
          "show-checkbox": _vm.multiple,
          "check-strictly": "",
        },
        on: {
          "check-change": _vm.handleCheckChange,
          "node-click": _vm.handleNodeClick,
        },
        scopedSlots: _vm._u([
          {
            key: "default",
            fn: function (ref) {
              var data = ref.data
              return _c("span", { staticClass: "fks-tree-node__label" }, [
                _c(
                  "span",
                  {
                    staticStyle: {
                      overflow: "hidden",
                      "text-overflow": "ellipsis",
                      "white-space": "nowrap",
                      width: "80%",
                    },
                    attrs: { title: data.name },
                  },
                  [_vm._v(_vm._s(data.name))]
                ),
              ])
            },
          },
        ]),
      }),
    ],
    1
  )
}
var dataTreevue_type_template_id_331fab2e_staticRenderFns = []
dataTreevue_type_template_id_331fab2e_render._withStripped = true


// CONCATENATED MODULE: ./packages/selector-component/dataTree.vue?vue&type=template&id=331fab2e&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/dataTree.vue?vue&type=script&lang=js&
function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




/* harmony default export */ var dataTreevue_type_script_lang_js_ = ({
  componentName: 'FksOrgSelector',
  mixins: [locale_default.a],
  inject: ['selector'],
  props: {
    ids: {},
    searchKey: {
      type: String,
      default: ''
    },
    dialog: {
      type: Boolean,
      default: false
    }

  },
  data: function data() {
    var _this = this;

    return {
      showPresent: false,
      newDeptId: '',
      filterText: '',
      data: [],
      defaultProps: {
        children: 'children',
        label: 'name',
        id: 'id',
        disabled: function disabled(data) {
          return _this.multipleLimit > 0 && _this.chosedList.length >= _this.multipleLimit && !_this.checkedKeys.includes(data.id);
        }
      },
      chosedList: [],
      key: new Date().getTime(), // 刷新选择
      checkAll: false,
      indeterminate: false,
      visibleKeys: [], // 可见节点id
      isMultiPortal: typeof this.multiPortal === 'boolean' ? this.multiPortal : !!this.$fawkes.multiPortal
    };
  },

  computed: {
    checkedKeys: function checkedKeys() {
      return this.chosedList.map(function (key) {
        return key.id;
      });
    },
    defaultExpandedKeys: function defaultExpandedKeys() {
      // 默认展开一级
      return this.showData.map(function (item) {
        return item.id;
      }) || [];
    },
    multiPortal: function multiPortal() {
      return this.selector.multiPortal;
    },
    multiple: function multiple() {
      return this.selector.multiple;
    },
    multipleLimit: function multipleLimit() {
      return this.selector.multipleLimit;
    },
    showData: function showData() {
      var _this2 = this;

      var data = this.data;
      if (this.selector.activePortalId) {
        data = data.filter(function (item) {
          return item.portalId === _this2.selector.activePortalId;
        });
      }
      return data;
    },

    // 是否展示全选
    selectAll: function selectAll() {
      return this.selector.selectAll && this.multiple && !this.multipleLimit;
    }
  },
  watch: {
    filterText: function filterText(val) {
      this.filter(val);
    },
    searchKey: function searchKey(val) {
      this.filter(val);
    },
    showData: function showData() {
      var _this3 = this;

      if (this.selectAll && this.multiPortal) {
        this.$refs.selectTree && (this.$refs.selectTree.store.nodesMap = {});
      }
      this.$nextTick(function () {
        _this3.$refs.selectTree.setCheckedKeys(_this3.checkedKeys);
        if (!_this3.selectAll) {
          return;
        }
        var nodesMap = _this3.$refs.selectTree.store.nodesMap;
        _this3.visibleKeys = Object.keys(nodesMap).filter(function (key) {
          return nodesMap[key] && nodesMap[key].visible;
        });
      });
    },

    ids: {
      immediate: true,
      handler: function handler(val) {
        if (!this.data.length) return;
        if (val.split(',').sort().toString() !== this.checkedKeys.sort().toString()) {
          this.initialList();
        }
      }
    },
    chosedList: {
      handler: function handler(val) {
        var _this4 = this;

        var ids = val.map(function (item) {
          return item.id;
        }).toString() || '';
        if (val.length === 1) {
          this.$nextTick(function () {
            _this4.$refs.selectTree.setCurrentKey(ids);
          });
        }
        this.$emit('updateIds', ids);
      }
    },
    // 状态还原请求数据
    forbidden: function forbidden(val) {
      if (!val && !this.data.length) {

        this.initData();
      }
    },
    visibleKeys: function visibleKeys() {
      this.setCheckAll();
    },
    checkedKeys: function checkedKeys() {
      this.setCheckAll();
    }
  },
  methods: {
    // 设置全选状态
    setCheckAll: function setCheckAll() {
      if (!this.selectAll) {
        return;
      }
      var flag = 0;
      for (var i = 0; i < this.visibleKeys.length; i++) {
        if (flag > 0 && flag < i) {
          // 部分选中
          break;
        }
        if (this.checkedKeys.includes(this.visibleKeys[i])) {
          flag++;
        }
      }
      this.checkAll = flag === this.visibleKeys.length;
      this.indeterminate = !!flag && !this.checkAll;
    },

    // 点击全选node
    clickAllNode: function clickAllNode() {
      this.checkAll = !this.checkAll;
      this.checkAllChange(this.checkAll);
    },

    // 搜索方法
    filter: function filter(str) {
      var _this5 = this;

      this.$refs.selectTree.filter(str.trim());
      if (!this.selectAll) {
        return;
      }
      // 更新可见节点
      this.$nextTick(function () {
        var nodesMap = _this5.$refs.selectTree.store.nodesMap;
        _this5.visibleKeys = Object.keys(nodesMap).filter(function (key) {
          return nodesMap[key] && nodesMap[key].visible;
        });
      });
    },
    initialList: function initialList() {
      if (this.ids) {
        var idArray = this.ids.split(',');
        var len = idArray.length;
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          this.chosedList = this.selector.objArray.filter(function (item) {
            return idArray.includes(item.id);
          });
        }
      } else {
        this.chosedList = [];
      }
      this.$refs.selectTree.setCheckedKeys(this.ids.split(',') || []);
    },

    /**
     * @description 设置树形组件节点的选中状态
     */
    setChecked: function setChecked(key, checked) {
      this.$refs.selectTree.setChecked(key, checked);
    },

    /**
     * @description: 单选, 重复选择重置
     * @param {type}
     * @return {type}
     */
    handleNodeClick: function handleNodeClick(data, node) {
      if (node.disabled) return false;
      if (this.multiple) {
        this.$refs.selectTree.setChecked(data.id, !node.checked);
        return false;
      }
      if (this.chosedList.length && this.chosedList[0].id === data.id) {
        this.chosedList = [];
        this.$refs.selectTree.setCurrentKey();
      } else {
        this.chosedList = [data];
      }
    },

    /**
     * @description:多选
     * @param {type}
     * @return {type}
     */
    handleCheckChange: function handleCheckChange(data, checked) {
      if (!this.multiple) {
        return false;
      }
      var index = this.chosedList.findIndex(function (item) {
        return item.id === data.id;
      });

      if (index < 0) {
        checked && this.chosedList.push(data);
      } else {
        checked || this.chosedList.splice(index, 1);
      }
      this.selector.$emit('check-change', data, checked);
    },
    filterNode: function filterNode(value, data) {
      if (!value) return true;
      return data.name.indexOf(value) !== -1;
    },
    checkAllChange: function checkAllChange(checked) {
      var _this6 = this;

      var ids = '';
      if (checked) {
        ids = Array.from(new Set([].concat(this.checkedKeys, this.visibleKeys))).toString();
      } else {
        ids = this.checkedKeys.filter(function (key) {
          return !_this6.visibleKeys.includes(key);
        }).toString();
      }
      this.$emit('updateIds', ids);
    },
    initData: function initData() {
      var _this7 = this;

      var r = this.$axios || utils_request;
      var tempParams = {
        pageNo: 1,
        pageSize: 999
      };
      if (this.selector.showAllUser) {
        var portal = JSON.parse(this.$storage.get('portal') || null);
        if (portal) {
          tempParams.portalId = portal.id;
        }
      }
      r({
        method: 'get',
        params: tempParams,
        url: this.selector.url + this.selector.urlPath,
        headers: this.selector.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          // 排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          var data = _this7.selector.dataFilter(response.data);
          _this7.data = _this7.selector.dataFormat(data);
          var treeToArray = function treeToArray() {
            var tree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

            return tree.flatMap(function (item) {
              var children = item.children,
                  rest = _objectWithoutProperties(item, ['children']);

              return [rest].concat(treeToArray(children));
            });
          };
          _this7.selector.objArray = treeToArray(_this7.data);
          _this7.initialList();
          _this7.selector.$emit('ready', true);
        } else {
          console.log('请求失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    }
  },
  mounted: function mounted() {
    this.initData();
  }
});
// CONCATENATED MODULE: ./packages/selector-component/dataTree.vue?vue&type=script&lang=js&
 /* harmony default export */ var selector_component_dataTreevue_type_script_lang_js_ = (dataTreevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/selector-component/dataTree.vue





/* normalize component */

var dataTree_component = normalizeComponent(
  selector_component_dataTreevue_type_script_lang_js_,
  dataTreevue_type_template_id_331fab2e_render,
  dataTreevue_type_template_id_331fab2e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var dataTree = (dataTree_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/selectorDialog.vue?vue&type=template&id=5caa5f0d&
var selectorDialogvue_type_template_id_5caa5f0d_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "fks-dialog",
    {
      ref: "dialog",
      attrs: {
        "custom-class": "fks-selector-dialog",
        visible: _vm.visible,
        title: _vm.selector.dialogTitle,
        width: "700px",
      },
      on: { close: _vm.closeDialog },
    },
    [
      _c("div", { staticClass: "fks-selector-dialog__left" }, [
        _c(
          "div",
          { staticClass: "title" },
          [
            _c("span", [_vm._v(_vm._s(_vm.t("fks.selectorPro.select")))]),
            _vm.multiPortal
              ? _c(
                  "fks-popover",
                  {
                    attrs: { "popper-class": "fks-popover-portal-tree" },
                    model: {
                      value: _vm.portalTreeVisible,
                      callback: function ($$v) {
                        _vm.portalTreeVisible = $$v
                      },
                      expression: "portalTreeVisible",
                    },
                  },
                  [
                    _c("PortalTree", {
                      attrs: {
                        portalId: _vm.selector.activePortalId,
                        portal: _vm.selector.activePortal,
                        portalFilter: _vm.selector.portalFilter,
                      },
                      on: {
                        "update:portalId": function ($event) {
                          return _vm.$set(
                            _vm.selector,
                            "activePortalId",
                            $event
                          )
                        },
                        "update:portal-id": function ($event) {
                          return _vm.$set(
                            _vm.selector,
                            "activePortalId",
                            $event
                          )
                        },
                        "update:portal": function ($event) {
                          return _vm.$set(_vm.selector, "activePortal", $event)
                        },
                      },
                    }),
                    _c(
                      "span",
                      {
                        class: [
                          "fks-popover__reference",
                          !_vm.activePortal && "lighter",
                        ],
                        attrs: { slot: "reference" },
                        slot: "reference",
                      },
                      [
                        _c("span", { staticClass: "reference-title" }, [
                          _vm._v(
                            _vm._s(
                              (_vm.activePortal && _vm.activePortal.name) ||
                                _vm.t("fks.selectorPro.placeSelectPortal")
                            )
                          ),
                        ]),
                        _c("i", {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.selector.activePortalId,
                              expression: "selector.activePortalId",
                            },
                          ],
                          staticClass: "fks-icon-circle-close hover-icon",
                          on: {
                            click: function ($event) {
                              $event.stopPropagation()
                              _vm.selector.activePortalId = ""
                            },
                          },
                        }),
                        _c("i", {
                          class:
                            "fks-icon-arrow-" +
                            (_vm.portalTreeVisible ? "up" : "down"),
                        }),
                      ]
                    ),
                  ],
                  1
                )
              : _vm._e(),
            _c("fks-input", {
              attrs: {
                placeholder: _vm.selector.searchPlaceholder,
                size: "small",
                maxlangth: 50,
                "suffix-icon": "fks-icon-search",
                clearable: "",
              },
              model: {
                value: _vm.searchKey,
                callback: function ($$v) {
                  _vm.searchKey = $$v
                },
                expression: "searchKey",
              },
            }),
          ],
          1
        ),
        _c(
          "div",
          { staticClass: "fks-selector-box" },
          [
            _c(
              "data-tree",
              _vm._b(
                {
                  attrs: {
                    ids: _vm.tempIds,
                    dialog: true,
                    searchKey: _vm.searchKey,
                  },
                  on: { updateIds: _vm.updateTempIds },
                },
                "data-tree",
                _vm.$attrs,
                false
              )
            ),
          ],
          1
        ),
      ]),
      _c("div", { staticClass: "fks-selector-dialog__right" }, [
        _c(
          "div",
          { staticClass: "title" },
          [
            _c("span", [
              _vm._v(
                _vm._s(
                  _vm.t("fks.selectorPro.selected") +
                    "（" +
                    _vm.tempArray.length +
                    "）"
                )
              ),
            ]),
            _c(
              "fks-button",
              {
                attrs: { size: "small", plain: "" },
                on: {
                  click: function ($event) {
                    return _vm.updateTempIds("")
                  },
                },
              },
              [
                _c("i", { staticClass: "fks-icon-reset" }),
                _vm._v(_vm._s(_vm.t("fks.clear"))),
              ]
            ),
          ],
          1
        ),
        _c("div", { staticClass: "fks-selector-box" }, [
          _c(
            "ul",
            { staticClass: "fks-selector-list" },
            _vm._l(_vm.tempArray, function (item) {
              return _c("li", { key: item.id }, [
                _c("span", [_vm._v(_vm._s(item.name))]),
                _c("i", {
                  staticClass: "fks-icon-error",
                  on: {
                    click: function ($event) {
                      return _vm.deleteItem(item)
                    },
                  },
                }),
              ])
            }),
            0
          ),
        ]),
      ]),
      _c(
        "span",
        {
          staticClass: "dialog-footer",
          attrs: { slot: "footer" },
          slot: "footer",
        },
        [
          _c(
            "fks-button",
            {
              attrs: {
                type: "primary",
                icon: "fks-icon-check",
                disabled: _vm.disabled,
              },
              on: { click: _vm.submit },
            },
            [_vm._v(_vm._s(_vm.t("fks.confirm")))]
          ),
        ],
        1
      ),
    ]
  )
}
var selectorDialogvue_type_template_id_5caa5f0d_staticRenderFns = []
selectorDialogvue_type_template_id_5caa5f0d_render._withStripped = true


// CONCATENATED MODULE: ./packages/selector-component/selectorDialog.vue?vue&type=template&id=5caa5f0d&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/selectorDialog.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var selectorDialogvue_type_script_lang_js_ = ({
  components: { PortalTree: portalTree, DataTree: dataTree },
  inject: ['selector'],
  mixins: [locale_default.a],
  props: {
    visible: {
      type: Boolean,
      default: false
    },
    ids: {
      type: String,
      require: true
    },
    disabled: {
      type: Boolean,
      require: false
    }
  },
  data: function data() {
    return {
      searchKey: '',
      tempIds: '',
      portalTreeVisible: false
    };
  },

  computed: {
    activePortal: function activePortal() {
      return this.selector.activePortal;
    },
    multiPortal: function multiPortal() {
      return this.selector.multiPortal;
    },
    idsArray: function idsArray() {
      return this.tempIds.split(',');
    },
    tempArray: function tempArray() {
      var _this = this;

      return this.selector.objArray.filter(function (item) {
        return _this.idsArray.includes(item.id);
      });
    }
  },
  watch: {
    ids: {
      immediate: true,
      handler: function handler(val) {
        this.tempIds = val;
      }
    },
    activePortal: function activePortal() {
      this.portalTreeVisible = false;
    }
  },
  mounted: function mounted() {
    // 提前渲染
    this.$refs.dialog.rendered = true;
  },

  methods: {
    closeDialog: function closeDialog() {
      this.$emit('update:visible', false);
      this.tempIds = this.ids;
      this.searchKey = '';
    },
    updateTempIds: function updateTempIds(val) {
      this.tempIds = val;
    },
    deleteItem: function deleteItem(item) {
      var idArray = this.tempIds.split(',');
      var index = this.idsArray.indexOf(item.id);
      if (index > -1) {
        idArray.splice(index, 1);
      }
      this.tempIds = idArray.toString();
    },
    submit: function submit() {
      this.selector.updateIds(this.tempIds);
      this.$emit('update:visible', false);
    }
  }
});
// CONCATENATED MODULE: ./packages/selector-component/selectorDialog.vue?vue&type=script&lang=js&
 /* harmony default export */ var selector_component_selectorDialogvue_type_script_lang_js_ = (selectorDialogvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/selector-component/selectorDialog.vue





/* normalize component */

var selectorDialog_component = normalizeComponent(
  selector_component_selectorDialogvue_type_script_lang_js_,
  selectorDialogvue_type_template_id_5caa5f0d_render,
  selectorDialogvue_type_template_id_5caa5f0d_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var selectorDialog = (selectorDialog_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/selector-component/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//






/* harmony default export */ var selector_componentvue_type_script_lang_js_ = ({
  components: { PortalTree: portalTree, DataTree: dataTree, selectorDialog: selectorDialog },
  mixins: [mixins_selector],
  provide: function provide() {
    return {
      selector: this
    };
  },

  props: {
    placeholder: {
      type: String
    },
    url: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: ''
    },
    multiPortal: {
      type: Boolean,
      default: false
    },
    multiIndex: {
      type: Array
    },
    popperClass: {
      type: String,
      default: ''
    },
    multiple: {
      type: Boolean,
      default: false
    },
    multipleLimit: {
      type: Number,
      default: 0
    },
    dialog: {
      type: Boolean,
      default: false
    },
    width: {
      type: String,
      default: '40%'
    },
    headers: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    params: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    portalFilter: {
      type: Function,
      default: function _default(data) {
        return data;
      }
    },
    dataFilter: {
      type: Function,
      default: function _default(data) {
        return data;
      }
    },
    selectAll: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    var portal = JSON.parse(this.$storage.get('portal') || null);
    return {
      activePortalId: portal ? portal.id : '',
      inputWidth: 0,
      initialInputHeight: 0,
      popoverPosition: 'bottom-start',
      popflag: false,
      ids: '',
      objArray: [], // 可选树
      dialogVisible: false,
      activePortal: null,
      isMultiPortal: typeof this.multiPortal === 'boolean' ? this.multiPortal : !!this.$fawkes.multiPortal
    };
  },

  computed: {
    idsArray: function idsArray() {
      return this.ids.split(',') || [];
    },
    selectedObjArray: function selectedObjArray() {
      var _this = this;

      return this.objArray.filter(function (item) {
        return _this.idsArray.includes(item.id);
      });
    }
  },
  watch: {
    ids: function ids(val) {
      if (this.$scopedSlots.reference) return;
      if (this.multiple && !this.collapseTags) {
        this.resetInputHeight();
      }
    },

    params: {
      handler: function handler(val) {
        if (val.portalId !== undefined) {
          this.activePortalId = val.portalId;
        }
      },

      immediate: true,
      deep: true
    }
  },
  methods: {
    setPortal: function setPortal(portal) {
      this.activePortal = portal;
      this.activePortalId = portal.id;
    },
    updateIds: function updateIds(val) {
      this.ids = val;
      if (!this.multiple) {
        this.popflag = false;
      }
    },
    clearData: function clearData() {
      this.ids = '';
    },
    resetInputHeight: function resetInputHeight() {
      var _this2 = this;

      if (this.collapseTags) return;
      this.$nextTick(function () {
        if (!_this2.$refs.input) return;
        var inputChildNodes = _this2.$refs.input.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this2.$refs.tags;
        var sizeInMap = _this2.initialInputHeight || 40;
        input.style.height = _this2.selectedObjArray.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) - 2 + 'px';
      });
    },
    deleteOne: function deleteOne(item) {
      var idArray = this.ids.split(',');
      var index = idArray.indexOf(item.id);
      if (index > -1) {
        idArray.splice(index, 1);
      }
      this.updateIds(idArray.toString());
      if (!this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 宽度resize
     * @param {type}
     * @return:
     */

    handleResize: function handleResize() {
      var _this3 = this;

      this.$nextTick(function () {
        var reference = _this3.$refs.reference;
        _this3.inputWidth = Math.max(reference.getBoundingClientRect().width - 20, _this3.multiPortal ? 400 : 250);
      });
    },
    open: function open() {
      if (this.$scopedSlots.reference) return;
      var rect = this.$refs.popover.$el.getBoundingClientRect();
      var clientTop = document.documentElement.clientTop;
      var clientHeight = document.documentElement.clientHeight;
      var top = rect.top - clientTop;
      var bottom = clientHeight - top - this.$refs.input.$el.offsetHeight;
      if (bottom < 330) {
        this.popoverPosition = 'top-start';
        this.$refs.popover.updatePopper();
      }
    },
    triggerDialog: function triggerDialog() {
      if (!this.dialog) return;
      this.dialogVisible = true;
    },
    dataFormat: function dataFormat(data) {
      return data;
    }
  },
  mounted: function mounted() {
    var _this4 = this;

    if (this.$scopedSlots.reference) return;
    this.$nextTick(function () {
      var reference = _this4.$refs.reference;
      Object(resize_event_["addResizeListener"])(reference, _this4.handleResize);
      _this4.handleResize();
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$scopedSlots.reference) return;
    var reference = this.$refs.reference;
    Object(resize_event_["removeResizeListener"])(reference, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/selector-component/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_selector_componentvue_type_script_lang_js_ = (selector_componentvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/selector-component/index.vue





/* normalize component */

var selector_component_component = normalizeComponent(
  packages_selector_componentvue_type_script_lang_js_,
  selector_componentvue_type_template_id_5fe7b6e6_render,
  selector_componentvue_type_template_id_5fe7b6e6_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var selector_component = (selector_component_component.exports);
// CONCATENATED MODULE: ./src/mixins/emitter.js
function _broadcast(componentName, eventName, params) {
  this.$children.forEach(function (child) {
    var name = child.$options.componentName;

    if (name === componentName) {
      child.$emit.apply(child, [eventName].concat(params));
    } else {
      _broadcast.apply(child, [componentName, eventName].concat([params]));
    }
  });
}
/* harmony default export */ var emitter = ({
  methods: {
    dispatch: function dispatch(componentName, eventName, params) {
      var parent = this.$parent || this.$root;
      var name = parent.$options.componentName;

      while (parent && (!name || name !== componentName)) {
        parent = parent.$parent;

        if (parent) {
          name = parent.$options.componentName;
        }
      }
      if (parent) {
        parent.$emit.apply(parent, [eventName].concat(params));
      }
    },
    broadcast: function broadcast(componentName, eventName, params) {
      _broadcast.call(this, componentName, eventName, params);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/org-selector-pro/src/index.vue?vue&type=script&lang=js&
var org_selector_pro_srcvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//





/* harmony default export */ var org_selector_pro_srcvue_type_script_lang_js_ = ({
  extends: selector_component,
  name: 'FksOrgSelectorPro',
  mixins: [emitter],
  componentName: 'FksOrgSelectorPro',
  props: {
    deptId: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/orgs/tree'
    },
    placeholder: {
      type: String,
      default: Object(lib_locale_["t"])('fks.org.selectbranch')
    },
    deptName: {
      type: String,
      default: ''
    }
  },

  data: function data() {
    return {
      ids: this.deptId || '',
      dialogTitle: Object(lib_locale_["t"])('fks.org.selectbranch'),
      searchPlaceholder: Object(lib_locale_["t"])('fks.org.name')
    };
  },

  watch: {
    deptId: function deptId(val) {
      this.ids = val;
    },
    ids: function ids(val) {
      if (this.deptId !== val) {
        this.$emit('change', this.selectedObjArray);
        this.$emit('update:deptId', val);
        this.dispatch('FksFormItem', 'fks.form.change', val);
      }
    },
    selectedObjArray: function selectedObjArray(val) {
      this.$emit('update:deptName', val.map(function (item) {
        return item.name;
      }).join(','));
    }
  },
  methods: {
    dataFormat: function dataFormat(data) {
      var analyze = function analyze(data) {
        return data.map(function (item) {
          return org_selector_pro_srcvue_type_script_lang_js_extends({}, item.content, {
            id: item.id,
            orgId: item.content.id,
            children: !item.children ? [] : analyze(item.children)
          });
        });
      };
      return analyze(data);
    }
  }

});
// CONCATENATED MODULE: ./packages/org-selector-pro/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_org_selector_pro_srcvue_type_script_lang_js_ = (org_selector_pro_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/org-selector-pro/src/index.vue
var org_selector_pro_src_render, org_selector_pro_src_staticRenderFns




/* normalize component */

var org_selector_pro_src_component = normalizeComponent(
  packages_org_selector_pro_srcvue_type_script_lang_js_,
  org_selector_pro_src_render,
  org_selector_pro_src_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var org_selector_pro_src = (org_selector_pro_src_component.exports);
// CONCATENATED MODULE: ./packages/org-selector-pro/index.js
/*
 * @Author: zhong_m
 * @Date: 2022-07-08 10:31:37
 * @LastEditTime: 2022-07-11 15:11:40
 * @LastEditors: zhong_m
 * @Description: 
 * @FilePath: \fawkes-lib\packages\org-selector-pro\index.js
 */
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
org_selector_pro_src.install = function (Vue) {
  Vue.component(org_selector_pro_src.name, org_selector_pro_src);
};

// 默认导出组件
/* harmony default export */ var org_selector_pro = (org_selector_pro_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/post-selector/src/post-selector.vue?vue&type=template&id=4c96a4a3&
var post_selectorvue_type_template_id_4c96a4a3_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-post-selector-page", style: { width: _vm.width } },
    [
      _c(
        "fks-popover",
        {
          ref: "popover",
          attrs: {
            "popper-class": "fks-post-popover " + _vm.popperClass,
            placement: _vm.popoverPosition,
            "close-delay": 0,
            disabled: _vm.uploadReadOnly || _vm.forbidden,
            width: _vm.inputWidth,
          },
          on: {
            show: _vm.open,
            hide: function ($event) {
              _vm.arrowflag = true
            },
          },
        },
        [
          _c(
            "fks-tabs",
            {
              ref: "portalTab",
              staticClass: "fks-post-selector__tabs",
              model: {
                value: _vm.activeTab,
                callback: function ($$v) {
                  _vm.activeTab = $$v
                },
                expression: "activeTab",
              },
            },
            [
              _c("fks-tab-pane", {
                attrs: { label: "当前门户", name: "present" },
              }),
              _vm._l(_vm.portalData, function (item) {
                return [
                  _vm.portalData.length && !_vm.uploadReadOnly && !_vm.forbidden
                    ? _c("fks-tab-pane", {
                        key: item.id,
                        attrs: { name: item.id, label: item.name },
                      })
                    : _vm._e(),
                ]
              }),
            ],
            2
          ),
          _c(
            "div",
            { staticClass: "fks-post-selector__searchtree" },
            [
              _c(
                "fks-select",
                {
                  attrs: {
                    filterable: "",
                    disabled: _vm.uploadReadOnly || _vm.forbidden,
                    placeholder: _vm.placeholder || "请选择岗位",
                    multiple: _vm.multiple,
                    "multiple-limit": _vm.multipleLimit,
                  },
                  on: { change: _vm.change },
                  model: {
                    value: _vm.post,
                    callback: function ($$v) {
                      _vm.post = $$v
                    },
                    expression: "post",
                  },
                },
                _vm._l(_vm.postData, function (item) {
                  return _c("fks-option", {
                    key: item.id,
                    attrs: { value: item.id, label: item.postName },
                  })
                }),
                1
              ),
              _c("div", { staticClass: "post-member" }, [
                _vm._v(_vm._s(_vm.postMember)),
              ]),
            ],
            1
          ),
          _c(
            "div",
            {
              ref: "reference",
              staticClass: "post-selector-input",
              attrs: { slot: "reference" },
              slot: "reference",
            },
            [
              _c(
                "div",
                {
                  ref: "tags",
                  staticClass: "post-selector-tags",
                  class: {
                    suffix: _vm.fksForm.statusIcon,
                  },
                },
                [
                  _vm.collapseTags && _vm.multiple
                    ? _c(
                        "span",
                        { staticStyle: { width: "100%" } },
                        [
                          _vm.post.length > 0
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable:
                                      !_vm.uploadReadOnly && !_vm.forbidden,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                  on: {
                                    close: function ($event) {
                                      return _vm.deleteOne(_vm.postNameArr[0])
                                    },
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [_vm._v(_vm._s(_vm.postNameArr[0]))]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.post.length > 1
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    closable: false,
                                    size: _vm.size,
                                    type: "info",
                                    "disable-transitions": "",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [_vm._v("+ " + _vm._s(_vm.post.length - 1))]
                                  ),
                                ]
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                  !_vm.collapseTags
                    ? _c(
                        "span",
                        { staticStyle: { display: "contents", width: "100%" } },
                        [
                          !_vm.multiple && _vm.post.length != 0
                            ? _c(
                                "fks-tag",
                                {
                                  attrs: {
                                    size: _vm.size,
                                    "disable-transitions": "",
                                    type: "info",
                                  },
                                },
                                [
                                  _c(
                                    "span",
                                    { staticClass: "fks-select__tags-text" },
                                    [_vm._v(_vm._s(_vm.post))]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _vm.multiple && _vm.postNameArr.length > 0
                            ? _c(
                                "div",
                                _vm._l(_vm.postNameArr, function (tag, index) {
                                  return _c(
                                    "fks-tag",
                                    {
                                      key: index,
                                      attrs: {
                                        closable:
                                          !_vm.uploadReadOnly && !_vm.forbidden,
                                        size: _vm.size,
                                        "disable-transitions": "",
                                        type: "info",
                                      },
                                      on: {
                                        close: function ($event) {
                                          return _vm.deleteOne(tag)
                                        },
                                      },
                                    },
                                    [
                                      _c(
                                        "span",
                                        {
                                          staticClass: "fks-select__tags-text",
                                        },
                                        [_vm._v(_vm._s(tag))]
                                      ),
                                    ]
                                  )
                                }),
                                1
                              )
                            : _vm._e(),
                        ],
                        1
                      )
                    : _vm._e(),
                ]
              ),
              _c(
                "fks-input",
                {
                  ref: "input",
                  staticClass: "fks-post-out-input",
                  attrs: {
                    readonly: "",
                    size: _vm.size,
                    disabled: _vm.forbidden,
                  },
                },
                [
                  !_vm.uploadReadOnly && !_vm.forbidden
                    ? _c("template", { slot: "suffix" }, [
                        !_vm.arrowflag
                          ? _c("i", {
                              staticClass: "fks-icon-arrow-up fks-input__icon",
                            })
                          : _c("i", {
                              staticClass:
                                "fks-icon-arrow-down fks-input__icon",
                            }),
                      ])
                    : _vm._e(),
                ],
                2
              ),
            ],
            1
          ),
        ],
        1
      ),
    ],
    1
  )
}
var post_selectorvue_type_template_id_4c96a4a3_staticRenderFns = []
post_selectorvue_type_template_id_4c96a4a3_render._withStripped = true


// CONCATENATED MODULE: ./packages/post-selector/src/post-selector.vue?vue&type=template&id=4c96a4a3&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/post-selector/src/post-selector.vue?vue&type=script&lang=js&
var post_selectorvue_type_script_lang_js_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





/* harmony default export */ var post_selectorvue_type_script_lang_js_ = ({
  name: 'FksPostSelector',
  componentName: 'FksPostSelector',
  mixins: [mixins_selector, locale_default.a],
  props: {
    placeholder: {
      type: String
    },
    urlPath: {
      type: String,
      default: '/sys-user/post/page'
    },
    postId: {},
    postName: {
      type: String,
      default: ''
    },
    multiPortal: {},

    multiIndex: {
      type: Array
    },
    popperClass: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    return {
      idList: [],
      multiPost: 0,
      postCount: 0, //计算多岗位时人员接口请求次数
      memberArr: [],
      postMember: '',
      inputWidth: 0,
      initialInputHeight: 0,
      popoverPosition: 'bottom-start',
      arrowflag: true,
      post: this.multiPortal ? [] : '',
      postNameArr: [],
      activeTab: 'present',
      data: [], // 岗位数据
      postData: [], //门户下的岗位数据
      portalData: [],

      portalTree: {},
      isMultiPortal: typeof this.multiPortal === 'boolean' ? this.multiPortal : !!this.$fawkes.multiPortal
    };
  },

  watch: {
    arrowflag: function arrowflag(val) {
      if (val) this.$refs.popover.doDestroy();
    },
    activeTab: function activeTab(val) {
      var _this = this;

      this.postMember = '';
      this.post = '';
      this.$emit('update:postId', '');
      this.$emit('update:postName', '');
      if (val == 'present') {
        if (this.params.portalId) {
          this.postData = this.data.filter(function (item) {
            return item.portalId == _this.params.portalId;
          });
        } else {
          this.postData = this.data;
        }
      } else this.postData = this.data.filter(function (item) {
        return item.portalId == val;
      });
    },

    postName: {
      immediate: true,
      handler: function handler(val) {
        if (val && !this.multiple) {
          this.post = val;
        }
        if (this.multiple) {
          this.initialList();
        }
      }
    }
  },
  methods: {
    resetInputHeight: function resetInputHeight() {
      var _this2 = this;

      if (this.collapseTags) return;
      this.$nextTick(function () {
        if (!_this2.$refs.input) return;
        var inputChildNodes = _this2.$refs.input.$el.childNodes;
        var input = [].filter.call(inputChildNodes, function (item) {
          return item.tagName === 'INPUT';
        })[0];
        var tags = _this2.$refs.tags;
        var sizeInMap = _this2.initialInputHeight || 40;
        input.style.height = _this2.post.length === 0 ? sizeInMap + 'px' : Math.max(tags ? tags.clientHeight + (tags.clientHeight > sizeInMap ? 6 : 0) : 0, sizeInMap) - 2 + 'px';
      });
    },

    //删除postName
    deleteOne: function deleteOne(name) {
      var index = this.postNameArr.indexOf(name);
      if (index > -1) {
        this.postNameArr.splice(index, 1);
      }
      this.$emit('update:postName', this.postNameArr.join(','));
      var id = '';
      this.postData.forEach(function (item) {
        if (item.postName == name) id = item.id;
      });
      var index0 = this.post.indexOf(id);
      if (index0 > -1) {
        this.post.splice(index0, 1);
        this.$emit('update:postId', this.post.join(','));
      }
      if (!this.collapseTags) {
        this.resetInputHeight();
      }
    },

    /**
     * @description: 宽度resize
     * @param {type}
     * @return:
     */

    handleResize: function handleResize() {
      var _this3 = this;

      this.$nextTick(function () {
        var reference = _this3.$refs.reference;
        _this3.inputWidth = Math.max(reference.getBoundingClientRect().width - 20, 300);
      });
    },
    open: function open() {
      this.arrowflag = false;
      var rect = this.$refs.popover.$el.getBoundingClientRect();
      var clientTop = document.documentElement.clientTop;
      var clientHeight = document.documentElement.clientHeight;
      var top = rect.top - clientTop;
      var bottom = clientHeight - top - this.$refs.input.$el.offsetHeight;
      if (bottom < 330) {
        this.popoverPosition = 'top-start';
        this.$refs.popover.updatePopper();
      }
    },
    change: function change(val) {
      var _this4 = this;

      this.$emit('change', val);
      //更新岗位人员
      this.postMember = '';
      this.memberArr = [];
      if (this.multiple) {
        this.postCount = 0;
        this.multiPost = val.length;
        this.idList = [];
        val.forEach(function (item) {
          _this4.getPostMember(item, _this4.activeTab == 'present' ? _this4.params.portalId || '' : _this4.activeTab);
        });
        if (!this.collapseTags) {
          this.resetInputHeight();
        }
        this.$emit('update:postId', val.join(','));
        var temp = [];
        this.postData.forEach(function (item) {
          if (val.indexOf(item.id) > -1) {
            temp.push(item.postName);
          }
        });
        this.$emit('update:postName', temp.join(','));
        this.postNameArr = temp;
      } else {
        for (var a in this.postData) {
          if (this.postData[a].id == val) {
            this.$emit('update:postName', this.postData[a].postName);
            break;
          }
        }
        this.getPostMember(val, this.activeTab == 'present' ? this.params.portalId || '' : this.activeTab);
      }
    },
    initialList: function initialList() {
      if (this.postName && this.postId) {
        var postNameArr = this.postName.split(',');
        this.postNameArr = postNameArr;
        var postArr = this.postId.split(',');
        var len = postNameArr.length;
        var len2 = postArr.length;
        if (len !== len2) {
          console.error(this.$options.name + ' \u4E2D\u521D\u59CB\u5C97\u4F4D\u6570\u503C\u9519\u8BEF');
          return false;
        }
        if (len > 1 && !this.multiple) {
          console.error(this.$options.name + ' \u4E2D\u5C97\u4F4D\u521D\u503C\u4E3A\u591A\u4E2A\uFF0C\u8BF7\u6DFB\u52A0multiple\u5C5E\u6027');
        } else {
          //disabled时有初始值
          if (this.forbidden) {
            for (var i = 0; i < len2; i++) {
              this.postData.push({
                id: postArr[i].replace(/\"/g, ''),
                postName: postNameArr[i]
              });
            }
          }
          this.post = [];
          for (var _i = 0; _i < len2; _i++) {
            this.post.push(postArr[_i].replace(/\"/g, ''));
          }
        }
      } else if (!this.postName && !this.post) {} else {
        console.error('\u8BF7\u5728 ' + this.$options.name + ' \u8F93\u5165\u6B63\u786E\u7684\u5C97\u4F4D\u6570\u636E,\u5C97\u4F4Did\u548C\u5C97\u4F4D\u540D\u79F0\u9700\u540C\u65F6\u8D4B\u503C');
      }
    },

    //岗位下用户
    getPostMember: function getPostMember(id, portalId) {
      var _this5 = this;

      var r = this.$axios || utils_request;
      var tempParams = {
        pageNo: 1,
        pageSize: 999,
        postId: id,
        portalId: portalId
      };
      r({
        method: 'get',
        params: tempParams,
        url: '/sys-user/post/users/page',
        headers: this.headers
      }).then(function (res) {
        if (res.status) {
          var list = [];
          //根据id去重
          res.data.list.forEach(function (item) {
            if (_this5.idList.indexOf(item.id) == -1) {
              list.push(item.userFullname);
              _this5.idList.push(item.id);
              _this5.memberArr.push({
                userFullname: item.userFullname,
                userName: item.userName
              });
            }
          });
          if (!_this5.multiple) {
            _this5.postMember = list.join(' , ');
            _this5.$emit('getPostMember', _this5.memberArr);
          } else {
            _this5.postCount++;
            _this5.postMember = _this5.postMember + (_this5.postMember ? ' , ' : '') + list.join(' , ');
            if (_this5.postCount == _this5.multiPost) _this5.$emit('getPostMember', _this5.memberArr);
          }
        }
      }).catch(function (err) {
        return [];
      });
    },
    initData: function initData() {
      var _this6 = this;

      var r = this.$axios || utils_request;
      var tempParams = {
        pageNo: 1,
        pageSize: 999
      };
      r({
        method: 'get',
        params: tempParams,
        url: this.url + this.urlPath,
        headers: this.headers
      }).then(function (res) {
        var response = res;
        if (res.data.status) {
          //排除拦截器影响
          response = res.data;
        }
        if (response.status) {
          _this6.data = response.data.list;
          _this6.postData = [].concat(_this6.data);
          //初始化岗位下人员信息
          if (!_this6.multiple) {
            _this6.getPostMember(_this6.postId, _this6.params.portalId || '');
          } else {
            _this6.multiPost = _this6.postId.split(',').length;
            _this6.postCount = 0;
            _this6.postId.split(',').forEach(function (item) {
              _this6.getPostMember(item, _this6.params.portalId || '');
            });
          }
          if (_this6.isMultiPortal) _this6.$nextTick(function () {
            this.getPortalList();
          });
        } else {
          console.log('请求失败');
        }
      }).catch(function (err) {
        console.log(err);
      });
    },
    getPortalList: function getPortalList() {
      var _this7 = this;

      var r1 = this.$axios || utils_request;
      r1({
        method: 'get',
        url: 'sys-user/portals/tree',
        headers: this.headers,
        ctM: true
      }).then(function (res) {
        //遍历门户树
        _this7.getPortal(res.data[0]);
        if (_this7.multiIndex && post_selectorvue_type_script_lang_js_typeof(_this7.multiIndex) === 'object') {
          _this7.portalData = _this7.portalData.filter(function (item) {
            return _this7.multiIndex.indexOf(Number(item.type)) > -1;
          });
        }
        //如果传入了portalId则当前门户tab展示当前传入门户
        if (_this7.params.portalId) {
          _this7.postData = _this7.postData.filter(function (item) {
            return _this7.params.portalId == item.id;
          });
        }
      });
    },
    getPortal: function getPortal(tree) {
      var _this8 = this;

      //扁平化tree(id/name)
      // this.portalTree[tree.content.id] = tree.content.name
      this.portalData.push({
        name: tree.content.name,
        id: tree.content.id,
        type: tree.content.type
      });
      if (tree.children) {
        tree.children.forEach(function (item) {
          _this8.getPortal(item);
        });
      }
    }
  },
  mounted: function mounted() {
    var _this9 = this;

    if (!this.forbidden) {
      this.initData();
    } else {
      if (this.multiple && this.postId) {
        this.initialList();
      }
    }
    this.$nextTick(function () {
      var reference = _this9.$refs.reference;
      Object(resize_event_["addResizeListener"])(reference, _this9.handleResize);
      _this9.handleResize();
    });
  },
  beforeDestroy: function beforeDestroy() {
    var reference = this.$refs.reference;
    Object(resize_event_["removeResizeListener"])(reference, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/post-selector/src/post-selector.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_post_selectorvue_type_script_lang_js_ = (post_selectorvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/post-selector/src/post-selector.vue





/* normalize component */

var post_selector_component = normalizeComponent(
  src_post_selectorvue_type_script_lang_js_,
  post_selectorvue_type_template_id_4c96a4a3_render,
  post_selectorvue_type_template_id_4c96a4a3_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var post_selector = (post_selector_component.exports);
// CONCATENATED MODULE: ./packages/post-selector/index.js
/*
 * @Author: gao_m3
 * @Date: 2021-08-10 15:08:32
 * @LastEditors: Please set LastEditors
 * @LastEditTime: 2021-08-10 15:08:32
 * @Descripttion:
 */


// 为组件提供 install 安装方法，供按需引入
post_selector.install = function (Vue) {
  Vue.component(post_selector.name, post_selector);
};

// 默认导出组件
/* harmony default export */ var packages_post_selector = (post_selector);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/post-selector-pro/src/index.vue?vue&type=script&lang=js&
var post_selector_pro_srcvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//





/* harmony default export */ var post_selector_pro_srcvue_type_script_lang_js_ = ({
  extends: selector_component,
  name: 'FksPostSelectorPro',
  mixins: [emitter],
  componentName: 'FksPostSelectorPro',
  props: {
    postId: {
      type: String,
      default: ''
    },
    urlPath: {
      type: String,
      default: '/sys-user/post/page'
    },
    placeholder: {
      type: String,
      default: Object(lib_locale_["t"])('fks.post.selectpost')
    },
    postName: {
      type: String,
      default: ''
    }
  },
  data: function data() {
    return {
      ids: this.postId || '',
      dialogTitle: Object(lib_locale_["t"])('fks.post.selectpost'),
      searchPlaceholder: Object(lib_locale_["t"])('fks.post.name')
    };
  },

  watch: {
    postId: function postId(val) {
      this.ids = val;
    },
    ids: function ids(val) {
      if (this.postId !== val) {
        this.$emit('change', this.selectedObjArray);
        this.$emit('update:postId', val);
        this.dispatch('FksFormItem', 'fks.form.change', val);
      }
    },
    selectedObjArray: function selectedObjArray(val) {
      this.$emit('update:postName', val.map(function (item) {
        return item.name;
      }).join(','));
    }
  },
  methods: {
    dataFormat: function dataFormat(data) {
      return data.list.map(function (item) {
        return post_selector_pro_srcvue_type_script_lang_js_extends({}, item, {
          name: item.postName
        });
      });
    }
  }

});
// CONCATENATED MODULE: ./packages/post-selector-pro/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_post_selector_pro_srcvue_type_script_lang_js_ = (post_selector_pro_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/post-selector-pro/src/index.vue
var post_selector_pro_src_render, post_selector_pro_src_staticRenderFns




/* normalize component */

var post_selector_pro_src_component = normalizeComponent(
  packages_post_selector_pro_srcvue_type_script_lang_js_,
  post_selector_pro_src_render,
  post_selector_pro_src_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var post_selector_pro_src = (post_selector_pro_src_component.exports);
// CONCATENATED MODULE: ./packages/post-selector-pro/index.js
/*
 * @Author: gao_m3
 * @Date: 2021-08-10 15:08:32
 * @LastEditors: zhong_m
 * @LastEditTime: 2022-07-07 17:00:04
 * @Descripttion:
 */


// 为组件提供 install 安装方法，供按需引入
post_selector_pro_src.install = function (Vue) {
  Vue.component(post_selector_pro_src.name, post_selector_pro_src);
};

// 默认导出组件
/* harmony default export */ var post_selector_pro = (post_selector_pro_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/index.vue?vue&type=template&id=8898055a&
var srcvue_type_template_id_8898055a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-flow-comment" },
    [
      _c(
        "fks-tabs",
        {
          key: _vm.flowTab,
          staticClass: "fks-flow-tabs",
          on: { "tab-click": _vm.handleClick },
          model: {
            value: _vm.active,
            callback: function ($$v) {
              _vm.active = $$v
            },
            expression: "active",
          },
        },
        [
          _vm.flowActive
            ? _c("fks-tab-pane", { attrs: { name: "comment" } }, [
                _c("span", { attrs: { slot: "label" }, slot: "label" }, [
                  _c("i", {
                    staticClass: "user-follow-line",
                    staticStyle: { "margin-right": "8px" },
                  }),
                  _vm._v(
                    "\n        " +
                      _vm._s(_vm.t("fks.flow.flowapproval")) +
                      "\n      "
                  ),
                ]),
                _c(
                  "div",
                  { staticClass: "fks-comment-item-warp" },
                  _vm._l(_vm.flowData, function (item, index) {
                    return _c(
                      "div",
                      {
                        key: index,
                        staticClass: "fks-comment-item flex task-step-line",
                      },
                      [
                        _c(
                          "div",
                          {
                            staticClass: "circle",
                            class: item[_vm.dataSerise.flag],
                          },
                          [
                            _c("div", { staticClass: "number" }, [
                              _vm._v(_vm._s(index + 1)),
                            ]),
                          ]
                        ),
                        _c("div", { staticClass: "fks-comment-item__left" }, [
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title task-step fks-task-name",
                            },
                            [
                              _vm._v(
                                "\n              " +
                                  _vm._s(item[_vm.dataSerise.taskName]) +
                                  "\n            "
                              ),
                            ]
                          ),
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title task-step flex flex-center",
                            },
                            [
                              _c(
                                "div",
                                {
                                  staticClass: "sub-title",
                                  staticStyle: { "min-width": "45px" },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.t("fks.flow.handler")) +
                                      "\n              "
                                  ),
                                ]
                              ),
                              _c(
                                "div",
                                {
                                  staticStyle: {
                                    "word-break": "break-all",
                                    "max-width": "80px",
                                  },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(item[_vm.dataSerise.realName]) +
                                      "\n              "
                                  ),
                                ]
                              ),
                            ]
                          ),
                          item[_vm.dataSerise.orgName]
                            ? _c(
                                "div",
                                {
                                  staticClass:
                                    "fks-task-detail-title task-step flex flex-center",
                                },
                                [
                                  _c(
                                    "div",
                                    {
                                      staticClass: "sub-title",
                                      staticStyle: { "min-width": "45px" },
                                    },
                                    [
                                      _vm._v(
                                        "\n                " +
                                          _vm._s(_vm.t("fks.flow.org")) +
                                          "\n              "
                                      ),
                                    ]
                                  ),
                                  _c(
                                    "div",
                                    {
                                      staticStyle: {
                                        "word-break": "break-all",
                                        "max-width": "80px",
                                      },
                                    },
                                    [
                                      _vm._v(
                                        "\n                " +
                                          _vm._s(item[_vm.dataSerise.orgName]) +
                                          "\n              "
                                      ),
                                    ]
                                  ),
                                ]
                              )
                            : _vm._e(),
                          _c(
                            "div",
                            {
                              staticClass:
                                "fks-task-detail-title comment flex flex-center",
                            },
                            [
                              _c(
                                "div",
                                {
                                  staticClass: "sub-title",
                                  staticStyle: { "min-width": "45px" },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(_vm.t("fks.flow.status")) +
                                      "\n              "
                                  ),
                                ]
                              ),
                              _c(
                                "div",
                                {
                                  staticStyle: {
                                    "word-break": "break-all",
                                    "max-width": "80px",
                                  },
                                },
                                [
                                  _vm._v(
                                    "\n                " +
                                      _vm._s(
                                        _vm.solveTypeList[
                                          item[_vm.dataSerise.flag]
                                        ] || item[_vm.dataSerise.solveType]
                                      ) +
                                      "\n              "
                                  ),
                                ]
                              ),
                            ]
                          ),
                        ]),
                        _c("div", { staticClass: "fks-comment-item__right" }, [
                          _c(
                            "div",
                            { staticClass: "fks-task-comment flex-space flex" },
                            [
                              _c("div", {
                                staticClass:
                                  "flex-space fks-task-comment__detail",
                                staticStyle: {
                                  overflow: "auto",
                                  height: "70px",
                                },
                                domProps: {
                                  innerHTML: _vm._s(
                                    item[_vm.dataSerise.comment]
                                      ? item[_vm.dataSerise.comment]
                                      : _vm.solveTypeList[
                                          item[_vm.dataSerise.flag]
                                        ] || item[_vm.dataSerise.solveType]
                                  ),
                                },
                              }),
                              _c("div", { staticClass: "fks-task-signzone" }, [
                                _c(
                                  "div",
                                  {
                                    staticClass: "fks-task-signzone__sign-pic",
                                  },
                                  [
                                    _c("div", { staticClass: "submit-time" }, [
                                      _c("i", {
                                        staticClass: "fks-icon-submit",
                                      }),
                                      _vm._v(
                                        "\n                    " +
                                          _vm._s(
                                            _vm.parseTime(
                                              item[_vm.dataSerise.createDate]
                                            )
                                          ) +
                                          "\n                  "
                                      ),
                                    ]),
                                    item[_vm.dataSerise.approveDate]
                                      ? _c(
                                          "div",
                                          { staticClass: "comment-time" },
                                          [
                                            _c("i", {
                                              staticClass: "fks-icon-verify",
                                            }),
                                            _vm._v(
                                              "\n                    " +
                                                _vm._s(
                                                  _vm.parseTime(
                                                    item[
                                                      _vm.dataSerise.approveDate
                                                    ]
                                                  )
                                                ) +
                                                "\n                  "
                                            ),
                                          ]
                                        )
                                      : _vm._e(),
                                    item[_vm.dataSerise.flag] != "todo" &&
                                    _vm.showSign
                                      ? _c("i", {
                                          staticClass: "fks-icon-edit",
                                        })
                                      : _vm._e(),
                                    item[_vm.dataSerise.flag] != "todo" &&
                                    _vm.showSign
                                      ? _c(
                                          "fks-image",
                                          {
                                            attrs: {
                                              src: item[_vm.dataSerise.signUrl]
                                                ? item[_vm.dataSerise.signUrl]
                                                : _vm.signSrc
                                                ? _vm.signSrc +
                                                  "?userName=" +
                                                  item[_vm.dataSerise.userName]
                                                : "",
                                            },
                                          },
                                          [
                                            _c(
                                              "div",
                                              {
                                                staticClass: "image-slot",
                                                attrs: { slot: "error" },
                                                slot: "error",
                                              },
                                              [
                                                _vm._v(
                                                  "\n                      " +
                                                    _vm._s(
                                                      _vm.t(
                                                        "fks.flow.nosignature"
                                                      )
                                                    ) +
                                                    "\n                    "
                                                ),
                                              ]
                                            ),
                                          ]
                                        )
                                      : _vm._e(),
                                  ],
                                  1
                                ),
                              ]),
                            ]
                          ),
                          item[_vm.dataSerise.fileList] &&
                          item[_vm.dataSerise.fileList].length > 0
                            ? _c(
                                "div",
                                [
                                  _c("file", {
                                    attrs: {
                                      fileList: item[_vm.dataSerise.fileList],
                                    },
                                    on: {
                                      preview: _vm.preview,
                                      download: _vm.download,
                                    },
                                  }),
                                ],
                                1
                              )
                            : _vm._e(),
                        ]),
                      ]
                    )
                  }),
                  0
                ),
              ])
            : _vm._e(),
          _c("fks-tab-pane", { attrs: { name: "flow" } }, [
            _c("span", { attrs: { slot: "label" }, slot: "label" }, [
              _c("i", {
                staticClass: "fks-icon-route-line",
                staticStyle: { "margin-right": "8px" },
              }),
              _vm._v(
                "\n        " + _vm._s(_vm.t("fks.flow.flowchart")) + "\n      "
              ),
            ]),
            _c("div", { staticClass: "flow-warp" }, [
              _c(
                "div",
                {
                  ref: "content",
                  staticClass: "containers",
                  staticStyle: { overflow: "auto" },
                },
                [
                  _c(
                    "div",
                    {
                      staticClass: "flex",
                      staticStyle: { "margin-top": "24px" },
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon current" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.processing"))),
                          ]),
                        ]
                      ),
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon done" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.passed"))),
                          ]),
                        ]
                      ),
                      _c(
                        "div",
                        {
                          staticClass: "exmple-item",
                          staticStyle: { "margin-right": "16px" },
                        },
                        [
                          _c("div", { staticClass: "exmple-icon process" }),
                          _c("span", [
                            _vm._v(_vm._s(_vm.t("fks.flow.unfinished"))),
                          ]),
                        ]
                      ),
                    ]
                  ),
                  _c("div", {
                    ref: "canvas",
                    staticClass: "canvas fks-flow-svg-container",
                    staticStyle: { cursor: "pointer" },
                    on: {
                      click: function ($event) {
                        _vm.showViewer = true
                      },
                    },
                  }),
                ]
              ),
            ]),
          ]),
          _vm.showList
            ? _c(
                "fks-tab-pane",
                { attrs: { name: "list" } },
                [
                  _c("span", { attrs: { slot: "label" }, slot: "label" }, [
                    _c("i", {
                      staticClass: "fks-icon-user",
                      staticStyle: { "margin-right": "8px" },
                    }),
                    _vm._v("\n        流程审批列表\n      "),
                  ]),
                  _c(
                    "fks-table",
                    { attrs: { data: _vm.flowData, stripe: "" } },
                    [
                      _c("fks-table-column", { attrs: { type: "index" } }),
                      _c("fks-table-column", {
                        attrs: { prop: "taskName", label: "环节名称" },
                      }),
                      _c("fks-table-column", {
                        attrs: { prop: "realName", label: "执行人" },
                      }),
                      _c("fks-table-column", {
                        attrs: { prop: "createDate", label: "到达时间" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function (scope) {
                                return [
                                  _vm._v(
                                    "\n            " +
                                      _vm._s(
                                        scope.$index == 0
                                          ? "——"
                                          : _vm.parseTime(scope.row.createDate)
                                      )
                                  ),
                                ]
                              },
                            },
                          ],
                          null,
                          false,
                          2016597662
                        ),
                      }),
                      _c("fks-table-column", {
                        attrs: { label: "处理时长" },
                        scopedSlots: _vm._u(
                          [
                            {
                              key: "default",
                              fn: function (scope) {
                                return [
                                  _vm._v(
                                    "\n            " +
                                      _vm._s(
                                        scope.$index == 0
                                          ? "——"
                                          : scope.row.approveDate
                                          ? _vm.handlingTime(scope.row)
                                          : "尚未处理"
                                      ) +
                                      "\n          "
                                  ),
                                ]
                              },
                            },
                          ],
                          null,
                          false,
                          1547550383
                        ),
                      }),
                    ],
                    1
                  ),
                ],
                1
              )
            : _vm._e(),
        ],
        1
      ),
      _vm.showViewer
        ? _c("svg-viewer", {
            attrs: { "on-close": _vm.viewerClose, flowInfo: _vm.flowInfo },
          })
        : _vm._e(),
    ],
    1
  )
}
var srcvue_type_template_id_8898055a_staticRenderFns = []
srcvue_type_template_id_8898055a_render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue?vue&type=template&id=8898055a&

// EXTERNAL MODULE: external "bpmn-js"
var external_bpmn_js_ = __webpack_require__(39);
var external_bpmn_js_default = /*#__PURE__*/__webpack_require__.n(external_bpmn_js_);

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/file.vue?vue&type=template&id=d315357a&
var filevue_type_template_id_d315357a_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticStyle: {
        display: "flex",
        "justify-content": "flex-start",
        "flex-wrap": "wrap",
      },
    },
    _vm._l(_vm.fileList, function (item, index) {
      return _c(
        "div",
        {
          key: index,
          staticStyle: { "margin-left": "20px", width: "fit-content" },
        },
        [
          _c(
            "div",
            {
              directives: [
                {
                  name: "show",
                  rawName: "v-show",
                  value: _vm.hideItem ? true : index < 2,
                  expression: "hideItem ? true : index < 2",
                },
              ],
            },
            [
              _c("fks-icon", {
                attrs: {
                  "icon-class": _vm.getFileIconByExtName(
                    item[_vm.dataSerise.extName]
                  ),
                },
              }),
              _c(
                "span",
                {
                  staticClass: "file-describe",
                  on: {
                    click: function ($event) {
                      return _vm.preview(item)
                    },
                  },
                },
                [
                  _vm._v(
                    "\n        " +
                      _vm._s(item[_vm.dataSerise.fileName]) +
                      "\n      "
                  ),
                ]
              ),
              _c("i", {
                staticClass: "fks-icon-download",
                staticStyle: {
                  "margin-left": "8px",
                  color: "#027aff",
                  cursor: "pointer",
                },
                on: {
                  click: function ($event) {
                    return _vm.download(item)
                  },
                },
              }),
              _c(
                "span",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value:
                        _vm.hideItem && index == _vm.len - 1 && _vm.len > 2,
                      expression: "hideItem && index == len - 1 && len > 2",
                    },
                  ],
                  staticClass: "flow-comments_changeButton",
                  on: { click: _vm.hide },
                },
                [_vm._v("收起")]
              ),
              _c(
                "span",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: !_vm.hideItem && index == 1 && _vm.len > 2,
                      expression: "!hideItem && index == 1 && len > 2",
                    },
                  ],
                  staticClass: "flow-comments_changeButton",
                  on: { click: _vm.expand },
                },
                [_vm._v("展开")]
              ),
            ],
            1
          ),
        ]
      )
    }),
    0
  )
}
var filevue_type_template_id_d315357a_staticRenderFns = []
filevue_type_template_id_d315357a_render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue?vue&type=template&id=d315357a&

// EXTERNAL MODULE: external "fawkes-lib/lib/utils/fileIcon"
var fileIcon_ = __webpack_require__(61);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/file.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var filevue_type_script_lang_js_ = ({
  props: {
    fileList: {},
    dataSerise: {
      type: Object,
      default: function _default() {
        return {
          fileName: 'fileName', // 处理人用户名
          extName: 'extName' // 流程节点名称
        };
      }
    }
  },
  data: function data() {
    return {
      len: 0,
      hideItem: false
    };
  },
  mounted: function mounted() {
    if (this.fileList.length > 0) {
      this.len = this.fileList.length;
    }
  },

  methods: {
    getFileIconByExtName: function getFileIconByExtName(extName) {
      return Object(fileIcon_["getFileIconByExtName"])(extName);
    },
    preview: function preview(file) {
      this.$emit('preview', file);
    },
    download: function download(file) {
      this.$emit('download', file);
      //   down(file.fileToken).then((res) => {
      //     download(file, res)
      //   })
    },
    handleClose: function handleClose() {
      this.showPreview = false;
    },
    hide: function hide() {
      this.hideItem = false;
    },
    expand: function expand() {
      this.hideItem = true;
    }
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_filevue_type_script_lang_js_ = (filevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/flow-comments/src/components/file.vue





/* normalize component */

var file_component = normalizeComponent(
  components_filevue_type_script_lang_js_,
  filevue_type_template_id_d315357a_render,
  filevue_type_template_id_d315357a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var file = (file_component.exports);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/svgViewer.vue?vue&type=template&id=a68ed03e&
var svgViewervue_type_template_id_a68ed03e_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("transition", { attrs: { name: "viewer-fade" } }, [
    _c(
      "div",
      {
        ref: "fks-image-viewer__wrapper",
        staticClass: "fks-image-viewer__wrapper",
        style: { "z-index": _vm.zIndex },
        attrs: { tabindex: "-1" },
      },
      [
        _c(
          "div",
          {
            staticClass: "fks-image-viewer__mask",
            staticStyle: { opacity: "1", background: "#fff" },
          },
          [
            _c(
              "div",
              {
                ref: "content",
                staticClass: "containers",
                staticStyle: { width: "100%", height: "100%" },
              },
              [
                _c("div", {
                  ref: "canvas",
                  staticClass: "canvas",
                  staticStyle: { width: "100%", height: "100%" },
                }),
              ]
            ),
          ]
        ),
        _c(
          "span",
          {
            staticClass: "fks-image-viewer__btn fks-image-viewer__close",
            on: { click: _vm.hide },
          },
          [_c("i", { staticClass: "fks-icon-circle-close" })]
        ),
      ]
    ),
  ])
}
var svgViewervue_type_template_id_a68ed03e_staticRenderFns = []
svgViewervue_type_template_id_a68ed03e_render._withStripped = true


// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue?vue&type=template&id=a68ed03e&

// EXTERNAL MODULE: external "svg-pan-zoom"
var external_svg_pan_zoom_ = __webpack_require__(62);
var external_svg_pan_zoom_default = /*#__PURE__*/__webpack_require__.n(external_svg_pan_zoom_);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/components/svgViewer.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var svgViewervue_type_script_lang_js_ = ({
  name: 'svg-viewer',
  props: {
    zIndex: {
      type: Number,
      default: 2000
    },
    onClose: {
      type: Function,
      default: function _default() {}
    },
    initialIndex: {
      type: Number,
      default: 0
    },
    flowInfo: {
      required: true,
      type: Object
    }
  },

  data: function data() {
    return {
      index: this.initialIndex,
      isShow: false,
      infinite: true,
      loading: false,
      transform: {
        scale: 1,
        deg: 0,
        offsetX: 0,
        offsetY: 0,
        enableTransition: false
      }
    };
  },

  computed: {},
  watch: {},
  methods: {
    hide: function hide() {
      this.onClose();
    },
    setFlowInfo: function setFlowInfo() {
      var _this = this;

      var canvas = this.$refs.canvas;
      canvas.innerHTML = ''; // 清空内容
      var viewer = new external_bpmn_js_default.a({
        container: canvas
      });
      viewer.importXML(this.flowInfo.xml, function (err) {
        if (!err) {
          (function () {
            viewer.get('canvas').zoom('fit-viewport');
            var canvas = viewer.get('canvas');
            var _flowInfo = _this.flowInfo,
                currentNode = _flowInfo.currentNode,
                userTask = _flowInfo.userTask,
                exclusiveGateway = _flowInfo.exclusiveGateway,
                inclusiveGateway = _flowInfo.inclusiveGateway,
                parallelGateway = _flowInfo.parallelGateway,
                sequenceFlow = _flowInfo.sequenceFlow;

            currentNode.forEach(function (item) {
              canvas.addMarker(item, 'current-highlight');
            });
            var _arr = [userTask, exclusiveGateway, inclusiveGateway, parallelGateway, sequenceFlow];
            for (var _i = 0; _i < _arr.length; _i++) {
              var node = _arr[_i];
              node && node.forEach(function (item) {
                canvas.addMarker(item, 'highlight');
              });
            }
            _this.$nextTick(function () {
              var container = _this.$refs.content;
              var svgElement = container.querySelectorAll('svg')[1];
              external_svg_pan_zoom_default()(svgElement, {
                panEnabled: true,
                controlIconsEnabled: false,
                zoomEnabled: true
              });
            });
          })();
        } else {
          console.log('something went wrong:', err);
        }
      });
    }
  },
  mounted: function mounted() {
    this.setFlowInfo();
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue?vue&type=script&lang=js&
 /* harmony default export */ var components_svgViewervue_type_script_lang_js_ = (svgViewervue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/flow-comments/src/components/svgViewer.vue





/* normalize component */

var svgViewer_component = normalizeComponent(
  components_svgViewervue_type_script_lang_js_,
  svgViewervue_type_template_id_a68ed03e_render,
  svgViewervue_type_template_id_a68ed03e_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var svgViewer = (svgViewer_component.exports);
// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/flow-comments/src/index.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import { getModelXML, getHistoryNodes } from '@/views/assets/api'




/* harmony default export */ var flow_comments_srcvue_type_script_lang_js_ = ({
  components: { file: file, SvgViewer: svgViewer },
  name: 'FksFlowComments',
  mixins: [locale_default.a],
  props: {
    showSign: {
      type: Boolean,
      default: true
    },
    data: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    flowActive: {
      type: Boolean,
      default: true
    },
    flowInfo: {
      type: Object,
      default: function _default() {
        return {
          userTask: [],
          currentNode: ''
        };
      }
    },
    signSrc: {
      type: String
    },
    solveTypeList: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    dataSerise: {
      type: Object,
      default: function _default() {
        return {
          userName: 'userName', // 处理人用户名
          taskName: 'taskName', // 流程节点名称
          realName: 'realName', // 处理人姓名
          solveType: 'solveType',
          createDate: 'createDate',
          approveDate: 'approveDate', //提交时间
          comment: 'comment', // 评论内容
          id: 'id', // 仅作为唯一标识
          flag: 'flag', // 流程状态标记
          fileList: 'fileList',
          signUrl: 'signUrl', //签名图片地址
          delegateList: 'delegateList', //委托列表
          orgName: 'orgName' //部门名称
        };
      }
    },
    format: {
      type: String
    },
    showList: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      flowTab: 0,
      showViewer: false,
      temp: '',
      flowData: []
    };
  },

  computed: {
    active: {
      get: function get() {
        if (this.temp == '') return this.flowActive ? 'comment' : 'flow';else return this.temp;
      },
      set: function set(val) {
        this.temp = val;
      }
    },
    xml: function xml() {
      return this.flowInfo.xml;
    },
    realFormat: function realFormat() {
      return this.format || this.$fawkes.format || 'YYYY-MM-DD HH:mm:ss';
    }
  },
  watch: {
    data: {
      immediate: true,
      deep: true,
      handler: function handler(val) {
        var _this = this;

        var flowData = [];
        val.forEach(function (item) {
          if (item[_this.dataSerise.delegateList]) {
            flowData.push.apply(flowData, item[_this.dataSerise.delegateList]);
          }
          flowData.push(item);
        });
        this.flowData = flowData;
        this.flowTab = flowData.length;
      }
    },
    xml: function xml() {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.setFlowInfo();
      });
    }
  },
  methods: {
    handlingTime: function handlingTime(row) {
      var createDate = this.$dayjs(row.createDate);
      var approveDate = this.$dayjs(row.approveDate);
      var duringTime = approveDate.diff(createDate, 'second');
      return this.formatDuration(duringTime * 1000);
    },
    formatDuration: function formatDuration(ms) {
      if (ms < 0) ms = -ms;
      var time = {
        天: Math.floor(ms / 86400000),
        时: Math.floor(ms / 3600000) % 24,
        分: Math.floor(ms / 60000) % 60,
        秒: Math.floor(ms / 1000) % 60,
        毫秒: Math.floor(ms) % 1000
      };
      return Object.entries(time).filter(function (val) {
        return val[1] !== 0;
      }).map(function (_ref) {
        var key = _ref[0],
            val = _ref[1];
        return val + ' ' + key + ' ';
      }).join('');
    },
    viewerClose: function viewerClose() {
      this.showViewer = false;
    },
    preview: function preview(file) {
      this.$emit('preview', file);
    },
    download: function download(file) {
      this.$emit('download', file);
    },
    parseTime: function parseTime(val) {
      if (val) {
        if (val instanceof Date) {
          val = val.getTime();
        } else {
          val = val.replace(/T/g, ' ').replace(/-/g, '/');
        }
        return this.$dayjs(val).format(this.realFormat);
      } else {
        return '';
      }
    },
    handleClick: function handleClick(data) {
      var _this3 = this;

      if (data.name == 'flow') {
        this.$nextTick(function () {
          _this3.setFlowInfo();
        });
      }
    },
    setFlowInfo: function setFlowInfo() {
      var _this4 = this;

      // 获取到属性ref为“content”的dom节点
      this.container = this.$refs.content;
      // 获取到属性ref为“canvas”的dom节点
      var canvas = this.$refs.canvas;
      canvas.innerHTML = ''; // 清空内容
      var viewer = new external_bpmn_js_default.a({
        container: canvas
      });
      viewer.importXML(this.flowInfo.xml, function (err) {
        if (!err) {
          viewer.get('canvas').zoom('fit-viewport');
          var _canvas = viewer.get('canvas');
          _this4.flowInfo.currentNode.forEach(function (item) {
            _canvas.addMarker(item, 'current-highlight');
          });
          _this4.flowInfo.userTask.forEach(function (item) {
            _canvas.addMarker(item, 'highlight');
          });
          _this4.flowInfo.exclusiveGateway.forEach(function (item) {
            _canvas.addMarker(item, 'highlight');
          });

          // console.log('success!')
        } else {
          console.log('something went wrong:', err);
        }
      });
    }
  }
});
// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_flow_comments_srcvue_type_script_lang_js_ = (flow_comments_srcvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/flow-comments/src/index.vue





/* normalize component */

var flow_comments_src_component = normalizeComponent(
  packages_flow_comments_srcvue_type_script_lang_js_,
  srcvue_type_template_id_8898055a_render,
  srcvue_type_template_id_8898055a_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var flow_comments_src = (flow_comments_src_component.exports);
// CONCATENATED MODULE: ./packages/flow-comments/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
flow_comments_src.install = function (Vue) {
  Vue.component(flow_comments_src.name, flow_comments_src);
};

// 默认导出组件
/* harmony default export */ var flow_comments = (flow_comments_src);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/region/src/region.vue?vue&type=template&id=386a881d&
var regionvue_type_template_id_386a881d_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "fks-address",
      attrs: { id: "__address_select" },
      on: { click: _vm.stopPropagation },
    },
    [
      _vm.type.toLowerCase() == "cn"
        ? _c("div", { staticClass: "fks-address_cn" }, [
            _c("div", { staticClass: "fks-address-inputs_wrapper" }, [
              _c("section", [
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.cn_input_value,
                      expression: "cn_input_value",
                    },
                  ],
                  ref: "cn_address_controll",
                  staticClass: "input",
                  attrs: {
                    type: "text",
                    placeholder: "请选择区域",
                    readonly: "readonly",
                  },
                  domProps: { value: _vm.cn_input_value },
                  on: {
                    click: _vm.cn_address_show_controll,
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.cn_input_value = $event.target.value
                    },
                  },
                }),
                _c("i", {
                  staticClass: "fks-icon-arrow-down",
                  attrs: { alt: "" },
                  on: { click: _vm.cn_address_show_controll },
                }),
              ]),
              _vm.showLocation
                ? _c(
                    "section",
                    {
                      style: _vm.locationStyle
                        ? _vm.locationStyle
                        : { marginTop: "20px" },
                    },
                    [
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model",
                            value: _vm.location,
                            expression: "location",
                          },
                        ],
                        staticClass: "input",
                        attrs: { type: "text", placeholder: "请输入详细地址" },
                        domProps: { value: _vm.location },
                        on: {
                          input: [
                            function ($event) {
                              if ($event.target.composing) {
                                return
                              }
                              _vm.location = $event.target.value
                            },
                            function ($event) {
                              return _vm.emitValue()
                            },
                          ],
                        },
                      }),
                    ]
                  )
                : _vm._e(),
            ]),
            _c(
              "div",
              {
                directives: [
                  {
                    name: "show",
                    rawName: "v-show",
                    value: _vm.cn_address_show,
                    expression: "cn_address_show",
                  },
                ],
                ref: "cn_address_content",
                staticClass: "fks-cn_address_content",
              },
              [
                _c(
                  "div",
                  { staticClass: "fks-tabs" },
                  [
                    _vm._l(_vm.cn_labels, function (item, index) {
                      return _c(
                        "span",
                        {
                          key: "cn_label_" + index,
                          class:
                            index == _vm.cn_labels.length - 1
                              ? "fks-tabs_item fks-tabs_item_select"
                              : "fks-tabs_item",
                          on: {
                            click: function ($event) {
                              return _vm.selectCNLabel(index)
                            },
                          },
                        },
                        [_c("span", [_vm._v(_vm._s(item))])]
                      )
                    }),
                    _c("span", { staticClass: "fks-tabs_extra" }, [
                      _c(
                        "button",
                        {
                          directives: [
                            {
                              name: "show",
                              rawName: "v-show",
                              value: _vm.isForeign,
                              expression: "isForeign",
                            },
                          ],
                          staticClass: "fks-backBtn",
                          on: { click: _vm.backToCN },
                        },
                        [_vm._v("<")]
                      ),
                    ]),
                  ],
                  2
                ),
                !_vm.isForeign
                  ? _c(
                      "div",
                      { staticClass: "fks-cn_contents" },
                      [
                        _vm._l(_vm.current_data, function (item, index) {
                          return _c(
                            "span",
                            {
                              key: "cn_address_" + index,
                              staticClass: "fks-address_item",
                              on: { mouseleave: _vm.itemMouseLeave },
                            },
                            [
                              _c(
                                "span",
                                {
                                  staticClass: "fks-address_item_text",
                                  on: {
                                    click: function ($event) {
                                      return _vm.select_cn_address(item)
                                    },
                                    mouseenter: _vm.itemHover,
                                  },
                                },
                                [_vm._v(_vm._s(item.label))]
                              ),
                            ]
                          )
                        }),
                        _vm.cn_labels.length == 1
                          ? _c("span", { staticClass: "fks-address_item" }, [
                              _c(
                                "span",
                                {
                                  staticClass: "fks-address_item_text",
                                  staticStyle: { color: "#F7A428" },
                                  on: {
                                    click: function ($event) {
                                      return _vm.select_cn_address({
                                        label: "海外",
                                      })
                                    },
                                  },
                                },
                                [_vm._v("海外")]
                              ),
                            ])
                          : _vm._e(),
                      ],
                      2
                    )
                  : _vm._e(),
                _vm.isForeign
                  ? _c(
                      "div",
                      { staticClass: "fks-foreign_cn_codes" },
                      _vm._l(_vm.codes, function (item, index) {
                        return _c(
                          "span",
                          {
                            key: "code_" + index,
                            on: {
                              click: function ($event) {
                                return _vm.scrollTo("code_" + item)
                              },
                            },
                          },
                          [_vm._v(_vm._s(item))]
                        )
                      }),
                      0
                    )
                  : _vm._e(),
                _vm.isForeign
                  ? _c(
                      "div",
                      { staticClass: "fks-foreign_cn_contents_wrapper" },
                      _vm._l(_vm.codes, function (item, index) {
                        return _c(
                          "div",
                          {
                            key: "foreign_address_" + index,
                            staticClass: "fks-foreign_cn_contents",
                          },
                          [
                            _vm.current_data[item]
                              ? [
                                  _c(
                                    "span",
                                    {
                                      staticClass:
                                        "fks-foreign_cn_contents_code",
                                      attrs: { id: "code_" + item },
                                    },
                                    [_vm._v(_vm._s(item))]
                                  ),
                                  _c(
                                    "div",
                                    {
                                      staticClass: "fks-cn_contents",
                                      staticStyle: { "margin-top": "16px" },
                                    },
                                    _vm._l(
                                      _vm.current_data[item],
                                      function (val, v_index) {
                                        return _c(
                                          "span",
                                          {
                                            key: "addres_item_" + v_index,
                                            staticClass: "fks-address_item",
                                            on: {
                                              mouseleave: _vm.itemMouseLeave,
                                            },
                                          },
                                          [
                                            _c(
                                              "span",
                                              {
                                                staticClass:
                                                  "fks-address_item_text",
                                                on: {
                                                  mouseenter: _vm.itemHover,
                                                  click: function ($event) {
                                                    return _vm.select_cn_address(
                                                      val
                                                    )
                                                  },
                                                },
                                              },
                                              [_vm._v(_vm._s(val.label))]
                                            ),
                                          ]
                                        )
                                      }
                                    ),
                                    0
                                  ),
                                ]
                              : _vm._e(),
                          ],
                          2
                        )
                      }),
                      0
                    )
                  : _vm._e(),
              ]
            ),
          ])
        : _vm._e(),
      _vm.type.toLowerCase() == "eng"
        ? _c("div", { staticClass: "fks-address_eng" }, [_vm._v("eng")])
        : _vm._e(),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.hover_label,
              expression: "hover_label",
            },
          ],
          ref: "hover_label",
          staticClass: "fks-hover_show",
        },
        [_vm._v(_vm._s(_vm.hover_label))]
      ),
    ]
  )
}
var regionvue_type_template_id_386a881d_staticRenderFns = []
regionvue_type_template_id_386a881d_render._withStripped = true


// CONCATENATED MODULE: ./packages/region/src/region.vue?vue&type=template&id=386a881d&

// EXTERNAL MODULE: ./packages/region/src/api.js
var api = __webpack_require__(44);

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/region/src/region.vue?vue&type=script&lang=js&
var regionvue_type_script_lang_js_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var regionvue_type_script_lang_js_ = ({
  name: 'FksRegion',
  props: {
    url: {
      type: String
    },
    type: {
      type: String,
      default: 'CN'
    },
    showLocation: {
      type: Boolean,
      default: true
    },
    locationStyle: {
      type: Object
    }
  },
  data: function data() {
    return {
      cn_labels: ['请选择'], //tabs内容
      cn_level_data: [], //层级数据，月cn_labels保持长度保持一致
      cn_address_show: false,
      hover_label: '',
      params: {
        ct: 'DOMESTIC',
        lt: 'CN',
        pc: ''
      },
      DOMESTIC_CN_DATA: [], //国内中文地址数据
      FOREIGN_CN_DATA: {}, //国外中文地址数据
      current_data: [], //当前显示的数据
      cn_input_value: '', //地区的值
      location: '', //详细地址
      codes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'W', 'X', 'Y', 'Z'],
      isForeign: false,
      pathId: '',
      quitHandle: false
    };
  },

  methods: {
    cn_address_show_controll: function cn_address_show_controll(e) {
      // console.log(this.cn_address_show)
      this.setPosition(e);
      this.cn_address_show = !this.cn_address_show;
    },
    eventListener: function eventListener(e) {
      if (e.keyCode == 27) {
        this.resetData();
      }
      if (this.cn_address_show) this.cn_address_show = false;
    },
    quitAddress: function quitAddress() {
      // console.log('click body', this.cn_address_show)
      if (this.cn_address_show) this.cn_address_show = false;
      // console.log(e.clientY)
    },
    stopPropagation: function stopPropagation(e) {
      // console.log(e.target)
      e.stopPropagation();
    },
    initData: function initData() {
      if (this.type.toLowerCase() == 'cn') {
        this.GET_DOMESTIC_CN_DATA(true);
      } else {
        this.GET_DOMESTIC_CN_DATA();
      }
      this.GET_FOREIGN_CN_DATA();
    },
    resetData: function resetData() {
      this.cn_labels = ['请选择'];
      this.cn_level_data = [[].concat(this.DOMESTIC_CN_DATA)];
      this.current_data = [].concat(this.DOMESTIC_CN_DATA);
      this.isForeign = false;
    },
    GET_DOMESTIC_CN_DATA: function GET_DOMESTIC_CN_DATA() {
      var _this = this;

      var copyTOCurrentData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      var params = {
        ct: 'DOMESTIC',
        lt: 'CN'
      };
      Object(api["a" /* getAddress */])(this.url, params).then(function (res) {
        if (res.data.status) {
          _this.DOMESTIC_CN_DATA = res.data.data;
          if (copyTOCurrentData) {
            _this.current_data = res.data.data;
            _this.cn_level_data.push(res.data.data);
          }
        }
      });
    },
    GET_FOREIGN_CN_DATA: function GET_FOREIGN_CN_DATA() {
      var _this2 = this;

      var parentId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      var params = {
        ct: 'FOREIGN',
        lt: 'CN',
        pc: parentId
      };
      return Object(api["a" /* getAddress */])(this.url, params).then(function (res) {
        if (res.data.status) {
          if (!parentId) {
            _this2.FOREIGN_CN_DATA = regionvue_type_script_lang_js_extends({}, res.data.data);
          }
        }
        return Promise.resolve(res.data.data);
      });
    },
    select_cn_address: function select_cn_address(item) {
      var _this3 = this;

      this.hover_label = '';
      this.$set(this.cn_labels, this.cn_labels.length - 1, item.label);
      this.pathId = item.pathId;
      if (item.label != '海外') {
        if (!this.isForeign) {
          if (item.children && item.children.length) {
            this.current_data = item.children;
            this.cn_labels.push('请选择');
            this.cn_level_data.push(item.children);
          } else {
            this.$set(this, 'cn_address_show', false);
          }
        } else {
          this.GET_FOREIGN_CN_DATA(item.id).then(function (res) {
            var isNull = true;
            _this3.codes.forEach(function (code) {
              if (res[code] && res[code].length) {
                isNull = false;
                return;
              }
            });
            if (!isNull) {
              _this3.cn_labels.push('请选择');
              _this3.current_data = regionvue_type_script_lang_js_extends({}, res);
              _this3.cn_level_data.push(regionvue_type_script_lang_js_extends({}, res));
              _this3.scrollTo();
            } else {
              _this3.$set(_this3, 'cn_address_show', false);
            }
          });
        }
      } else {
        this.isForeign = true;
        this.current_data = regionvue_type_script_lang_js_extends({}, this.FOREIGN_CN_DATA);
        this.cn_level_data = [regionvue_type_script_lang_js_extends({}, this.FOREIGN_CN_DATA)];
      }
    },
    selectCNLabel: function selectCNLabel(index) {
      this.cn_labels.length = index + 1;
      this.cn_level_data.length = index + 1;
      this.current_data = this.cn_level_data[index];
    },
    itemHover: function itemHover(e) {
      if (e.target.innerText.length > 5) {
        this.hover_label = e.target.innerText;
        this.$refs.hover_label.style.top = e.clientY - 14 + 'px';
        this.$refs.hover_label.style.left = e.clientX + 15 + 'px';
      }
    },
    itemMouseLeave: function itemMouseLeave() {
      this.hover_label = '';
    },
    scrollTo: function scrollTo(id) {
      // console.log('scrolll++++++++++++++')
      if (id) {
        var el = document.querySelector('#' + id);
        if (el) {
          el.scrollIntoView(true);
        }
      } else {
        for (var i = 0; i < this.codes.length; i++) {
          var _el = document.querySelector('#code_' + this.codes[i]);
          if (_el) {
            _el.scrollIntoView(true);
            return 0;
          }
        }
      }
    },
    backToCN: function backToCN() {
      this.isForeign = false;
      this.cn_labels = ['请选择'];
      this.current_data = [].concat(this.DOMESTIC_CN_DATA);
      this.cn_level_data = [[].concat(this.DOMESTIC_CN_DATA)];
    },
    emitValue: function emitValue() {
      var value = [];
      if (this.cn_input_value) {
        value = this.cn_input_value.split('/');
      }
      var result = {
        address: value,
        pathId: this.pathId,
        location: this.location
        // console.log(result)
      };this.$emit('changed', result);
    },
    setPosition: function setPosition(e) {
      // console.log(document.documentElement.clientHeight)
      // let position = this.$refs.cn_address_controll.getBoundingClientRect()
      this.$refs.cn_address_content.style.top = e.clientY + 16 + 'px';
      this.$refs.cn_address_content.style.left = e.clientY.x + 'px';
    }
  },
  mounted: function mounted() {
    this.initData();
    // document.querySelector('#__address_select').addEventListener('click', this.stopPropagation)
    // document.documentElement.addEventListener('scroll', this.setPosition)
    document.body.addEventListener('click', this.quitAddress);
    document.documentElement.addEventListener('keydown', this.eventListener);
  },
  beforeDestroy: function beforeDestroy() {
    document.documentElement.removeEventListener('keydown', this.eventListener);
    document.body.removeEventListener('click', this.quitAddress);
    // document.querySelector('#__address_select').removeEventListener('click', this.stopPropagation)
  },

  watch: {
    cn_labels: function cn_labels(val) {
      if (!val.includes('海外')) {
        var str = '';
        if (val.length) {
          val.forEach(function (item, index) {
            if (item != '请选择' && item != '海外') {
              str += index == 0 ? item : '/' + item;
            }
          });
          this.cn_input_value = str;
        }
      }
    },
    cn_input_value: function cn_input_value(val) {
      if (!val) {
        this.resetData();
      } else {
        this.emitValue();
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/region/src/region.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_regionvue_type_script_lang_js_ = (regionvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/region/src/region.vue





/* normalize component */

var region_component = normalizeComponent(
  src_regionvue_type_script_lang_js_,
  regionvue_type_template_id_386a881d_render,
  regionvue_type_template_id_386a881d_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var region = (region_component.exports);
// CONCATENATED MODULE: ./packages/region/index.js


/* istanbul ignore next */
region.install = function (Vue) {
  Vue.component(region.name, region);
};

/* harmony default export */ var packages_region = (region);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/time-span-pick/src/main.vue?vue&type=template&id=82462c82&
var mainvue_type_template_id_82462c82_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-time-spanpick" },
    [
      _c(
        "fks-date-picker",
        _vm._b(
          {
            attrs: {
              type: _vm.dateType,
              placeholder: _vm.t("fks.date.startdate"),
              "suffix-icon": "fks-icon-date",
              "picker-options": _vm.pickerOptionStart,
            },
            model: {
              value: _vm.start,
              callback: function ($$v) {
                _vm.start = $$v
              },
              expression: "start",
            },
          },
          "fks-date-picker",
          _vm.$attrs,
          false
        )
      ),
      _c("div", {
        staticStyle: {
          margin: "0 6px",
          width: "12px",
          height: "1px",
          "vertical-align": "middle",
          display: "inline-block",
          background: "#d4d3d3",
        },
      }),
      _c(
        "fks-date-picker",
        _vm._b(
          {
            attrs: {
              type: _vm.dateType,
              placeholder: _vm.t("fks.date.enddate"),
              "suffix-icon": "fks-icon-date",
              "picker-options": _vm.pickerOptionEnd,
            },
            model: {
              value: _vm.end,
              callback: function ($$v) {
                _vm.end = $$v
              },
              expression: "end",
            },
          },
          "fks-date-picker",
          _vm.$attrs,
          false
        )
      ),
    ],
    1
  )
}
var mainvue_type_template_id_82462c82_staticRenderFns = []
mainvue_type_template_id_82462c82_render._withStripped = true


// CONCATENATED MODULE: ./packages/time-span-pick/src/main.vue?vue&type=template&id=82462c82&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/time-span-pick/src/main.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var time_span_pick_src_mainvue_type_script_lang_js_ = ({
  name: 'FksTimeSpanPick',
  mixins: [locale_default.a],
  props: {
    dateType: {
      type: String,
      default: 'date'
    },
    startTime: {},
    endTime: {}
  },
  data: function data() {
    var _this = this;

    return {
      start: this.startTime,
      end: this.endTime,
      pickerOptionStart: {
        disabledDate: function disabledDate(time) {
          if (_this.end != '' && _this.end != null) {
            return _this.$dayjs(time).diff(_this.$dayjs(_this.end)) > 0;
            // return time.getTime() >= new Date(this.form.endTime).getTime()
          } else {
            return false;
          }
        }
      },
      //签证开始日期 结束日期
      pickerOptionEnd: {
        disabledDate: function disabledDate(time) {
          if (_this.start != '' && _this.start != null) {
            return _this.$dayjs(time).diff(_this.$dayjs(_this.start)) < 0;
            // return time.getTime() <= new Date(this.form.startTime).getTime()
          } else {
            return false;
          }
        }
      }
    };
  },

  methods: {
    startChange: function startChange() {
      this.$emit('startChange', this.start);
    },
    endChange: function endChange() {
      var end = '';
      if (this.end != null) {
        end = this.end.toString().replace('00:00:00', '23:59:59');
      }
      this.$emit('endChange', end);
    }
  },
  watch: {
    startTime: function startTime(val) {
      this.start = val;
    },
    endTime: function endTime(val) {
      this.end = val;
    },
    start: function start(val, old) {
      var start = '';
      if (val != null) {
        start = val;
      }
      this.$emit('update:startTime', start);
      if (val != null) {
        this.startChange();
      }
    },
    end: function end(val, old) {
      var end = '';
      if (val != null) {
        end = val.toString().replace('00:00:00', '23:59:59');
      }
      this.$emit('update:endTime', end);
      if (val != null) {
        this.endChange();
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/time-span-pick/src/main.vue?vue&type=script&lang=js&
 /* harmony default export */ var packages_time_span_pick_src_mainvue_type_script_lang_js_ = (time_span_pick_src_mainvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/time-span-pick/src/main.vue





/* normalize component */

var time_span_pick_src_main_component = normalizeComponent(
  packages_time_span_pick_src_mainvue_type_script_lang_js_,
  mainvue_type_template_id_82462c82_render,
  mainvue_type_template_id_82462c82_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var time_span_pick_src_main = (time_span_pick_src_main_component.exports);
// CONCATENATED MODULE: ./packages/time-span-pick/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
time_span_pick_src_main.install = function (Vue) {
  Vue.component(time_span_pick_src_main.name, time_span_pick_src_main);
};

// 默认导出组件
/* harmony default export */ var time_span_pick = (time_span_pick_src_main);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/query-page/src/query-page.vue?vue&type=template&id=55173a8c&
var query_pagevue_type_template_id_55173a8c_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "fks-query-page", class: [_vm.customClass] },
    [
      _vm.slot
        ? _c(
            "div",
            { staticClass: "fks-query-search" },
            [
              _c(
                "fks-search-bar",
                _vm._g(
                  _vm._b(
                    {
                      attrs: {
                        showSwitch: _vm.showSwitch,
                        isPreciseSearch: _vm.isPreciseSearch,
                        searchInfo: _vm.info,
                      },
                      on: {
                        search: _vm.search,
                        fuzzySearch: _vm.fuzzySearch,
                        "update:showSwitch": function ($event) {
                          _vm.showSwitch = $event
                        },
                        "update:show-switch": function ($event) {
                          _vm.showSwitch = $event
                        },
                        "update:isPreciseSearch": function ($event) {
                          _vm.isPreciseSearch = $event
                        },
                        "update:is-precise-search": function ($event) {
                          _vm.isPreciseSearch = $event
                        },
                        "update:searchInfo": function ($event) {
                          _vm.info = $event
                        },
                        "update:search-info": function ($event) {
                          _vm.info = $event
                        },
                      },
                    },
                    "fks-search-bar",
                    _vm.$attrs,
                    false
                  ),
                  _vm.$listeners
                ),
                [_vm._t("search")],
                2
              ),
            ],
            1
          )
        : _vm._e(),
      _vm.sslot
        ? _c("div", { staticClass: "fks-query-single-search" }, [
            !_vm.bslot && _vm.tableName
              ? _c("div", { staticClass: "fks-query-list-name" }, [
                  _c("div", { staticClass: "fks-title-icon" }),
                  _c("span", [_vm._v(_vm._s(_vm.tableName))]),
                ])
              : _vm._e(),
            _c(
              "div",
              { staticClass: "search-content" },
              [_vm._t("singleSearch")],
              2
            ),
          ])
        : _vm._e(),
      _vm.bslot
        ? _c(
            "div",
            {
              staticClass: "fks-query-button",
              class: [{ "is-top": !_vm.slot }],
            },
            [
              _vm.tableName
                ? _c("div", { staticClass: "fks-query-list-name" }, [
                    _c("div", { staticClass: "fks-title-icon" }),
                    _c("span", [_vm._v(_vm._s(_vm.tableName))]),
                  ])
                : _vm._e(),
              _vm._t("button"),
              _vm.checkArrAll.length > 0
                ? _c(
                    "div",
                    { staticClass: "fks-query-button__operation" },
                    [
                      _c(
                        "fks-tooltip",
                        {
                          attrs: {
                            effect: "dark",
                            content: "列表设置",
                            placement: "top",
                          },
                        },
                        [
                          _vm.checkArrAll.length > 0
                            ? _c(
                                "fks-button",
                                {
                                  directives: [
                                    {
                                      name: "popover",
                                      rawName: "v-popover:popover",
                                      arg: "popover",
                                    },
                                  ],
                                  staticClass: "fks-list-set-btn",
                                  attrs: { circle: "" },
                                },
                                [_c("i", { staticClass: "fks-icon-menu" })]
                              )
                            : _vm._e(),
                        ],
                        1
                      ),
                      _c(
                        "fks-popover",
                        {
                          ref: "popover",
                          attrs: {
                            placement: "bottom-start",
                            trigger: "click",
                            "popper-class": "fks-column-popover-custom",
                          },
                        },
                        _vm._l(_vm.checkArrAll, function (item) {
                          return _c("fks-checkbox", {
                            key: item,
                            attrs: { label: item },
                            on: {
                              change: function ($event) {
                                return _vm.changeChecked()
                              },
                            },
                            model: {
                              value: _vm.checkedArr,
                              callback: function ($$v) {
                                _vm.checkedArr = $$v
                              },
                              expression: "checkedArr",
                            },
                          })
                        }),
                        1
                      ),
                    ],
                    1
                  )
                : _vm._e(),
            ],
            2
          )
        : _vm._e(),
      !_vm.bslot && !_vm.sslot && _vm.tableName
        ? _c("div", { staticClass: "fks-query-list-name" }, [
            _c("div", { staticClass: "fks-title-icon" }),
            _c("span", [_vm._v(_vm._s(_vm.tableName))]),
          ])
        : _vm._e(),
      _c(
        "div",
        {
          staticClass: "fks-query-body",
          style: { height: _vm.fixedHeight ? _vm.fixedHeight : "100%" },
        },
        [
          _c(
            "fks-table",
            _vm._g(
              _vm._b(
                {
                  ref: "table",
                  attrs: {
                    height: _vm.page ? "calc(100% - 40px)" : "100%",
                    border: _vm.border,
                  },
                },
                "fks-table",
                _vm.$attrs,
                false
              ),
              _vm.$listeners
            ),
            [
              _vm._t("default"),
              _vm.emptySlot
                ? _c("template", { slot: "empty" }, [_vm._t("empty")], 2)
                : _vm._e(),
            ],
            2
          ),
        ],
        1
      ),
      _vm.page
        ? _c(
            "div",
            { staticClass: "fks-query-pagebox" },
            [
              _c(
                "fks-pagination",
                _vm._g(
                  _vm._b(
                    {
                      ref: "page",
                      staticStyle: { "text-align": "right" },
                      attrs: { "page-sizes": _vm.pageSizes },
                      on: {
                        "size-change": _vm.sizeChange,
                        "current-change": _vm.currentChange,
                      },
                    },
                    "fks-pagination",
                    _vm.$attrs,
                    false
                  ),
                  _vm.$listeners
                )
              ),
            ],
            1
          )
        : _vm._e(),
    ]
  )
}
var query_pagevue_type_template_id_55173a8c_staticRenderFns = []
query_pagevue_type_template_id_55173a8c_render._withStripped = true


// CONCATENATED MODULE: ./packages/query-page/src/query-page.vue?vue&type=template&id=55173a8c&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/query-page/src/query-page.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var query_pagevue_type_script_lang_js_ = ({
  name: 'FksQueryPage',
  props: {
    border: {
      type: Boolean,
      default: false
    },
    customClass: {
      type: String,
      default: ''
    },
    page: {
      type: Boolean,
      default: true
    },
    tableColumn: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    refreshVisible: {
      type: Boolean,
      default: true
    },
    tableName: {
      type: String,
      default: ''
    },
    fixedHeight: {
      type: String,
      default: ''
    },
    pageSizes: {
      type: Array,
      default: function _default() {
        return [20, 50, 100];
      }
    },
    hideSwitch: {},

    preciseSearch: {
      //type: Boolean
    },
    searchInfo: {}
  },
  data: function data() {
    return {
      info: '',
      bslot: false, //按钮栏
      sslot: false, //多条件搜索
      slot: false, //搜索栏
      emptySlot: false, // 空白插槽
      checkArrAll: this.tableColumn, // 控制显隐列
      checkedArr: [],
      isPreciseSearch: typeof this.preciseSearch === 'boolean' ? this.preciseSearch : !!this.$fawkes.preciseSearch,
      showSwitch: typeof this.hideSwitch === 'boolean' ? !this.hideSwitch : !this.$fawkes.hideSwitch
    };
  },

  computed: {},
  watch: {
    checkedArr: {
      handler: function handler(nVal, oVal) {
        this.$emit('update:tableColumn', nVal);
      },

      immediate: true
    },
    isPreciseSearch: {
      handler: function handler(nVal, oVal) {
        this.$emit('update:preciseSearch', nVal);
      }
    },
    showSwitch: {
      handler: function handler(nVal, oVal) {
        this.$emit('update:hideSwitch', !nVal);
      }
    },
    searchInfo: {
      handler: function handler(nVal, oVal) {
        this.info = nVal;
        this.$emit('update:searchInfo', nVal);
      }
    }
  },
  methods: {
    clearSort: function clearSort() {
      this.$refs.table.clearSort();
    },
    handleResize: function handleResize(val) {
      this.tableHeight = 'calc(100% - ' + (val + 8 + 24 + 52 + (this.page ? 54 : 0)) + 'px)';
    },
    sizeChange: function sizeChange(val) {
      this.$refs.page.lastEmittedPage = -1;
      this.$refs.page.internalCurrentPage = 1;
      this.$refs.page.userChangePageSize = true;
      this.$refs.page.emitChange();
    },
    currentChange: function currentChange(val) {
      if (this.isPreciseSearch) {
        this.query();
      } else {
        this.fuzzyQuery();
      }
      // TODO: 应该在查询结果出来后
      this.$refs.table.scrollToTop();
    },

    // prevClick(val) {
    //   console.log('change prev')
    //   if (this.isPreciseSearch) {
    //     this.query()
    //   } else {
    //     this.fuzzyQuery()
    //   }
    // },
    // nextClick(val) {
    //   console.log('change next')
    //   if (this.isPreciseSearch) {
    //     this.query()
    //   } else {
    //     this.fuzzyQuery()
    //   }
    // },
    search: function search() {
      //不加page时搜索按钮
      if (this.page) {
        this.$refs.page.lastEmittedPage = -1;
        this.$refs.page.internalCurrentPage = 1;
        this.$refs.page.userChangePageSize = true;
        this.$refs.page.emitChange();
      } else {
        this.query();
      }
    },
    fuzzySearch: function fuzzySearch(val) {
      this.info = val;
      //不加page时搜索按钮
      if (this.page) {
        this.$refs.page.lastEmittedPage = -1;
        this.$refs.page.internalCurrentPage = 1;
        this.$refs.page.userChangePageSize = true;
        this.$refs.page.emitChange();
      } else {
        this.fuzzyQuery();
      }
    },
    query: function query() {
      this.$emit('query');
    },
    fuzzyQuery: function fuzzyQuery() {
      this.$emit('fuzzyQuery', this.info);
    },
    changeChecked: function changeChecked(val) {
      var _this = this;

      // const idx = this.checkedArr.indexOf(val)
      // if (idx >= 0) {
      //   this.checkedArr.splice(idx, 1)
      // } else {
      //   this.checkedArr.push(val)
      // }
      this.$nextTick(function () {
        _this.$refs.table.doLayout();
      });
    }
  },
  mounted: function mounted() {
    this.info = this.searchInfo;
    var height = 0;
    if (this.page) {
      height += 54;
    }
    /**获取slot内容，判断显示内容 */
    (this.$scopedSlots.empty || this.$slots.empty) && (this.emptySlot = true);
    this.bslot = false;
    if (this.$scopedSlots.button || this.$slots.button) {
      this.bslot = true;
      height += 52;
    }
    this.sslot = false;
    this.slot = false;
    if (this.$scopedSlots.search || this.$slots.search) {
      this.slot = true;
    } else if (this.$scopedSlots.singleSearch || this.$slots.singleSearch) {
      this.sslot = true;
      height += 58;
    }
    if (!this.bslot && !this.sslot) {
      height += 52;
    }
    this.tableHeight = 'calc(100% - ' + height + 'px)';
  }
});
// CONCATENATED MODULE: ./packages/query-page/src/query-page.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_query_pagevue_type_script_lang_js_ = (query_pagevue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/query-page/src/query-page.vue





/* normalize component */

var query_page_component = normalizeComponent(
  src_query_pagevue_type_script_lang_js_,
  query_pagevue_type_template_id_55173a8c_render,
  query_pagevue_type_template_id_55173a8c_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var query_page = (query_page_component.exports);
// CONCATENATED MODULE: ./packages/query-page/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
query_page.install = function (Vue) {
  Vue.component(query_page.name, query_page);
};

// 默认导出组件
/* harmony default export */ var packages_query_page = (query_page);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/searchbar/src/searchbar.vue?vue&type=template&id=28c78c19&
var searchbarvue_type_template_id_28c78c19_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "fks-searchbar" }, [
    _c("div", { staticClass: "search-wrapper" }, [
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: !_vm.showSearch,
              expression: "!showSearch",
            },
          ],
          staticClass: "fuzzy-search",
          style: { width: _vm.inputWidth },
        },
        [
          _c(
            "fks-input",
            {
              attrs: { placeholder: _vm.placeholder, maxlength: "50" },
              nativeOn: {
                keyup: function ($event) {
                  if (
                    !$event.type.indexOf("key") &&
                    _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")
                  ) {
                    return null
                  }
                  return _vm.fuzzySearch()
                },
              },
              model: {
                value: _vm.info,
                callback: function ($$v) {
                  _vm.info = $$v
                },
                expression: "info",
              },
            },
            [
              _c("i", {
                staticClass: "fks-input__icon fks-icon-search",
                attrs: { slot: "suffix" },
                on: {
                  click: function ($event) {
                    return _vm.fuzzySearch()
                  },
                },
                slot: "suffix",
              }),
            ]
          ),
        ],
        1
      ),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showSearch,
              expression: "showSearch",
            },
          ],
          staticClass: "search-input",
          class: { "search-collapse": _vm.show },
        },
        [_c("fks-row", { attrs: { gutter: 32 } }, [_vm._t("default")], 2)],
        1
      ),
      _c(
        "div",
        {
          directives: [
            {
              name: "show",
              rawName: "v-show",
              value: _vm.showSearch,
              expression: "showSearch",
            },
          ],
          staticClass: "search-button",
        },
        [
          _c(
            "fks-button",
            {
              attrs: { icon: "fks-icon-turn-right", plain: "" },
              on: { click: _vm.clear },
            },
            [_vm._v("\n        " + _vm._s(_vm.t("fks.clear")) + "\n      ")]
          ),
          _c(
            "fks-button",
            { attrs: { icon: "fks-icon-search" }, on: { click: _vm.search } },
            [_vm._v("\n        " + _vm._s(_vm.t("fks.search")) + "\n      ")]
          ),
          _c(
            "fks-tooltip",
            {
              attrs: {
                effect: "dark",
                content: _vm.show ? _vm.t("fks.fold") : _vm.t("fks.unfold"),
                placement: "top",
              },
            },
            [
              _c(
                "fks-button",
                {
                  directives: [
                    {
                      name: "show",
                      rawName: "v-show",
                      value: _vm.showIcon,
                      expression: "showIcon",
                    },
                  ],
                  staticStyle: { "border-radius": "4px" },
                  attrs: { circle: "" },
                  on: {
                    click: function ($event) {
                      _vm.show = !_vm.show
                    },
                  },
                },
                [
                  _c("i", {
                    staticClass: "fks-icon-arrow-down",
                    class: { rotate_pi: _vm.show },
                  }),
                ]
              ),
            ],
            1
          ),
        ],
        1
      ),
    ]),
    _c(
      "div",
      {
        directives: [
          {
            name: "show",
            rawName: "v-show",
            value: _vm.hasSwitch,
            expression: "hasSwitch",
          },
        ],
        staticClass: "switch-button",
      },
      [
        _c(
          "fks-tooltip",
          {
            attrs: {
              effect: "dark",
              content: _vm.t("fks.switch"),
              placement: "top",
            },
          },
          [
            _c(
              "fks-button",
              {
                staticStyle: { "border-radius": "4px" },
                attrs: { circle: "" },
                on: {
                  click: function ($event) {
                    return _vm.switchSearch()
                  },
                },
              },
              [_c("i", { staticClass: "fks-icon-toggle" })]
            ),
          ],
          1
        ),
      ],
      1
    ),
  ])
}
var searchbarvue_type_template_id_28c78c19_staticRenderFns = []
searchbarvue_type_template_id_28c78c19_render._withStripped = true


// CONCATENATED MODULE: ./packages/searchbar/src/searchbar.vue?vue&type=template&id=28c78c19&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/searchbar/src/searchbar.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//



/* harmony default export */ var searchbarvue_type_script_lang_js_ = ({
  name: 'FksSearchBar',
  componentName: 'FksSearchBar',
  mixins: [locale_default.a],
  provide: function provide() {
    return {
      searchBar: this
    };
  },

  props: {
    labelWidth: {
      default: 'auto'
    },
    inputWidth: {
      default: '280px'
    },
    placeholder: {
      default: '请输入'
    },
    showSwitch: {
      //type: Boolean
    },
    defaultFold: {
      type: Boolean,
      default: true
    },
    isPreciseSearch: {
      //type: Boolean,
      //default: false
    },
    searchInfo: {}
  },
  data: function data() {
    return {
      elHeight: 52,
      info: '',
      potentialLabelWidthArr: [],
      show: !this.defaultFold,
      showIcon: false,
      showSearch: this.isPreciseSearch,
      hasSwitch: this.showSwitch
    };
  },

  computed: {
    autoLabelWidth: function autoLabelWidth() {
      //未指定宽度时计算labelWidth最大值
      if (!this.potentialLabelWidthArr.length) return 0;
      var max = Math.max.apply(Math, this.potentialLabelWidthArr);
      return max ? max + 'px' : '';
    }
  },
  watch: {
    info: function info(val) {
      this.$emit('update:searchInfo', val);
    },
    searchInfo: function searchInfo(val) {
      this.info = val;
    },
    showIcon: function showIcon() {
      this.show = this.defaultFold ? false : this.show;
    },
    show: function show() {
      var _this = this;

      // if (this.$el.querySelector('.fks-row').offsetHeight == this.elHeight) {
      setTimeout(function () {
        _this.$emit('resize', _this.$el.offsetHeight);
      }, 400);
      // }
    },

    showSearch: {
      handler: function handler(val) {
        this.$emit('update:isPreciseSearch', val);
      },
      immediate: true
    },
    hasSwitch: {
      handler: function handler(val) {
        this.$emit('update:showSwitch', val);
      },
      immediate: true
    }
  },
  methods: {
    getLabelWidthIndex: function getLabelWidthIndex(width) {
      var index = this.potentialLabelWidthArr.indexOf(width);
      // it's impossible
      if (index === -1) {
        throw new Error('[FksSearchBar]unpected width ', width);
      }
      return index;
    },

    //记录所有search-item的标签宽度
    registerLabelWidth: function registerLabelWidth(val, oldVal) {
      if (val && oldVal) {
        var index = this.getLabelWidthIndex(oldVal);
        this.potentialLabelWidthArr.splice(index, 1, val);
      } else if (val) {
        this.potentialLabelWidthArr.push(val);
      }
    },
    deregisterLabelWidth: function deregisterLabelWidth(val) {
      var index = this.getLabelWidthIndex(val);
      this.potentialLabelWidthArr.splice(index, 1);
    },
    handleResize: function handleResize() {
      this.showIcon = this.$el && this.$el.querySelector('.fks-row').offsetHeight > 103;
      if (this.$el.querySelector('.fks-row').offsetHeight != this.elHeight && this.show && this.showSearch) {
        // 当浏览器窗口发生变化导致搜索栏高度变化时发送高度信息
        this.elHeight = this.$el.querySelector('.fks-row').offsetHeight;
        this.$emit('resize', this.elHeight);
      } else {
        this.elHeight = 52;
      }
    },

    /**
     * @description: 触发搜索方法
     */
    search: function search() {
      this.$emit('search');
    },

    /**
     * @description: 触发模糊搜索方法
     */
    fuzzySearch: function fuzzySearch() {
      this.$emit('fuzzySearch', this.info);
    },
    switchSearch: function switchSearch() {
      var _this2 = this;

      this.showSearch = !this.showSearch;
      this.potentialLabelWidthArr = [];
      this.$emit('update:isPreciseSearch', this.showSearch);
      if (this.showSearch) {
        this.$nextTick(function () {
          _this2.handleResize();
        });
      }
    },

    /**
     * @description: 触发清空
     */
    clear: function clear() {
      this.$emit('clear');
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.info = this.searchInfo;
    this.$emit('resize', this.$el.offsetHeight);
    this.$nextTick(function () {
      _this3.handleResize();
      Object(resize_event_["addResizeListener"])(_this3.$el, _this3.handleResize);
    });
  },
  beforeDestroy: function beforeDestroy() {
    if (this.$el) Object(resize_event_["removeResizeListener"])(this.$el, this.handleResize);
  }
});
// CONCATENATED MODULE: ./packages/searchbar/src/searchbar.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_searchbarvue_type_script_lang_js_ = (searchbarvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/searchbar/src/searchbar.vue





/* normalize component */

var searchbar_component = normalizeComponent(
  src_searchbarvue_type_script_lang_js_,
  searchbarvue_type_template_id_28c78c19_render,
  searchbarvue_type_template_id_28c78c19_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var searchbar = (searchbar_component.exports);
// CONCATENATED MODULE: ./packages/searchbar/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
searchbar.install = function (Vue) {
  Vue.component(searchbar.name, searchbar);
};

// 默认导出组件
/* harmony default export */ var packages_searchbar = (searchbar);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/searchbar/src/search-item.vue?vue&type=template&id=670c8722&
var search_itemvue_type_template_id_670c8722_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    [
      _c(
        "fks-col",
        { attrs: { xs: 24, sm: _vm.sm, md: _vm.md, lg: _vm.lg, xl: _vm.xl } },
        [
          _c("div", { staticClass: "fks-form-item fks-form-item--medium" }, [
            _c(
              "label",
              {
                staticClass: "fks-form-item__label",
                style: _vm.labelStyle,
                attrs: { for: _vm.forLabel },
              },
              [_vm._v(_vm._s(_vm.label))]
            ),
            _c(
              "div",
              {
                staticClass: "fks-form-item__content",
                style: _vm.contentStyle,
              },
              [_vm._t("default")],
              2
            ),
          ]),
        ]
      ),
    ],
    1
  )
}
var search_itemvue_type_template_id_670c8722_staticRenderFns = []
search_itemvue_type_template_id_670c8722_render._withStripped = true


// CONCATENATED MODULE: ./packages/searchbar/src/search-item.vue?vue&type=template&id=670c8722&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/searchbar/src/search-item.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var search_itemvue_type_script_lang_js_ = ({
  name: 'FksSearchItem',
  inject: ['searchBar'],
  props: {
    label: String,
    forLabel: String,
    span: Number
  },
  data: function data() {
    return {
      computedWidth: 0
    };
  },

  computed: {
    labelStyle: function labelStyle() {
      var ret = {};
      var labelWidth = this.searchBar.labelWidth;
      if (labelWidth) {
        ret.width = labelWidth;
      }
      if (this.$lang) {
        if (this.$lang.includes('zh')) ret.display = 'block';
      }
      return ret;
    },
    contentStyle: function contentStyle() {
      var ret = {
        overflow: 'hidden'
      };
      var label = this.label;
      if (!label) return ret;
      var labelWidth = this.searchBar.labelWidth;
      if (labelWidth === 'auto') {
        ret.marginLeft = this.searchBar.autoLabelWidth;
      } else {
        ret.marginLeft = labelWidth;
      }
      return ret;
    },
    form: function form() {
      var parent = this.$parent;
      var parentName = parent.$options.componentName;
      while (parentName !== 'FksSearchBar') {
        parent = parent.$parent;
        parentName = parent.$options.componentName;
      }
      return parent;
    },
    isAutoWidth: function isAutoWidth() {
      return this.searchBar.labelWidth === 'auto';
    },
    sm: function sm() {
      return this.span >= 12 ? 24 : 24;
    },
    md: function md() {
      return this.span >= 12 ? 24 : 12;
    },
    lg: function lg() {
      return this.span || 8;
    },
    xl: function xl() {
      return this.span || 8;
    }
  },
  watch: {
    computedWidth: function computedWidth(val, oldVal) {
      if (this.isAutoWidth) {
        this.searchBar.registerLabelWidth(val, oldVal);
      }
    }
  },
  methods: {
    getLabelWidth: function getLabelWidth() {
      if (this.$el && this.$el.firstElementChild) {
        var computedWidth = window.getComputedStyle(this.$el.querySelector('label')).width;
        return computedWidth === 'auto' ? 0 : Math.ceil(parseFloat(computedWidth));
      } else {
        return 0;
      }
    },
    updateLabelWidth: function updateLabelWidth() {
      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'update';

      if (this.$slots.default && this.isAutoWidth && this.$el.querySelector('label')) {
        if (action === 'update') {
          this.computedWidth = this.getLabelWidth();
        } else if (action === 'remove' && this.computedWidth) {
          this.searchBar.deregisterLabelWidth(this.computedWidth);
        }
      }
    }
  },
  mounted: function mounted() {
    this.updateLabelWidth('update');
  },
  updated: function updated() {
    this.updateLabelWidth('update');
  },
  beforeDestroy: function beforeDestroy() {
    this.updateLabelWidth('remove');
  }
});
// CONCATENATED MODULE: ./packages/searchbar/src/search-item.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_search_itemvue_type_script_lang_js_ = (search_itemvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/searchbar/src/search-item.vue





/* normalize component */

var search_item_component = normalizeComponent(
  src_search_itemvue_type_script_lang_js_,
  search_itemvue_type_template_id_670c8722_render,
  search_itemvue_type_template_id_670c8722_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var search_item = (search_item_component.exports);
// CONCATENATED MODULE: ./packages/search-item/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
search_item.install = function (Vue) {
  Vue.component(search_item.name, search_item);
};

// 默认导出组件
/* harmony default export */ var packages_search_item = (search_item);
// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/svg/src/svg.vue?vue&type=template&id=3c416ec5&
var svgvue_type_template_id_3c416ec5_render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("svg", { class: _vm.svgClass, attrs: { "aria-hidden": "true" } }, [
    _c("use", { attrs: { "xlink:href": _vm.iconName } }),
  ])
}
var svgvue_type_template_id_3c416ec5_staticRenderFns = []
svgvue_type_template_id_3c416ec5_render._withStripped = true


// CONCATENATED MODULE: ./packages/svg/src/svg.vue?vue&type=template&id=3c416ec5&

// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/svg/src/svg.vue?vue&type=script&lang=js&
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var svgvue_type_script_lang_js_ = ({
  name: 'icon-svg',
  props: {
    iconClass: {
      type: String,
      required: true
    },
    className: {
      type: String
    }
  },
  computed: {
    iconName: function iconName() {
      return '#icon-' + this.iconClass;
    },
    svgClass: function svgClass() {
      if (this.className) {
        return 'svg-icon ' + this.className;
      } else {
        return 'svg-icon';
      }
    }
  }
});
// CONCATENATED MODULE: ./packages/svg/src/svg.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_svgvue_type_script_lang_js_ = (svgvue_type_script_lang_js_); 
// CONCATENATED MODULE: ./packages/svg/src/svg.vue





/* normalize component */

var svg_component = normalizeComponent(
  src_svgvue_type_script_lang_js_,
  svgvue_type_template_id_3c416ec5_render,
  svgvue_type_template_id_3c416ec5_staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var svg = (svg_component.exports);
// CONCATENATED MODULE: ./packages/svg/index.js
// 导入组件，组件必须声明 name


// 为组件提供 install 安装方法，供按需引入
svg.install = function (Vue) {
  Vue.component(svg.name, svg);
};

// 默认导出组件
/* harmony default export */ var packages_svg = (svg);
// EXTERNAL MODULE: external "fawkes-lib/lib/utils/storage"
var storage_ = __webpack_require__(63);
var storage_default = /*#__PURE__*/__webpack_require__.n(storage_);

// CONCATENATED MODULE: ./src/index.js
/* Automatically generated by './build/bin/build-entry.js' */











































































































var src_dayjs = __webpack_require__(45);
var components = [packages_pagination, dialog, packages_autocomplete, packages_dropdown, packages_dropdown_menu, packages_dropdown_item, packages_menu, packages_submenu, packages_menu_item, packages_menu_item_group, packages_input, packages_input_number, packages_radio, packages_radio_group, packages_radio_button, packages_checkbox, packages_checkbox_button, packages_checkbox_group, packages_switch, packages_select, packages_option, packages_option_group, packages_button, packages_button_group, packages_table, packages_table_column, packages_date_picker, packages_time_select, packages_time_picker, popconfirm, affix, chunk_upload, empty, space, popover, skeleton, skeleton_item, quarter_picker, packages_tooltip, packages_breadcrumb, packages_breadcrumb_item, packages_form, packages_form_item, packages_tabs, packages_tab_pane, packages_tag, packages_tree, packages_alert, slider, packages_icon, packages_row, packages_col, packages_upload, packages_progress, packages_spinner, badge, card, rate, packages_steps, packages_step, carousel, scrollbar, carousel_item, packages_collapse, packages_collapse_item, packages_cascader, color_picker, transfer, packages_container, header, aside, packages_main, footer, timeline, timeline_item, packages_link, divider, packages_image, calendar, backtop, page_header, packages_cascader_panel, avatar, drawer, packages_user_selector, user_selector_pro, packages_org_selector, org_selector_pro, packages_post_selector, post_selector_pro, flow_comments, packages_region, time_span_pick, packages_query_page, packages_searchbar, packages_search_item, packages_svg, collapse_transition_default.a];

var src_install = function install(Vue) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  lib_locale_default.a.use(opts.locale);
  lib_locale_default.a.i18n(opts.i18n);

  components.forEach(function (component) {
    Vue.component(component.name, component);
  });

  Vue.use(infinite_scroll);
  Vue.use(packages_loading.directive);

  if (!Vue.prototype.$storage) {
    Vue.prototype.$storage = storage_default.a;
  }

  Vue.prototype.$FAWKES = {
    size: opts.size || 'medium',
    zIndex: opts.zIndex || 2000
  };

  var options = {
    stripe: !!opts.stripe,
    border: !!opts.border,
    preciseSearch: !!opts.preciseSearch,
    hideSwitch: !!opts.hideSwitch,
    multiPortal: !!opts.multiPortal,
    format: opts.format

    //接收$fawkes属性
  };Vue.mixin({
    beforeCreate: function beforeCreate() {
      Vue.util.defineReactive(this, '$fawkes', options);
    }
  });

  //接收系统前缀
  if (!!opts.prefix) {
    Vue.prototype.$storage.setPrefix(opts.prefix);
  }

  Vue.prototype.$dayjs = src_dayjs;
  Vue.prototype.$loading = packages_loading.service;
  Vue.prototype.$msgbox = message_box;
  Vue.prototype.$alert = message_box.alert;
  Vue.prototype.$confirm = message_box.confirm;
  Vue.prototype.$prompt = message_box.prompt;
  Vue.prototype.$notify = notification;
  Vue.prototype.$message = packages_message;
};

/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  src_install(window.Vue);
}

/* harmony default export */ var src_0 = __webpack_exports__["default"] = ({
  version: '0.3.2',
  locale: lib_locale_default.a.use,
  i18n: lib_locale_default.a.i18n,
  install: src_install,
  CollapseTransition: collapse_transition_default.a,
  Loading: packages_loading,

  Pagination: packages_pagination,
  Dialog: dialog,
  Autocomplete: packages_autocomplete,
  Dropdown: packages_dropdown,
  DropdownMenu: packages_dropdown_menu,
  DropdownItem: packages_dropdown_item,
  Menu: packages_menu,
  Submenu: packages_submenu,
  MenuItem: packages_menu_item,
  MenuItemGroup: packages_menu_item_group,
  Input: packages_input,
  InputNumber: packages_input_number,
  Radio: packages_radio,
  RadioGroup: packages_radio_group,
  RadioButton: packages_radio_button,
  Checkbox: packages_checkbox,
  CheckboxButton: packages_checkbox_button,
  CheckboxGroup: packages_checkbox_group,
  Switch: packages_switch,
  Select: packages_select,
  Option: packages_option,
  OptionGroup: packages_option_group,
  Button: packages_button,
  ButtonGroup: packages_button_group,
  Table: packages_table,
  TableColumn: packages_table_column,
  DatePicker: packages_date_picker,
  TimeSelect: packages_time_select,
  TimePicker: packages_time_picker,
  Popconfirm: popconfirm,
  Affix: affix,
  ChunkUpload: chunk_upload,
  Empty: empty,
  Space: space,
  Popover: popover,
  Skeleton: skeleton,
  SkeletonItem: skeleton_item,
  QuarterPicker: quarter_picker,
  Tooltip: packages_tooltip,
  MessageBox: message_box,
  Breadcrumb: packages_breadcrumb,
  BreadcrumbItem: packages_breadcrumb_item,
  Form: packages_form,
  FormItem: packages_form_item,
  Tabs: packages_tabs,
  TabPane: packages_tab_pane,
  Tag: packages_tag,
  Tree: packages_tree,
  Alert: packages_alert,
  Notification: notification,
  Slider: slider,
  Icon: packages_icon,
  Row: packages_row,
  Col: packages_col,
  Upload: packages_upload,
  Progress: packages_progress,
  Spinner: packages_spinner,
  Message: packages_message,
  Badge: badge,
  Card: card,
  Rate: rate,
  Steps: packages_steps,
  Step: packages_step,
  Carousel: carousel,
  Scrollbar: scrollbar,
  CarouselItem: carousel_item,
  Collapse: packages_collapse,
  CollapseItem: packages_collapse_item,
  Cascader: packages_cascader,
  ColorPicker: color_picker,
  Transfer: transfer,
  Container: packages_container,
  Header: header,
  Aside: aside,
  Main: packages_main,
  Footer: footer,
  Timeline: timeline,
  TimelineItem: timeline_item,
  Link: packages_link,
  Divider: divider,
  Image: packages_image,
  Calendar: calendar,
  Backtop: backtop,
  InfiniteScroll: infinite_scroll,
  PageHeader: page_header,
  CascaderPanel: packages_cascader_panel,
  Avatar: avatar,
  Drawer: drawer,
  UserSelector: packages_user_selector,
  UserSelectorPro: user_selector_pro,
  OrgSelector: packages_org_selector,
  OrgSelectorPro: org_selector_pro,
  PostSelector: packages_post_selector,
  PostSelectorPro: post_selector_pro,
  FlowComments: flow_comments,
  Region: packages_region,
  TimeSpanPick: time_span_pick,
  QueryPage: packages_query_page,
  Searchbar: packages_searchbar,
  SearchItem: packages_search_item,
  Svg: packages_svg
});

/***/ })
/******/ ])["default"];